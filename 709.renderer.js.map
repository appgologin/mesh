{"version":3,"file":"709.renderer.js","mappings":"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","sources":["webpack://GoLogin/./src/app/features/personalArea/api.ts","webpack://GoLogin/./src/app/features/personalArea/billing/domElements/billing.ts","webpack://GoLogin/./src/app/features/personalArea/billing/payments-table/index.tsx","webpack://GoLogin/./src/app/features/personalArea/billing/promo/utils.ts","webpack://GoLogin/./src/app/features/personalArea/billing/promo/discount-data/index.tsx","webpack://GoLogin/./src/app/features/personalArea/billing/promo/gifts-data/index.tsx","webpack://GoLogin/./src/app/features/personalArea/billing/promo/styles.ts","webpack://GoLogin/./src/app/features/personalArea/billing/components/index.tsx","webpack://GoLogin/./src/app/features/pricing/utils/utils.ts","webpack://GoLogin/./src/app/features/pricing/utils/price.ts"],"sourcesContent":["import { API_BASE_URL } from '../../../common/constants/constants';\r\nimport { IPayment } from '../../interfaces';\r\nimport { http } from '../../services';\r\nimport { IPromoGifts } from '../pricing/interfaces';\r\n\r\ninterface IPasswords {\r\n  oldPassword: string;\r\n  newPassword: string;\r\n  newPasswordConfirm: string;\r\n}\r\nexport const changePassword = async (passwords: IPasswords) => {\r\n  const body = JSON.stringify(passwords);\r\n\r\n  return http(`${API_BASE_URL}/user/password/manual`, {\r\n    method: 'PATCH',\r\n    body,\r\n  });\r\n};\r\n\r\nexport const requestPayments = async (): Promise<IPayment[]> => {\r\n  try {\r\n    const data = await http(`${API_BASE_URL}/billing/payments`);\r\n\r\n    return data.body;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const requestPaymentsWorkspace = async (workspaceId: string): Promise<IPayment[]> =>\r\n  http(`${API_BASE_URL}/billing/${workspaceId}/payments`)\r\n    .then((res: any) => res.body);\r\n\r\nexport const sendPromo = async (promo: string, workspaceId: string): Promise<IPromoGifts> => {\r\n  const requestBody = JSON.stringify({\r\n    code: promo,\r\n    workspaceId,\r\n  });\r\n\r\n  const req = await http(`${API_BASE_URL}/user/promo`, {\r\n    method: 'POST',\r\n    body: requestBody,\r\n  });\r\n\r\n  return req.body;\r\n};\r\n\r\nexport const changeEmail = async (email: string, password: string) => {\r\n  const requestData = JSON.stringify({\r\n    email,\r\n    password,\r\n  });\r\n\r\n  const changeEmailRequest = await http(`${API_BASE_URL}/user/email`, {\r\n    method: 'PATCH',\r\n    body: requestData,\r\n  });\r\n  return changeEmailRequest.body;\r\n};\r\n\r\nexport const confirmEmailAddress = async () => {\r\n  await http(`${API_BASE_URL}/user/email/confirm`, {\r\n    method: 'POST',\r\n  });\r\n};\r\n\r\nexport const deleteBillingCard = async () => {\r\n  try {\r\n    await http(`${API_BASE_URL}/billing/card`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    return null;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteSigmaBillingCard = async (): Promise<void> => {\r\n  await http(`${API_BASE_URL}/billing/sigma-subscription`, {\r\n    method: 'DELETE',\r\n  });\r\n};\r\n\r\nexport const deleteBillingPayPal = async () => {\r\n  try {\r\n    await http(`${API_BASE_URL}/billing/paypal_subscription`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    return null;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const changePlan = async (planId: string) => {\r\n  try {\r\n    return http(`${API_BASE_URL}/billing/plan`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        planId,\r\n      }),\r\n    });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import { SerializedStyles } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\nimport { Button, Layout, Table } from 'antd';\r\n\r\nimport { borderRadiusContainer } from '../../../../ui/style-templates';\r\n\r\nexport const Subtitle = styled('div')`\r\n  font-family: Roboto,serif;\r\n  font-size: 20px;\r\n  line-height: 19px;\r\n  color: var(--000000-personal-area-billing);\r\n  opacity: 0.8;\r\n  padding-top: 40px;\r\n`;\r\n\r\nexport const Row = styled('div')`\r\n  display: flex;\r\n`;\r\n\r\nexport const MainContainer = styled(Layout)<{ newStyle: boolean }>`\r\n  overflow: hidden;\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? borderRadiusContainer() : null};\r\n`;\r\n\r\nexport const BlockShadow = styled('div')`\r\n  box-shadow: 0 0 10px var(--E5E5E766-personal-area-billing);\r\n  width: 100%;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const ContainerContent = styled('div')`\r\n  margin: 0 86px;\r\n  color: var(--000000-personal-area-billing);\r\n  font-family: Roboto,serif;\r\n  font-size: 12px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .ant-menu-vertical .ant-menu-item::after, .ant-menu-vertical-left .ant-menu-item::after, .ant-menu-vertical-right .ant-menu-item::after, .ant-menu-inline .ant-menu-item::after {\r\n    border-right: 3px solid var(--00B86D-personal-area-billing-right-border);\r\n  }\r\n`;\r\n\r\nexport const PageTitle = styled('span')`\r\n  margin-top: 40px;\r\n  margin-bottom: 47px;\r\n  color: var(--000000-personal-area-billing);\r\n  font-family: Roboto,serif;\r\n  font-size: 20px;\r\n  line-height: 23px;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const Col = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ContentTabs = styled('div')`\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  opacity: 0.8\r\n`;\r\n\r\nexport const ContainerNameCol = styled('div')`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: var(--000000-personal-area-billing);\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const TablePan = styled(Table)`\r\n  background: 'green';\r\n  margin-top: 20px;\r\n  background-color: 'green';\r\n  .ant-table-thead > tr > th {\r\n    padding-bottom: 10px;\r\n    background-color: var(--FFFFFF-personal-area-billing);\r\n  }\r\n  .ant-table-tbody > tr > td {\r\n    border-bottom: 0 solid var(--E8E8E7-personal-area-billing);\r\n  }\r\n  margin-left: -15px;\r\n`;\r\n\r\nexport const DivModal = styled ('div')`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const BlockModal = styled('div')`\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nexport const TextTable = styled('div')`\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: var(--000000-personal-area-billing);\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const Hr = styled('hr')`\r\n  border: none;\r\n  color: var(--E8E8E7-personal-area-billing);\r\n  background-color: var(--E8E8E7-personal-area-billing);\r\n  height: 1px;\r\n`;\r\n\r\nexport const ButtonPay = styled(Button)`\r\n  width: 56px;\r\n  height: 25px;\r\n  margin-left: 5px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-left: 68px;\r\n  @media screen and (max-width: 420px) {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nexport const TextNameTarif = styled('div')`\r\n  font-size: 14px;\r\n  line-height: 21px;\r\n  color: var(--000000-personal-area-billing);\r\n  opacity: 0.8;\r\n  margin-top: 11px;\r\n`;\r\n\r\nexport const ButtonChange = styled(Button)`\r\n  background: var(--FCFCFC-personal-area-billing);\r\n  border: 1px solid var(--E4E4E4-personal-area-billing);\r\n  box-sizing: border-box;\r\n  border-radius: 3px;\r\n  height: 25px;\r\n  margin-left: 20px;\r\n  margin-top: 9px;\r\n`;\r\n\r\nexport const TextGhostPayment = styled('div')`\r\n  font-size: 20px;\r\n  color: var(--000000-personal-area-billing);\r\n  opacity: 0.8;\r\n  padding: 35px 0 0 0;\r\n  @media screen and (max-width: 420px) {\r\n    padding: 5px 0 0 0;\r\n  }\r\n`;\r\n\r\nexport const NamePaymentMethod = styled('div')`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: var(--000000-personal-area-billing);\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const TextEmail = styled('div')`\r\n  line-height: 14px;\r\n  color: var(--000000-personal-area-billing);\r\n  opacity: 0.6;\r\n`;\r\n\r\nexport const BlockInformationPay = styled('div')`\r\n`;\r\n","import { Badge, Table } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { FC, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IPayment } from '../../../../interfaces';\r\nimport { workspaceContext } from '../../../../state';\r\nimport { openWebsitePricing } from '../../../../utils/open-site';\r\nimport { FOREVER_FREE_PLAN_ID } from '../../../pricing/constants';\r\nimport { E_CURRENCY } from '../../../pricing/interfaces';\r\nimport { Price } from '../../../pricing/utils';\r\nimport { ButtonPay, ContainerNameCol, Row, TablePan, TextTable } from '../domElements/billing';\r\n\r\ninterface IPaymentsTable {\r\n  payments: IPayment[];\r\n  isQuickSettingsEnabled?: boolean;\r\n}\r\n\r\nconst PaymentsTable: FC<IPaymentsTable> = (props) => {\r\n  const { payments, isQuickSettingsEnabled } = props;\r\n\r\n  const { id: workspaceId } = useContext(workspaceContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const formatDate = (date: string): string => moment(date).utc().format('MMM DD, YYYY');\r\n\r\n  const renderDate = (date: string): JSX.Element => (\r\n    <TextTable>\r\n      {formatDate(date)}\r\n    </TextTable>\r\n  );\r\n\r\n  const renderExpiresDate = (date: string): JSX.Element => (\r\n    <TextTable>\r\n      {formatDate(date)}\r\n    </TextTable>\r\n  );\r\n\r\n  const renderPaymentMethod = (description = '', payment: IPayment): JSX.Element => {\r\n    let method: 'Stripe'|'PayPal'|'BTC'|'Trial'|'Forever Free' = 'Stripe';\r\n    if (description.toLowerCase().includes('paypal') || payment.additionalParams?.description === 'Paypal') {\r\n      method = 'PayPal';\r\n    }\r\n\r\n    if (description.toLowerCase().includes('crypto')) {\r\n      method = 'BTC';\r\n    }\r\n\r\n    if (payment.isTrial) {\r\n      method = 'Trial';\r\n    }\r\n\r\n    if (payment.plan === FOREVER_FREE_PLAN_ID) {\r\n      method = 'Forever Free';\r\n    }\r\n\r\n    return (\r\n      <TextTable>\r\n        {method === 'Stripe' ? `Credit Card ${payment.creditCard}` : method}\r\n      </TextTable>\r\n    );\r\n  };\r\n\r\n  const renderStatus = (status = ''): JSX.Element => {\r\n    const statusBadge = status === 'success' ? 'success' : 'default';\r\n    const textBadge = status === 'success' ? translation('base.paid') : translation('base.unpaid');\r\n\r\n    return (\r\n      <Row>\r\n        <Badge\r\n          dot={true}\r\n          status={statusBadge}\r\n          text={textBadge}\r\n        />\r\n        <TextTable style={{ marginLeft: 5 }} />\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const openPricing = (): void => {\r\n    openWebsitePricing({\r\n      workspaceId,\r\n      isQuickSettingsEnabled,\r\n    });\r\n  };\r\n\r\n  const renderTotal = (amount: number, payment: IPayment): JSX.Element => {\r\n    const isLastPayment = payments.findIndex(elem => elem.id === payment.id) === 0;\r\n    if (isLastPayment && payment.status !== 'success') {\r\n      return (\r\n        <ButtonPay onClick={openPricing} type='primary'>\r\n          {translation('personalArea.billing.paySubmitBtnText')}\r\n        </ButtonPay>\r\n      );\r\n    }\r\n\r\n    const { currency = E_CURRENCY.USD, additionalParams = {} } = payment;\r\n    const { amountInCurrency = 0 } = additionalParams;\r\n    const formattedSum = new Price(amountInCurrency, currency).toLocalString(0);\r\n\r\n    return (\r\n      <TextTable style={{ marginLeft: 20 }}>\r\n        {formattedSum}\r\n      </TextTable>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TablePan\r\n      pagination={false}\r\n      dataSource={payments}\r\n      scroll={{ x: true }}\r\n    >\r\n      <Table.Column\r\n        ellipsis={true}\r\n        width={140}\r\n        title={(\r\n          <ContainerNameCol>\r\n            <span>\r\n              {translation('personalArea.billing.dateColumn')}\r\n            </span>\r\n          </ContainerNameCol>\r\n        )}\r\n        dataIndex='createdAt'\r\n        key='createdAt'\r\n        render={renderDate}\r\n      />\r\n      <Table.Column\r\n        ellipsis={true}\r\n        width={140}\r\n        title={(\r\n          <ContainerNameCol>\r\n            <span>\r\n              {translation('personalArea.billing.expiresColumn')}\r\n            </span>\r\n          </ContainerNameCol>\r\n        )}\r\n        dataIndex='expiresIn'\r\n        key='expiresIn'\r\n        render={renderExpiresDate}\r\n      />\r\n      <Table.Column\r\n        ellipsis={true}\r\n        width={140}\r\n        title={(\r\n          <ContainerNameCol>\r\n            <span>\r\n              {translation('personalArea.billing.paymentMethodColumn')}\r\n            </span>\r\n          </ContainerNameCol>\r\n        )}\r\n        dataIndex='description'\r\n        key='description'\r\n        render={renderPaymentMethod}\r\n      />\r\n      <Table.Column\r\n        ellipsis={true}\r\n        title={(\r\n          <ContainerNameCol>\r\n            <span>\r\n              {translation('personalArea.billing.transactionIdColumn')}\r\n            </span>\r\n          </ContainerNameCol>\r\n        )}\r\n        width={150}\r\n        dataIndex='transactionId'\r\n        key='transactionId'\r\n      />\r\n      <Table.Column\r\n        ellipsis={true}\r\n        title={(\r\n          <ContainerNameCol>\r\n            <span>\r\n              {translation('personalArea.billing.emailColumn')}\r\n            </span>\r\n          </ContainerNameCol>\r\n        )}\r\n        width={150}\r\n        dataIndex='email'\r\n        key='email'\r\n      />\r\n      <Table.Column\r\n        ellipsis={true}\r\n        title={(\r\n          <ContainerNameCol>\r\n            <span>\r\n              {translation('personalArea.billing.statusColumn')}\r\n            </span>\r\n          </ContainerNameCol>\r\n        )}\r\n        width={50}\r\n        dataIndex='status'\r\n        key='status'\r\n        render={renderStatus}\r\n      />\r\n      <Table.Column\r\n        ellipsis={true}\r\n        title={(\r\n          <ContainerNameCol style={{ marginLeft: 16 }}>\r\n            <span>\r\n              {translation('personalArea.billing.totalColumn')}\r\n            </span>\r\n          </ContainerNameCol>\r\n        )}\r\n        width={50}\r\n        dataIndex='amount'\r\n        key='amount'\r\n        render={renderTotal}\r\n      />\r\n    </TablePan>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaymentsTable);\r\n","import { DISCOUNT_TYPES } from '../../../../../common/constants/constants';\r\n\r\nexport const getDiscountText = (value: number, discountType: typeof DISCOUNT_TYPES[number]): string =>\r\n  discountType === 'fix' ?\r\n    `${Number(value / 100).toFixed(2)}$` :\r\n    `${value}%`;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IDiscountShort } from '../../../../pricing/interfaces';\r\nimport { getDiscountText } from '../utils';\r\n\r\ninterface IPromoActivatedGifts {\r\n  discountData: IDiscountShort;\r\n}\r\n\r\nconst PromoDiscountView: FC<IPromoActivatedGifts> = (props) => {\r\n  const { discountData } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const { active, discountType, value } = discountData;\r\n  const isNeedToShowDiscount = active && value;\r\n  if (!isNeedToShowDiscount) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {translation('billing.promocode.activeDiscount')}\r\n      :\r\n      &nbsp;\r\n      {getDiscountText(value, discountType)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PromoDiscountView;\r\n","import React, { FC, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { workspaceContext } from '../../../../../state';\r\nimport { IDiscountShort, IPeroid, IPromoGifts, ITraffic } from '../../../../pricing/interfaces';\r\nimport { getDiscountText } from '../utils';\r\n\r\ninterface IPromoActivatedGifts {\r\n  promoGiftsData: IPromoGifts;\r\n}\r\nconst PromoActivatedGifts: FC<IPromoActivatedGifts> = (props) => {\r\n  const { promoGiftsData } = props;\r\n\r\n  const [giftsData, setGiftsData] = useState<IPromoGifts>({} as IPromoGifts);\r\n\r\n  const workspace = useContext(workspaceContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    setGiftsData({} as IPromoGifts);\r\n  }, [workspace.id]);\r\n\r\n  useEffect(() => {\r\n    setGiftsData(promoGiftsData);\r\n  }, [promoGiftsData]);\r\n\r\n  const renderDiscount = (discount: IDiscountShort): JSX.Element|null => {\r\n    const { active, discountType, value } = discount;\r\n    const isNeedToShowDiscount = active && value;\r\n    if (!isNeedToShowDiscount) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {translation('billing.promocode.discountOnMonthTitle')}\r\n        :\r\n        &nbsp;\r\n        {getDiscountText(value, discountType)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTraffic = (traffic: ITraffic): JSX.Element|null => {\r\n    const { type, quantity } = traffic;\r\n    if (!quantity) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {quantity}\r\n        {translation('billing.promocode.proxyGB')}\r\n        &nbsp;\r\n        {translateType(type)}\r\n        &nbsp;\r\n        {translation('billing.promocode.proxies')}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderPeriod = (period: IPeroid): JSX.Element|null => {\r\n    const { unit, amount } = period;\r\n    if (!amount) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {translation('billing.promocode.periodGift')}\r\n        &nbsp;\r\n        {parseAndTranslatePeriodUnit(unit, amount)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderActivatedGifts = (): JSX.Element|null => {\r\n    const {\r\n      discount = { active: false, discountType: 'percent', value: 0 },\r\n      traffic = { type: 'residential', quantity: 0 },\r\n      period = { unit: 'd', amount: 0 },\r\n    } = giftsData;\r\n\r\n    const isNeedToShowGifts = discount.value || traffic.quantity || period.amount;\r\n    if (!isNeedToShowGifts) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 10 }}>\r\n          {translation('billing.promocode.activatedGiftsTitle')}\r\n          :\r\n        </div>\r\n        {renderDiscount(discount)}\r\n        {renderTraffic(traffic)}\r\n        {renderPeriod(period)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const parseAndTranslatePeriodUnit = (unit: string, amount: number): string => {\r\n    switch (unit.toLowerCase()) {\r\n      case 'y':\r\n        return translation('billing.promocode.periodGiftYears', { count: amount });\r\n      case 'm':\r\n        return translation('billing.promocode.periodGiftMonths', { count: amount });\r\n      case 'w':\r\n        return translation('billing.promocode.periodGiftWeeks', { count: amount });\r\n      default:\r\n        return translation('billing.promocode.periodGiftDays', { count: amount });\r\n    }\r\n  };\r\n\r\n  const translateType = (type: string): string => {\r\n    switch (type) {\r\n      case 'mobile':\r\n        return translation('billing.promocode.proxyTypeMobile');\r\n      case 'dataCenter':\r\n        return translation('billing.promocode.proxyTypeDataCenter');\r\n      default:\r\n        return translation('billing.promocode.proxyTypeResidential');\r\n    }\r\n  };\r\n\r\n  return renderActivatedGifts();\r\n};\r\n\r\nexport default PromoActivatedGifts;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ActivatedGiftsContainer = styled('div')`\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n","import { Button, Input, message, Popconfirm } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { FC, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { IPayment } from '../../../../interfaces';\r\nimport { setPromoDiscount, userContext, workspaceContext } from '../../../../state';\r\nimport { openWebsitePricing } from '../../../../utils/open-site';\r\nimport { requestUser, requestWorkspace, sendActionAnalytics } from '../../../common/api';\r\nimport LoadingPage from '../../../common/loading-page';\r\nimport { requestPromoDiscount } from '../../../pricing/api';\r\nimport { IPromoDiscount, IPromoGifts } from '../../../pricing/interfaces';\r\nimport {\r\n  deleteBillingCard,\r\n  deleteBillingPayPal,\r\n  deleteSigmaBillingCard,\r\n  requestPayments,\r\n  requestPaymentsWorkspace,\r\n  sendPromo,\r\n} from '../../api';\r\nimport { TabWrapper } from '../../menu/tab-wrapper';\r\nimport { PageTitle } from '../../styles';\r\nimport {\r\n  BlockInformationPay,\r\n  ButtonChange,\r\n  Hr,\r\n  NamePaymentMethod,\r\n  Row,\r\n  Subtitle,\r\n  TextEmail,\r\n  TextGhostPayment,\r\n  TextNameTarif,\r\n} from '../domElements/billing';\r\nimport PaymentsTable from '../payments-table';\r\nimport PromoDiscountView from '../promo/discount-data'\r\nimport PromoActivatedGifts from '../promo/gifts-data';\r\nimport { ActivatedGiftsContainer } from '../promo/styles';\r\nimport { getEmail } from '../../../../ui/Footer/api';\r\n\r\nconst BillingPersonalAreaPage: FC = () => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [payments, setPayments] = useState<IPayment[]>([]);\r\n  const [promo, setPromo] = useState<string>('');\r\n  const [isPromoLoading, setIsPromoLoading] = useState<boolean>(false);\r\n  const [promoGiftsData, setPromoGiftsData] = useState<IPromoGifts>({} as IPromoGifts);\r\n  const [promoDiscountData, setPromoDiscountData] = useState<IPromoDiscount>(\r\n    {\r\n      discount: {\r\n        active: false,\r\n        discountType: 'percent',\r\n        value: 0,\r\n      },\r\n    },\r\n  );\r\n\r\n  const workspace = useContext(workspaceContext);\r\n\r\n  const {\r\n    email,\r\n    profiles: userProfiles,\r\n    plan: userPlan,\r\n    card = {},\r\n    paypalSubscriptionId,\r\n    isQuickSettingsEnabled,\r\n    updateUser,\r\n  } = useContext(userContext);\r\n\r\n  const {\r\n    id: workspaceId,\r\n    planId: workspacePlanId,\r\n    planName: workspacePlanName,\r\n    profilesCount: workspaceProfilesCount,\r\n    planProfilesMax: workspaceMaxProfiles,\r\n    updateWorkspace,\r\n  } = useContext(workspaceContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const planName = NEW_FEATURES.workspaces ? workspacePlanName : userPlan.name;\r\n  const profilesCount = NEW_FEATURES.workspaces ? workspaceProfilesCount : userProfiles;\r\n  const planProfilesMax = NEW_FEATURES.workspaces ? workspaceMaxProfiles : userPlan.maxProfiles;\r\n  const planStr = `${planName} (${profilesCount}/${planProfilesMax} ${translation('personalArea.billing.profile', { count: planProfilesMax })})`;\r\n\r\n  const loadPayments = async (): Promise<void> => {\r\n    let newPayments: IPayment[];\r\n    if (NEW_FEATURES.workspaces) {\r\n      newPayments = await requestPaymentsWorkspace(workspaceId);\r\n    } else {\r\n      newPayments = await requestPayments();\r\n    }\r\n\r\n    newPayments.sort((curr, next) => {\r\n      const firstDate = moment(curr.expiresIn).utc();\r\n      const secondDate = moment(next.expiresIn).utc();\r\n\r\n      return firstDate < secondDate ? 1 : -1;\r\n    });\r\n\r\n    setPayments(newPayments);\r\n    const { card: userCard = {}, subscription = {} } = await requestUser().catch(() => ({}));\r\n    updateUser({ card: userCard, subscription });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!email) {\r\n      return;\r\n    }\r\n\r\n    loadPayments().then(() => setIsLoading(false));\r\n  }, [email, isQuickSettingsEnabled, workspaceId, workspacePlanId, NEW_FEATURES.workspaces]);\r\n\r\n  const showPaymentHistory = (): JSX.Element|null => {\r\n    if (!card.brand && card.type === 'sigma_card') {\r\n      card.brand = 'Card';\r\n    }\r\n\r\n    const hasPaymentMethod = card.brand || paypalSubscriptionId;\r\n    if (!hasPaymentMethod) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TextGhostPayment>\r\n          {translation('personalArea.billing.paymentMethodColumn')}\r\n        </TextGhostPayment>\r\n        {showPaymentCard()}\r\n        {showPaymentPaypal()}\r\n        <Hr style={{ marginTop: 15 }} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const ucFirst = (str = 'Сard') => str[0].toUpperCase() + str.slice(1);\r\n\r\n  const showPaymentCard = (): JSX.Element|null => {\r\n    if (!card.brand) {\r\n      return null;\r\n    }\r\n\r\n    const deleteCardWay = card.type === 'sigma_card' ? deleteSigmaBillingCard : deleteBillingCard;\r\n\r\n    return (\r\n      <>\r\n        <Row style={{ marginTop: 30 }}>\r\n          <BlockInformationPay>\r\n            <NamePaymentMethod>\r\n              {ucFirst(card.brand)}\r\n            </NamePaymentMethod>\r\n            <TextEmail>\r\n              {card.lastNumbers}\r\n            </TextEmail>\r\n          </BlockInformationPay>\r\n          <Popconfirm\r\n            placement='top'\r\n            title={translation('personalArea.billing.popConfirmDelete')}\r\n            onConfirm={(): Promise<void> => deleteCardWay().then(() => updateUser({ card: {} }))}\r\n            okText={translation('base.yes')}\r\n            cancelText={translation('base.no')}\r\n          >\r\n            <ButtonChange style={{ width: 100, marginLeft: 200, marginTop: 2 }}>\r\n              {translation('personalArea.billing.deleteSubmitBtnText')}\r\n            </ButtonChange>\r\n          </Popconfirm>\r\n        </Row>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const showPaymentPaypal = (): JSX.Element|null => {\r\n    if (!paypalSubscriptionId) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Row style={{ marginTop: 30 }}>\r\n        <BlockInformationPay>\r\n          <NamePaymentMethod>\r\n            PayPal\r\n          </NamePaymentMethod>\r\n          <TextEmail>\r\n            {paypalSubscriptionId}\r\n          </TextEmail>\r\n        </BlockInformationPay>\r\n        <Popconfirm\r\n          placement='top'\r\n          title={translation('personalArea.billing.popConfirmDelete')}\r\n          onConfirm={(): Promise<void> => deleteBillingPayPal().then(() => updateUser({ paypalSubscriptionId: '' }))}\r\n          okText={translation('base.yes')}\r\n          cancelText={translation('base.no')}\r\n        >\r\n          <ButtonChange style={{ width: 100, marginLeft: 114, marginTop: 2 }}>\r\n            {translation('personalArea.billing.deleteSubmitBtnText')}\r\n          </ButtonChange>\r\n        </Popconfirm>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const changPlanClick = (e: any) => {\r\n    sendActionAnalytics('clicked buy plan', { actionInfo: 'billing plans' });\r\n    e.preventDefault();\r\n    openWebsitePricing({\r\n      workspaceId,\r\n      isQuickSettingsEnabled,\r\n      isShowPaymentMethods: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestPromoDiscount({ workspaceId: workspace.id }).then(setPromoDiscountData);\r\n  }, [workspace.id]);\r\n\r\n  const onPromoInsert = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setPromo(event.target.value.toUpperCase());\r\n  };\r\n\r\n  const checkPromo = async (): Promise<void> => {\r\n    setPromoGiftsData({} as IPromoGifts);\r\n    setIsPromoLoading(true);\r\n    try {\r\n      const result = await sendPromo(promo, workspaceId).finally(() => {\r\n        setPromo('');\r\n        setIsPromoLoading(false);\r\n      });\r\n\r\n      const { discount: promoDiscount } = result;\r\n      setPromoDiscount(promoDiscount);\r\n\r\n      message.success(translation('personalArea.billing.alertPromoCodeActivated'));\r\n      setPromoGiftsData(result);\r\n\r\n      if (result.period.amount) {\r\n        if (NEW_FEATURES.workspaces) {\r\n          const { planExpiresAt } = await requestWorkspace(workspaceId);\r\n          updateWorkspace({ planExpiresAt });\r\n        } else {\r\n          const { planExpireDate } = await requestUser();\r\n          updateUser({ planExpireDate });\r\n        }\r\n      }\r\n    } finally {\r\n      setPromo('');\r\n      setIsPromoLoading(false);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const sortPaymentsByCreatedDateDesc = (prev: IPayment, next: IPayment): number => {\r\n    if (prev.createdAt > next.createdAt) {\r\n      return -1;\r\n    }\r\n\r\n    if (prev.createdAt < next.createdAt) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const sortedPayments = useMemo(() => [...payments.sort(sortPaymentsByCreatedDateDesc)], [payments]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <TabWrapper tabKey='billing'>\r\n        <PageTitle>\r\n          {translation('personalArea.billing.title')}\r\n        </PageTitle>\r\n        <LoadingPage />\r\n      </TabWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TabWrapper tabKey='billing'>\r\n      <PageTitle>\r\n        {translation('personalArea.billing.title')}\r\n      </PageTitle>\r\n      <Row style={{ marginTop: 22 }}>\r\n        <TextNameTarif>\r\n          {planStr}\r\n        </TextNameTarif>\r\n        <ButtonChange onClick={changPlanClick}>\r\n          {translation('personalArea.billing.changePlanSubmitBtnText')}\r\n        </ButtonChange>\r\n      </Row>\r\n      <Hr style={{ marginTop: 11 }} />\r\n      {showPaymentHistory()}\r\n      <Subtitle style={{ paddingTop: 30 }}>\r\n        {translation('personalArea.billing.subTitlePaymentHistory')}\r\n      </Subtitle>\r\n      <div>\r\n        <PaymentsTable\r\n          payments={sortedPayments}\r\n          isQuickSettingsEnabled={isQuickSettingsEnabled}\r\n        />\r\n      </div>\r\n      <Subtitle>\r\n        {translation('personalArea.billing.CouponSubmitBtnText')}\r\n      </Subtitle>\r\n      <Row\r\n        style={{\r\n          alignItems: 'center',\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Input\r\n          style={{\r\n            width: 202,\r\n          }}\r\n          value={promo}\r\n          onChange={onPromoInsert}\r\n          placeholder={translation('personalArea.billing.placeholderInputEnterCode') || ''}\r\n        />\r\n        <Button\r\n          disabled={!promo}\r\n          loading={isPromoLoading}\r\n          onClick={checkPromo}\r\n          type='default'\r\n          style={{\r\n            backgroundColor: 'var(--F7F7F8-personal-area-billing)',\r\n            marginLeft: 8,\r\n          }}\r\n        >\r\n          {translation('personalArea.billing.applySubmitBtnText')}\r\n        </Button>\r\n      </Row>\r\n      <ActivatedGiftsContainer>\r\n        <PromoDiscountView discountData={promoDiscountData.discount} />\r\n      </ActivatedGiftsContainer>\r\n      <ActivatedGiftsContainer>\r\n        <PromoActivatedGifts promoGiftsData={promoGiftsData} />\r\n      </ActivatedGiftsContainer>\r\n    </TabWrapper>\r\n  );\r\n};\r\n\r\nexport default BillingPersonalAreaPage;\r\n","import moment from 'moment';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IS_SEPARATED_CHECKOUT_KEY_NAME } from '../../../../common/constants/constants';\r\nimport { history } from '../../../services';\r\nimport { FOREVER_FREE_PLAN_ID } from '../constants';\r\nimport { IDiscountShort, IIsWorkspacePaidParams, PaymentMethodIntentType, PaymentType } from '../interfaces';\r\n\r\nconst CENTS_IN_DOLLAR = 100;\r\nconst MIN_PLAN_PRICE_IN_DOLLAR = 0.5;\r\n\r\nexport const recalculatePrice = (promoDiscountData: IDiscountShort, price: number): number => {\r\n  const { active, discountType, value } = promoDiscountData;\r\n  if (!(active && value)) {\r\n    return price;\r\n  }\r\n\r\n  switch (discountType) {\r\n    case 'percent':\r\n      return Math.max(MIN_PLAN_PRICE_IN_DOLLAR, price - price * value / CENTS_IN_DOLLAR);\r\n    case 'fix':\r\n      return Math.max(MIN_PLAN_PRICE_IN_DOLLAR, price - value / CENTS_IN_DOLLAR);\r\n    default:\r\n      return price;\r\n  }\r\n};\r\n\r\nexport const getAnalyticsPaymentType = (type: PaymentType, isGooglePay?: boolean|null): PaymentMethodIntentType => {\r\n  const analyticsPaymentType: Record<PaymentType, PaymentMethodIntentType> = {\r\n    [PaymentType.Card]: 'stripe',\r\n    [PaymentType.Mobile]: isGooglePay ? 'google_pay' : 'apple_pay',\r\n    [PaymentType.PayPal]: 'paypal',\r\n    [PaymentType.Crypto]: 'crypto',\r\n    [PaymentType.Sigma]: 'sigma',\r\n  };\r\n\r\n  return analyticsPaymentType[type];\r\n};\r\n\r\nexport const getShouldShowUpgrade = (params: IIsWorkspacePaidParams): boolean => {\r\n  if (!NEW_FEATURES.showUpgrade) {\r\n    return false;\r\n  }\r\n\r\n  const { planId, isUnpaid, planExpiresAt, paymentIsTrial, paymentMethod } = params;\r\n  if (planId === FOREVER_FREE_PLAN_ID || isUnpaid) {\r\n    return false;\r\n  }\r\n\r\n  if (!planExpiresAt) {\r\n    return false;\r\n  }\r\n\r\n  const paymentExpiresIn = moment(planExpiresAt).utc();\r\n\r\n  return !paymentIsTrial && moment(paymentExpiresIn).isAfter(moment.utc()) && paymentMethod !== 'paypal';\r\n};\r\n\r\n// cannot yet be replaced with 'auto' height\r\n// because it also affects 3ds, loading and success modals\r\n// and the design requirement is to keep heights equal in payment flow\r\n// it's easier and more stable to hard-code them, until design is fixed\r\nexport const calcModalHeight = (\r\n  paymentType: PaymentType,\r\n  isNewStripeFlow?: boolean,\r\n  isTrialEnded?: boolean,\r\n): number => {\r\n  const REGULAR_HEIGHT = 688;\r\n  const PAYPAL_HEIGHT = 750;\r\n\r\n  let cardHeight = 757;\r\n  const trialEndedTextHeight = 32;\r\n  const oldFlowFormHeight = 94;\r\n\r\n  if (isTrialEnded) {\r\n    cardHeight += trialEndedTextHeight;\r\n  }\r\n\r\n  if (!isNewStripeFlow) {\r\n    cardHeight += oldFlowFormHeight;\r\n  }\r\n\r\n  const paymentTypesHeights: Record<PaymentType, number> = {\r\n    Card: cardHeight,\r\n    Mobile: REGULAR_HEIGHT,\r\n    Crypto: REGULAR_HEIGHT,\r\n    PayPal: PAYPAL_HEIGHT,\r\n    Sigma: REGULAR_HEIGHT,\r\n  };\r\n\r\n  return paymentTypesHeights[paymentType];\r\n};\r\n\r\nexport const checkSeparatedCheckoutUrl = (): void => {\r\n  const isCheckoutApp = sessionStorage.getItem(IS_SEPARATED_CHECKOUT_KEY_NAME) === 'true';\r\n  if (!isCheckoutApp) {\r\n    return;\r\n  }\r\n\r\n  const urlObject = new URL(window.location.href);\r\n  let path = urlObject.pathname;\r\n  const queryParams = urlObject.search;\r\n\r\n  if (path.startsWith('/checkout')) {\r\n    return;\r\n  }\r\n\r\n  path = `/checkout${path}`;\r\n  setTimeout(() => {\r\n    history.replace(`${path}${queryParams}`);\r\n  }, 100);\r\n};\r\n","import { E_DISCOUNT_TYPES } from '../../../interfaces/discount-types.interfaces';\r\nimport { IPlan } from '../../../interfaces/plan';\r\nimport { CENTS_IN_DOLLAR, DOLLARS_IN_DOLLAR, EMPTY_DISCOUNT } from '../constants';\r\nimport {\r\n  E_CURRENCY,\r\n  E_CURRENCY_FRACTION_DIGITS,\r\n  E_CURRENCY_LOCALES,\r\n  E_PERIOD, IDiscount,\r\n  IDiscountElem,\r\n  IPriceConfig,\r\n  IUpgradeDiscount,\r\n  PaymentPeriodType,\r\n  TCurrency\r\n} from '../interfaces';\r\n\r\nexport class Price {\r\n  private amount: number;\r\n  private fullPrice: number;\r\n  private planObj: IPlan | undefined;\r\n  private currency: TCurrency;\r\n  private periodApplied: boolean;\r\n  private price: Record<TCurrency, number> = {\r\n    usd: 0,\r\n    rub: 0,\r\n    pkr: 0,\r\n  };\r\n\r\n  private periodFactors = {\r\n    annual: 12,\r\n    monthly: 1,\r\n  };\r\n\r\n  constructor(initial: number | IPlan | null, currency: TCurrency) {\r\n    this.currency = currency || E_CURRENCY.USD;\r\n    this.periodApplied = false;\r\n    if (typeof initial === 'number') {\r\n      this.amount = initial;\r\n      this.price[this.currency] = initial;\r\n      this.fullPrice = initial;\r\n    } else if (initial === null) {\r\n      this.amount = this.price[this.currency];\r\n      this.fullPrice = this.price[this.currency];\r\n    } else {\r\n      this.planObj = initial;\r\n      this.price = { ...initial.price };\r\n      this.amount = this.price[this.currency];\r\n      this.fullPrice = this.price[this.currency];\r\n    }\r\n  }\r\n\r\n  getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  getAmountInCents(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  getAmountInCurrency(fractionDigits?: number): number {\r\n    const decimalPlaces = typeof fractionDigits === 'number' ? fractionDigits : 2;\r\n    const factor = Math.pow(10, decimalPlaces);\r\n\r\n    return Math.round(this.amount * factor / CENTS_IN_DOLLAR) / factor;\r\n  }\r\n\r\n  setCurrency(currency: TCurrency): this {\r\n    this.currency = currency;\r\n    const { priceForMonthRUB = 0 } = this.planObj || {};\r\n    if (currency === E_CURRENCY.RUB && priceForMonthRUB) {\r\n      this.amount = priceForMonthRUB;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  multiply(periodType: PaymentPeriodType): this {\r\n    if ([E_PERIOD.MONTHLY, E_PERIOD.ANNUAL].includes(periodType)) {\r\n      this.amount *= this.periodFactors[periodType];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  period(param: IDiscount|number|null): this {\r\n    if (param === null) {\r\n      return this;\r\n    }\r\n\r\n    if (typeof param === 'number') {\r\n      this.amount *= param;\r\n\r\n      return this;\r\n    }\r\n\r\n    const { discounts } = param;\r\n    if (!discounts) {\r\n      return this;\r\n    }\r\n\r\n    const activeDiscount = (param.discounts || []).find((elem) => elem?.active) || EMPTY_DISCOUNT;\r\n\r\n    return this.promo(activeDiscount);\r\n  }\r\n\r\n  perMonth(periodType: PaymentPeriodType): this {\r\n    if ([E_PERIOD.MONTHLY, E_PERIOD.ANNUAL].includes(periodType)) {\r\n      const pricePerMonth = this.amount / this.periodFactors[periodType];\r\n      this.amount = Math.floor(pricePerMonth / CENTS_IN_DOLLAR) * CENTS_IN_DOLLAR;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  promo(discountElem: Partial<IDiscountElem>, config?: IPriceConfig): this {\r\n    if (!discountElem) {\r\n      return this;\r\n    }\r\n\r\n    const { discountType = E_DISCOUNT_TYPES.MONTH, active = false } = discountElem;\r\n    const { value: discountValue = 1 } = discountElem;\r\n\r\n    if (!active) {\r\n      return this;\r\n    }\r\n\r\n    if (discountType === E_DISCOUNT_TYPES.MONTH && !this.periodApplied) {\r\n      this.periodApplied = true;\r\n      this.amount *= discountValue;\r\n    }\r\n\r\n    if (discountType === E_DISCOUNT_TYPES.PERCENT) {\r\n      this.amount *= (1 - discountValue / CENTS_IN_DOLLAR);\r\n    }\r\n\r\n    if (discountType === E_DISCOUNT_TYPES.FIX) {\r\n      const { currencyFactors = null } = config || {};\r\n      const currencyFactor = currencyFactors ? currencyFactors[this.currency] : DOLLARS_IN_DOLLAR;\r\n      this.amount -= (discountValue * currencyFactor);\r\n    }\r\n\r\n    if (this.amount < 0) {\r\n      this.amount = 0;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  savePeriod(param: IDiscount|null): this {\r\n    if (!param) {\r\n      return this;\r\n    }\r\n\r\n    const { discounts, monthCount = 1 } = param;\r\n    if (!discounts) {\r\n      return this;\r\n    }\r\n\r\n    this.fullPrice = this.amount * monthCount;\r\n    const activeDiscount = (param.discounts || []).find((elem) => elem?.active) || EMPTY_DISCOUNT;\r\n    this.promo(activeDiscount);\r\n\r\n    this.amount = this.fullPrice - this.amount;\r\n\r\n    return this;\r\n  }\r\n\r\n  savePromo(discountElem: IDiscountElem|null, config?: IPriceConfig): this {\r\n    if (!discountElem) {\r\n      return this;\r\n    }\r\n\r\n    const { discountType = E_DISCOUNT_TYPES.MONTH } = discountElem || {};\r\n    if (!discountElem || discountType === E_DISCOUNT_TYPES.MONTH) {\r\n      this.amount = 0;\r\n\r\n      return this;\r\n    }\r\n\r\n    const { value: discountValue = 1 } = discountElem;\r\n\r\n    if (discountType === E_DISCOUNT_TYPES.PERCENT) {\r\n      this.amount *= (discountValue / CENTS_IN_DOLLAR);\r\n    }\r\n\r\n    if (discountType === E_DISCOUNT_TYPES.FIX) {\r\n      const { currencyFactors = null } = config || {};\r\n      const currencyFactor = currencyFactors ? currencyFactors[this.currency] : DOLLARS_IN_DOLLAR;\r\n      this.amount = discountValue * currencyFactor;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  saveUpgrade(upgradeDiscount: IUpgradeDiscount): this {\r\n    if (!upgradeDiscount) {\r\n      this.amount = 0;\r\n\r\n      return this;\r\n    }\r\n\r\n    const { amountInCurrency } = upgradeDiscount;\r\n    this.amount = amountInCurrency[this.currency];\r\n\r\n    return this;\r\n  }\r\n\r\n  toLocalString(digits?: number|null, config?: IPriceConfig): string {\r\n    const resultAmount = this.amount / CENTS_IN_DOLLAR;\r\n    const isDefinedFraction = typeof digits === 'number';\r\n    let fractionDigits = isDefinedFraction ? digits : E_CURRENCY_FRACTION_DIGITS.TWO;\r\n\r\n    const { currencyLocales = null, currencyFractionDigits = null } = config || {};\r\n    const currencyLocale = currencyLocales ? currencyLocales[this.currency] : E_CURRENCY_LOCALES.USD;\r\n    if (currencyFractionDigits && !isDefinedFraction) {\r\n      fractionDigits = currencyFractionDigits[this.currency];\r\n    }\r\n\r\n    return new Intl.NumberFormat(currencyLocale, {\r\n      style: 'currency',\r\n      currency: this.currency.toUpperCase(),\r\n      minimumFractionDigits: fractionDigits,\r\n      maximumFractionDigits: fractionDigits,\r\n    }).format(resultAmount);\r\n  }\r\n\r\n  upgrade(upgradeDiscount: IUpgradeDiscount): this {\r\n    if (!upgradeDiscount) {\r\n      return this;\r\n    }\r\n\r\n    const { amountInCurrency, discountType = E_DISCOUNT_TYPES.FIX } = upgradeDiscount;\r\n    if (discountType !== E_DISCOUNT_TYPES.FIX) {\r\n      return this.promo(upgradeDiscount);\r\n    }\r\n\r\n    const discountAmount = amountInCurrency[this.currency];\r\n    this.amount -= discountAmount;\r\n\r\n    return this;\r\n  }\r\n}\r\n"],"names":["requestPayments","_ref2","_asyncToGenerator","http","concat","API_BASE_URL","body","error","apply","arguments","requestPaymentsWorkspace","_ref3","workspaceId","then","res","_x2","sendPromo","_ref4","promo","requestBody","JSON","stringify","code","method","_x3","_x4","deleteBillingCard","_ref7","deleteSigmaBillingCard","_ref8","deleteBillingPayPal","_ref9","Subtitle","styled","_templateObject","_taggedTemplateLiteral","Row","_templateObject2","ContainerNameCol","_Layout","_templateObject3","props","newStyle","borderRadiusContainer","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","TablePan","_Table","_templateObject10","TextTable","_templateObject11","_templateObject12","_templateObject13","Hr","_templateObject14","ButtonPay","_Button","_templateObject15","TextNameTarif","_templateObject16","_templateObject17","ButtonChange","_templateObject18","TextGhostPayment","_templateObject19","NamePaymentMethod","_templateObject20","TextEmail","_templateObject21","BlockInformationPay","_templateObject22","PaymentsTable","payments","isQuickSettingsEnabled","id","useContext","workspaceContext","t","translation","useTranslation","formatDate","date","moment","utc","format","openPricing","openWebsitePricing","React","pagination","dataSource","scroll","x","ellipsis","width","title","dataIndex","key","render","_payment$additionalPa","description","length","undefined","payment","toLowerCase","includes","additionalParams","isTrial","plan","FOREVER_FREE_PLAN_ID","creditCard","status","statusBadge","textBadge","_Badge","dot","text","style","marginLeft","amount","findIndex","elem","onClick","type","currency","E_CURRENCY","amountInCurrency","formattedSum","Price","toLocalString","getDiscountText","value","discountType","Number","toFixed","discountData","active","promoGiftsData","giftsData","setGiftsData","useState","workspace","useEffect","parseAndTranslatePeriodUnit","unit","count","translateType","discount","traffic","quantity","period","marginBottom","renderDiscount","renderTraffic","renderPeriod","renderActivatedGifts","ActivatedGiftsContainer","isLoading","setIsLoading","setPayments","setPromo","isPromoLoading","setIsPromoLoading","setPromoGiftsData","promoDiscountData","setPromoDiscountData","email","profiles","userProfiles","userPlan","card","paypalSubscriptionId","updateUser","userContext","planId","workspacePlanId","planName","workspacePlanName","profilesCount","workspaceProfilesCount","planProfilesMax","workspaceMaxProfiles","updateWorkspace","NEW_FEATURES","name","maxProfiles","planStr","loadPayments","_ref","newPayments","sort","curr","next","expiresIn","userCard","subscription","requestUser","catch","showPaymentCard","brand","deleteCardWay","marginTop","str","toUpperCase","slice","ucFirst","lastNumbers","_Popconfirm","placement","onConfirm","okText","cancelText","showPaymentPaypal","requestPromoDiscount","checkPromo","result","finally","promoDiscount","setPromoDiscount","_message","planExpiresAt","requestWorkspace","planExpireDate","sortPaymentsByCreatedDateDesc","prev","createdAt","sortedPayments","useMemo","TabWrapper","tabKey","PageTitle","LoadingPage","e","sendActionAnalytics","actionInfo","preventDefault","isShowPaymentMethods","paddingTop","alignItems","_Input","onChange","event","target","placeholder","disabled","loading","backgroundColor","PromoDiscountView","PromoActivatedGifts","recalculatePrice","price","Math","max","getAnalyticsPaymentType","isGooglePay","PaymentType","getShouldShowUpgrade","params","isUnpaid","paymentIsTrial","paymentMethod","paymentExpiresIn","isAfter","calcModalHeight","paymentType","isNewStripeFlow","isTrialEnded","cardHeight","Card","Mobile","Crypto","PayPal","Sigma","checkSeparatedCheckoutUrl","sessionStorage","getItem","IS_SEPARATED_CHECKOUT_KEY_NAME","urlObject","URL","window","location","href","path","pathname","queryParams","search","startsWith","setTimeout","history","constructor","initial","_defineProperty","usd","rub","pkr","annual","monthly","this","periodApplied","fullPrice","planObj","_objectSpread","getAmount","getAmountInCents","getAmountInCurrency","fractionDigits","decimalPlaces","factor","pow","round","CENTS_IN_DOLLAR","setCurrency","priceForMonthRUB","multiply","periodType","E_PERIOD","periodFactors","param","discounts","activeDiscount","find","EMPTY_DISCOUNT","perMonth","pricePerMonth","floor","discountElem","config","E_DISCOUNT_TYPES","discountValue","currencyFactors","currencyFactor","DOLLARS_IN_DOLLAR","savePeriod","monthCount","savePromo","saveUpgrade","upgradeDiscount","digits","resultAmount","isDefinedFraction","E_CURRENCY_FRACTION_DIGITS","currencyLocales","currencyFractionDigits","currencyLocale","E_CURRENCY_LOCALES","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","upgrade","discountAmount"],"sourceRoot":""}