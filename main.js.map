{"version":3,"file":"main.js","mappings":"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","sources":["webpack://GoLogin/webpack/runtime/require chunk loading","webpack://GoLogin/./src/app/features/browser-system-icons/constants/constants-mac.ts","webpack://GoLogin/./src/app/features/browser-system-icons/constants/constants-win-10.ts","webpack://GoLogin/./src/app/features/browser-system-icons/constants/constants-win-11.ts","webpack://GoLogin/./src/app/features/browser-system-icons/constants/index.ts","webpack://GoLogin/./src/common/constants/analytics.ts","webpack://GoLogin/./src/common/constants/constants.ts","webpack://GoLogin/./src/electron/constants/constants.ts","webpack://GoLogin/./src/electron/constants/zero-profile-preferences.ts","webpack://GoLogin/./src/electron/helpers/helper.functions.ts","webpack://GoLogin/./src/electron/managers/browser-releases.manager.ts","webpack://GoLogin/./src/fonts.ts","webpack://GoLogin/./src/electron/managers/browser.user-data.manager.ts","webpack://GoLogin/./src/electron/managers/common-data-manager.ts","webpack://GoLogin/./src/electron/managers/cookies-manager.ts","webpack://GoLogin/external commonjs \"zip-dir\"","webpack://GoLogin/./src/electron/managers/user.extensions.manager.ts","webpack://GoLogin/./src/electron/managers/utils/crx-to-zip.converter.ts","webpack://GoLogin/./src/electron/managers/extensions.manager.ts","webpack://GoLogin/./src/electron/managers/profile.caching.manager.ts","webpack://GoLogin/./src/electron/utils/crypto/passwords-decryptor.ts","webpack://GoLogin/./src/electron/managers/profile/close-orbita.ts","webpack://GoLogin/external commonjs \"open\"","webpack://GoLogin/./src/electron/helpers/orbita-errors.ts","webpack://GoLogin/./src/electron/server/src/services/profiles-timer.ts","webpack://GoLogin/./src/electron/managers/profile/launch-orbita.ts","webpack://GoLogin/external commonjs \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://GoLogin/external commonjs \"@sentry/react\"","webpack://GoLogin/./src/electron/constants/zero-profile-bookmarks.ts","webpack://GoLogin/./src/electron/utils/get-app-config-from-back.ts","webpack://GoLogin/./src/electron/utils/profile-extractor.ts","webpack://GoLogin/./src/electron/utils/profile-ready-checker.ts","webpack://GoLogin/./src/electron/managers/profile.status.manager.ts","webpack://GoLogin/./src/electron/managers/timezone.manager.ts","webpack://GoLogin/./src/electron/managers/utils/bookmarks.utils.ts","webpack://GoLogin/./src/electron/managers/profile/renderer.ts","webpack://GoLogin/./src/app/features/browser-system-icons/utils/format-os.ts","webpack://GoLogin/./src/electron/managers/utils/browser-locales.utils.ts","webpack://GoLogin/./src/electron/managers/start-profile-manager.ts","webpack://GoLogin/./src/electron/managers/utils/api.ts","webpack://GoLogin/./src/electron/managers/utils/automation.utils.ts","webpack://GoLogin/./src/electron/managers/utils/browser-checker.utils.ts","webpack://GoLogin/./src/electron/managers/utils/extensions-extractor.ts","webpack://GoLogin/./src/electron/managers/utils/extract.downloaded.extensions.ts","webpack://GoLogin/external commonjs \"axios\"","webpack://GoLogin/./src/electron/server/src/services/request.ts","webpack://GoLogin/external node-commonjs \"net\"","webpack://GoLogin/./src/electron/services/proxy.service.ts","webpack://GoLogin/./src/electron/utils/app-config.utils.ts","webpack://GoLogin/./src/electron/utils/browser-icons/save-browser-icons-in-profile-directory.ts","webpack://GoLogin/./src/electron/utils/browser-icons/save-browser-icons-data.ts","webpack://GoLogin/external commonjs \"decompress-targz\"","webpack://GoLogin/./src/electron/utils/check-browser.ts","webpack://GoLogin/external commonjs \"fs-extra\"","webpack://GoLogin/./src/electron/utils/check-gologin-extensions.ts","webpack://GoLogin/./src/electron/utils/config-manager.ts","webpack://GoLogin/./src/electron/utils/crypto/cookies-decryptor.ts","webpack://GoLogin/./src/electron/utils/crypto/methods.ts","webpack://GoLogin/./src/electron/utils/custom-errors.ts","webpack://GoLogin/./src/electron/utils/downloadWithRetry.ts","webpack://GoLogin/external commonjs \"unzipper\"","webpack://GoLogin/external commonjs \"yauzl\"","webpack://GoLogin/./src/electron/utils/extract-archive.ts","webpack://GoLogin/./src/electron/utils/make-request.ts","webpack://GoLogin/./src/electron/utils/path-platforms.ts","webpack://GoLogin/external commonjs \"yazl\"","webpack://GoLogin/./src/electron/utils/profile-directories-to-remove.ts","webpack://GoLogin/./src/electron/utils/profile-archiver.ts","webpack://GoLogin/external commonjs \"https-proxy-agent\"","webpack://GoLogin/external commonjs \"socks-proxy-agent\"","webpack://GoLogin/./src/electron/utils/proxy-request-with-timeout.ts","webpack://GoLogin/./src/electron/utils/send-action-analytics.ts","webpack://GoLogin/./src/electron/utils/sentry.ts","webpack://GoLogin/./src/electron/utils/userOs.ts","webpack://GoLogin/./src/electron/utils/utils.ts","webpack://GoLogin/./src/electron/utils/with-retry.ts","webpack://GoLogin/./src/electron/window-raiser/focus-orbita-utils.ts","webpack://GoLogin/./src/electron/window-raiser/darwin/pid_raiser_intel.node","webpack://GoLogin/./src/electron/window-raiser/darwin/pid_raiser_m1.node","webpack://GoLogin/./src/electron/window-raiser/linux/pid_raiser.node","webpack://GoLogin/./src/electron/window-raiser/win32/pid_raiser.node","webpack://GoLogin/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://GoLogin/external commonjs \"@babel/runtime/helpers/classPrivateFieldGet\"","webpack://GoLogin/external commonjs \"@babel/runtime/helpers/classPrivateFieldSet\"","webpack://GoLogin/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://GoLogin/external commonjs \"@sentry/electron\"","webpack://GoLogin/external commonjs \"decompress\"","webpack://GoLogin/external commonjs \"decompress-unzip\"","webpack://GoLogin/external commonjs \"electron\"","webpack://GoLogin/external commonjs \"electron-reload\"","webpack://GoLogin/external commonjs \"events\"","webpack://GoLogin/external commonjs \"get-system-fonts\"","webpack://GoLogin/external commonjs \"got\"","webpack://GoLogin/external commonjs \"moment\"","webpack://GoLogin/external commonjs \"sqlite\"","webpack://GoLogin/external commonjs \"sqlite3\"","webpack://GoLogin/external commonjs \"tree-kill\"","webpack://GoLogin/external commonjs \"util\"","webpack://GoLogin/external commonjs \"uuid\"","webpack://GoLogin/external node-commonjs \"child_process\"","webpack://GoLogin/external node-commonjs \"crypto\"","webpack://GoLogin/external node-commonjs \"fs\"","webpack://GoLogin/external node-commonjs \"fs/promises\"","webpack://GoLogin/external node-commonjs \"os\"","webpack://GoLogin/external node-commonjs \"path\"","webpack://GoLogin/webpack/bootstrap","webpack://GoLogin/webpack/runtime/compat get default export","webpack://GoLogin/webpack/runtime/define property getters","webpack://GoLogin/webpack/runtime/ensure chunk","webpack://GoLogin/webpack/runtime/get javascript chunk filename","webpack://GoLogin/webpack/runtime/hasOwnProperty shorthand","webpack://GoLogin/webpack/runtime/make namespace object","webpack://GoLogin/webpack/runtime/node module decorator","webpack://GoLogin/webpack/runtime/publicPath","webpack://GoLogin/external node-commonjs \"url\"","webpack://GoLogin/external commonjs \"@electron/remote/main\"","webpack://GoLogin/external commonjs \"@sentry/tracing\"","webpack://GoLogin/external commonjs \"electron-updater\"","webpack://GoLogin/./src/common/typescript/predicates.ts","webpack://GoLogin/./src/electron/interfaces/check-competitors.interfaces.ts","webpack://GoLogin/./src/electron/analytics/competitors/check-competitors-config.utils.ts","webpack://GoLogin/./src/electron/analytics/crypto.utils.ts","webpack://GoLogin/./src/electron/analytics/utils.ts","webpack://GoLogin/./src/electron/analytics/competitors/metadata.utils.ts","webpack://GoLogin/./src/electron/migration/dolphin/import-dolphin-cookies.ts","webpack://GoLogin/external commonjs \"body-parser\"","webpack://GoLogin/external commonjs \"cors\"","webpack://GoLogin/external commonjs \"express\"","webpack://GoLogin/external commonjs \"is-port-reachable\"","webpack://GoLogin/./src/electron/utils/get-random-port.ts","webpack://GoLogin/./src/electron/server/routes/index.ts","webpack://GoLogin/./src/electron/server/index.ts","webpack://GoLogin/./src/electron/utils/check-anty.utils.ts","webpack://GoLogin/./src/electron/utils/deep-links/constants.ts","webpack://GoLogin/./src/electron/utils/deep-links/handle-o-auth.ts","webpack://GoLogin/./src/common/constants/events.ts","webpack://GoLogin/./src/common/constants/routes.ts","webpack://GoLogin/./src/electron/utils/deep-links/handle-profile-run.ts","webpack://GoLogin/./src/electron/utils/deep-links/handle-share/api.ts","webpack://GoLogin/./src/electron/utils/deep-links/handle-share/index.ts","webpack://GoLogin/./src/electron/utils/deep-links/index.ts","webpack://GoLogin/external commonjs \"keytar\"","webpack://GoLogin/./src/electron/utils/windows-vault.utils.ts","webpack://GoLogin/./src/main.ts"],"sourcesContent":["// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t179: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","import { IBrowserIconsConstantsForOs, IBrowserIconsConstantsRect, IBrowserIconsConstantsSizes, IBrowserIconsConstantsText } from '../interfaces';\r\n\r\nconst CONSTANTS_ICON: IBrowserIconsConstantsSizes = { browserIconsSizes: [128], iconsPaddingBase: 12.5 };\r\nconst CONSTANTS_RECT: IBrowserIconsConstantsRect = { borderRadiusBase: 23 };\r\nconst CONSTANTS_TEXT: IBrowserIconsConstantsText = { textMaxWidthBase: 77.25, textFontSizeBase: 43.5, lineHeightRatio: 0.87356 };\r\n\r\nexport const BROWSER_ICONS_CONSTANTS_FOR_MAC: IBrowserIconsConstantsForOs = { ...CONSTANTS_ICON, ...CONSTANTS_RECT, ...CONSTANTS_TEXT };\r\n","import { IBrowserIconsConstantsForOs, IBrowserIconsConstantsRect, IBrowserIconsConstantsSizes, IBrowserIconsConstantsText } from '../interfaces';\r\n\r\nconst CONSTANTS_ICON: IBrowserIconsConstantsSizes = { browserIconsSizes: [32], iconsPaddingBase: 0 };\r\nconst CONSTANTS_RECT: IBrowserIconsConstantsRect = { borderRadiusBase: 2.67 };\r\nconst CONSTANTS_TEXT: IBrowserIconsConstantsText = { textMaxWidthBase: 24, textFontSizeBase: 13.34, lineHeightRatio: 0.825 };\r\n\r\nexport const BROWSER_ICONS_CONSTANTS_FOR_WIN_10: IBrowserIconsConstantsForOs = { ...CONSTANTS_ICON, ...CONSTANTS_RECT, ...CONSTANTS_TEXT };\r\n","import { IBrowserIconsConstantsForOs, IBrowserIconsConstantsRect, IBrowserIconsConstantsSizes, IBrowserIconsConstantsText } from '../interfaces';\r\n\r\nconst CONSTANTS_ICON: IBrowserIconsConstantsSizes = { browserIconsSizes: [32], iconsPaddingBase: 0 };\r\nconst CONSTANTS_RECT: IBrowserIconsConstantsRect = { borderRadiusBase: 2.67 };\r\nconst CONSTANTS_TEXT: IBrowserIconsConstantsText = { textMaxWidthBase: 24, textFontSizeBase: 13.34, lineHeightRatio: 0.825 };\r\n\r\nexport const BROWSER_ICONS_CONSTANTS_FOR_WIN_11: IBrowserIconsConstantsForOs = { ...CONSTANTS_ICON, ...CONSTANTS_RECT, ...CONSTANTS_TEXT };\r\n","import { IBrowserIconsConstants, IBrowserIconsConstantsCommon } from '../interfaces';\r\nimport { BrowserBuild, OsForBrowserIcons } from '../types';\r\nimport { BROWSER_ICONS_CONSTANTS_FOR_MAC } from './constants-mac';\r\nimport { BROWSER_ICONS_CONSTANTS_FOR_WIN_10 } from './constants-win-10';\r\nimport { BROWSER_ICONS_CONSTANTS_FOR_WIN_11 } from './constants-win-11';\r\n\r\nconst CONSTANTS_COMMON: IBrowserIconsConstantsCommon = { textColor: '#FFFFFF', rectFillColor: '#222222' };\r\n\r\nexport const getIconsConstants = (os: OsForBrowserIcons): IBrowserIconsConstants => {\r\n  let constantsForOs;\r\n  switch (os) {\r\n    case 'win10':\r\n      constantsForOs = BROWSER_ICONS_CONSTANTS_FOR_WIN_10;\r\n      break;\r\n    case 'win11':\r\n      constantsForOs = BROWSER_ICONS_CONSTANTS_FOR_WIN_11;\r\n      break;\r\n    default:\r\n      constantsForOs = BROWSER_ICONS_CONSTANTS_FOR_MAC;\r\n      break;\r\n  }\r\n\r\n  return { ...CONSTANTS_COMMON, ...constantsForOs };\r\n};\r\n\r\ninterface IBrowserVersionMajorAndFull {\r\n  major: number;\r\n  full: BrowserBuild;\r\n}\r\n\r\ninterface IBrowserVersionForGreenSquare {\r\n  win10: IBrowserVersionMajorAndFull;\r\n  win11: IBrowserVersionMajorAndFull;\r\n  mac: IBrowserVersionMajorAndFull;\r\n}\r\n\r\nexport const BROWSER_VERSION_FOR_GREEN_SQUARE: IBrowserVersionForGreenSquare = {\r\n  win10: { major: 119, full: '119.1.2.1' },\r\n  win11: { major: 119, full: '119.1.2.1' },\r\n  mac: { major: 119, full: '119.1.2.37' },\r\n};\r\n","/* eslint-disable no-shadow */\r\nexport enum OpenProfileViaLink {\r\n  visited = 'visited open profile via link',\r\n  startedHandling = 'started handling open profile via link',\r\n  startedRedirecting = 'started redirecting open profile via link',\r\n  startedOpening = 'started opening profile via link',\r\n  opened = 'opened profile via link',\r\n  startedFocusing = 'started focusing profile via link',\r\n  focused = 'focused profile via link',\r\n}\r\n","const STORAGE_KEY_NAME_PREFIX = '@gologin:';\r\nexport const TWO_FA_TOKEN_KEY_NAME = `${STORAGE_KEY_NAME_PREFIX}2fa_token`;\r\nexport const AFFILIATE_COOKIE_NAME = `${STORAGE_KEY_NAME_PREFIX}affiliate`;\r\nexport const SEARCH_HISTORY_NAME = `${STORAGE_KEY_NAME_PREFIX}searchHistory`;\r\nexport const PROFILE_SHARED_KEY_NAME = `${STORAGE_KEY_NAME_PREFIX}profile-shared`;\r\nexport const FORCE_LOAD_OLD_PRICING_KEY_NAME = `${STORAGE_KEY_NAME_PREFIX}forceOldPricing`;\r\nexport const NEW_PRICING_WORKSPACE_ID_KEY_NAME = `${STORAGE_KEY_NAME_PREFIX}newPricingWorkspaceId`;\r\nexport const IS_SEPARATED_CHECKOUT_KEY_NAME = `${STORAGE_KEY_NAME_PREFIX}isCheckoutApp`;\r\nexport const SELECTED_LANGUAGE_KEY_NAME = `${STORAGE_KEY_NAME_PREFIX}selected_language`;\r\nexport const LOCAL_GOOGLE_CLIENT_ID_KEY_NAME = 'localGoogleClientId';\r\nexport const THEME_KEY_NAME = 'theme';\r\n\r\nexport const GEOPROXY_TYPES = ['residential', 'mobile', 'dataCenter'] as const;\r\nexport const PROMOCODE_UNITS = ['y', 'M', 'w', 'd'] as const;\r\nexport const FREE_PLAN_ID = '5e3aaad78481ec0b30795d1e';\r\nexport const PAGE_SIZE = 30;\r\n// export const API_BASE_URL = 'https://api-ws.gologin.com';\r\nexport const API_BASE_URL = process.env.GOLOGIN_API_BASE_URL;\r\n// export const API_BASE_URL = 'https://api-alpha-test.gologin.com';\r\n// export const API_BASE_URL = 'http://127.0.0.1:3002';\r\n\r\nexport const OLD_PRICING_PAGE_URL = process.env.GOLOGIN_OLD_PRICING_PAGE_URL;\r\n\r\nexport const MS_IN_SECOND = 1000;\r\n\r\nexport enum E_APP_TYPE {\r\n  desktop = 'desktop',\r\n}\r\n","import { BROWSER_ICONS_CONSTANTS_FOR_MAC } from '../../app/features/browser-system-icons/constants/constants-mac';\r\nimport { BROWSER_ICONS_CONSTANTS_FOR_WIN_10 } from '../../app/features/browser-system-icons/constants/constants-win-10';\r\nimport { BROWSER_ICONS_CONSTANTS_FOR_WIN_11 } from '../../app/features/browser-system-icons/constants/constants-win-11';\r\nimport { osPlatform } from '../utils/userOs';\r\n\r\nexport const VERSION_FILE = 'latest-version.txt';\r\nconst VERSION_FILE_LINK = 'latest-version{{orbita-version}}.txt';\r\nexport const MAC_VERSION_FILE_URL = `https://orbita-browser-mac.gologin.com/${VERSION_FILE_LINK}`;\r\nexport const MAC_ARM_VERSION_FILE_URL = `https://orbita-browser-mac-arm.gologin.com/${VERSION_FILE_LINK}`;\r\nexport const DEB_VERSION_FILE_URL = `https://orbita-browser-linux.gologin.com/${VERSION_FILE_LINK}`;\r\nexport const WIN_VERSION_FILE_URL = `https://orbita-browser-windows.gologin.com/${VERSION_FILE_LINK}`;\r\n\r\nexport const WIN_FOLDERSIZE_FILE = 'foldersize.txt';\r\nexport const WIN_FOLDERSIZE_FILE_LINK = `https://releases-win-test-orbita.s3.eu-central-1.amazonaws.com/${WIN_FOLDERSIZE_FILE}`;\r\n\r\nexport const BROWSER_ARCHIVE_NAME = `orbita-browser-latest{{orbita-version}}.${osPlatform === 'win32' ? 'zip' : 'tar.gz'}`;\r\nexport const MAC_BROWSER_LINK = `https://orbita-browser-mac.gologin.com/${BROWSER_ARCHIVE_NAME}`;\r\nexport const MAC_ARM_BROWSER_LINK = `https://orbita-browser-mac-arm.gologin.com/${BROWSER_ARCHIVE_NAME}`;\r\nexport const DEB_BROWSER_LINK = `https://orbita-browser-linux.gologin.com/${BROWSER_ARCHIVE_NAME}`;\r\nexport const WIN_BROWSER_LINK = `https://orbita-browser-windows.gologin.com/${BROWSER_ARCHIVE_NAME}`;\r\n\r\nexport const MAC_BROWSER_LINK_S3 = `https://releases-mac-orbita-multicore.s3.eu-central-1.amazonaws.com/${BROWSER_ARCHIVE_NAME}`;\r\nexport const MAC_ARM_BROWSER_LINK_S3 = `https://releases-mac-arm-orbita-multicore.s3.eu-central-1.amazonaws.com/${BROWSER_ARCHIVE_NAME}`;\r\nexport const DEB_BROWSER_LINK_S3 = `https://releases-deb-orbita-multicore.s3.eu-central-1.amazonaws.com/${BROWSER_ARCHIVE_NAME}`;\r\nexport const WIN_BROWSER_LINK_S3 = `https://releases-win-orbita-multicore.s3.eu-central-1.amazonaws.com/${BROWSER_ARCHIVE_NAME}`;\r\n\r\nexport const MAC_HASH_FILE = 'hashfile{{orbita-version}}.mtree';\r\nexport const MAC_ARM_HASH_FILE = 'hashfile{{orbita-version}}.mtree';\r\nexport const DEB_HASH_FILE = 'hashfile{{orbita-version}}.txt';\r\nexport const WIN_HASH_FILE = DEB_HASH_FILE;\r\n\r\nexport const MAC_HASHFILE_LINK = `https://orbita-browser-mac.gologin.com/${MAC_HASH_FILE}`;\r\nexport const MAC_ARM_HASHFILE_LINK = `https://orbita-browser-mac-arm.gologin.com/${MAC_HASH_FILE}`;\r\nexport const DEB_HASHFILE_LINK = `https://orbita-browser-linux.gologin.com/${DEB_HASH_FILE}`;\r\nexport const WIN_HASHFILE_LINK = `https://orbita-browser-windows.gologin.com/${WIN_HASH_FILE}`;\r\n\r\nexport const FAIL_SUM_MATCH_MESSAGE = 'hash_sum_not_matched';\r\nexport const EXTRACTED_FOLDER = 'extracted-browser';\r\n\r\nexport const EXTENSION_URL =\r\n  'https://clients2.google.com/service/update2/crx?response=redirect&acceptformat=crx2,crx3&x=id%3D{ext_id}%26uc&prodversion=97.0.4692.71';\r\n\r\nexport const AUTOMATION_EXTENSION_WEBSTORE_ID = 'ghlmiigebgipgagnhlanjmmniefbfihl';\r\nexport const AUTOMATION_EXTENSION_ID_FOR_URL = 'noojhfgdcbgojllibjadebdebajghmll';\r\n\r\nexport const TIMEZONE_CHECK_URL = 'https://geo.myip.link';\r\n\r\nexport const BROWSER_ICONS_SIZES_FOR_MAC = BROWSER_ICONS_CONSTANTS_FOR_MAC.browserIconsSizes;\r\nexport const BROWSER_ICONS_SIZES_FOR_WIN10 = BROWSER_ICONS_CONSTANTS_FOR_WIN_10.browserIconsSizes;\r\nexport const BROWSER_ICONS_SIZES_FOR_WIN11 = BROWSER_ICONS_CONSTANTS_FOR_WIN_11.browserIconsSizes;\r\nexport const STORAGE_KEY_PREFIX = '@gologin';\r\n\r\n// export const STORAGE_GATEWAY_BASE_URL = 'https://files-gateway-beta.gologin.com';\r\nexport const STORAGE_GATEWAY_BASE_URL = 'https://files-gateway.gologin.com';\r\n\r\n// export const STORAGE_GATEWAY_BASE_URL = 'http://0.0.0.0:80';\r\n\r\nexport const mainLocaleList = ['af', 'am', 'ar', 'as', 'az', 'be', 'bg', 'bn', 'bs', 'ca', 'cs', 'cy', 'da', 'de', 'el', 'en-GB',\r\n  'es-419', 'fr', 'fr-CA', 'gl', 'gu', 'he', 'hi', 'hr', 'hu', 'hy', 'id', 'is', 'it', 'ja', 'ka', 'kk', 'km', 'kn', 'ko', 'ky', 'lo', 'lt', 'lv',\r\n  'ml', 'mn', 'mr', 'ms', 'my', 'nb', 'ne', 'nl', 'or', 'pa', 'pl', 'pt-BR', 'pt-PT', 'ro', 'ru', 'si', 'sk', 'sl', 'sq', 'sr', 'sr-Latn', 'sv', 'sw',\r\n  'ta', 'te', 'th', 'tr', 'uk', 'ur', 'uz', 'vi', 'zh-CN', 'zh-HK', 'zh-TW', 'zu', 'es', 'en-US',  'mk',\r\n];\r\n","export const zeroProfilePreferences = {\r\n  'NewTabPage': {\r\n    'PrevNavigationTime': '13302807227669318',\r\n  },\r\n  'account_id_migration_state': 2,\r\n  'account_tracker_service_last_update': '13302807097942551',\r\n  'ack_existing_ntp_extensions': true,\r\n  'alternate_error_pages': {\r\n    'backup': true,\r\n  },\r\n  'apps': { },\r\n  'autocomplete': {\r\n    'retention_policy_last_version': 103,\r\n  },\r\n  'autofill': {\r\n    'orphan_rows_removed': true,\r\n  },\r\n  'bookmark_bar': {\r\n    'show_on_all_tabs': false,\r\n  },\r\n  'browser': {\r\n    'has_seen_welcome_page': false,\r\n    'window_placement': {\r\n      'bottom': 875,\r\n      'left': 22,\r\n      'maximized': false,\r\n      'right': 1222,\r\n      'top': 60,\r\n      'work_area_bottom': 897,\r\n      'work_area_left': 0,\r\n      'work_area_right': 1512,\r\n      'work_area_top': 38,\r\n    },\r\n  },\r\n  'countryid_at_install': 21077,\r\n  'custom_links': {\r\n    'initialized': true,\r\n    'list': [ {\r\n      'isMostVisited': false,\r\n      'title': 'Facebook',\r\n      'url': 'https://www.facebook.com/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'Google Ads',\r\n      'url': 'https://ads.google.com/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'TikTok',\r\n      'url': 'https://www.tiktok.com/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'Amazon',\r\n      'url': 'https://www.amazon.com/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'eBay',\r\n      'url': 'https://ebay.com/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'YouTube',\r\n      'url': 'https://www.youtube.com/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'Coinlist',\r\n      'url': 'https://coinlist.co/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'Huobi',\r\n      'url': 'https://www.huobi.com/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'bet365',\r\n      'url': 'https://www.bet365.com/',\r\n    }, {\r\n      'isMostVisited': false,\r\n      'title': 'PayPal',\r\n      'url': 'https://paypal.com/',\r\n    } ],\r\n  },\r\n  'default_apps_install_state': 3,\r\n  'domain_diversity': {\r\n    'last_reporting_timestamp': '13302807099119819',\r\n  },\r\n  'extensions': {\r\n    'alerts': {\r\n      'initialized': true,\r\n    },\r\n    'chrome_url_overrides': {\r\n    },\r\n    'last_chrome_version': '103.0.5060.53',\r\n    'settings': {},\r\n  },\r\n  'gaia_cookie': {\r\n    'changed_time': 1658333661.108506,\r\n    'hash': '2jmj7l5rSw0yVb/vlWAYkK/YBwk=',\r\n    'last_list_accounts_data': '[\"gaia.l.a.r\",[]]',\r\n  },\r\n  'gcm': {\r\n    'product_category_for_subtypes': 'com.orbita.macosx',\r\n  },\r\n  'google': {\r\n    'services': {\r\n      'signin_scoped_device_id': 'e8046704-b3cb-4533-8099-e2261bc1be67',\r\n    },\r\n  },\r\n  'intl': {\r\n    'selected_languages': 'en-US,en',\r\n  },\r\n  'invalidation': {\r\n    'per_sender_topics_to_handler': {\r\n      '1013309121859': {\r\n      },\r\n      '8181035976': {\r\n      },\r\n    },\r\n  },\r\n  'media': {\r\n    'device_id_salt': '',\r\n    'engagement': {\r\n      'schema_version': 5,\r\n    },\r\n  },\r\n  'media_router': {\r\n    'receiver_id_hash_token': '',\r\n  },\r\n  'ntp': {\r\n    'num_personal_suggestions': 1,\r\n  },\r\n  'optimization_guide': {\r\n    'previously_registered_optimization_types': {\r\n      'ABOUT_THIS_SITE': true,\r\n      'HISTORY_CLUSTERS': true,\r\n    },\r\n    'store_file_paths_to_delete': {\r\n    },\r\n  },\r\n  'plugins': {\r\n    'plugins_list': [  ],\r\n  },\r\n  'privacy_sandbox': {\r\n    'preferences_reconciled': true,\r\n  },\r\n  'profile': {\r\n    'avatar_bubble_tutorial_shown': 2,\r\n    'avatar_index': 26,\r\n    'content_settings': {\r\n      'enable_quiet_permission_ui_enabling_method': {\r\n        'notifications': 1,\r\n      },\r\n      'exceptions': {\r\n        'accessibility_events': {},\r\n        'app_banner': {},\r\n        'ar': {},\r\n        'auto_select_certificate': {},\r\n        'automatic_downloads': {},\r\n        'autoplay': {},\r\n        'background_sync': {},\r\n        'bluetooth_chooser_data': {},\r\n        'bluetooth_guard': {},\r\n        'bluetooth_scanning': {},\r\n        'camera_pan_tilt_zoom': {},\r\n        'client_hints': {},\r\n        'clipboard': {},\r\n        'cookies': {},\r\n        'durable_storage': {},\r\n        'fedcm_active_session': {},\r\n        'fedcm_share': {},\r\n        'file_system_access_chooser_data': {},\r\n        'file_system_last_picked_directory': {},\r\n        'file_system_read_guard': {},\r\n        'file_system_write_guard': {},\r\n        'formfill_metadata': {},\r\n        'geolocation': {},\r\n        'get_display_media_set_select_all_screens': {},\r\n        'hid_chooser_data': {},\r\n        'hid_guard': {},\r\n        'http_allowed': {},\r\n        'idle_detection': {},\r\n        'images': {},\r\n        'important_site_info': {},\r\n        'insecure_private_network': {},\r\n        'installed_web_app_metadata': {},\r\n        'intent_picker_auto_display': {},\r\n        'javascript': {},\r\n        'javascript_jit': {},\r\n        'legacy_cookie_access': {},\r\n        'local_fonts': {},\r\n        'media_engagement': {},\r\n        'media_stream_camera': {},\r\n        'media_stream_mic': {},\r\n        'midi_sysex': {},\r\n        'mixed_script': {},\r\n        'nfc_devices': {},\r\n        'notifications': {},\r\n        'password_protection': {},\r\n        'payment_handler': {},\r\n        'permission_autoblocking_data': {},\r\n        'permission_autorevocation_data': {},\r\n        'popups': {},\r\n        'ppapi_broker': {},\r\n        'protocol_handler': {},\r\n        'safe_browsing_url_check_data': {},\r\n        'sensors': {},\r\n        'serial_chooser_data': {},\r\n        'serial_guard': {},\r\n        'site_engagement': {},\r\n        'sound': {},\r\n        'ssl_cert_decisions': {},\r\n        'storage_access': {},\r\n        'subresource_filter': {},\r\n        'subresource_filter_data': {},\r\n        'usb_chooser_data': {},\r\n        'usb_guard': {},\r\n        'vr': {},\r\n        'webid_api': {},\r\n        'window_placement': {},\r\n      },\r\n      'pref_version': 1,\r\n    },\r\n    'created_by_version': '103.0.5060.53',\r\n    'creation_time': '13302807096310804',\r\n    'exit_type': 'Normal',\r\n    'last_engagement_time': '13302807261018135',\r\n    'last_time_password_store_metrics_reported': 1658333657.573382,\r\n    'managed_user_id': '',\r\n    'name': 'Person 1',\r\n    'password_account_storage_settings': {\r\n    },\r\n  },\r\n  'safebrowsing': {\r\n    'event_timestamps': {\r\n    },\r\n    'metrics_last_log_time': '13302807096',\r\n  },\r\n  'signin': {\r\n    'allowed': false,\r\n  },\r\n  'sync': {\r\n    'requested': false,\r\n  },\r\n  'translate_site_blacklist': [  ],\r\n  'translate_site_blacklist_with_time': {\r\n  },\r\n  'unified_consent': {\r\n    'migration_state': 10,\r\n  },\r\n  'web_apps': {\r\n    'system_web_app_failure_count': 0,\r\n    'system_web_app_last_attempted_language': 'en-US',\r\n    'system_web_app_last_attempted_update': '103.0.5060.53',\r\n    'system_web_app_last_installed_language': 'en-US',\r\n    'system_web_app_last_update': '103.0.5060.53',\r\n  },\r\n  'webauthn': {\r\n    'touchid': {\r\n      'metadata_secret': 'FAs08eDqvux1A4NYorVc4ZHDwnhqyLknX9ef3JS4DLg=',\r\n    },\r\n  },\r\n};\r\n","import path from 'path';\r\n\r\nimport { makeRequestWithFullResponse } from '../../electron/utils/make-request';\r\nimport { sendCommonErrorToSentry } from '../../electron/utils/sentry';\r\nimport { IExtMetadata } from '../interfaces/extension.manager.interfaces';\r\nimport { ITransactionObject } from '../interfaces/helper.functions.interfaces';\r\nimport { ExtensionsExtractor } from '../managers/utils/extensions-extractor';\r\nimport { CHROME_EXTENSIONS_PATH } from '../utils/path-platforms';\r\nimport withRetry from '../utils/with-retry';\r\n\r\nexport const getExtMetadata = (extUrl: string): Promise<void|IExtMetadata> => withRetry<IExtMetadata>({\r\n  fn() {\r\n    return makeRequestWithFullResponse({ url: extUrl, method: 'HEAD', retryLimit: 1 });\r\n  },\r\n  retryDelay: 300,\r\n}).catch((error: unknown) => {\r\n  const message = error instanceof Error ? error.message : error;\r\n  if (typeof message === 'string' && message.includes('404')) {\r\n    return;\r\n  }\r\n\r\n  sendCommonErrorToSentry({\r\n    message, transactionName: 'update-extension-get-last-version',\r\n    tags: [['scenario', 'update-extensions'], ['name', 'update-extension-get-last-version']],\r\n  });\r\n});\r\n\r\nexport const getExtVersion = (metadata: string): string => {\r\n  const [extFullName = ''] = metadata.split('/').reverse();\r\n  const [extName = ''] = extFullName.split('.');\r\n  const splitExtName = extName.split('_');\r\n  splitExtName.shift();\r\n\r\n  return splitExtName.join('_');\r\n};\r\n\r\nexport const composeExtractionPromises = (filteredArchives: string[], destPath = CHROME_EXTENSIONS_PATH): Promise<void>[] => (\r\n  filteredArchives.map((extArchivePath: string) => {\r\n    const [archiveName = ''] = extArchivePath.split(path.sep).reverse();\r\n    const [destFolder] = archiveName.split('.');\r\n\r\n    return ExtensionsExtractor.extractExtension(extArchivePath, path.join(destPath, destFolder))\r\n      .then(() => ExtensionsExtractor.deleteExtensionArchive(extArchivePath));\r\n  })\r\n);\r\n\r\nexport const sentryTransactionDefaultObject: ITransactionObject = {\r\n  startChild: () => ({\r\n    finish: () => void 0,\r\n    setStatus: () => void 0,\r\n  }),\r\n  setStatus: () => void 0,\r\n  setTag: () => void 0,\r\n  finish: () => void 0,\r\n};\r\n","import * as os from 'os';\r\nimport path from 'path';\r\n\r\nimport { BrowserWindow } from 'electron';\r\n\r\nimport {\r\n  getChromeMajorVersion,\r\n  getOldLocalOrbitaVersion,\r\n  getOrbitaDirNameByVersion,\r\n} from './utils/browser-checker.utils';\r\nimport { makeRequest } from '../../electron/utils/make-request';\r\nimport {\r\n  MAC_ORBITA_DIR_NAME,\r\n  PLATFORM as osPlatform,\r\n  BROWSER_FOLDER_NAME,\r\n  BROWSER_PATH,\r\n  getPathOs,\r\n} from '../../electron/utils/path-platforms';\r\nimport { sendCommonErrorToSentry, sendErrorToSentry } from '../../electron/utils/sentry';\r\nimport { copyFolder, removeFileOrFolder } from '../../electron/utils/utils';\r\nimport { STORAGE_KEY_PREFIX, VERSION_FILE } from '../constants/constants';\r\nimport { IOrbitaPath, IOrbitaReleasesList, IOrbitaWinCompatibilityData } from '../interfaces/browser-releases.interfaces';\r\nimport { getWinRelease } from '../utils/userOs';\r\nimport withRetry from '../utils/with-retry';\r\n\r\nconst { readdir, rm, readFile, mkdir } = require('fs').promises;\r\n\r\nconst DEFAULT_VERSION = '0.0.0';\r\nconst VERSION_TO_SAVE_FULL_VERSIONS_FROM = 119;\r\n\r\nexport class BrowserReleasesManager {\r\n  #osPaths = getPathOs();\r\n  #localOrbitaReleasesList: IOrbitaReleasesList = {};\r\n  #localOrbitaVersion = '';\r\n  #supportedOrbitaVersions: string[] = [];\r\n  static instance: any;\r\n  window: BrowserWindow|null = null;\r\n\r\n  constructor() {\r\n    if (!BrowserReleasesManager.instance) {\r\n      BrowserReleasesManager.instance = this;\r\n    }\r\n\r\n    return BrowserReleasesManager.instance;\r\n  }\r\n\r\n  #getSortedOrbitaVersions(): string[] {\r\n    return Object.keys(this.#localOrbitaReleasesList)\r\n      .map(version => Number(version))\r\n      .sort((a, b) => a - b)\r\n      .reverse()\r\n      .map(version => version.toString());\r\n  }\r\n\r\n  async getLocalOrbitaReleasesList(): Promise<void> {\r\n    const regex = new RegExp(`^(${BROWSER_FOLDER_NAME}|${BROWSER_FOLDER_NAME}-\\\\d{2,3})$`);\r\n\r\n    this.#localOrbitaReleasesList = (await readdir(BROWSER_PATH).catch(() => []))\r\n      .filter((el: string) => el.includes(MAC_ORBITA_DIR_NAME) || regex.test(el))\r\n      .reduce((res: IOrbitaReleasesList, val = '') => {\r\n        const chromeMajorVersionMatch = val.match(/-(\\d+$)/) || [];\r\n        const [_, chromeMajorVersion = '0'] = chromeMajorVersionMatch;\r\n        res[chromeMajorVersion] = val;\r\n\r\n        return res;\r\n      }, {} as IOrbitaReleasesList);\r\n\r\n    this.updateReleasesListInLocalStorage();\r\n  }\r\n\r\n  get localOrbitaReleasesList(): IOrbitaReleasesList {\r\n    return this.#localOrbitaReleasesList;\r\n  }\r\n\r\n  async getSupportedOrbitaVersions(API_BASE_URL = ''): Promise<string[]> {\r\n    if (this.#supportedOrbitaVersions.length || !API_BASE_URL) {\r\n      return this.#supportedOrbitaVersions;\r\n    }\r\n\r\n    return makeRequest<{ supportedOrbitaVersions: string[] }>({\r\n      url: `${API_BASE_URL}/gologin-global-settings/supported_orbita_versions`,\r\n      method: 'GET',\r\n      timeout: 30 * 1000,\r\n    }).then((res: { supportedOrbitaVersions: string[] }) => {\r\n      this.#supportedOrbitaVersions = res.supportedOrbitaVersions || [];\r\n\r\n      return this.#supportedOrbitaVersions;\r\n    }).catch(() => []);\r\n  }\r\n\r\n  async checkLocalOrbitaReleases(): Promise<void> {\r\n    await this.getLocalOrbitaReleasesList();\r\n    const orbitaDirName = osPlatform === 'darwin' ? MAC_ORBITA_DIR_NAME : BROWSER_FOLDER_NAME;\r\n\r\n    if (!this.#localOrbitaReleasesList['0']) {\r\n      return;\r\n    }\r\n\r\n    const localOrbitaVersion = (await getOldLocalOrbitaVersion()) || '';\r\n    const chromeMajorVersion = getChromeMajorVersion(localOrbitaVersion);\r\n    const newOrbitaDirName = getOrbitaDirNameByVersion(chromeMajorVersion);\r\n\r\n    let sourcePath = path.join(BROWSER_PATH, orbitaDirName);\r\n    if (osPlatform === 'darwin') {\r\n      sourcePath = BROWSER_PATH;\r\n      await mkdir(path.join(sourcePath, newOrbitaDirName)).catch(() => null);\r\n    }\r\n\r\n    return withRetry({\r\n      fn() {\r\n        if (osPlatform === 'darwin') {\r\n          return readdir(sourcePath)\r\n            .then((files: string[]) => Promise.all(files.map((file) => {\r\n              if (file.includes('dylib') || file.includes('version') || file.includes(MAC_ORBITA_DIR_NAME)) {\r\n                return copyFolder(path.join(sourcePath, file), path.join(sourcePath, newOrbitaDirName, file));\r\n              }\r\n\r\n              return null;\r\n            })))\r\n            .then(() => readdir(sourcePath))\r\n            .then((files: string[]) => Promise.all(files.map((file) => {\r\n              if (file.includes(BROWSER_FOLDER_NAME)) {\r\n                return null;\r\n              }\r\n\r\n              return removeFileOrFolder(path.join(sourcePath, file));\r\n            })));\r\n        }\r\n\r\n        return copyFolder(sourcePath, path.join(BROWSER_PATH, newOrbitaDirName));\r\n      },\r\n    })\r\n      .then(() => {\r\n        if (osPlatform === 'darwin') {\r\n          return null;\r\n        }\r\n\r\n        return rm(path.join(BROWSER_PATH, BROWSER_FOLDER_NAME), { recursive: true, maxRetries: 5, retryDelay: 300 });\r\n      })\r\n      .then(() => this.getLocalOrbitaReleasesList())\r\n      .catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendCommonErrorToSentry({\r\n          message, transactionName: 'check-downloaded-orbita-versions',\r\n          tags: [['scenario', 'check-multicore'], ['name', 'check-downloaded-orbita-versions']],\r\n        });\r\n      });\r\n  }\r\n\r\n  async getLocalOrbitaVersionByPath(browserPath = '', forSentry = false): Promise<string> {\r\n    if (forSentry && this.#localOrbitaVersion) {\r\n      return this.#localOrbitaVersion;\r\n    }\r\n\r\n    const localBrowsers = Object.keys(this.#localOrbitaReleasesList);\r\n    if (!localBrowsers.length) {\r\n      return DEFAULT_VERSION;\r\n    }\r\n\r\n    let formattedBrowserPath = browserPath;\r\n    if (!formattedBrowserPath) {\r\n      const [newestOrbita] = this.#getSortedOrbitaVersions();\r\n      const orbitaFolderPath = this.#localOrbitaReleasesList[newestOrbita];\r\n      formattedBrowserPath = path.join(this.#osPaths.BROWSER_BASE_PATH, orbitaFolderPath);\r\n    }\r\n\r\n    let versionFilePath = path.join(formattedBrowserPath, 'version');\r\n    if (osPlatform === 'darwin') {\r\n      versionFilePath = path.join(formattedBrowserPath, 'version', VERSION_FILE);\r\n    }\r\n\r\n    return readFile(versionFilePath, { encoding: 'utf-8' })\r\n      .then((res: string) => {\r\n        this.#localOrbitaVersion = res;\r\n\r\n        return res;\r\n      })\r\n      .catch(() => DEFAULT_VERSION);\r\n  }\r\n\r\n  getOrbitaPathToStart(majorVer = ''): IOrbitaPath {\r\n    const localBrowsers = this.#getSortedOrbitaVersions();\r\n    if (!localBrowsers.length) {\r\n      throw new Error('No installed Orbita');\r\n    }\r\n\r\n    let pickedMajorVer = majorVer;\r\n    let orbitaFolderPath = this.#localOrbitaReleasesList[pickedMajorVer];\r\n    if (!orbitaFolderPath) {\r\n      [pickedMajorVer] = this.#getSortedOrbitaVersions();\r\n\r\n      orbitaFolderPath = this.#localOrbitaReleasesList[pickedMajorVer];\r\n    }\r\n\r\n    return {\r\n      pathToLaunch: path.join(this.#osPaths.BROWSER_BASE_PATH, orbitaFolderPath, ...this.#osPaths.BROWSER_EXEC_FILE_NAME),\r\n      browserWorkingDir: path.join(this.#osPaths.BROWSER_BASE_PATH, orbitaFolderPath),\r\n      pickedMajorVer,\r\n    };\r\n  }\r\n\r\n  getMajorVersionByUA(ua = ''): string {\r\n    const chromeVersionMatch = ua.match(/[\\s\\S\\w]+Chrome\\/(\\d+)/) || [];\r\n    if (!chromeVersionMatch) {\r\n      return '';\r\n    }\r\n\r\n    const [_, version = ''] = chromeVersionMatch;\r\n\r\n    if (version === '100') {\r\n      return '10';\r\n    }\r\n\r\n    if (version === '103') {\r\n      return '13';\r\n    }\r\n\r\n    return version;\r\n  }\r\n\r\n  getOrbitaVersionToDownload({ key, value }: IOrbitaWinCompatibilityData): string {\r\n    let uaMajorVersion = key === 'userAgent' ? this.getMajorVersionByUA(value) : value;\r\n\r\n    const isVersionCompatible = this.checkOrbitaWinCompatible({ key, value });\r\n    const hasLocalOrbita = this.#localOrbitaReleasesList[uaMajorVersion];\r\n    const hasSupportedVersions = this.#supportedOrbitaVersions.includes(uaMajorVersion);\r\n    if (!(isVersionCompatible && uaMajorVersion && hasSupportedVersions) || hasLocalOrbita) {\r\n      return '';\r\n    }\r\n\r\n    if (uaMajorVersion === '10') {\r\n      uaMajorVersion = '100';\r\n    }\r\n\r\n    if (uaMajorVersion === '13') {\r\n      uaMajorVersion = '103';\r\n    }\r\n\r\n    return uaMajorVersion.toString();\r\n  }\r\n\r\n  checkOrbitaWinCompatible({ key, value, ProfileStatusManagerInst }: IOrbitaWinCompatibilityData): boolean {\r\n    if (os.platform() !== 'win32') {\r\n      return true;\r\n    }\r\n\r\n    let releaseVersionRaw: string | number = value || 'latest';\r\n    if (key === 'userAgent') {\r\n      const majorChromeVersion = this.getMajorVersionByUA(value);\r\n      const { pathToLaunch } = this.getOrbitaPathToStart(majorChromeVersion);\r\n\r\n      const orbitaVersion = pathToLaunch.match(/orbita-browser-(\\d+)/) || [];\r\n      releaseVersionRaw = orbitaVersion[1] || '110';\r\n    }\r\n\r\n    const releaseVersion = +releaseVersionRaw;\r\n    if (+releaseVersion < 110) {\r\n      return true;\r\n    }\r\n\r\n    const winVersion = +getWinRelease();\r\n    if (winVersion < 10) {\r\n      ProfileStatusManagerInst && ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profileStatusMessages.windowsVersionNotSupported',\r\n      });\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  checkOrbitasAvailable(orbitasMajorVersions: number[]): number[] {\r\n    let orbitasVersionsAvailable = orbitasMajorVersions;\r\n    const orbitasDownloadedLocally = Object.keys(this.#localOrbitaReleasesList).map(Number);\r\n    orbitasVersionsAvailable = orbitasVersionsAvailable.filter((version) => orbitasDownloadedLocally.includes(version));\r\n    if (os.platform() !== 'win32') {\r\n      return orbitasVersionsAvailable;\r\n    }\r\n\r\n    const winVersion = +getWinRelease();\r\n    if (winVersion < 10) {\r\n      return orbitasVersionsAvailable.filter((version) => version <= 109);\r\n    }\r\n\r\n    return orbitasVersionsAvailable;\r\n  }\r\n\r\n  async updateVersionFullInLocalStorage(window: BrowserWindow, localBrowsers: string[]): Promise<void> {\r\n    const localBrowserReleases = this.localOrbitaReleasesList;\r\n    const localBrowsersToCheckVersionsFull = localBrowsers.filter(versionMajor => Number(versionMajor) >= VERSION_TO_SAVE_FULL_VERSIONS_FROM);\r\n    const versionsFullForSquareIconsPromises = localBrowsersToCheckVersionsFull.map((versionMajor) => {\r\n      const currentOrbitaPath = localBrowserReleases[versionMajor];\r\n      const baseOrbitaPath = path.join(BROWSER_PATH, currentOrbitaPath);\r\n\r\n      return this.getLocalOrbitaVersionByPath(baseOrbitaPath);\r\n    });\r\n\r\n    const versionsFullForSquareIconsSettled = await Promise.allSettled(versionsFullForSquareIconsPromises);\r\n    const versionsFullForSquareIcons = versionsFullForSquareIconsSettled.map((result) => {\r\n      if (result.status === 'rejected') {\r\n        return null;\r\n      }\r\n\r\n      return result.value;\r\n    }).filter(Boolean).join(',');\r\n\r\n    return window.webContents.executeJavaScript(`\r\n      localStorage.setItem('${STORAGE_KEY_PREFIX}:browsersVersionsFull', '${versionsFullForSquareIcons}');\r\n    `).catch(console.error);\r\n  }\r\n\r\n  async updateReleasesListInLocalStorage(window?: BrowserWindow): Promise<void> {\r\n    const localBrowsers = this.#getSortedOrbitaVersions();\r\n    let browserWindow = this.window;\r\n    if (window) {\r\n      browserWindow = window;\r\n      this.window = window;\r\n    }\r\n\r\n    if (!browserWindow) {\r\n      return;\r\n    }\r\n\r\n    const versionsMajorPromise = browserWindow.webContents.executeJavaScript(`\r\n      localStorage.setItem('${STORAGE_KEY_PREFIX}:browsersLocal', '${localBrowsers.join(',')}');\r\n    `).catch(console.error);\r\n\r\n    const versionFullPromise = this.updateVersionFullInLocalStorage(browserWindow, localBrowsers);\r\n    await Promise.allSettled([versionsMajorPromise, versionFullPromise]);\r\n  }\r\n}\r\n","export default [\r\n  {\r\n    name: 'AIGDT',\r\n    value: 'AIGDT',\r\n    fileNames: ['aigdt.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'AMGDT',\r\n    value: 'AMGDT',\r\n    fileNames: ['amgdt.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Abadi MT Condensed Light',\r\n    value: 'Abadi MT Condensed Light',\r\n  },\r\n  {\r\n    name: 'Abyssinica Sil Regular',\r\n    value: 'Abyssinica Sil Regular',\r\n    fileNames: ['abyssinica_sil.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Academy Engraved LET',\r\n    value: 'Academy Engraved LET',\r\n  },\r\n  {\r\n    name: 'AcadEref',\r\n    value: 'AcadEref',\r\n    fileNames: ['acaderef.ttf'],\r\n  },\r\n  {\r\n    name: 'Adobe Arabic',\r\n    value: 'Adobe Arabic',\r\n  },\r\n  {\r\n    name: 'Adobe Caslon Pro',\r\n    value: 'Adobe Caslon Pro',\r\n  },\r\n  {\r\n    name: 'Adobe Caslon Pro Bold',\r\n    value: 'Adobe Caslon Pro Bold',\r\n  },\r\n  {\r\n    name: 'Adobe Devanagari',\r\n    value: 'Adobe Devanagari',\r\n  },\r\n  {\r\n    name: 'Adobe Fan Heiti Std B',\r\n    value: 'Adobe Fan Heiti Std B',\r\n  },\r\n  {\r\n    name: 'Adobe Fangsong Std R',\r\n    value: 'Adobe Fangsong Std R',\r\n  },\r\n  {\r\n    name: 'Adobe Garamond Pro',\r\n    value: 'Adobe Garamond Pro',\r\n  },\r\n  {\r\n    name: 'Adobe Garamond Pro Bold',\r\n    value: 'Adobe Garamond Pro Bold',\r\n  },\r\n  {\r\n    name: 'Adobe Gothic Std B',\r\n    value: 'Adobe Gothic Std B',\r\n  },\r\n  {\r\n    name: 'Adobe Hebrew',\r\n    value: 'Adobe Hebrew',\r\n  },\r\n  {\r\n    name: 'Adobe Heiti Std R',\r\n    value: 'Adobe Heiti Std R',\r\n  },\r\n  {\r\n    name: 'Adobe Kaiti Std R',\r\n    value: 'Adobe Kaiti Std R',\r\n  },\r\n  {\r\n    name: 'Adobe Ming Std L',\r\n    value: 'Adobe Ming Std L',\r\n  },\r\n  {\r\n    name: 'Adobe Myungjo Std M',\r\n    value: 'Adobe Myungjo Std M',\r\n  },\r\n  {\r\n    name: 'Adobe Naskh Medium',\r\n    value: 'Adobe Naskh Medium',\r\n  },\r\n  {\r\n    name: 'Adobe Song Std L',\r\n    value: 'Adobe Song Std L',\r\n  },\r\n  {\r\n    name: 'Agency FB',\r\n    value: 'Agency FB',\r\n  },\r\n  {\r\n    name: 'Aharoni',\r\n    value: 'Aharoni',\r\n  },\r\n  {\r\n    name: 'Albertus Medium',\r\n    value: 'Albertus Medium',\r\n  },\r\n  {\r\n    name: 'Alef',\r\n    value: 'Alef',\r\n    fileNames: ['alef_regular.ttf', 'alef_bold.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Alexandra Script',\r\n    value: 'Alexandra Script',\r\n    fileNames: ['alexandra_script.ttf'],\r\n  },\r\n  {\r\n    name: 'Algerian',\r\n    value: 'Algerian',\r\n  },\r\n  {\r\n    name: 'Amadeus',\r\n    value: 'Amadeus',\r\n    fileNames: ['amadeus_regular.ttf'],\r\n  },\r\n  {\r\n    name: 'Amazone BT',\r\n    value: 'Amazone BT',\r\n  },\r\n  {\r\n    name: 'AmdtSymbols',\r\n    value: 'AmdtSymbols',\r\n    fileNames: ['amdtsymbols_regular.ttf'],\r\n  },\r\n  {\r\n    name: 'AmerType Md BT',\r\n    value: 'AmerType Md BT',\r\n  },\r\n  {\r\n    name: 'American Typewriter',\r\n    value: 'American Typewriter',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Amiri',\r\n    value: 'Amiri',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'AnastasiaScript',\r\n    value: 'AnastasiaScript',\r\n  },\r\n  {\r\n    name: 'Andale Mono',\r\n    value: 'Andale Mono',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Andalus',\r\n    value: 'Andalus',\r\n  },\r\n  {\r\n    name: 'Angsana New',\r\n    value: 'Angsana New',\r\n  },\r\n  {\r\n    name: 'AngsanaUPC',\r\n    value: 'AngsanaUPC',\r\n  },\r\n  {\r\n    name: 'Ani',\r\n    value: 'Ani',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'AnjaliOldLipi',\r\n    value: 'AnjaliOldLipi',\r\n    fileNames: ['anjalioldlipi.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Annabelle',\r\n    value: 'Annabelle',\r\n    fileNames: ['annabelle.ttf'],\r\n  },\r\n  {\r\n    name: 'Antique Olive',\r\n    value: 'Antique Olive',\r\n  },\r\n  {\r\n    name: 'Aparajita',\r\n    value: 'Aparajita',\r\n  },\r\n  {\r\n    name: 'Apple Braille',\r\n    value: 'Apple Braille',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Apple Chancery',\r\n    value: 'Apple Chancery',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Apple Color Emoji',\r\n    value: 'Apple Color Emoji',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Apple SD Gothic Neo',\r\n    value: 'Apple SD Gothic Neo',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Apple Symbols',\r\n    value: 'Apple Symbols',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'AppleGothic',\r\n    value: 'AppleGothic',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'AppleMyungjo',\r\n    value: 'AppleMyungjo',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Arabic Transparent',\r\n    value: 'Arabic Transparent',\r\n  },\r\n  {\r\n    name: 'Arabic Typesetting',\r\n    value: 'Arabic Typesetting',\r\n  },\r\n  {\r\n    name: 'Arial',\r\n    value: 'Arial',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial Baltic',\r\n    value: 'Arial Baltic',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial Black',\r\n    value: 'Arial Black',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial CE',\r\n    value: 'Arial CE',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial Cyr',\r\n    value: 'Arial Cyr',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial Greek',\r\n    value: 'Arial Greek',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial Hebrew',\r\n    value: 'Arial Hebrew',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial MT',\r\n    value: 'Arial MT',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial Narrow',\r\n    value: 'Arial Narrow',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial Rounded MT Bold',\r\n    value: 'Arial Rounded MT Bold',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial TUR',\r\n    value: 'Arial TUR',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Arial Unicode MS',\r\n    value: 'Arial Unicode MS',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Ariston',\r\n    value: 'Ariston',\r\n    fileNames: ['ariston.ttf'],\r\n  },\r\n  {\r\n    name: 'Arno Pro',\r\n    value: 'Arno Pro',\r\n  },\r\n  {\r\n    name: 'Arno Pro Caption',\r\n    value: 'Arno Pro Caption',\r\n  },\r\n  {\r\n    name: 'Arno Pro Display',\r\n    value: 'Arno Pro Display',\r\n  },\r\n  {\r\n    name: 'Arno Pro Light Display',\r\n    value: 'Arno Pro Light Display',\r\n  },\r\n  {\r\n    name: 'Arno Pro SmText',\r\n    value: 'Arno Pro SmText',\r\n  },\r\n  {\r\n    name: 'Arno Pro Smbd',\r\n    value: 'Arno Pro Smbd',\r\n  },\r\n  {\r\n    name: 'Arno Pro Smbd Caption',\r\n    value: 'Arno Pro Smbd Caption',\r\n  },\r\n  {\r\n    name: 'Arno Pro Smbd Display',\r\n    value: 'Arno Pro Smbd Display',\r\n  },\r\n  {\r\n    name: 'Arno Pro Smbd SmText',\r\n    value: 'Arno Pro Smbd SmText',\r\n  },\r\n  {\r\n    name: 'Arno Pro Smbd Subhead',\r\n    value: 'Arno Pro Smbd Subhead',\r\n  },\r\n  {\r\n    name: 'Arno Pro Subhead',\r\n    value: 'Arno Pro Subhead',\r\n  },\r\n  {\r\n    name: 'Arrus BT',\r\n    value: 'Arrus BT',\r\n  },\r\n  {\r\n    name: 'Athelas',\r\n    value: 'Athelas',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Aurora Cn BT',\r\n    value: 'Aurora Cn BT',\r\n  },\r\n  {\r\n    name: 'AvantGarde Bk BT',\r\n    value: 'AvantGarde Bk BT',\r\n  },\r\n  {\r\n    name: 'AvantGarde Md BT',\r\n    value: 'AvantGarde Md BT',\r\n  },\r\n  {\r\n    name: 'Avenir',\r\n    value: 'Avenir',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Avenir Next',\r\n    value: 'Avenir Next',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Avenir Next Condensed',\r\n    value: 'Avenir Next Condensed',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Ayuthaya',\r\n    value: 'Ayuthaya',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Baghdad',\r\n    value: 'Baghdad',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bangla MN',\r\n    value: 'Bangla MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bangla Sangam MN',\r\n    value: 'Bangla Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bank Gothic',\r\n    value: 'Bank Gothic',\r\n  },\r\n  {\r\n    name: 'BankGothic Lt BT',\r\n    value: 'BankGothic Lt BT',\r\n  },\r\n  {\r\n    name: 'BankGothic Md BT',\r\n    value: 'BankGothic Md BT',\r\n  },\r\n  {\r\n    name: 'Baskerville',\r\n    value: 'Baskerville',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Baskerville Old Face',\r\n    value: 'Baskerville Old Face',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Batang',\r\n    value: 'Batang',\r\n  },\r\n  {\r\n    name: 'BatangChe',\r\n    value: 'BatangChe',\r\n  },\r\n  {\r\n    name: 'Bauhaus 93',\r\n    value: 'Bauhaus 93',\r\n  },\r\n  {\r\n    name: 'Bazooka',\r\n    value: 'Bazooka',\r\n  },\r\n  {\r\n    name: 'Beirut',\r\n    value: 'Beirut',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bell Gothic Std Black',\r\n    value: 'Bell Gothic Std Black',\r\n    fileNames: ['bell_gothic_std_black.otf'],\r\n  },\r\n  {\r\n    name: 'Bell Gothic Std Light',\r\n    value: 'Bell Gothic Std Light',\r\n    fileNames: ['bell_gothic_std_light.otf'],\r\n  },\r\n  {\r\n    name: 'Bell MT',\r\n    value: 'Bell MT',\r\n  },\r\n  {\r\n    name: 'Benguiat Bk BT',\r\n    value: 'Benguiat Bk BT',\r\n  },\r\n  {\r\n    name: 'Berlin Sans FB',\r\n    value: 'Berlin Sans FB',\r\n  },\r\n  {\r\n    name: 'Berlin Sans FB Demi',\r\n    value: 'Berlin Sans FB Demi',\r\n  },\r\n  {\r\n    name: 'Bernard MT Condensed',\r\n    value: 'Bernard MT Condensed',\r\n  },\r\n  {\r\n    name: 'BernhardFashion BT',\r\n    value: 'BernhardFashion BT',\r\n  },\r\n  {\r\n    name: 'BernhardMod BT',\r\n    value: 'BernhardMod BT',\r\n  },\r\n  {\r\n    name: 'Bickham Script One',\r\n    value: 'Bickham Script One',\r\n    fileNames: ['bickham_script_one.ttf'],\r\n  },\r\n  {\r\n    name: 'Bickham Script Pro Regular',\r\n    value: 'Bickham Script Pro Regular',\r\n  },\r\n  {\r\n    name: 'Bickham Script Pro Semibold',\r\n    value: 'Bickham Script Pro Semibold',\r\n  },\r\n  {\r\n    name: 'Bickham Script Two',\r\n    value: 'Bickham Script Two',\r\n  },\r\n  {\r\n    name: 'Big Caslon',\r\n    value: 'Big Caslon',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Birch Std',\r\n    value: 'Birch Std',\r\n  },\r\n  {\r\n    name: 'BinnerD',\r\n    value: 'BinnerD',\r\n  },\r\n  {\r\n    name: 'Bitstream Vera Sans Mono',\r\n    value: 'Bitstream Vera Sans Mono',\r\n  },\r\n  {\r\n    name: 'Blackadder ITC',\r\n    value: 'Blackadder ITC',\r\n  },\r\n  {\r\n    name: 'Blackoak Std',\r\n    value: 'Blackoak Std',\r\n  },\r\n  {\r\n    name: 'BlairMdITC TT',\r\n    value: 'BlairMdITC TT',\r\n  },\r\n  {\r\n    name: 'Bodoni 72',\r\n    value: 'Bodoni 72',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bodoni 72 Oldstyle',\r\n    value: 'Bodoni 72 Oldstyle',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bodoni 72 Smallcaps',\r\n    value: 'Bodoni 72 Smallcaps',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bodoni MT',\r\n    value: 'Bodoni MT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bodoni MT Black',\r\n    value: 'Bodoni MT Black',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bodoni MT Condensed',\r\n    value: 'Bodoni MT Condensed',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Bodoni MT Poster Compressed',\r\n    value: 'Bodoni MT Poster Compressed',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Book Antiqua',\r\n    value: 'Book Antiqua',\r\n  },\r\n  {\r\n    name: 'Bookman Old Style',\r\n    value: 'Bookman Old Style',\r\n  },\r\n  {\r\n    name: 'Bookshelf Symbol 7',\r\n    value: 'Bookshelf Symbol 7',\r\n  },\r\n  {\r\n    name: 'Boulder',\r\n    value: 'Boulder',\r\n  },\r\n  {\r\n    name: 'Bradley Hand',\r\n    value: 'Bradley Hand',\r\n  },\r\n  {\r\n    name: 'Bradley Hand ITC',\r\n    value: 'Bradley Hand ITC',\r\n  },\r\n  {\r\n    name: 'Bremen Bd BT',\r\n    value: 'Bremen Bd BT',\r\n  },\r\n  {\r\n    name: 'Britannic Bold',\r\n    value: 'Britannic Bold',\r\n  },\r\n  {\r\n    name: 'Broadway',\r\n    value: 'Broadway',\r\n  },\r\n  {\r\n    name: 'Browallia New',\r\n    value: 'Browallia New',\r\n  },\r\n  {\r\n    name: 'BrowalliaUPC',\r\n    value: 'BrowalliaUPC',\r\n  },\r\n  {\r\n    name: 'Brush Script MT',\r\n    value: 'Brush Script MT',\r\n  },\r\n  {\r\n    name: 'Brush Script Std',\r\n    value: 'Brush Script Std',\r\n  },\r\n  {\r\n    name: 'CG Omega',\r\n    value: 'CG Omega',\r\n  },\r\n  {\r\n    name: 'CG Times',\r\n    value: 'CG Times',\r\n  },\r\n  {\r\n    name: 'Caladea',\r\n    value: 'Caladea',\r\n    fileNames: ['caladea_bold.ttf', 'caladea_bold_italic.ttf', 'caladea-italic.ttf', 'caladea_regular.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Calibri',\r\n    value: 'Calibri',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Calibri Light',\r\n    value: 'Calibri Light',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Californian FB',\r\n    value: 'Californian FB',\r\n  },\r\n  {\r\n    name: 'Calisto MT',\r\n    value: 'Calisto MT',\r\n  },\r\n  {\r\n    name: 'Calligraph',\r\n    value: 'Calligraph',\r\n  },\r\n  {\r\n    name: 'Calligrapher',\r\n    value: 'Calligrapher',\r\n  },\r\n  {\r\n    name: 'Cambria',\r\n    value: 'Cambria',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Cambria Math',\r\n    value: 'Cambria Math',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Candara',\r\n    value: 'Candara',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Carrois Gothic SC',\r\n    value: 'Carrois Gothic SC',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Carolina',\r\n    value: 'Carolina',\r\n  },\r\n  {\r\n    name: 'CaslonOpnface BT',\r\n    value: 'CaslonOpnface BT',\r\n  },\r\n  {\r\n    name: 'Castellar',\r\n    value: 'Castellar',\r\n  },\r\n  {\r\n    name: 'Centaur',\r\n    value: 'Centaur',\r\n  },\r\n  {\r\n    name: 'Century',\r\n    value: 'Century',\r\n  },\r\n  {\r\n    name: 'Century Gothic',\r\n    value: 'Century Gothic',\r\n  },\r\n  {\r\n    name: 'Century Schoolbook',\r\n    value: 'Century Schoolbook',\r\n  },\r\n  {\r\n    name: 'Ceremonious Two',\r\n    value: 'Ceremonious Two',\r\n    fileNames: ['ceremonious_two.ttf'],\r\n  },\r\n  {\r\n    name: 'Cezanne',\r\n    value: 'Cezanne',\r\n  },\r\n  {\r\n    name: 'Chalkboard',\r\n    value: 'Chalkboard',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Chalkboard SE',\r\n    value: 'Chalkboard SE',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Chalkduster',\r\n    value: 'Chalkduster',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Chandas',\r\n    value: 'Chandas',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Chaparral Pro',\r\n    value: 'Chaparral Pro',\r\n  },\r\n  {\r\n    name: 'Chaparral Pro Light',\r\n    value: 'Chaparral Pro Light',\r\n  },\r\n  {\r\n    name: 'Charlemagne Std',\r\n    value: 'Charlemagne Std',\r\n  },\r\n  {\r\n    name: 'Charlesworth',\r\n    value: 'Charlesworth',\r\n  },\r\n  {\r\n    name: 'Charter',\r\n    value: 'Charter',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Charter BT',\r\n    value: 'Charter BT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Charter Bd BT',\r\n    value: 'Charter Bd BT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Chaucer',\r\n    value: 'Chaucer',\r\n  },\r\n  {\r\n    name: 'ChelthmITC Bk BT',\r\n    value: 'ChelthmITC Bk BT',\r\n  },\r\n  {\r\n    name: 'Chilanka',\r\n    value: 'Chilanka',\r\n    fileNames: ['chilanka_regular.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Chiller',\r\n    value: 'Chiller',\r\n  },\r\n  {\r\n    name: 'CityBlueprint',\r\n    value: 'CityBlueprint',\r\n  },\r\n  {\r\n    name: 'Clarendon',\r\n    value: 'Clarendon',\r\n  },\r\n  {\r\n    name: 'Clarendon BT',\r\n    value: 'Clarendon BT',\r\n  },\r\n  {\r\n    name: 'Clarendon Blk BT',\r\n    value: 'Clarendon Blk BT',\r\n  },\r\n  {\r\n    name: 'Clarendon Condensed',\r\n    value: 'Clarendon Condensed',\r\n  },\r\n  {\r\n    name: 'Clarendon Lt BT',\r\n    value: 'Clarendon Lt BT',\r\n  },\r\n  {\r\n    name: 'CloisterBlack BT',\r\n    value: 'CloisterBlack BT',\r\n  },\r\n  {\r\n    name: 'Cochin',\r\n    value: 'Cochin',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Collapse',\r\n    value: 'Collapse',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Colonna MT',\r\n    value: 'Colonna MT',\r\n  },\r\n  {\r\n    name: 'Comic Sans MS',\r\n    value: 'Comic Sans MS',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'CommercialPi BT',\r\n    value: 'CommercialPi BT',\r\n  },\r\n  {\r\n    name: 'CommercialScript BT',\r\n    value: 'CommercialScript BT',\r\n  },\r\n  {\r\n    name: 'Complex',\r\n    value: 'Complex',\r\n  },\r\n  {\r\n    name: 'Consolas',\r\n    value: 'Consolas',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Constantia',\r\n    value: 'Constantia',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Cooper Black',\r\n    value: 'Cooper Black',\r\n  },\r\n  {\r\n    name: 'Cooper Std Black',\r\n    value: 'Cooper Std Black',\r\n  },\r\n  {\r\n    name: 'Copperplate',\r\n    value: 'Copperplate',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Copperplate Gothic',\r\n    value: 'Copperplate Gothic',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Copperplate Gothic Bold',\r\n    value: 'Copperplate Gothic Bold',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Copperplate Gothic Light',\r\n    value: 'Copperplate Gothic Light',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Copyist',\r\n    value: 'Copyist',\r\n  },\r\n  {\r\n    name: 'Corbel',\r\n    value: 'Corbel',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Cordia New',\r\n    value: 'Cordia New',\r\n  },\r\n  {\r\n    name: 'CordiaUPC',\r\n    value: 'CordiaUPC',\r\n  },\r\n  {\r\n    name: 'Coronet',\r\n    value: 'Coronet',\r\n  },\r\n  {\r\n    name: 'CountryBlueprint',\r\n    value: 'CountryBlueprint',\r\n  },\r\n  {\r\n    name: 'Corsiva Hebrew',\r\n    value: 'Corsiva Hebrew',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Courier',\r\n    value: 'Courier',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Courier New',\r\n    value: 'Courier New',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Courier New Baltic',\r\n    value: 'Courier New Baltic',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Courier New CE',\r\n    value: 'Courier New CE',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Courier New Cyr',\r\n    value: 'Courier New Cyr',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Courier New Greek',\r\n    value: 'Courier New Greek',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Courier New TUR',\r\n    value: 'Courier New TUR',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Curlz MT',\r\n    value: 'Curlz MT',\r\n  },\r\n  {\r\n    name: 'DFKai-SB',\r\n    value: 'DFKai-SB',\r\n  },\r\n  {\r\n    name: 'DIN Alternate',\r\n    value: 'DIN Alternate',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'DIN Condensed',\r\n    value: 'DIN Condensed',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Damascus',\r\n    value: 'Damascus',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Dancing Script',\r\n    value: 'Dancing Script',\r\n    fileNames: [\r\n      'dancing_script_bold.ttf', 'dancing_script_medium.ttf', 'dancing_script_regular.ttf',\r\n      'dancing_script_semibold.ttf',\r\n    ],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'DaunPenh',\r\n    value: 'DaunPenh',\r\n  },\r\n  {\r\n    name: 'Dauphin',\r\n    value: 'Dauphin',\r\n  },\r\n  {\r\n    name: 'David',\r\n    value: 'David',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'David CLM',\r\n    value: 'David',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'David Libre',\r\n    value: 'David Libre',\r\n    fileNames: ['david_libre_bold.ttf', 'david_libre_medium.ttf', 'david_libre_regular.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Decor',\r\n    value: 'Decor',\r\n  },\r\n  {\r\n    name: 'DejaVu Sans',\r\n    value: 'DejaVu Sans',\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'DejaVu Sans Condensed',\r\n    value: 'DejaVu Sans Condensed',\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'DejaVu Sans Light',\r\n    value: 'DejaVu Sans Light',\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'DejaVu Sans Mono',\r\n    value: 'DejaVu Sans Mono',\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'DejaVu Serif',\r\n    value: 'DejaVu Serif',\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'DejaVu Serif Condensed',\r\n    value: 'DejaVu Serif Condensed',\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Devanagari MT',\r\n    value: 'Devanagari MT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Devanagari Sangam MN',\r\n    value: 'Devanagari Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Didot',\r\n    value: 'Didot',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'DilleniaUPC',\r\n    value: 'DilleniaUPC',\r\n  },\r\n  {\r\n    name: 'Diwan Kufi',\r\n    value: 'Diwan Kufi',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Diwan Thuluth',\r\n    value: 'Diwan Thuluth',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'DokChampa',\r\n    value: 'DokChampa',\r\n  },\r\n  {\r\n    name: 'Dotum',\r\n    value: 'Dotum',\r\n  },\r\n  {\r\n    name: 'DotumChe',\r\n    value: 'DotumChe',\r\n  },\r\n  {\r\n    name: 'Droid Sans',\r\n    value: 'Droid Sans',\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Droid Sans Mono',\r\n    value: 'Droid Sans Mono',\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Dutch801 Rm BT',\r\n    value: 'Dutch801 Rm BT',\r\n  },\r\n  {\r\n    name: 'Dutch801 XBd BT',\r\n    value: 'Dutch801 XBd BT',\r\n  },\r\n  {\r\n    name: 'Dyuthi',\r\n    value: 'Dyuthi',\r\n    fileNames: ['dyuthi.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Ebrima',\r\n    value: 'Ebrima',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Eccentric Std',\r\n    value: 'Eccentric Std',\r\n  },\r\n  {\r\n    name: 'Edwardian Script ITC',\r\n    value: 'Edwardian Script ITC',\r\n  },\r\n  {\r\n    name: 'Elephant',\r\n    value: 'Elephant',\r\n  },\r\n  {\r\n    name: 'Engravers MT',\r\n    value: 'Engravers MT',\r\n  },\r\n  {\r\n    name: 'EngraversGothic BT',\r\n    value: 'EngraversGothic BT',\r\n  },\r\n  {\r\n    name: 'Eras Bold ITC',\r\n    value: 'Eras Bold ITC',\r\n  },\r\n  {\r\n    name: 'Eras Demi ITC',\r\n    value: 'Eras Demi ITC',\r\n  },\r\n  {\r\n    name: 'Eras Light ITC',\r\n    value: 'Eras Light ITC',\r\n  },\r\n  {\r\n    name: 'Eras Medium ITC',\r\n    value: 'Eras Medium ITC',\r\n  },\r\n  {\r\n    name: 'Estrangelo Edessa',\r\n    value: 'Estrangelo Edessa',\r\n  },\r\n  {\r\n    name: 'EucrosiaUPC',\r\n    value: 'EucrosiaUPC',\r\n  },\r\n  {\r\n    name: 'Euphemia',\r\n    value: 'Euphemia',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Euphemia UCAS',\r\n    value: 'Euphemia UCAS',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'EuroRoman',\r\n    value: 'EuroRoman',\r\n  },\r\n  {\r\n    name: 'Eurostile',\r\n    value: 'Eurostile',\r\n  },\r\n  {\r\n    name: 'Exotc350 Bd BT',\r\n    value: 'Exotc350 Bd BT',\r\n  },\r\n  {\r\n    name: 'FangSong',\r\n    value: 'FangSong',\r\n  },\r\n  {\r\n    name: 'Farah',\r\n    value: 'Farah',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Farisi',\r\n    value: 'Farisi',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Felix Titling',\r\n    value: 'Felix Titling',\r\n  },\r\n  {\r\n    name: 'Fixedsys',\r\n    value: 'Fixedsys',\r\n    fileNames: ['fixedsys.ttf'],\r\n  },\r\n  {\r\n    name: 'Footlight MT Light',\r\n    value: 'Footlight MT Light',\r\n  },\r\n  {\r\n    name: 'Forte',\r\n    value: 'Forte',\r\n  },\r\n  {\r\n    name: 'Frank Ruehl',\r\n    value: 'Frank Ruehl',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Frank Ruehl Libre Black',\r\n    value: 'Frank Ruehl Libre Black',\r\n    fileNames: ['frank_ruhl_libre_black.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Frank Ruehl Libre',\r\n    value: 'Frank Ruehl Libre',\r\n    fileNames: ['frank_ruhl_libre_regular.ttf', 'frank_ruhl_libre_bold.ttf', 'frank_ruhl_libre_medium.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Frank Ruehl Libre Light',\r\n    value: 'Frank Ruehl Libre Light',\r\n    fileNames: ['frank_ruhl_libre_light.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Franklin Gothic Book',\r\n    value: 'Franklin Gothic Book',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Franklin Gothic Demi',\r\n    value: 'Franklin Gothic Demi',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Franklin Gothic Demi Cond',\r\n    value: 'Franklin Gothic Demi Cond',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Franklin Gothic Heavy',\r\n    value: 'Franklin Gothic Heavy',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Franklin Gothic Medium',\r\n    value: 'Franklin Gothic Medium',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Franklin Gothic Medium Cond',\r\n    value: 'Franklin Gothic Medium Cond',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Freefrm721 Blk BT',\r\n    value: 'Freefrm721 Blk BT',\r\n  },\r\n  {\r\n    name: 'Freehand521 BT',\r\n    value: 'Freehand521 BT',\r\n  },\r\n  {\r\n    name: 'FreeMono',\r\n    value: 'FreeMono',\r\n    fileNames: ['freemono.ttf', 'freemono_bold.ttf', 'freemono_bold_oblique.ttf', 'freemono_oblique.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'FreeSans',\r\n    value: 'FreeSans',\r\n    fileNames: ['freesans.ttf', 'freesans_bold.ttf', 'freesans_bold_oblique.ttf', 'freesans_oblique.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'FreeSerif',\r\n    value: 'FreeSerif',\r\n    fileNames: ['freeserif.ttf', 'freeserif_bold.ttf', 'freeserif_bold_italic.ttf', 'freeserif_italic.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'FreesiaUPC',\r\n    value: 'FreesiaUPC',\r\n  },\r\n  {\r\n    name: 'Freestyle Script',\r\n    value: 'Freestyle Script',\r\n  },\r\n  {\r\n    name: 'French Script MT',\r\n    value: 'French Script MT',\r\n  },\r\n  {\r\n    name: 'FrnkGothITC Bk BT',\r\n    value: 'FrnkGothITC Bk BT',\r\n  },\r\n  {\r\n    name: 'Frutiger',\r\n    value: 'Frutiger',\r\n  },\r\n  {\r\n    name: 'Futura',\r\n    value: 'Futura',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Futura Bk BT',\r\n    value: 'Futura Bk BT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Futura Lt BT',\r\n    value: 'Futura Lt BT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Futura Md BT',\r\n    value: 'Futura Md BT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'FuturaBlack BT',\r\n    value: 'FuturaBlack BT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'GDT',\r\n    value: 'GDT',\r\n  },\r\n  {\r\n    name: 'GENISO',\r\n    value: 'GENISO',\r\n  },\r\n  {\r\n    name: 'Gabriola',\r\n    value: 'Gabriola',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Gadugi',\r\n    value: 'Gadugi',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Galliard BT',\r\n    value: 'Galliard BT',\r\n  },\r\n  {\r\n    name: 'Garamond',\r\n    value: 'Garamond',\r\n  },\r\n  {\r\n    name: 'Garamond Premr Pro',\r\n    value: 'Garamond Premr Pro',\r\n  },\r\n  {\r\n    name: 'Garamond Premr Pro Smbd',\r\n    value: 'Garamond Premr Pro Smbd',\r\n  },\r\n  {\r\n    name: 'Gargi',\r\n    value: 'Gargi',\r\n    fileNames: ['gargi.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Garuda',\r\n    value: 'Garuda',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Gautami',\r\n    value: 'Gautami',\r\n  },\r\n  {\r\n    name: 'Geeza Pro',\r\n    value: 'Geeza Pro',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Geneva',\r\n    value: 'Geneva',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Gentium Basic',\r\n    value: 'Gentium Basic',\r\n    fileNames: [\r\n      'gentium_basic.ttf', 'gentium_basic_bold.ttf', 'gentium_basic_bold_italic.ttf', 'gentium_basic_italic.ttf',\r\n    ],\r\n  },\r\n  {\r\n    name: 'Gentium Book Basic',\r\n    value: 'Gentium Book Basic',\r\n    fileNames: [\r\n      'gentium_book_basic.ttf', 'gentium_book_basic_bold.ttf', 'gentium_book_basic_bold_italic.ttf',\r\n      'gentium_book_basic_italic.ttf',\r\n    ],\r\n  },\r\n  {\r\n    name: 'Geometr231 BT',\r\n    value: 'Geometr231 BT',\r\n  },\r\n  {\r\n    name: 'Geometr231 Hv BT',\r\n    value: 'Geometr231 Hv BT',\r\n  },\r\n  {\r\n    name: 'Geometr231 Lt BT',\r\n    value: 'Geometr231 Lt BT',\r\n  },\r\n  {\r\n    name: 'Georgia',\r\n    value: 'Georgia',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Giddyup Std',\r\n    value: 'Giddyup Std',\r\n  },\r\n  {\r\n    name: 'Gigi',\r\n    value: 'Gigi',\r\n  },\r\n  {\r\n    name: 'Gill Sans',\r\n    value: 'Gill Sans',\r\n    os: ['mac', 'win'],\r\n  },\r\n  {\r\n    name: 'Gill Sans MT',\r\n    value: 'Gill Sans MT',\r\n    os: ['mac', 'win'],\r\n  },\r\n  {\r\n    name: 'Gill Sans MT Condensed',\r\n    value: 'Gill Sans MT Condensed',\r\n    os: ['mac', 'win'],\r\n  },\r\n  {\r\n    name: 'Gill Sans MT Ext Condensed Bold',\r\n    value: 'Gill Sans MT Ext Condensed Bold',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Gill Sans Ultra Bold',\r\n    value: 'Gill Sans Ultra Bold',\r\n    os: ['mac', 'win'],\r\n  },\r\n  {\r\n    name: 'Gill Sans Ultra Bold Condensed',\r\n    value: 'Gill Sans Ultra Bold Condensed',\r\n    os: ['mac', 'win'],\r\n  },\r\n  {\r\n    name: 'Gisha',\r\n    value: 'Gisha',\r\n  },\r\n  {\r\n    name: 'Gloucester MT Extra Condensed',\r\n    value: 'Gloucester MT Extra Condensed',\r\n  },\r\n  {\r\n    name: 'Gotham',\r\n    value: 'Gotham',\r\n  },\r\n  {\r\n    name: 'Gotham Bold',\r\n    value: 'Gotham Bold',\r\n  },\r\n  {\r\n    name: 'GothicE',\r\n    value: 'GothicE',\r\n  },\r\n  {\r\n    name: 'GothicG',\r\n    value: 'GothicG',\r\n  },\r\n  {\r\n    name: 'GothicI',\r\n    value: 'GothicI',\r\n  },\r\n  {\r\n    name: 'Goudy Old Style',\r\n    value: 'Goudy Old Style',\r\n  },\r\n  {\r\n    name: 'Goudy Stout',\r\n    value: 'Goudy Stout',\r\n  },\r\n  {\r\n    name: 'GoudyHandtooled BT',\r\n    value: 'GoudyHandtooled BT',\r\n  },\r\n  {\r\n    name: 'GreekC',\r\n    value: 'GreekC',\r\n    fileNames: ['greekc.ttf'],\r\n  },\r\n  {\r\n    name: 'GreekS',\r\n    value: 'GreekS',\r\n    fileNames: ['greeks.ttf'],\r\n  },\r\n  {\r\n    name: 'Gubbi',\r\n    value: 'Gubbi',\r\n    fileNames: ['gubbi.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Gujarati MT',\r\n    value: 'Gujarati MT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Gujarati Sangam MN',\r\n    value: 'Gujarati Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Gulim',\r\n    value: 'Gulim',\r\n  },\r\n  {\r\n    name: 'GulimChe',\r\n    value: 'GulimChe',\r\n  },\r\n  {\r\n    name: 'Gungsuh',\r\n    value: 'Gungsuh',\r\n  },\r\n  {\r\n    name: 'GungsuhChe',\r\n    value: 'GungsuhChe',\r\n  },\r\n  {\r\n    name: 'Gurmukhi MN',\r\n    value: 'Gurmukhi MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Gurmukhi MT',\r\n    value: 'Gurmukhi MT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Gurmukhi Sangam MN',\r\n    value: 'Gurmukhi Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Haettenschweiler',\r\n    value: 'Haettenschweiler',\r\n  },\r\n  {\r\n    name: 'Harlow Solid Italic',\r\n    value: 'Harlow Solid Italic',\r\n  },\r\n  {\r\n    name: 'Harrington',\r\n    value: 'Harrington',\r\n  },\r\n  {\r\n    name: 'Heather',\r\n    value: 'Heather',\r\n  },\r\n  {\r\n    name: 'Heather Script One',\r\n    value: 'Heather Script One',\r\n  },\r\n  {\r\n    name: 'Heiti SC',\r\n    value: 'Heiti SC',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Heiti TC',\r\n    value: 'Heiti TC',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Helvetica',\r\n    value: 'Helvetica',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Helvetica Neue',\r\n    value: 'Helvetica Neue',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Herculanum',\r\n    value: 'Herculanum',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'High Tower Text',\r\n    value: 'High Tower Text',\r\n  },\r\n  {\r\n    name: 'Hiragino Kaku Gothic Pro',\r\n    value: 'Hiragino Kaku Gothic Pro',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Kaku Gothic ProN',\r\n    value: 'Hiragino Kaku Gothic ProN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Kaku Gothic Std',\r\n    value: 'Hiragino Kaku Gothic StdN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Kaku Gothic ProN',\r\n    value: 'Hiragino Kaku Gothic ProN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Maru Pro',\r\n    value: 'Hiragino Maru Pro',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Maru ProN',\r\n    value: 'Hiragino Maru ProN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Mincho Pro',\r\n    value: 'Hiragino Mincho Pro',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Mincho ProN',\r\n    value: 'Hiragino Mincho ProN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Sans',\r\n    value: 'Hiragino Sans',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hiragino Sans GB',\r\n    value: 'Hiragino Sans GB',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Hobo Std',\r\n    value: 'Hobo Std',\r\n  },\r\n  {\r\n    name: 'Hoefler Text',\r\n    value: 'Hoefler Text',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Humanst521 BT',\r\n    value: 'Humanst521 BT',\r\n  },\r\n  {\r\n    name: 'Humanst521 Lt BT',\r\n    value: 'Humanst521 Lt BT',\r\n  },\r\n  {\r\n    name: 'ISOCP',\r\n    value: 'ISOCP',\r\n  },\r\n  {\r\n    name: 'ISOCP2',\r\n    value: 'ISOCP2',\r\n  },\r\n  {\r\n    name: 'ISOCP3',\r\n    value: 'ISOCP3',\r\n  },\r\n  {\r\n    name: 'ISOCPEUR',\r\n    value: 'ISOCPEUR',\r\n  },\r\n  {\r\n    name: 'ISOCT',\r\n    value: 'ISOCT',\r\n  },\r\n  {\r\n    name: 'ISOCT2',\r\n    value: 'ISOCT2',\r\n  },\r\n  {\r\n    name: 'ISOCT3',\r\n    value: 'ISOCT3',\r\n  },\r\n  {\r\n    name: 'ISOCTEUR',\r\n    value: 'ISOCTEUR',\r\n  },\r\n  {\r\n    name: 'ITF Devanagari',\r\n    value: 'ITF Devanagari',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'ITF Devanagari Marathi',\r\n    value: 'ITF Devanagari, Marathi',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Impact',\r\n    value: 'Impact',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Imprint MT Shadow',\r\n    value: 'Imprint MT Shadow',\r\n  },\r\n  {\r\n    name: 'InaiMathi',\r\n    value: 'InaiMathi',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Incised901 BT',\r\n    value: 'Incised901 BT',\r\n  },\r\n  {\r\n    name: 'Incised901 Bd BT',\r\n    value: 'Incised901 Bd BT',\r\n  },\r\n  {\r\n    name: 'Incised901 Lt BT',\r\n    value: 'Incised901 Lt BT',\r\n  },\r\n  {\r\n    name: 'Inconsolata',\r\n    value: 'Inconsolata',\r\n    fileNames: ['inconsolata.otf'],\r\n  },\r\n  {\r\n    name: 'Informal Roman',\r\n    value: 'Informal Roman',\r\n  },\r\n  {\r\n    name: 'Informal011 BT',\r\n    value: 'Informal011 BT',\r\n  },\r\n  {\r\n    name: 'Interstate',\r\n    value: 'Interstate',\r\n  },\r\n  {\r\n    name: 'Iowan Old Style',\r\n    value: 'Iowan Old Style',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'IrisUPC',\r\n    value: 'IrisUPC',\r\n  },\r\n  {\r\n    name: 'Iskoola Pota',\r\n    value: 'Iskoola Pota',\r\n  },\r\n  {\r\n    name: 'Italic',\r\n    value: 'Italic',\r\n  },\r\n  {\r\n    name: 'ItalicC',\r\n    value: 'ItalicC',\r\n  },\r\n  {\r\n    name: 'ItalicT',\r\n    value: 'ItalicT',\r\n  },\r\n  {\r\n    name: 'Jamrul',\r\n    value: 'Jamrul',\r\n    fileNames: ['jamrul.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'JasmineUPC',\r\n    value: 'JasmineUPC',\r\n  },\r\n  {\r\n    name: 'Jazz LET',\r\n    value: 'Jazz LET',\r\n  },\r\n  {\r\n    name: 'Jester',\r\n    value: 'Jester',\r\n  },\r\n  {\r\n    name: 'Jokerman',\r\n    value: 'Jokerman',\r\n  },\r\n  {\r\n    name: 'Juice ITC',\r\n    value: 'Juice ITC',\r\n  },\r\n  {\r\n    name: 'Kabel Bk BT',\r\n    value: 'Kabel Bk BT',\r\n  },\r\n  {\r\n    name: 'Kabel Ult BT',\r\n    value: 'Kabel Ult BT',\r\n  },\r\n  {\r\n    name: 'KacstBook',\r\n    value: 'KacstBook',\r\n    fileNames: ['kacstbook.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'KacstLetter',\r\n    value: 'KacstLetter',\r\n    fileNames: ['kacstletter.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'KacstOffice',\r\n    value: 'KacstOffice',\r\n    fileNames: ['kacstoffice.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'KacstNaskh',\r\n    value: 'KacstNaskh',\r\n    fileNames: ['kacstnaskh.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'KacstTitlel',\r\n    value: 'KacstTitlel',\r\n    fileNames: ['kacsttitlel.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'KaiTi',\r\n    value: 'KaiTi',\r\n  },\r\n  {\r\n    name: 'Kailasa',\r\n    value: 'Kailasa',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Kalapi',\r\n    value: 'Kalapi',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Kalinga',\r\n    value: 'Kalinga',\r\n  },\r\n  {\r\n    name: 'Kalimati',\r\n    value: 'Kalimati',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Kannada MN',\r\n    value: 'Kannada MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Kannada Sangam MN',\r\n    value: 'Kannada Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Kartika',\r\n    value: 'Kartika',\r\n  },\r\n  {\r\n    name: 'Karumbi',\r\n    value: 'Karumbi',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Kaufmann BT',\r\n    value: 'Kaufmann BT',\r\n  },\r\n  {\r\n    name: 'Kaufmann Bd BT',\r\n    value: 'Kaufmann Bd BT',\r\n  },\r\n  {\r\n    name: 'Kefa',\r\n    value: 'Kefa',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Khmer MN',\r\n    value: 'Khmer MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Khmer OS',\r\n    value: 'Khmer OS',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Khmer Sangam MN',\r\n    value: 'Khmer Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Khmer UI',\r\n    value: 'Khmer UI',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Kinnari',\r\n    value: 'Kinnari',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'KodchiangUPC',\r\n    value: 'KodchiangUPC',\r\n  },\r\n  {\r\n    name: 'Kohinoor Bangla',\r\n    value: 'Kohinoor Bangla',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Kohinoor Devanagari',\r\n    value: 'Kohinoor Devanagari',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Kohinoor Telugu',\r\n    value: 'Kohinoor Telugu',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Kokila',\r\n    value: 'Kokila',\r\n  },\r\n  {\r\n    name: 'Kokonor',\r\n    value: 'Kokonor',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Korinna BT',\r\n    value: 'Korinna BT',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pr6N B',\r\n    value: 'Kozuka Gothic Pr6N B',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pr6N EL',\r\n    value: 'Kozuka Gothic Pr6N EL',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pr6N H',\r\n    value: 'Kozuka Gothic Pr6N H',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pr6N L',\r\n    value: 'Kozuka Gothic Pr6N L',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pr6N M',\r\n    value: 'Kozuka Gothic Pr6N M',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pr6N R',\r\n    value: 'Kozuka Gothic Pr6N R',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pro B',\r\n    value: 'Kozuka Gothic Pro B',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pro EL',\r\n    value: 'Kozuka Gothic Pro EL',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pro H',\r\n    value: 'Kozuka Gothic Pro H',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pro L',\r\n    value: 'Kozuka Gothic Pro L',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pro M',\r\n    value: 'Kozuka Gothic Pro M',\r\n  },\r\n  {\r\n    name: 'Kozuka Gothic Pro R',\r\n    value: 'Kozuka Gothic Pro R',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pr6N B',\r\n    value: 'Kozuka Mincho Pr6N B',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pr6N EL',\r\n    value: 'Kozuka Mincho Pr6N EL',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pr6N H',\r\n    value: 'Kozuka Mincho Pr6N H',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pr6N L',\r\n    value: 'Kozuka Mincho Pr6N L',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pr6N M',\r\n    value: 'Kozuka Mincho Pr6N M',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pr6N R',\r\n    value: 'Kozuka Mincho Pr6N R',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pro B',\r\n    value: 'Kozuka Mincho Pro B',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pro EL',\r\n    value: 'Kozuka Mincho Pro EL',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pro H',\r\n    value: 'Kozuka Mincho Pro H',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pro L',\r\n    value: 'Kozuka Mincho Pro L',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pro M',\r\n    value: 'Kozuka Mincho Pro M',\r\n  },\r\n  {\r\n    name: 'Kozuka Mincho Pro R',\r\n    value: 'Kozuka Mincho Pro R',\r\n  },\r\n  {\r\n    name: 'Kristen ITC',\r\n    value: 'Kristen ITC',\r\n  },\r\n  {\r\n    name: 'Krungthep',\r\n    value: 'Krungthep',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'KufiStandartGK',\r\n    value: 'KufiStandartGK',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Kunstler Script',\r\n    value: 'Kunstler Script',\r\n  },\r\n  {\r\n    name: 'Laksaman',\r\n    value: 'Laksaman',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Lao MN',\r\n    value: 'Lao MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Lao Sangam MN',\r\n    value: 'Lao Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Lao UI',\r\n    value: 'Lao UI',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Latha',\r\n    value: 'Latha',\r\n  },\r\n  {\r\n    name: 'Laveric',\r\n    value: 'Laveric',\r\n    fileNames: ['laverick_bold.ttf', 'laverick.ttf'],\r\n  },\r\n  {\r\n    name: 'Leelawadee',\r\n    value: 'Leelawadee',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Letter Gothic Std',\r\n    value: 'Letter Gothic Std',\r\n  },\r\n  {\r\n    name: 'Levenim MT',\r\n    value: 'Levenim MT',\r\n  },\r\n  {\r\n    name: 'Liberation Mono',\r\n    value: 'Liberation Mono',\r\n    fileNames: [\r\n      'liberation_mono_bold.ttf', 'liberation_mono_bold_italic.ttf', 'liberation_mono_italic.ttf',\r\n      'liberation-mono_regular.ttf',\r\n    ],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Liberation Sans Narrow',\r\n    value: 'Liberation Sans Narrow',\r\n    fileNames: [\r\n      'liberation_sans_narrow.ttf', 'liberation_sans_narrow_bold.ttf', 'liberation_sans_narrow_bold_italic.ttf',\r\n      'liberation_sans_narrow_italic.ttf',\r\n    ],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Liberation Sans',\r\n    value: 'Liberation Sans',\r\n    fileNames: [\r\n      'liberation_sans.otf', 'liberation_sans_bold.otf', 'liberation_sans_bold_italic.otf',\r\n      'liberation_sans_italic.otf',\r\n    ],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Liberation Serif',\r\n    value: 'Liberation Serif',\r\n    fileNames: [\r\n      'liberation_serif_bold.ttf', 'liberation_serif_bold_italic.ttf', 'liberation_serif_italic.ttf',\r\n      'liberation_serif_regular.ttf',\r\n    ],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'LilyUPC',\r\n    value: 'LilyUPC',\r\n  },\r\n  {\r\n    name: 'Lithograph',\r\n    value: 'Lithograph',\r\n  },\r\n  {\r\n    name: 'Lithograph Light',\r\n    value: 'Lithograph Light',\r\n  },\r\n  {\r\n    name: 'Lithos Pro Regular',\r\n    value: 'Lithos Pro Regular',\r\n  },\r\n  {\r\n    name: 'Lohit Devanagari',\r\n    value: 'Lohit Devanagari',\r\n    fileNames: ['lohit_devanagari.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Lohit Telugu',\r\n    value: 'Lohit Telugu',\r\n    fileNames: ['lohit_telugu.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Loma',\r\n    value: 'Loma',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Lucida Bright',\r\n    value: 'Lucida Bright',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Lucida Calligraphy',\r\n    value: 'Lucida Calligraphy',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Lucida Console',\r\n    value: 'Lucida Console',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Lucida Fax',\r\n    value: 'Lucida Fax',\r\n  },\r\n  {\r\n    name: 'Lucida Grande',\r\n    value: 'Lucida Grande',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Lucida Handwriting',\r\n    value: 'Lucida Handwriting',\r\n  },\r\n  {\r\n    name: 'Lucida Sans',\r\n    value: 'Lucida Sans',\r\n  },\r\n  {\r\n    name: 'Lucida Sans Typewriter',\r\n    value: 'Lucida Sans Typewriter',\r\n  },\r\n  {\r\n    name: 'Lucida Sans Unicode',\r\n    value: 'Lucida Sans Unicode',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Luminari',\r\n    value: 'Luminari',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Lydian BT',\r\n    value: 'Lydian BT',\r\n  },\r\n  {\r\n    name: 'MONO',\r\n    value: 'MONO',\r\n  },\r\n  {\r\n    name: 'MS Gothic',\r\n    value: 'MS Gothic',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS LineDraw',\r\n    value: 'MS LineDraw',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS Mincho',\r\n    value: 'MS Mincho',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS Outlook',\r\n    value: 'MS Outlook',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS PGothic',\r\n    value: 'MS PGothic',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS PMincho',\r\n    value: 'MS PMincho',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS Reference Sans Serif',\r\n    value: 'MS Reference Sans Serif',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS Reference Specialty',\r\n    value: 'MS Reference Specialty',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS Sans Serif',\r\n    value: 'MS Sans Serif',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS Serif',\r\n    value: 'MS Serif',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MS UI Gothic',\r\n    value: 'MS UI Gothic',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MT Extra',\r\n    value: 'MT Extra',\r\n  },\r\n  {\r\n    name: 'MV Boli',\r\n    value: 'MV Boli',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Magneto',\r\n    value: 'Magneto',\r\n  },\r\n  {\r\n    name: 'Maiandra GD',\r\n    value: 'Maiandra GD',\r\n  },\r\n  {\r\n    name: 'Malayalam MN',\r\n    value: 'Malayalam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Malayalam Sangam MN',\r\n    value: 'Malayalam Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Malgun Gothic',\r\n    value: 'Malgun Gothic',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Mangal',\r\n    value: 'Mangal',\r\n  },\r\n  {\r\n    name: 'Manjari',\r\n    value: 'Manjari',\r\n    fileNames: ['manjari_bold.ttf', 'manjari_regular.ttf'],\r\n    os: ['lin'],\r\n  },\r\n\r\n  {\r\n    name: 'Marigold',\r\n    value: 'Marigold',\r\n  },\r\n  {\r\n    name: 'Marion',\r\n    value: 'Marion',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Marker Felt',\r\n    value: 'Marker Felt',\r\n    fileNames: ['marker_felt.ttf'],\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Marlett',\r\n    value: 'Marlett',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Matisse ITC',\r\n    value: 'Matisse ITC',\r\n  },\r\n  {\r\n    name: 'Matura MT Script Capitals',\r\n    value: 'Matura MT Script Capitals',\r\n  },\r\n  {\r\n    name: 'Meera',\r\n    value: 'Meera',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Meera Inimai',\r\n    value: 'Meera Inimai',\r\n    fileNames: ['meera_inimai_regular.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Meiryo',\r\n    value: 'Meiryo',\r\n  },\r\n  {\r\n    name: 'Meiryo UI',\r\n    value: 'Meiryo UI',\r\n  },\r\n  {\r\n    name: 'Menlo',\r\n    value: 'Menlo',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Mesquite Std',\r\n    value: 'Mesquite Std',\r\n  },\r\n  {\r\n    name: 'Microsoft Himalaya',\r\n    value: 'Microsoft Himalaya',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft JhengHei',\r\n    value: 'Microsoft JhengHei',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft JhengHei UI',\r\n    value: 'Microsoft JhengHei UI',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft New Tai Lue',\r\n    value: 'Microsoft New Tai Lue',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft PhagsPa',\r\n    value: 'Microsoft PhagsPa',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft Sans Serif',\r\n    value: 'Microsoft Sans Serif',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Microsoft Tai Le',\r\n    value: 'Microsoft Tai Le',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft Uighur',\r\n    value: 'Microsoft Uighur',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft YaHei',\r\n    value: 'Microsoft YaHei',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft YaHei UI',\r\n    value: 'Microsoft YaHei UI',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Microsoft Yi Baiti',\r\n    value: 'Microsoft Yi Baiti',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MingLiU',\r\n    value: 'MingLiU',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MingLiU-ExtB',\r\n    value: 'MingLiU-ExtB',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MingLiU_HKSCS',\r\n    value: 'MingLiU_HKSCS',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'MingLiU_HKSCS-ExtB',\r\n    value: 'MingLiU_HKSCS-ExtB',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Minion',\r\n    value: 'Minion',\r\n  },\r\n  {\r\n    name: 'Minion Pro',\r\n    value: 'Minion Pro',\r\n  },\r\n  {\r\n    name: 'Minion Pro Cond',\r\n    value: 'Minion Pro Cond',\r\n  },\r\n  {\r\n    name: 'Minion Pro Med',\r\n    value: 'Minion Pro Med',\r\n  },\r\n  {\r\n    name: 'Minion Pro SmBd',\r\n    value: 'Minion Pro SmBd',\r\n  },\r\n  {\r\n    name: 'Miriam',\r\n    value: 'Miriam',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Miriam Fixed',\r\n    value: 'Miriam Fixed',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Miriam Libre',\r\n    value: 'Miriam Libre',\r\n    fileNames: ['miriam_libre_bold.ttf', 'miriam_libre_regular.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Mishafi',\r\n    value: 'Mishafi',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Mishafi Gold',\r\n    value: 'Mishafi Gold',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Mistral',\r\n    value: 'Mistral',\r\n  },\r\n  {\r\n    name: 'Mitra Mono',\r\n    value: 'Mitra Mono',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Modern',\r\n    value: 'Modern',\r\n  },\r\n  {\r\n    name: 'Modern No. 20',\r\n    value: 'Modern No. 20',\r\n  },\r\n  {\r\n    name: 'Mona Lisa Solid ITC TT',\r\n    value: 'Mona Lisa Solid ITC TT',\r\n  },\r\n  {\r\n    name: 'Monaco',\r\n    value: 'Monaco',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Mongolian Baiti',\r\n    value: 'Mongolian Baiti',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Monospac821 BT',\r\n    value: 'Monospac821 BT',\r\n  },\r\n  {\r\n    name: 'Monotxt',\r\n    value: 'Monotxt',\r\n  },\r\n  {\r\n    name: 'Monotype Corsiva',\r\n    value: 'Monotype Corsiva',\r\n  },\r\n  {\r\n    name: 'MoolBoran',\r\n    value: 'MoolBoran',\r\n  },\r\n  {\r\n    name: 'Mshtakan',\r\n    value: 'Mshtakan',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Mukti Narrow',\r\n    value: 'Mukti Narrow',\r\n    fileNames: ['mukti_narrow.ttf', 'mukti_narrow_bold.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Muna',\r\n    value: 'Muna',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Muanmar MN',\r\n    value: 'Muanmar MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Muanmar Sangam MN',\r\n    value: 'Muanmar Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Myriad Arabic',\r\n    value: 'Myriad Arabic',\r\n  },\r\n  {\r\n    name: 'Myriad Hebrew',\r\n    value: 'Myriad Hebrew',\r\n  },\r\n  {\r\n    name: 'Myriad Pro',\r\n    value: 'Myriad Pro',\r\n  },\r\n  {\r\n    name: 'Myriad Pro Cond',\r\n    value: 'Myriad Pro Cond',\r\n  },\r\n  {\r\n    name: 'Myriad Pro Light',\r\n    value: 'Myriad Pro Light',\r\n  },\r\n  {\r\n    name: 'Myriad Web Pro',\r\n    value: 'Myriad Web Pro',\r\n  },\r\n  {\r\n    name: 'NSimSun',\r\n    value: 'NSimSun',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Nadeem',\r\n    value: 'Nadeem',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Nakula',\r\n    value: 'Nakula',\r\n    fileNames: ['nakula_regular.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Narkisim',\r\n    value: 'Narkisim',\r\n  },\r\n  {\r\n    name: 'Navuli',\r\n    value: 'Navuli',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'News Gothic',\r\n    value: 'News Gothic',\r\n  },\r\n  {\r\n    name: 'NewsGoth BT',\r\n    value: 'NewsGoth BT',\r\n  },\r\n  {\r\n    name: 'New Peninim MT',\r\n    value: 'New Peninim MT',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Niagara Engraved',\r\n    value: 'Niagara Engraved',\r\n  },\r\n  {\r\n    name: 'Niagara Solid',\r\n    value: 'Niagara Solid',\r\n  },\r\n  {\r\n    name: 'Nimbus Roman',\r\n    value: 'Nimbus Roman',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Nimbus Sans',\r\n    value: 'Nimbus Sans',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Nimbus Sans Narrow',\r\n    value: 'Nimbus Sans Narrow',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Nirmala UI',\r\n    value: 'Nirmala UI',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Norasi',\r\n    value: 'Norasi',\r\n    fileNames: ['norasi.ttf', 'norasi_bold.ttf', 'norasi_bold_italic.ttf', 'norasi_italic.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Noteworthy',\r\n    value: 'Noteworthy',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Noto Kufi Arabic',\r\n    value: 'Noto Kufi Arabic',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Noto Mono',\r\n    value: 'Noto Mono',\r\n    fileNames: ['noto_mono_regular.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Nastaliq Urdu',\r\n    value: 'Noto Nastaliq Urdu',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Noto Sans',\r\n    value: 'Noto Sans',\r\n    fileNames: ['noto_sans_bold.ttf', 'noto_sans_bold_italic.ttf', 'noto_sans_italic.ttf', 'noto_sans_regular.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans Arabic UI',\r\n    value: 'Noto Sans Arabic UI',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans CJK HK',\r\n    value: 'Noto Sans CJK HK',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans CJK JP',\r\n    value: 'Noto Sans CJK JP',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans CJK KR',\r\n    value: 'Noto Sans CJK KR',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans CJK SC',\r\n    value: 'Noto Sans CJK SC',\r\n    fileNames: [\r\n      'noto_sans_cjk_sc_black.otf', 'noto_sans_cjk_sc_bold.otf', 'noto_sans_cjk_sc_demilight.otf',\r\n      'noto_sans_cjk_sc_light.otf', 'noto_sans_cjk_sc_medium.otf', 'noto_sans_cjk_sc_regular.otf',\r\n      'noto_sans_cjk_sc_thin.otf',\r\n    ],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans CJK TC',\r\n    value: 'Noto Sans CJK TC',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans Lisu',\r\n    value: 'Noto Sans Lisu',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans Mono CJK HK',\r\n    value: 'Noto Sans Mono CJK HK',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans Mono CJK JP',\r\n    value: 'Noto Sans Mono CJK JP',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans Mono CJK KR',\r\n    value: 'Noto Sans Mono CJK KR',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans Mono CJK SC',\r\n    value: 'Noto Sans Mono CJK SC',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Sans Mono CJK TC',\r\n    value: 'Noto Sans Mono CJK TC',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif',\r\n    value: 'Noto Serif',\r\n    fileNames: ['noto_serif_regular.ttf', 'noto_serif_italic.ttf', 'noto_serif_bold_italic.ttf', 'noto_serif_bold.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif CJK JP',\r\n    value: 'Noto Serif CJK JP',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif CJK KR',\r\n    value: 'Noto Serif CJK KR',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif CJK SC',\r\n    value: 'Noto Serif CJK SC',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif CJK TC',\r\n    value: 'Noto Serif CJK TC',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif Georgian',\r\n    value: 'Noto Serif Georgian',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif Hebrew',\r\n    value: 'Noto Serif Hebrew',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif Italic',\r\n    value: 'Noto Serif Italic',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Noto Serif Lao',\r\n    value: 'Noto Serif Lao',\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Nueva Std',\r\n    value: 'Nueva Std',\r\n  },\r\n  {\r\n    name: 'Nueva Std Cond',\r\n    value: 'Nueva Std Cond',\r\n  },\r\n  {\r\n    name: 'Nyala',\r\n    value: 'Nyala',\r\n  },\r\n  {\r\n    name: 'OCR A Extended',\r\n    value: 'OCR A Extended',\r\n  },\r\n  {\r\n    name: 'OCR A Std',\r\n    value: 'OCR A Std',\r\n  },\r\n  {\r\n    name: 'OCR-A BT',\r\n    value: 'OCR-A BT',\r\n  },\r\n  {\r\n    name: 'OCR-B 10 BT',\r\n    value: 'OCR-B 10 BT',\r\n  },\r\n  {\r\n    name: 'Old English Text MT',\r\n    value: 'Old English Text MT',\r\n  },\r\n  {\r\n    name: 'Onyx',\r\n    value: 'Onyx',\r\n  },\r\n  {\r\n    name: 'Onyx BT',\r\n    value: 'Onyx BT',\r\n  },\r\n  {\r\n    name: 'OpenSymbol',\r\n    value: 'OpenSymbol',\r\n    fileNames: ['opensymbol.ttf'],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Optima',\r\n    value: 'Optima',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Orator Std',\r\n    value: 'Orator Std',\r\n  },\r\n  {\r\n    name: 'Oriya MN',\r\n    value: 'Oriya MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Oriya Sangam MN',\r\n    value: 'Oriya Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Osaka',\r\n    value: 'Osaka',\r\n    fileNames: ['osaka.ttf'],\r\n  },\r\n  {\r\n    name: 'Oswald',\r\n    value: 'Oswald',\r\n    fileNames: [\r\n      'oswald_bold.ttf', 'oswald_extralight.ttf', 'oswald_light.ttf', 'oswald_medium.ttf',\r\n      'oswald_regular.ttf', 'oswald_semibold.ttf',\r\n    ],\r\n    os: ['win', 'lin'],\r\n  },\r\n  {\r\n    name: 'Ouverture script',\r\n    value: 'Ouverture script',\r\n    fileNames: ['ouverture_script.ttf'],\r\n  },\r\n  {\r\n    name: 'OzHandicraft BT',\r\n    value: 'OzHandicraft BT',\r\n  },\r\n  {\r\n    name: 'PMingLiU',\r\n    value: 'PMingLiU',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'PMingLiU-ExtB',\r\n    value: 'PMingLiU-ExtB',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'PT Mono',\r\n    value: 'PT Mono',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'PT Sans',\r\n    value: 'PT Sans',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'PT Sans Caption',\r\n    value: 'PT Mono Caption',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'PT Sans Narrow',\r\n    value: 'PT Sans Narrow',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'PT Serif',\r\n    value: 'PT Serif',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'PT Serif Caption',\r\n    value: 'PT Serif Caption',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Padauk',\r\n    value: 'Padauk',\r\n    fileNames: ['padauk_bold.ttf', 'padauk_regular.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Padauk Book',\r\n    value: 'Padauk Book',\r\n    fileNames: ['padauk_book_bold.ttf', 'padauk_book.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Palace Script MT',\r\n    value: 'Palace Script MT',\r\n  },\r\n  {\r\n    name: 'Pagul',\r\n    value: 'Pagul',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Palatino',\r\n    value: 'Palatino',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Palatino Linotype',\r\n    value: 'Palatino Linotype',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'PanRoman',\r\n    value: 'PanRoman',\r\n  },\r\n  {\r\n    name: 'Papyrus',\r\n    value: 'Papyrus',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Parchment',\r\n    value: 'Parchment',\r\n  },\r\n  {\r\n    name: 'Party LET',\r\n    value: 'Party LET',\r\n  },\r\n  {\r\n    name: 'Perpetua',\r\n    value: 'Perpetua',\r\n  },\r\n  {\r\n    name: 'Perpetua Titling MT',\r\n    value: 'Perpetua Titling MT',\r\n  },\r\n  {\r\n    name: 'Phetsarath OT',\r\n    value: 'Phetsarath OT',\r\n    fileNames: ['phetsarath_ot.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Phosphate',\r\n    value: 'Phosphate',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'PingFang HK',\r\n    value: 'PingFang HK',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'PingFang SC',\r\n    value: 'PingFang SC',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'PingFang TC',\r\n    value: 'PingFang TC',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Plantagenet Cherokee',\r\n    value: 'Plantagenet Cherokee',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Playbill',\r\n    value: 'Playbill',\r\n  },\r\n  {\r\n    name: 'Poor Richard',\r\n    value: 'Poor Richard',\r\n  },\r\n  {\r\n    name: 'Poplar Std',\r\n    value: 'Poplar Std',\r\n  },\r\n  {\r\n    name: 'PosterBodoni BT',\r\n    value: 'PosterBodoni BT',\r\n  },\r\n  {\r\n    name: 'Pothana2000',\r\n    value: 'Pothana2000',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Prestige Elite Std',\r\n    value: 'Prestige Elite Std',\r\n  },\r\n  {\r\n    name: 'Princetown Let',\r\n    value: 'Princetown Let',\r\n  },\r\n  {\r\n    name: 'Pristina',\r\n    value: 'Pristina',\r\n  },\r\n  {\r\n    name: 'Proxy 1',\r\n    value: 'Proxy 1',\r\n    fileNames: ['proxy_1.ttf'],\r\n  },\r\n  {\r\n    name: 'Proxy 2',\r\n    value: 'Proxy 2',\r\n    fileNames: ['proxy_2.ttf'],\r\n  },\r\n  {\r\n    name: 'Proxy 3',\r\n    value: 'Proxy 3',\r\n    fileNames: ['proxy_3.ttf'],\r\n  },\r\n  {\r\n    name: 'Proxy 4',\r\n    value: 'Proxy 4',\r\n    fileNames: ['proxy_4.ttf'],\r\n  },\r\n  {\r\n    name: 'Proxy 5',\r\n    value: 'Proxy 5',\r\n    fileNames: ['proxy_5.ttf'],\r\n  },\r\n  {\r\n    name: 'Proxy 6',\r\n    value: 'Proxy 6',\r\n    fileNames: ['proxy_6.ttf'],\r\n  },\r\n  {\r\n    name: 'Proxy 7',\r\n    value: 'Proxy 7',\r\n    fileNames: ['proxy_7.ttf'],\r\n  },\r\n  {\r\n    name: 'Proxy 8',\r\n    value: 'Proxy 8',\r\n    fileNames: ['proxy_8.ttf'],\r\n  },\r\n  {\r\n    name: 'Proxy 9',\r\n    value: 'Proxy 9',\r\n    fileNames: ['proxy_9.ttf'],\r\n  },\r\n  {\r\n    name: 'PTBarnum BT',\r\n    value: 'PTBarnum BT',\r\n  },\r\n  {\r\n    name: 'Purisa',\r\n    value: 'Purisa',\r\n    fileNames: ['purisa.ttf', 'purisa_bold.ttf', 'purisa_boldoblique.ttf', 'purisa_oblique.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Raanana',\r\n    value: 'Raanana',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Raavi',\r\n    value: 'Raavi',\r\n  },\r\n  {\r\n    name: 'Rachana',\r\n    value: 'Rachana',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Rage Italic',\r\n    value: 'Rage Italic',\r\n  },\r\n  {\r\n    name: 'Ravie',\r\n    value: 'Ravie',\r\n  },\r\n  {\r\n    name: 'Rekha',\r\n    value: 'Rekha',\r\n    fileNames: ['rekha.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Roboto',\r\n    value: 'Roboto',\r\n    fileNames: ['roboto_bold.ttf', 'roboto_bold_italic.ttf', 'roboto_italic.ttf', 'roboto_regular.ttf'],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Roboto Black',\r\n    value: 'Roboto Black',\r\n    fileNames: ['roboto_black.ttf', 'roboto_black_italic.ttf'],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Roboto Light',\r\n    value: 'Roboto Light',\r\n    fileNames: ['roboto_light.ttf', 'roboto_light_italic.ttf'],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Roboto Medium',\r\n    value: 'Roboto Medium',\r\n    fileNames: ['roboto_medium.ttf', 'roboto_medium_italic.ttf'],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Roboto Thin',\r\n    value: 'Roboto Thin',\r\n    fileNames: ['roboto_thin.ttf', 'roboto_thin_italic.ttf'],\r\n    os: ['win', 'lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Rockwell',\r\n    value: 'Rockwell',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Rockwell Condensed',\r\n    value: 'Rockwell Condensed',\r\n  },\r\n  {\r\n    name: 'Rockwell Extra Bold',\r\n    value: 'Rockwell Extra Bold',\r\n  },\r\n  {\r\n    name: 'Rod',\r\n    value: 'Rod',\r\n  },\r\n  {\r\n    name: 'Roman',\r\n    value: 'Roman',\r\n  },\r\n  {\r\n    name: 'RomanC',\r\n    value: 'RomanC',\r\n    fileNames: ['romanc.ttf'],\r\n  },\r\n  {\r\n    name: 'RomanD',\r\n    value: 'RomanD',\r\n    fileNames: ['romand.ttf'],\r\n  },\r\n  {\r\n    name: 'RomanS',\r\n    value: 'RomanS',\r\n    fileNames: ['romans.ttf'],\r\n  },\r\n  {\r\n    name: 'RomanT',\r\n    value: 'RomanT',\r\n    fileNames: ['romant.ttf'],\r\n  },\r\n  {\r\n    name: 'Romantic',\r\n    value: 'Romantic',\r\n  },\r\n  {\r\n    name: 'Rosewood Std Regular',\r\n    value: 'Rosewood Std Regular',\r\n  },\r\n  {\r\n    name: 'Rubik',\r\n    value: 'Rubik',\r\n    fileNames: [\r\n      'rubik_bold.ttf', 'rubik_bold_italic.ttf', 'rubik_italic.ttf', 'rubik_regular.ttf', 'rubik_extrabold.ttf',\r\n      'rubik_extrabold_italic.ttf', 'rubik_semibold.ttf', 'rubik_semibold_italic.ttf',\r\n    ],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Rubik Black',\r\n    value: 'Rubik Black',\r\n    fileNames: ['rubik_black.ttf', 'rubik_black_italic.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Rubik Light',\r\n    value: 'Rubik Light',\r\n    fileNames: ['rubik_light.ttf', 'rubik_light_italic.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Rubik Medium',\r\n    value: 'Rubik Medium',\r\n    fileNames: ['rubik_medium.ttf', 'rubik_medium_italic.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Russo One',\r\n    value: 'Russo One',\r\n    fileNames: ['russo_one_regular.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'STIXGeneral',\r\n    value: 'STIXGeneral',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXIntegralsD',\r\n    value: 'STIXIntegralsD',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXIntegralsSm',\r\n    value: 'STIXIntegralsSm',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXIntegralsUp',\r\n    value: 'STIXIntegralsUp',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXIntegralsUpD',\r\n    value: 'STIXIntegralsUpD',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXIntegralsUpSm',\r\n    value: 'STIXIntegralsUpSm',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXNoneUnicode',\r\n    value: 'STIXNoneUnicode',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXSizeFiveSym',\r\n    value: 'STIXSizeFiveSym',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXSizeFourSym',\r\n    value: 'STIXSizeFourSym',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXSizeOneSym',\r\n    value: 'STIXSizeOneSym',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXSizeThreeSym',\r\n    value: 'STIXSizeThreeSym',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXSizeTwoSym',\r\n    value: 'STIXSizeTwoSym',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STIXVariants',\r\n    value: 'STIXVariants',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'STSong',\r\n    value: 'STSong',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Saab',\r\n    value: 'Saab',\r\n    fileNames: ['saab.otf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Sahadeva',\r\n    value: 'Sahadeva',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Sakkal Majalla',\r\n    value: 'Sakkal Majalla',\r\n  },\r\n  {\r\n    name: 'Samanata',\r\n    value: 'Samanata',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Samyak Devanagari',\r\n    value: 'Samyak Devanagari',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Samyak Gujarati',\r\n    value: 'Samyak Gujarati',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Samyak Malayalam',\r\n    value: 'Samyak Malayalam',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Samyak Tamil',\r\n    value: 'Samyak Tamil',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Sana',\r\n    value: 'Sana',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'SansSerif',\r\n    value: 'SansSerif',\r\n  },\r\n  {\r\n    name: 'Santa Fe LET',\r\n    value: 'Santa Fe LET',\r\n  },\r\n  {\r\n    name: 'Sarai',\r\n    value: 'Sarai',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Sathu',\r\n    value: 'Sathu',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Savoye LET',\r\n    value: 'Savoye LET',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Sawasdee',\r\n    value: 'Sawasdee',\r\n  },\r\n  {\r\n    name: 'Script',\r\n    value: 'Script',\r\n  },\r\n  {\r\n    name: 'Scriptina',\r\n    value: 'Scriptina',\r\n    fileNames: ['scriptina.ttf'],\r\n  },\r\n  {\r\n    name: 'Script MT Bold',\r\n    value: 'Script MT Bold',\r\n  },\r\n  {\r\n    name: 'ScriptC',\r\n    value: 'ScriptC',\r\n  },\r\n  {\r\n    name: 'ScriptS',\r\n    value: 'ScriptS',\r\n  },\r\n  {\r\n    name: 'Segoe Print',\r\n    value: 'Segoe Print',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Segoe Script',\r\n    value: 'Segoe Script',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Segoe UI',\r\n    value: 'Segoe UI',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Segoe UI Light',\r\n    value: 'Segoe UI Light',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Segoe UI Semibold',\r\n    value: 'Segoe UI Semibold',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Segoe UI Semilight',\r\n    value: 'Segoe UI Semilight',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Segoe UI Symbol',\r\n    value: 'Segoe UI Symbol',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Seravek',\r\n    value: 'Seravek',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Serifa',\r\n    value: 'Serifa',\r\n  },\r\n  {\r\n    name: 'Serifa BT',\r\n    value: 'Serifa BT',\r\n  },\r\n  {\r\n    name: 'Serifa Th BT',\r\n    value: 'Serifa Th BT',\r\n  },\r\n  {\r\n    name: 'ShelleyVolante BT',\r\n    value: 'ShelleyVolante BT',\r\n  },\r\n  {\r\n    name: 'Shree Devanagari 714',\r\n    value: 'Shree Devanagari 714',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Sherwood',\r\n    value: 'Sherwood',\r\n  },\r\n  {\r\n    name: 'Shonar Bangla',\r\n    value: 'Shonar Bangla',\r\n  },\r\n  {\r\n    name: 'Showcard Gothic',\r\n    value: 'Showcard Gothic',\r\n  },\r\n  {\r\n    name: 'Shruti',\r\n    value: 'Shruti',\r\n  },\r\n  {\r\n    name: 'SignPainter',\r\n    value: 'SignPainter',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Silom',\r\n    value: 'Silom',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'SimHei',\r\n    value: 'SimHei',\r\n  },\r\n  {\r\n    name: 'SimSun',\r\n    value: 'SimSun',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'SimSun-ExtB',\r\n    value: 'SimSun-ExtB',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Simplex',\r\n    value: 'Simplex',\r\n  },\r\n  {\r\n    name: 'Simplified Arabic',\r\n    value: 'Simplified Arabic',\r\n  },\r\n  {\r\n    name: 'Simplified Arabic Fixed',\r\n    value: 'Simplified Arabic Fixed',\r\n  },\r\n  {\r\n    name: 'Sinhala MN',\r\n    value: 'Sinhala MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Sinhala Sangam MN',\r\n    value: 'Sinhala Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Skia',\r\n    value: 'Skia',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Small Fonts',\r\n    value: 'Small Fonts',\r\n  },\r\n  {\r\n    name: 'Snap ITC',\r\n    value: 'Snap ITC',\r\n  },\r\n  {\r\n    name: 'Snell Roundhand',\r\n    value: 'Snell Roundhand',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Songti SC',\r\n    value: 'Songti SC',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Songti TC',\r\n    value: 'Songti TC',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Source Code Pro',\r\n    value: 'Source Code Pro',\r\n    fileNames: [\r\n      'source_code_pro.ttf', 'source_code_pro_italic.ttf', 'source_code_pro_bold.ttf', 'source_code_pro_bold_italic.ttf',\r\n    ],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Code Pro Black',\r\n    value: 'Source Code Pro Black',\r\n    fileNames: ['source_code_pro_black.ttf', 'source_code_pro_black_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Code Pro Extra Light',\r\n    value: 'Source Code Pro Extra Light',\r\n    fileNames: ['source_code_pro_extra_light.ttf', 'source_code_pro_extra_light_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Code Pro Light',\r\n    value: 'Source Code Pro Light',\r\n    fileNames: ['source_code_pro_light.ttf', 'source_code_pro_light_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Code Pro Medium',\r\n    value: 'Source Code Pro Medium',\r\n    fileNames: ['source_code_pro_medium.ttf', 'source_code_pro_medium_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Code Pro Semibold',\r\n    value: 'Source Code Pro Semibold',\r\n    fileNames: ['source_code_pro_semibold.ttf', 'source_code_pro_semibold_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Serif Pro',\r\n    value: 'Source Serif Pro',\r\n    fileNames: [\r\n      'source_serif_pro_bold.ttf', 'source_serif_pro_bold_italic.ttf', 'source_serif_pro_italic.ttf',\r\n      'source_serif_pro_regular.ttf',\r\n    ],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Serif Pro Black',\r\n    value: 'Source Serif Pro Black',\r\n    fileNames: ['source_serif_pro_black.ttf', 'source_serif_pro_black_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Serif Pro Extra Light',\r\n    value: 'Source Serif Pro Extra Light',\r\n    fileNames: ['source_serif_pro_extralight_italic.ttf', 'source_serif_pro_extralight.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Serif Pro Light',\r\n    value: 'Source Serif Pro Light',\r\n    fileNames: ['source_serif_pro_light.ttf', 'source_serif_pro_light_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Serif Pro Semibold',\r\n    value: 'Source Serif Pro Semibold',\r\n    fileNames: ['source_serif_pro_semibold_italic.ttf', 'source_serif_pro_semibold.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Sans Pro',\r\n    value: 'Source Sans Pro',\r\n    fileNames: [\r\n      'source_sans_pro_bold.ttf', 'source_sans_pro_bold_italic.ttf', 'source_sans_pro_italic.ttf',\r\n      'source_sans_pro_regular.ttf',\r\n    ],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Sans Pro Black',\r\n    value: 'Source Sans Pro Black',\r\n    fileNames: ['source_sans_pro_black.ttf', 'source_sans_pro_black_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Sans Pro Extra Light',\r\n    value: 'Source Sans Pro Extra Light',\r\n    fileNames: ['source_sans_pro_extralight_italic.ttf', 'source_sans_pro_extralight.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Sans Pro Light',\r\n    value: 'Source Sans Pro Light',\r\n    fileNames: ['source_sans_pro_light.ttf', 'source_sans_pro_light_italic.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Source Sans Pro Semibold',\r\n    value: 'Source Sans Pro Semibold',\r\n    fileNames: ['source_sans_pro_semibold_italic.ttf', 'source_sans_pro_semibold.ttf'],\r\n    os: ['lin', 'mac'],\r\n  },\r\n  {\r\n    name: 'Souvenir Lt BT',\r\n    value: 'Souvenir Lt BT',\r\n  },\r\n  {\r\n    name: 'Staccato222 BT',\r\n    value: 'Staccato222 BT',\r\n  },\r\n  {\r\n    name: 'Steamer',\r\n    value: 'Steamer',\r\n  },\r\n  {\r\n    name: 'Stencil',\r\n    value: 'Stencil',\r\n  },\r\n  {\r\n    name: 'Square721 BT',\r\n    value: 'Square721 BT',\r\n  },\r\n  {\r\n    name: 'Stencil',\r\n    value: 'Stencil',\r\n  },\r\n  {\r\n    name: 'Stencil Std',\r\n    value: 'Stencil Std',\r\n  },\r\n  {\r\n    name: 'Stylus BT',\r\n    value: 'Stylus BT',\r\n  },\r\n  {\r\n    name: 'Subway',\r\n    value: 'Subway',\r\n  },\r\n  {\r\n    name: 'Sukhumvit Set',\r\n    value: 'Sukhumvit Set',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Superclarendon',\r\n    value: 'Superclarendon',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'SuperFrench',\r\n    value: 'SuperFrench',\r\n  },\r\n  {\r\n    name: 'Suruma',\r\n    value: 'Suruma',\r\n    fileNames: ['suruma.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Swis721 BT',\r\n    value: 'Swis721 BT',\r\n  },\r\n  {\r\n    name: 'Swis721 BdCnOul BT',\r\n    value: 'Swis721 BdCnOul BT',\r\n  },\r\n  {\r\n    name: 'Swis721 BdOul BT',\r\n    value: 'Swis721 BdOul BT',\r\n  },\r\n  {\r\n    name: 'Swis721 Blk BT',\r\n    value: 'Swis721 Blk BT',\r\n  },\r\n  {\r\n    name: 'Swis721 BlkCn BT',\r\n    value: 'Swis721 BlkCn BT',\r\n  },\r\n  {\r\n    name: 'Swis721 BlkEx BT',\r\n    value: 'Swis721 BlkEx BT',\r\n  },\r\n  {\r\n    name: 'Swis721 BlkOul BT',\r\n    value: 'Swis721 BlkOul BT',\r\n  },\r\n  {\r\n    name: 'Swis721 Cn BT',\r\n    value: 'Swis721 Cn BT',\r\n  },\r\n  {\r\n    name: 'Swis721 Ex BT',\r\n    value: 'Swis721 Ex BT',\r\n  },\r\n  {\r\n    name: 'Swis721 Hv BT',\r\n    value: 'Swis721 Hv BT',\r\n  },\r\n  {\r\n    name: 'Swis721 Lt BT',\r\n    value: 'Swis721 Lt BT',\r\n  },\r\n  {\r\n    name: 'Swis721 LtCn BT',\r\n    value: 'Swis721 LtCn BT',\r\n  },\r\n  {\r\n    name: 'Swis721 LtEx BT',\r\n    value: 'Swis721 LtEx BT',\r\n  },\r\n  {\r\n    name: 'Swiss911 XCm BT',\r\n    value: 'Swiss911 XCm BT',\r\n  },\r\n  {\r\n    name: 'Syastro',\r\n    value: 'Syastro',\r\n  },\r\n  {\r\n    name: 'Sylfaen',\r\n    value: 'Sylfaen',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Symap',\r\n    value: 'Symap',\r\n  },\r\n  {\r\n    name: 'Symath',\r\n    value: 'Symath',\r\n  },\r\n  {\r\n    name: 'Symbol',\r\n    value: 'Symbol',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Symeteo',\r\n    value: 'Symeteo',\r\n  },\r\n  {\r\n    name: 'Symusic',\r\n    value: 'Symusic',\r\n    fileNames: ['symusic.ttf'],\r\n  },\r\n  {\r\n    name: 'Synchro LET',\r\n    value: 'Synchro LET',\r\n  },\r\n  {\r\n    name: 'System',\r\n    value: 'System',\r\n  },\r\n  {\r\n    name: 'Tahoma',\r\n    value: 'Tahoma',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Tamil MN',\r\n    value: 'Tamil MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Tamil Sangam MN',\r\n    value: 'Tamil Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'TeamViewer8',\r\n    value: 'TeamViewer8',\r\n  },\r\n  {\r\n    name: 'Technic',\r\n    value: 'Technic',\r\n  },\r\n  {\r\n    name: 'Technical',\r\n    value: 'Technical',\r\n  },\r\n  {\r\n    name: 'TechnicBold',\r\n    value: 'TechnicBold',\r\n  },\r\n  {\r\n    name: 'TechnicLite',\r\n    value: 'TechnicLite',\r\n  },\r\n  {\r\n    name: 'Tekton Pro',\r\n    value: 'Tekton Pro',\r\n  },\r\n  {\r\n    name: 'Tekton Pro Cond',\r\n    value: 'Tekton Pro Cond',\r\n  },\r\n  {\r\n    name: 'Tekton Pro Ext',\r\n    value: 'Tekton Pro Ext',\r\n  },\r\n  {\r\n    name: 'Teletype',\r\n    value: 'Teletype',\r\n    fileNames: ['teletype_regular.ttf'],\r\n  },\r\n  {\r\n    name: 'Telugu MN',\r\n    value: 'Telugu MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Telugu Sangam MN',\r\n    value: 'Telugu Sangam MN',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Tempus Sans ITC',\r\n    value: 'Tempus Sans ITC',\r\n  },\r\n  {\r\n    name: 'Terminal',\r\n    value: 'Terminal',\r\n  },\r\n  {\r\n    name: 'Thonburi',\r\n    value: 'Thonburi',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Tibetan Machine Uni',\r\n    value: 'Tibetan Machine Uni',\r\n    fileNames: ['tibetan_machine_uni.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Times New Roman',\r\n    value: 'Times New Roman',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Times New Roman Baltic',\r\n    value: 'Times New Roman Baltic',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Times New Roman CE',\r\n    value: 'Times New Roman CE',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Times New Roman Cyr',\r\n    value: 'Times New Roman Cyr',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Times New Roman Greek',\r\n    value: 'Times New Roman Greek',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Times New Roman TUR',\r\n    value: 'Times New Roman TUR',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Tlwg Mono',\r\n    value: 'Tlwg Mono',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Tlwg Typewriter',\r\n    value: 'Tlwg Typewriter',\r\n    fileNames: ['tlwgtypewriter.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Tlwg Typist',\r\n    value: 'Tlwg Typist',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Tlwg Typo',\r\n    value: 'Tlwg Typo',\r\n    fileNames: ['tlwg_typo.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Traditional Arabic',\r\n    value: 'Traditional Arabic',\r\n  },\r\n  {\r\n    name: 'Trajan',\r\n    value: 'Trajan',\r\n  },\r\n  {\r\n    name: 'Trajan Pro',\r\n    value: 'Trajan Pro',\r\n  },\r\n  {\r\n    name: 'Trattatello',\r\n    value: 'Trattatello',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Trebuchet MS',\r\n    value: 'Trebuchet MS',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Tubular',\r\n    value: 'Tubular',\r\n    fileNames: ['tubular_regular.ttf'],\r\n  },\r\n  {\r\n    name: 'Tunga',\r\n    value: 'Tunga',\r\n  },\r\n  {\r\n    name: 'Tw Cen MT',\r\n    value: 'Tw Cen MT',\r\n  },\r\n  {\r\n    name: 'Tw Cen MT Condensed',\r\n    value: 'Tw Cen MT Condensed',\r\n  },\r\n  {\r\n    name: 'Tw Cen MT Condensed Extra Bold',\r\n    value: 'Tw Cen MT Condensed Extra Bold',\r\n  },\r\n  {\r\n    name: 'Txt',\r\n    value: 'Txt',\r\n  },\r\n  {\r\n    name: 'TypoUpright BT',\r\n    value: 'TypoUpright BT',\r\n  },\r\n  {\r\n    name: 'URW Bookman L',\r\n    value: 'URW Gothic L',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Ubuntu',\r\n    value: 'Ubuntu',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Ubuntu',\r\n    value: 'Ubuntu',\r\n    fileNames: ['ubuntu_bold.ttf', 'ubuntu_bold_italic.ttf', 'ubuntu_italic.ttf', 'ubuntu_regular.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Umpush',\r\n    value: 'Umpush',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Unicorn',\r\n    value: 'Unicorn',\r\n    fileNames: ['unicorn_regular.ttf'],\r\n  },\r\n  {\r\n    name: 'Univers',\r\n    value: 'Univers',\r\n    fileNames: ['univers.otf'],\r\n  },\r\n  {\r\n    name: 'Univers Condensed',\r\n    value: 'Univers Condensed',\r\n  },\r\n  {\r\n    name: 'UniversalMath1 BT',\r\n    value: 'UniversalMath1 BT',\r\n  },\r\n  {\r\n    name: 'Uroob',\r\n    value: 'Uroob',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Utsaah',\r\n    value: 'Utsaah',\r\n  },\r\n  {\r\n    name: 'Vagabond',\r\n    value: 'Vagabond',\r\n  },\r\n  {\r\n    name: 'Vani',\r\n    value: 'Vani',\r\n  },\r\n  {\r\n    name: 'Vemana2000',\r\n    value: 'Vemana2000',\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Verdana',\r\n    value: 'Verdana',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Vijaya',\r\n    value: 'Vijaya',\r\n  },\r\n  {\r\n    name: 'Viner Hand ITC',\r\n    value: 'Viner Hand ITC',\r\n  },\r\n  {\r\n    name: 'Vineta BT',\r\n    value: 'Vineta BT',\r\n  },\r\n  {\r\n    name: 'Vivaldi',\r\n    value: 'Vivaldi',\r\n  },\r\n  {\r\n    name: 'Vladimir Script',\r\n    value: 'Vladimir Script',\r\n  },\r\n  {\r\n    name: 'Vrinda',\r\n    value: 'Vrinda',\r\n  },\r\n  {\r\n    name: 'WP Arabic Sihafa',\r\n    value: 'WP Arabic Sihafa',\r\n    fileNames: ['wp_arabic_sihafa.ttf'],\r\n  },\r\n  {\r\n    name: 'WP ArabicScript Sihafa',\r\n    value: 'WP ArabicScript Sihafa',\r\n    fileNames: ['wp_arabicscript_sihafa.ttf'],\r\n  },\r\n  {\r\n    name: 'WP CyrillicA',\r\n    value: 'WP CyrillicA',\r\n    fileNames: ['wp_cyrillica.ttf'],\r\n  },\r\n  {\r\n    name: 'WP CyrillicB',\r\n    value: 'WP CyrillicB',\r\n    fileNames: ['wp_cyrillicb.ttf'],\r\n  },\r\n  {\r\n    name: 'WP Greek Century',\r\n    value: 'WP Greek Century',\r\n    fileNames: ['wp_greek_century.ttf'],\r\n  },\r\n  {\r\n    name: 'WP Greek Courier',\r\n    value: 'WP Greek Courier',\r\n    fileNames: ['wp_greek_courier.ttf'],\r\n  },\r\n  {\r\n    name: 'WP Greek Helve',\r\n    value: 'WP Greek Helve',\r\n    fileNames: ['wp_greek_helve.ttf'],\r\n  },\r\n  {\r\n    name: 'WP Hebrew David',\r\n    value: 'WP Hebrew David',\r\n    fileNames: ['wp_hebrew_david.ttf'],\r\n  },\r\n  {\r\n    name: 'WP MultinationalA Courier',\r\n    value: 'WP MultinationalA Courier',\r\n    fileNames: ['wp_multinationala_courier.ttf'],\r\n  },\r\n  {\r\n    name: 'WP MultinationalA Helve',\r\n    value: 'WP MultinationalA Helve',\r\n    fileNames: ['wp_multinationala_helve.ttf'],\r\n  },\r\n  {\r\n    name: 'WP MultinationalA Roman',\r\n    value: 'WP MultinationalA Roman',\r\n    fileNames: ['wp_multinationala_roman.ttf'],\r\n  },\r\n  {\r\n    name: 'WP MultinationalB Courier',\r\n    value: 'WP MultinationalB Courier',\r\n    fileNames: ['wp_multinationalb_courier.ttf'],\r\n  },\r\n  {\r\n    name: 'WP MultinationalB Helve',\r\n    value: 'WP MultinationalB Helve',\r\n    fileNames: ['wp_multinationalb_helve.ttf'],\r\n  },\r\n  {\r\n    name: 'WP MultinationalB Roman',\r\n    value: 'WP MultinationalB Roman',\r\n    fileNames: ['wp_multinationalb_roman.ttf'],\r\n  },\r\n  {\r\n    name: 'WST_Czec',\r\n    value: 'WST_Czec',\r\n  },\r\n  {\r\n    name: 'WST_Engl',\r\n    value: 'WST_Engl',\r\n  },\r\n  {\r\n    name: 'WST_Fren',\r\n    value: 'WST_Fren',\r\n  },\r\n  {\r\n    name: 'WST_Germ',\r\n    value: 'WST_Germ',\r\n  },\r\n  {\r\n    name: 'WST_Ital',\r\n    value: 'WST_Ital',\r\n  },\r\n  {\r\n    name: 'WST_Span',\r\n    value: 'WST_Span',\r\n  },\r\n  {\r\n    name: 'WST_Swed',\r\n    value: 'WST_Swed',\r\n  },\r\n  {\r\n    name: 'Waree',\r\n    value: 'Waree',\r\n    fileNames: ['waree.ttf'],\r\n    os: ['lin'],\r\n  },\r\n  {\r\n    name: 'Waseem',\r\n    value: 'Waseem',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Webdings',\r\n    value: 'Webdings',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Westminster',\r\n    value: 'Westminster',\r\n  },\r\n  {\r\n    name: 'Whitney',\r\n    value: 'Whitney',\r\n  },\r\n  {\r\n    name: 'Wide Latin',\r\n    value: 'Wide Latin',\r\n  },\r\n  {\r\n    name: 'Wingdings',\r\n    value: 'Wingdings',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Wingdings 2',\r\n    value: 'Wingdings 2',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Wingdings 3',\r\n    value: 'Wingdings 3',\r\n    os: ['win', 'mac'],\r\n  },\r\n  {\r\n    name: 'Yu Gothic',\r\n    value: 'Yu Gothic',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Yu Gothic UI',\r\n    value: 'Yu Gothic UI',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'Zapf Dingbats',\r\n    value: 'Zapf Dingbats',\r\n    os: ['win'],\r\n  },\r\n  {\r\n    name: 'ZapfEllipt BT',\r\n    value: 'ZapfEllipt BT',\r\n  },\r\n  {\r\n    name: 'ZapfHumnst BT',\r\n    value: 'ZapfHumnst BT',\r\n  },\r\n  {\r\n    name: 'ZapfHumnst Dm BT',\r\n    value: 'ZapfHumnst Dm BT',\r\n  },\r\n  {\r\n    name: 'Zapfino',\r\n    value: 'Zapfino',\r\n    os: ['mac'],\r\n  },\r\n  {\r\n    name: 'Zurich BlkEx BT',\r\n    value: 'Zurich BlkEx BT',\r\n  },\r\n  {\r\n    name: 'Zurich Ex BT',\r\n    value: 'Zurich Ex BT',\r\n  },\r\n  {\r\n    name: 'ZWAdobeF',\r\n    value: 'ZWAdobeF',\r\n  },\r\n];\r\n","import crypto from 'crypto';\r\nimport { copyFile, mkdir, readdir, readFile, rename, rm, writeFile, access } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport { CommonDataManager } from './common-data-manager';\r\nimport fonts from '../../fonts';\r\nimport {\r\n  ICalculateIdProps,\r\n  IComposeFonts,\r\n  IExtSettings,\r\n  IExtsSettings,\r\n  ISetPathAndRemoveProps,\r\n  IUploadProfileData,\r\n} from '../interfaces/browser.user-data.manager.interfaces';\r\nimport { ISignedS3UrlObj } from '../interfaces/close-orbita.interfaces';\r\nimport { downloadWithRetry } from '../utils/downloadWithRetry';\r\nimport { makeRequest } from '../utils/make-request';\r\nimport {\r\n  getPathOs,\r\n  GOLOGIN_BASE_FOLDER_NAME,\r\n  GOLOGIN_TEST_FOLDER_NAME,\r\n  BROWSER_PATH,\r\n} from '../utils/path-platforms';\r\nimport { sendCommonErrorToSentry, sendErrorToSentry } from '../utils/sentry';\r\nimport { osPlatform } from '../utils/userOs';\r\nimport { extIdEncoding, getRootDirectory } from '../utils/utils';\r\nimport withRetry from '../utils/with-retry';\r\n\r\nconst FONTS_DIR_NAME = 'fonts';\r\nconst DEFAULT_ORBITA_EXTENSIONS_NAMES = ['Google Hangouts', 'Chromium PDF Viewer', 'CryptoTokenExtension', 'Web Store'];\r\nconst FONTS_URL = 'https://fonts.gologin.com/';\r\n\r\nconst pathOs = getPathOs();\r\n\r\nexport class BrowserUserDataManager {\r\n  static instance: any;\r\n\r\n  #commonDataManagerInst = new CommonDataManager();\r\n\r\n  constructor() {\r\n    if (!BrowserUserDataManager.instance) {\r\n      BrowserUserDataManager.instance = this;\r\n    }\r\n\r\n    return BrowserUserDataManager.instance;\r\n  }\r\n\r\n  uploadProfileData(props: IUploadProfileData): Promise<{ s3: ISignedS3UrlObj; extensionsToAdd: string[] }> {\r\n    const {\r\n      browserId,\r\n      passwords = [],\r\n      cookies = [],\r\n      extensionsIds = [],\r\n      bookmarks = {},\r\n      fileSize,\r\n      cf = false,\r\n      hk = false,\r\n    } = props;\r\n\r\n    const body = {\r\n      passwords,\r\n      cookies,\r\n      extensionsIds,\r\n      bookmarks,\r\n      fileSize,\r\n      cf,\r\n      hk,\r\n      isCookiesEncrypted: true,\r\n      isStorageGateway: true,\r\n    };\r\n\r\n    const url = `${this.#commonDataManagerInst.apiBaseUrl}/browser/features/profile/${browserId}/update_after_close?isCookiesEncrypted=true`;\r\n\r\n    return withRetry<{ s3: ISignedS3UrlObj; extensionsToAdd: string[] }>({\r\n      fn() {\r\n        return makeRequest(\r\n          {\r\n            url,\r\n            method: 'POST',\r\n            body,\r\n            timeoutDetailed: {\r\n              socket: 10000,\r\n            },\r\n          },\r\n        );\r\n      },\r\n      retryDelay: 300,\r\n    });\r\n  }\r\n\r\n  async downloadFonts(fontsList: string[], getAllFonts = false): Promise<void> {\r\n    const browserFontsPath = path.join(BROWSER_PATH, FONTS_DIR_NAME);\r\n    await mkdir(browserFontsPath, { recursive: true });\r\n\r\n    if (getAllFonts) {\r\n      fontsList = fonts.map((fontObj => fontObj.fileNames)).filter(Boolean).flat() as string[];\r\n      fontsList.push('LICENSE.txt');\r\n      fontsList.push('OFL.txt');\r\n    }\r\n\r\n    const files = await readdir(browserFontsPath);\r\n    const fontsToDownload = fontsList.filter(font => !files.includes(font));\r\n\r\n    const promises = fontsToDownload.map(font => downloadWithRetry({\r\n      url: FONTS_URL + font,\r\n      destFile: path.join(browserFontsPath, font),\r\n    }).catch((error: unknown) => {\r\n      console.log(error);\r\n      const message = error instanceof Error ? error.message : error;\r\n      !getAllFonts && sendCommonErrorToSentry({\r\n        message, transactionName: 'download-fonts',\r\n        tags: [['scenario', 'start-app']],\r\n      });\r\n    }));\r\n\r\n    if (promises.length) {\r\n      await Promise.all(promises);\r\n    }\r\n\r\n    console.log('fonts downloading completed');\r\n  }\r\n\r\n  async copyFontsToProfileFolder(fontsList: string[], profilePath: string): Promise<void> {\r\n    const browserFontsPath = path.join(BROWSER_PATH, FONTS_DIR_NAME);\r\n    const promises = fontsList.map((font) => withRetry({\r\n      fn() {\r\n        const targetFontName = font.replace('.otf', '.ttf');\r\n\r\n        return copyFile(path.join(browserFontsPath, font), path.join(profilePath, FONTS_DIR_NAME, targetFontName));\r\n      },\r\n      retryDelay: 100,\r\n      limit: 100,\r\n    }));\r\n\r\n    await Promise.all(promises);\r\n  }\r\n\r\n  async composeFonts(props: IComposeFonts): Promise<void> {\r\n    const { fontsList = [], profilePath, differentOs = false, startProfileTransactionSentry = {} } = props;\r\n    if (!(fontsList.length && profilePath)) {\r\n      return;\r\n    }\r\n\r\n    const composeFontsSentrySpan = startProfileTransactionSentry.startChild({ op: 'download-fonts' });\r\n\r\n    const fontsToDownload = fonts\r\n      .filter((fontObj) => {\r\n        if (\r\n          ['Liberation Mono', 'Liberation Sans', 'Liberation Serif'].includes(fontObj.value) &&\r\n          differentOs\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        return fontsList.includes(fontObj.value);\r\n      })\r\n      .reduce((res: string[], elem) => res.concat(elem.fileNames || []), []);\r\n\r\n    if (differentOs && !fontsToDownload.length) {\r\n      throw new Error('No fonts to download found. Please select at least 1 font in Fonts settings');\r\n    }\r\n\r\n    startProfileTransactionSentry.tags = { ...startProfileTransactionSentry.tags, 'fonts-count': fontsToDownload.length };\r\n\r\n    fontsToDownload.push('LICENSE.txt');\r\n    fontsToDownload.push('OFL.txt');\r\n\r\n    const pathToFontsDir = path.join(profilePath, FONTS_DIR_NAME);\r\n    await rm(pathToFontsDir, { recursive: true }).catch(() => null);\r\n\r\n    await mkdir(pathToFontsDir, { recursive: true });\r\n    await this.downloadFonts(fontsToDownload);\r\n    await this.copyFontsToProfileFolder(fontsToDownload, profilePath);\r\n\r\n    if (osPlatform === 'linux') {\r\n      await this.copyFontsConfigFile(profilePath);\r\n    }\r\n\r\n    composeFontsSentrySpan.finish();\r\n  }\r\n\r\n  async copyFontsConfigFile(profilePath: string): Promise<void> {\r\n    if (!profilePath) {\r\n      return;\r\n    }\r\n\r\n    const dirname = getRootDirectory();\r\n    const fileContent = await readFile(path.resolve(dirname, 'fonts_config'), 'utf-8');\r\n    const result = fileContent.replace(/\\$\\$GOLOGIN_FONTS\\$\\$/g, path.join(profilePath, FONTS_DIR_NAME));\r\n\r\n    const defaultFolderPath = path.join(profilePath, 'Default');\r\n    await mkdir(defaultFolderPath, { recursive: true });\r\n    await writeFile(path.join(defaultFolderPath, 'fonts_config'), result, { mode: 0o666 });\r\n  }\r\n\r\n  async getProfileChromeExtensions(profilePreferencesPath: string): Promise<string[]> {\r\n    const profileChromeExtensions: string[] = [];\r\n    if (!profilePreferencesPath) {\r\n      return profileChromeExtensions;\r\n    }\r\n\r\n    const fileContent = await readFile(profilePreferencesPath, 'utf-8');\r\n    const settings = JSON.parse(fileContent);\r\n    const extensionsSettingsObj = settings?.extensions || { settings: {} };\r\n    const extensionsSettings = extensionsSettingsObj.settings || {};\r\n    const extensionsEntries = Object.entries(extensionsSettings);\r\n    if (!extensionsEntries.length) {\r\n      return profileChromeExtensions;\r\n    }\r\n\r\n    const currentExtensions: string[] = [];\r\n\r\n    extensionsEntries.forEach((extensionObj: [string, any]) => {\r\n      const [extensionsId, extensionsContent] = extensionObj;\r\n      const { path: extPath = '' } = extensionsContent;\r\n      const formattedPath = extPath.replace(/\\\\|@/g, '/');\r\n      const regex = new RegExp(`^${extensionsId}|chrome-extensions/\\\\w+`);\r\n      const pathMatch = formattedPath.match(regex);\r\n\r\n      if (!pathMatch) {\r\n        return;\r\n      }\r\n\r\n      currentExtensions.push(extensionsId);\r\n      const [matched] = pathMatch;\r\n      const [originalExtId] = matched.split('/').reverse();\r\n      if (profileChromeExtensions.includes(originalExtId)) {\r\n        return;\r\n      }\r\n\r\n      profileChromeExtensions.push(originalExtId);\r\n    });\r\n\r\n    await this.deleteUselessExtensionSettings(currentExtensions, profilePreferencesPath).catch(() => null);\r\n\r\n    return profileChromeExtensions;\r\n  }\r\n\r\n  async deleteUselessExtensionSettings(currentExtensions: string[], preferencesPath: string): Promise<void> {\r\n    const profilePath = path.normalize(path.join(preferencesPath, '..'));\r\n    const localExtensionSettingsPath = path.join(profilePath, 'Local Extension Settings');\r\n    const existingExtensionSettings = await readdir(localExtensionSettingsPath);\r\n\r\n    const deletePromises = existingExtensionSettings.map(async (extId) => {\r\n      if (!currentExtensions.includes(extId)) {\r\n        await rm(path.join(localExtensionSettingsPath, extId), { recursive: true });\r\n      }\r\n    });\r\n\r\n    await Promise.all(deletePromises);\r\n  }\r\n\r\n  async setExtPathsAndRemoveDeleted(props: ISetPathAndRemoveProps): Promise<IExtsSettings> {\r\n    const { settings = { extensions: {} }, profileExtensionsCheckRes = [], profileId = '' } = props;\r\n    const formattedLocalExtArray = profileExtensionsCheckRes.map((el: string) => {\r\n      const [extFolderName = ''] = el.split(path.sep).reverse();\r\n      const [originalId] = extFolderName.split('@');\r\n      if (!originalId) {\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        path: el,\r\n        originalId,\r\n      };\r\n    }).filter(Boolean);\r\n\r\n    const extensionsSettings: IExtsSettings = settings.extensions.settings || {};\r\n    const extensionsEntries = Object.entries(extensionsSettings);\r\n\r\n    const promises = extensionsEntries.map(async (extensionObj: [string, IExtSettings]) => {\r\n      let [extensionId] = extensionObj;\r\n      const [_, currentExtSettings = { manifest: {}, path: '' }] = extensionObj;\r\n      const extName = currentExtSettings.manifest?.name || '';\r\n      let extPath = currentExtSettings.path || '';\r\n      let originalId = '';\r\n\r\n      const isExtensionToBeDeleted = ['resources', 'passwords-ext', 'cookies-ext'].some(substring => extPath.includes(substring))\r\n        && [GOLOGIN_BASE_FOLDER_NAME, GOLOGIN_TEST_FOLDER_NAME].some(substring => extPath.includes(substring))\r\n        || DEFAULT_ORBITA_EXTENSIONS_NAMES.includes(extName)\r\n        && [GOLOGIN_BASE_FOLDER_NAME, GOLOGIN_TEST_FOLDER_NAME].some(substring => extPath.includes(substring));\r\n\r\n      if (isExtensionToBeDeleted) {\r\n        delete extensionsSettings[extensionId];\r\n\r\n        return;\r\n      }\r\n\r\n      if (osPlatform === 'win32') {\r\n        extPath = extPath.replace(/\\//g, '\\\\');\r\n      } else {\r\n        extPath = extPath.replace(/\\\\/g, '/');\r\n      }\r\n\r\n      extensionsSettings[extensionId].path = extPath;\r\n\r\n      const splittedPath = extPath.split(path.sep);\r\n      const isExtensionManageable = ['chrome-extensions', 'user-extensions'].some(substring => extPath.includes(substring))\r\n        && [GOLOGIN_BASE_FOLDER_NAME, GOLOGIN_TEST_FOLDER_NAME].some(substring => extPath.includes(substring));\r\n\r\n      if (isExtensionManageable) {\r\n        const [extFolderName] = extPath.split(path.sep).reverse();\r\n        [originalId] = extFolderName.split('@');\r\n      } else if (splittedPath.length === 2) {\r\n        [originalId] = splittedPath;\r\n      }\r\n\r\n      if (isExtensionManageable || splittedPath.length === 2) {\r\n        const isExtensionInProfileSettings = formattedLocalExtArray.find((el: IExtSettings | null) => el?.path?.includes(originalId));\r\n        if (!isExtensionInProfileSettings) {\r\n          delete extensionsSettings[extensionId];\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      const localExtObj = originalId && formattedLocalExtArray.find((el: IExtSettings | null) => el?.path?.includes(originalId));\r\n      if (!localExtObj) {\r\n        return;\r\n      }\r\n\r\n      const initialExtName = extensionId;\r\n\r\n      extensionId = await this.recalculateId({\r\n        localExtObj, extensionId, extensionsSettings, currentExtSettings,\r\n      });\r\n\r\n      if (initialExtName !== extensionId) {\r\n        const profilePath = pathOs.PROFILES_DIR + profileId;\r\n\r\n        const extensionSettingsFolder = await this.getExtensionSettingsFolder(profilePath, initialExtName);\r\n\r\n        if (extensionSettingsFolder) {\r\n          const extSyncFolder = path.join(profilePath, 'Default', extensionSettingsFolder, initialExtName);\r\n          const newSyncFolder = path.join(profilePath, 'Default', extensionSettingsFolder, extensionId);\r\n\r\n          const renameResult = await rename(extSyncFolder, newSyncFolder).catch(async (error: unknown) => {\r\n            const isError = error instanceof Error;\r\n            const message = isError ? error.message : JSON.stringify(error);\r\n            // если папки нет - это не ошибка\r\n            if (message.includes('ENOENT')) {\r\n              return;\r\n            }\r\n\r\n            // если ошибка ENOTEMPTY значит папка с новым именем уже существует\r\n            if (message.includes('ENOTEMPTY')) {\r\n              return 'ENOTEMPTY';\r\n            }\r\n\r\n            sendCommonErrorToSentry({\r\n              message, transactionName: 'extensions-cache-folder-rename-error',\r\n              tags: [['scenario', 'run-profile'], ['name', 'extensions-cache-folder-rename-error']],\r\n            });\r\n          });\r\n\r\n          if (renameResult === 'ENOTEMPTY') {\r\n            console.log('trying to delete existing folder');\r\n            await rm(newSyncFolder, { recursive: true }).catch(() => null);\r\n\r\n            await rename(extSyncFolder, newSyncFolder).catch(async (error: unknown) => {\r\n              const isError = error instanceof Error;\r\n              const message = isError ? error.message : JSON.stringify(error);\r\n              // если папки нет - это не ошибка\r\n              if (message.includes('ENOENT')) {\r\n                return;\r\n              }\r\n\r\n              sendCommonErrorToSentry({\r\n                message, transactionName: 'extensions-cache-folder-rename-error',\r\n                tags: [['scenario', 'run-profile'], ['name', 'extensions-cache-folder-rename-error']],\r\n              });\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      if (localExtObj.path.endsWith('.zip')) {\r\n        localExtObj.path = localExtObj.path.replace('.zip', '');\r\n      }\r\n\r\n      extensionsSettings[extensionId].path = localExtObj.path || '';\r\n    });\r\n\r\n    return Promise.all(promises).then(() => extensionsSettings);\r\n  }\r\n\r\n  async setOriginalExtPaths(settings: IExtSettings = { path: '' }, originalExtensionsFolder = ''): Promise<IExtSettings | null> {\r\n    if (!originalExtensionsFolder) {\r\n      return null;\r\n    }\r\n\r\n    const extensionsSettings = settings.extensions?.settings || {};\r\n    const extensionsEntries = Object.entries(extensionsSettings);\r\n\r\n    const originalExtensionsList = await readdir(originalExtensionsFolder).catch(() => []);\r\n    if (!originalExtensionsList.length) {\r\n      return null;\r\n    }\r\n\r\n    const promises = originalExtensionsList.map(async (originalId: string) => {\r\n      const extFolderPath = path.join(originalExtensionsFolder, originalId);\r\n      const extFolderContent = await readdir(extFolderPath);\r\n      if (!extFolderPath.length) {\r\n        return {};\r\n      }\r\n\r\n      if (extFolderContent.includes('manifest.json')) {\r\n        return {\r\n          originalId,\r\n          path: path.join(originalExtensionsFolder, originalId),\r\n        };\r\n      }\r\n\r\n      const [version] = extFolderContent;\r\n\r\n      return {\r\n        originalId,\r\n        path: path.join(originalExtensionsFolder, originalId, version),\r\n      };\r\n    });\r\n\r\n    const originalExtPaths = await Promise.all(promises);\r\n\r\n    extensionsEntries.forEach((extensionObj) => {\r\n      const [extensionsId] = extensionObj;\r\n      const extPath = extensionsSettings[extensionsId].path;\r\n      if (!/chrome-extensions/.test(extPath)) {\r\n        return;\r\n      }\r\n\r\n      const originalExtPath = originalExtPaths.find(el => el.originalId === extensionsId);\r\n      if (!originalExtPath) {\r\n        return;\r\n      }\r\n\r\n      extensionsSettings[extensionsId].path = originalExtPath.path || '';\r\n    });\r\n\r\n    return extensionsSettings;\r\n  }\r\n\r\n  async recalculateId(props: ICalculateIdProps): Promise<string> {\r\n    const { localExtObj, extensionsSettings, currentExtSettings } = props;\r\n    let { extensionId } = props;\r\n\r\n    if (props.currentExtSettings.manifest?.key) {\r\n      return extensionId;\r\n    }\r\n\r\n    const manifestFilePath = path.join(localExtObj.path, 'manifest.json');\r\n    const manifestString = await readFile(manifestFilePath, { encoding: 'utf8' }).catch(() => '');\r\n\r\n    if (!manifestString) {\r\n      return extensionId;\r\n    }\r\n\r\n    let manifestObject;\r\n    try {\r\n      manifestObject = JSON.parse(manifestString);\r\n    } catch {\r\n      return extensionId;\r\n    }\r\n\r\n    if (manifestObject.key) {\r\n      return extensionId;\r\n    }\r\n\r\n    let encoding = 'utf8';\r\n    if (osPlatform === 'win32') {\r\n      encoding = 'utf16le';\r\n    }\r\n\r\n    const extPathToEncode = Buffer.from(localExtObj.path, encoding as BufferEncoding);\r\n\r\n    const hexEncodedPath = crypto.createHash('sha256').update(extPathToEncode).digest('hex');\r\n    const newId = hexEncodedPath.split('').slice(0, 32).map(symbol => extIdEncoding[symbol]).join('');\r\n    if (extensionId !== newId) {\r\n      delete extensionsSettings[extensionId];\r\n\r\n      extensionsSettings[newId] = currentExtSettings;\r\n      extensionId = newId;\r\n    }\r\n\r\n    return extensionId;\r\n  }\r\n\r\n  async getExtensionSettingsFolder(profilePath: string, initialExtensionId: string): Promise<string> {\r\n    const localFolderPath = path.join(profilePath, 'Default', 'Local Extension Settings', initialExtensionId);\r\n    const syncFolderPath = path.join(profilePath, 'Default', 'Sync Extension Settings', initialExtensionId);\r\n\r\n    switch (true) {\r\n      case (await access(localFolderPath).then(() => true, () => false)):\r\n        return 'Local Extension Settings';\r\n      case (await access(syncFolderPath).then(() => true, () => false)):\r\n        return 'Sync Extension Settings';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n}\r\n","import { API_BASE_URL } from '../../common/constants/constants';\r\nimport { IAppConfigRecord } from '../interfaces/app-config.interfaces';\r\nimport { UserOS } from '../interfaces/common-data-manager.interfaces';\r\nimport { loadAppConfig } from '../utils/app-config.utils';\r\nimport { getGologinMetaHeader, getOS } from '../utils/userOs';\r\n\r\nexport class CommonDataManager {\r\n  #API_BASE_URL = API_BASE_URL;\r\n\r\n  static instance: any;\r\n\r\n  #ACCESS_TOKEN = '';\r\n  #USER_AGENT = '';\r\n  #TWO_FA_KEY = '';\r\n  #OS_WITH_M1 = '';\r\n  #META_HEADER = '';\r\n  #userPlanId = '';\r\n  #APP_CONFIG: IAppConfigRecord = {};\r\n  createCookiesTableQuery = `CREATE TABLE cookies(\r\n        creation_utc INTEGER NOT NULL,\r\n        top_frame_site_key TEXT NOT NULL,\r\n        host_key TEXT NOT NULL,\r\n        name TEXT NOT NULL,\r\n        value TEXT NOT NULL,\r\n        encrypted_value BLOB NOT NULL,\r\n        path TEXT NOT NULL,\r\n        expires_utc INTEGER NOT NULL,\r\n        is_secure INTEGER NOT NULL,\r\n        is_httponly INTEGER NOT NULL,\r\n        last_access_utc INTEGER NOT NULL,\r\n        has_expires INTEGER NOT NULL,\r\n        is_persistent INTEGER NOT NULL,\r\n        priority INTEGER NOT NULL,\r\n        samesite INTEGER NOT NULL,\r\n        source_scheme INTEGER NOT NULL,\r\n        source_port INTEGER NOT NULL,\r\n        is_same_party INTEGER,\r\n        last_update_utc INTEGER NOT NULL,\r\n        source_type INTEGER,\r\n        has_cross_site_ancestor INTEGER\r\n      );`;\r\n\r\n  constructor() {\r\n    if (!CommonDataManager.instance) {\r\n      CommonDataManager.instance = this;\r\n\r\n      this.getUserOS().then(res => {\r\n        this.#OS_WITH_M1 = res || '';\r\n      });\r\n\r\n      getGologinMetaHeader().then((result) => {\r\n        this.#META_HEADER = result;\r\n      });\r\n\r\n      loadAppConfig()\r\n        .then((result) => {\r\n          if (result) {\r\n            this.#APP_CONFIG = result;\r\n            console.log('Loaded config:', result);\r\n          }\r\n        })\r\n        .catch(() => null);\r\n    }\r\n\r\n    return CommonDataManager.instance;\r\n  }\r\n\r\n  getUserOS(): Promise<UserOS | null> {\r\n    return getOS().then(res => res).catch(() => null);\r\n  }\r\n\r\n  get userAgent(): string {\r\n    return this.#USER_AGENT;\r\n  }\r\n\r\n  set userAgent(userAgent) {\r\n    if (!userAgent) {\r\n      return;\r\n    }\r\n\r\n    this.#USER_AGENT = userAgent;\r\n  }\r\n\r\n  get userPlanId(): string {\r\n    return this.#userPlanId;\r\n  }\r\n\r\n  set userPlanId(userPlanId) {\r\n    this.#userPlanId = userPlanId;\r\n  }\r\n\r\n  get accessToken(): string {\r\n    return this.#ACCESS_TOKEN;\r\n  }\r\n\r\n  set accessToken(accessToken) {\r\n    this.#ACCESS_TOKEN = accessToken;\r\n  }\r\n\r\n  get twoFaKey(): string {\r\n    return this.#TWO_FA_KEY;\r\n  }\r\n\r\n  set twoFaKey(twoFaKey) {\r\n    if (!twoFaKey) {\r\n      return;\r\n    }\r\n\r\n    this.#TWO_FA_KEY = twoFaKey;\r\n  }\r\n\r\n  get apiBaseUrl(): string {\r\n    return this.#API_BASE_URL;\r\n  }\r\n\r\n  get userOs(): string {\r\n    return this.#OS_WITH_M1;\r\n  }\r\n\r\n  get metaHeader(): string {\r\n    return this.#META_HEADER;\r\n  }\r\n\r\n  get appConfig(): IAppConfigRecord {\r\n    return this.#APP_CONFIG;\r\n  }\r\n\r\n  set appConfig(config: IAppConfigRecord) {\r\n    if (!config) {\r\n      return;\r\n    }\r\n\r\n    this.#APP_CONFIG = config;\r\n  }\r\n}\r\n","import { copyFile, stat } from 'fs/promises';\r\n\r\nimport {\r\n  loadCookiesFromFile,\r\n  removeCookiesFile,\r\n  saveCookiesToFile,\r\n} from '../../electron/utils/crypto/cookies-decryptor';\r\nimport { IUserCookiesData } from '../interfaces/browser.user-data.manager.interfaces';\r\nimport { checkLocalServer } from '../utils/crypto/methods';\r\nimport { getPathOs } from '../utils/path-platforms';\r\n\r\nconst paths = getPathOs();\r\n\r\nexport class CookiesManager {\r\n  static async prepareCookies(profileId: string, cookiesData: IUserCookiesData, cookiesFilePath: string): Promise<void> {\r\n    const { checkCookies } = cookiesData;\r\n    const { clearCookies } = cookiesData;\r\n    const { userCookies } = cookiesData;\r\n\r\n    if (clearCookies) {\r\n      return removeCookiesFile(cookiesFilePath);\r\n    }\r\n\r\n    if (!(userCookies || checkCookies)) {\r\n      return;\r\n    }\r\n\r\n    const cookiesFileReq = await loadCookiesFromFile(cookiesFilePath);\r\n    const { cookies: cookiesFromFile } = cookiesFileReq;\r\n    const localServerAvailable = await checkLocalServer(profileId);\r\n    console.log('localServerAvailable:', localServerAvailable);\r\n    console.log('cookies.length:', cookiesFromFile.length);\r\n\r\n    if (userCookies || cookiesFromFile.length < 2 || !localServerAvailable) {\r\n      const serverCookies = cookiesData.cookies || [];\r\n\r\n      console.log('serverCookies.length:', serverCookies.length);\r\n      if (serverCookies.length) {\r\n        return saveCookiesToFile({\r\n          cookiesFromFile, serverCookies, profileId, cookiesFilePath,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  static async copyCookiesFile(fromPath: string, profileId: string): Promise<void> {\r\n    const destPath = fromPath.includes(paths.COOKIES_FILE_NEW)\r\n      ? paths.PROFILES_DIR + profileId + paths.COOKIES_FILE\r\n      : paths.PROFILES_DIR + profileId + paths.COOKIES_FILE_NEW;\r\n\r\n    await copyFile(fromPath, destPath);\r\n  }\r\n\r\n  static async getCookiesFileToRead(profileId: string): Promise<string> {\r\n    const basePath = paths.PROFILES_DIR + profileId;\r\n    const defaultPath = basePath + paths.COOKIES_FILE;\r\n    const networkPath = basePath + paths.COOKIES_FILE_NEW;\r\n\r\n    const promises = [defaultPath, networkPath].map(async (path) => {\r\n      const stats = await stat(path).catch(() => ({ mtimeMs: 0 }));\r\n\r\n      return stats.mtimeMs;\r\n    });\r\n\r\n    const [defaultPathLastMod, networkPathLastMod] = await Promise.all(promises);\r\n\r\n    if (!(defaultPathLastMod || networkPathLastMod)) {\r\n      return '';\r\n    }\r\n\r\n    return defaultPathLastMod > networkPathLastMod ? defaultPath : networkPath;\r\n  }\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"zip-dir\");","import EventEmitter from 'events';\r\nimport { readdir, rmdir, readFile, stat } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport zipdir from 'zip-dir';\r\n\r\nimport { composeExtractionPromises } from '../helpers/helper.functions';\r\nimport { IAddExtResult, IUserExtData } from '../interfaces/user.extension.manager.interfaces';\r\nimport { downloadWithRetry } from '../utils/downloadWithRetry';\r\nimport { makeRequest } from '../utils/make-request';\r\nimport { CHROME_EXTENSIONS_PATH, USER_EXTENSIONS_PATH } from '../utils/path-platforms';\r\nimport { sendCommonErrorToSentry, sendErrorToSentry } from '../utils/sentry';\r\nimport { checkFileSizeSync, copyFolder } from '../utils/utils';\r\nimport withRetry from '../utils/with-retry';\r\nimport { CommonDataManager } from './common-data-manager';\r\nimport { ExtensionsExtractor } from './utils/extensions-extractor';\r\n\r\nconst MAX_FILE_SIZE = 80 * 1024 * 1024;\r\nconst MAX_FILE_SIZE_MB = MAX_FILE_SIZE / 1024 / 1024;\r\n\r\nexport class UserExtensionsManager {\r\n  #existedUserExtensions: string[] = [];\r\n  #commonDataManagerInst = new CommonDataManager();\r\n  #extensionsInProgress: string[] = [];\r\n  #blockEventEmitter = new EventEmitter();\r\n\r\n  get existedUserExtensions(): string[] {\r\n    return this.#existedUserExtensions;\r\n  }\r\n\r\n  set existedUserExtensions(fileList) {\r\n    if (!fileList) {\r\n      return;\r\n    }\r\n\r\n    this.#existedUserExtensions = fileList;\r\n  }\r\n\r\n  deleteUserExtIdFromInProgress(extIdToDelete: string): void {\r\n    this.#extensionsInProgress = this.#extensionsInProgress.filter(extId => extId !== extIdToDelete);\r\n\r\n    if (!this.#extensionsInProgress.length) {\r\n      this.#blockEventEmitter.emit('unblocked');\r\n    }\r\n  }\r\n\r\n  async addCustomExtension(pathToFiles: string): Promise<IAddExtResult> {\r\n    try {\r\n      const filesSize = await checkFileSizeSync(pathToFiles);\r\n      const isZip = pathToFiles.endsWith('.zip');\r\n\r\n      if (filesSize > MAX_FILE_SIZE) {\r\n        return {\r\n          status: 'error',\r\n          body: {\r\n            key: 'notifications.error.extensionFileSize',\r\n            maxFileSize: MAX_FILE_SIZE_MB,\r\n          },\r\n        };\r\n      }\r\n\r\n      const customId = this.generateExtensionId();\r\n\r\n      if (isZip) {\r\n        const pathToExtract = path.join(USER_EXTENSIONS_PATH, customId);\r\n        await ExtensionsExtractor.extractExtension(pathToFiles, pathToExtract);\r\n        pathToFiles = pathToExtract;\r\n      }\r\n\r\n      let fileList = (await readdir(pathToFiles).catch((error) => {\r\n        console.log(error);\r\n\r\n        return ['cantReadError'];\r\n      }))\r\n        .filter((folderContent: string) => folderContent !== '.DS_Store');\r\n\r\n      if (fileList.length === 1 && !fileList.includes('cantReadError')) {\r\n        const isFolder = (await stat(pathToFiles)).isDirectory();\r\n        if (isFolder) {\r\n          const [folderName] = fileList;\r\n          pathToFiles = path.join(pathToFiles, folderName);\r\n          fileList = await readdir(pathToFiles).catch(() => ['cantReadError']);\r\n        }\r\n      }\r\n\r\n      if (fileList.includes('cantReadError')) {\r\n        throw new Error('notifications.error.extAccessFolderErr');\r\n      }\r\n\r\n      if (!fileList.includes('manifest.json')) {\r\n        if (isZip) {\r\n          rmdir(pathToFiles);\r\n        }\r\n\r\n        throw new Error('notifications.error.missingExtManifestFile');\r\n      }\r\n\r\n      if (!isZip) {\r\n        const destPath = path.join(USER_EXTENSIONS_PATH, customId);\r\n        await copyFolder(pathToFiles, destPath).catch(() => {\r\n          throw new Error('notifications.error.extCopingFolder');\r\n        });\r\n      }\r\n\r\n      const [nameIconId] = await this.getExtensionsNameAndImage([customId], USER_EXTENSIONS_PATH) || [];\r\n\r\n      if (!nameIconId) {\r\n        throw new Error('notifications.error.somethingWentWrongAgainLater');\r\n      }\r\n\r\n      const body = {\r\n        extensionInfo: nameIconId,\r\n      };\r\n\r\n      const extensionUrl = this.#commonDataManagerInst.apiBaseUrl;\r\n\r\n      const dbResult = await withRetry({\r\n        fn() {\r\n          return makeRequest({\r\n            url: `${extensionUrl}/extensions/create_user_extension`, method: 'POST', body, json: false,\r\n            timeout: 30 * 1000,\r\n          });\r\n        },\r\n        retryDelay: 100,\r\n      });\r\n\r\n      // if success - there is no body\r\n      if (dbResult) {\r\n        throw new Error('notifications.error.insertingExtToDBErr');\r\n      }\r\n\r\n      const fileBuffer = await zipdir(pathToFiles).catch(() => null);\r\n      if (!fileBuffer) {\r\n        throw new Error('notifications.error.somethingWentWrongAgainLater');\r\n      }\r\n\r\n      const signedUrl = await makeRequest({\r\n        url: `${this.#commonDataManagerInst.apiBaseUrl}/extensions/upload_url?extId=${customId}`, method: 'GET', json: false,\r\n      }).catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendCommonErrorToSentry({\r\n          message, transactionName: 'custom-extension-upload-url-error',\r\n          tags: [['scenario', 'upload-custom-extensions'], ['name', 'custom-extension-upload-url-error']],\r\n        });\r\n\r\n        return 'error';\r\n      }) as string;\r\n\r\n      if (signedUrl === 'error') {\r\n        return {\r\n          status: 'error',\r\n          message: 'no url',\r\n        };\r\n      }\r\n\r\n      const uploadResponse = await withRetry({\r\n        fn() {\r\n          return makeRequest({\r\n            url: signedUrl,\r\n            headers: {\r\n              'Content-Type': 'application/zip',\r\n              'Content-Length': Buffer.byteLength(fileBuffer),\r\n            },\r\n            body: fileBuffer,\r\n            timeout: 30 * 1000,\r\n            method: 'PUT',\r\n            isBuffer: true,\r\n            json: false,\r\n          });\r\n        },\r\n      }).catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendCommonErrorToSentry({\r\n          message, transactionName: 'upload-custom-extension-to-aws',\r\n          tags: [['scenario', 'upload-custom-extensions'], ['name', 'upload-custom-extension-to-aws']],\r\n        });\r\n\r\n        return {};\r\n      });\r\n\r\n      // if success - there is no body, in case of error - there will be an error in the body\r\n      if (uploadResponse) {\r\n        throw new Error('notifications.error.uploadExtError');\r\n      }\r\n\r\n      this.#existedUserExtensions = [...this.#existedUserExtensions, nameIconId.extId];\r\n\r\n      return {\r\n        status: 'success',\r\n        message: nameIconId,\r\n      };\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : error;\r\n      if (typeof message === 'string' && message === 'notifications.error.missingExtManifestFile') {\r\n        return {\r\n          status: 'error',\r\n          message,\r\n        };\r\n      }\r\n\r\n      sendErrorToSentry({\r\n        message,\r\n        transactionName: 'upload-custom-extensions-global',\r\n        tags: [['scenario', 'upload-custom-extensions']],\r\n      });\r\n\r\n      return {\r\n        status: 'error',\r\n        message,\r\n      };\r\n    }\r\n  }\r\n\r\n  async checkLocalUserChromeExtensions(userChromeExtensions?: string[], profileId = '', isFromExtManager = false): Promise<string[]> {\r\n    if (!(userChromeExtensions && userChromeExtensions.length)) {\r\n      return [];\r\n    }\r\n\r\n    if (!isFromExtManager && this.#extensionsInProgress.length) {\r\n      await new Promise(resolve => this.#blockEventEmitter.on('unblocked', resolve));\r\n    }\r\n\r\n    const downloadedExtensions = await readdir(USER_EXTENSIONS_PATH);\r\n    const extensionsToDownload = userChromeExtensions.filter(extId => !downloadedExtensions.includes(extId));\r\n\r\n    if (!extensionsToDownload.length) {\r\n      return this.getExtStrToIncludeAsOrbitaParam(userChromeExtensions, USER_EXTENSIONS_PATH);\r\n    }\r\n\r\n    if (isFromExtManager) {\r\n      this.#extensionsInProgress.push(userChromeExtensions[0]);\r\n    }\r\n\r\n    const extensionsToDownloadPaths = await makeRequest<string[]>({\r\n      url: `${this.#commonDataManagerInst.apiBaseUrl}/extensions/user_chrome_extensions_paths`,\r\n      body: {\r\n        existedUserChromeExtensions: this.#existedUserExtensions,\r\n        profileId,\r\n        userChromeExtensions: extensionsToDownload,\r\n      },\r\n      method: 'POST',\r\n    }).catch(() => []);\r\n\r\n    const extensionsToDownloadPathsFiltered =\r\n      extensionsToDownloadPaths.filter((extPath: string) => userChromeExtensions.some(extId => extPath.includes(extId)));\r\n\r\n    if (!extensionsToDownloadPathsFiltered.length) {\r\n      if (isFromExtManager) {\r\n        this.deleteUserExtIdFromInProgress(userChromeExtensions[0]);\r\n      }\r\n\r\n      return this.getExtStrToIncludeAsOrbitaParam(userChromeExtensions, USER_EXTENSIONS_PATH);\r\n    }\r\n\r\n    const promises = extensionsToDownloadPathsFiltered.map(async (awsPath: string) => {\r\n      const [basePath] = awsPath.split('?');\r\n      const [extId] = basePath.split('/').reverse();\r\n      const zipPath = `${path.join(USER_EXTENSIONS_PATH, extId)}.zip`;\r\n      const downloadResult = await downloadWithRetry({\r\n        url: awsPath,\r\n        destFile: zipPath,\r\n      }).catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendErrorToSentry({\r\n          message, transactionName: 'user-extensions-download-error',\r\n        });\r\n\r\n        return 'error';\r\n      });\r\n\r\n      if (downloadResult === 'error') {\r\n        return '';\r\n      }\r\n\r\n      return zipPath;\r\n    });\r\n\r\n    const zipPaths = await Promise.all(promises).catch(() => []);\r\n\r\n    if (!zipPaths.length) {\r\n      if (isFromExtManager) {\r\n        this.deleteUserExtIdFromInProgress(userChromeExtensions[0]);\r\n\r\n        return [];\r\n      }\r\n\r\n      return this.getExtStrToIncludeAsOrbitaParam(userChromeExtensions, USER_EXTENSIONS_PATH);\r\n    }\r\n\r\n    const extractionPromises = composeExtractionPromises(zipPaths, USER_EXTENSIONS_PATH);\r\n    const isExtensionsExtracted = await Promise.all(extractionPromises).catch(() => 'error');\r\n    if (isFromExtManager) {\r\n      this.deleteUserExtIdFromInProgress(userChromeExtensions[0]);\r\n    }\r\n\r\n    if (isExtensionsExtracted !== 'error') {\r\n      const [downloadedFolders] = zipPaths.map(archivePath => archivePath.replace('.zip', '').split(path.sep).reverse());\r\n      this.#existedUserExtensions = [...this.#existedUserExtensions, ...downloadedFolders];\r\n    }\r\n\r\n    return this.getExtStrToIncludeAsOrbitaParam(userChromeExtensions, USER_EXTENSIONS_PATH);\r\n  }\r\n\r\n  async getExtensionsNameAndImage(extensionsIds: string[], pathToExtensions: string): Promise<IUserExtData[]|[]> {\r\n    const isCheckLocalFiles = [CHROME_EXTENSIONS_PATH, USER_EXTENSIONS_PATH].includes(pathToExtensions);\r\n    const extensionFolderNames = await readdir(pathToExtensions).catch(() => []);\r\n    const filteredExtensionFolderNames = extensionFolderNames.filter((extensionFolder: string) =>\r\n      extensionsIds.some(extensionId => !extensionFolder.includes('.zip') && extensionFolder.includes(extensionId)));\r\n\r\n    if (!filteredExtensionFolderNames.length) {\r\n      return [];\r\n    }\r\n\r\n    const namesPromise = extensionsIds.map(async (extensionsId) => {\r\n      const folderName = filteredExtensionFolderNames.find((name: string) => name.includes(extensionsId));\r\n      if (!folderName) {\r\n        return;\r\n      }\r\n\r\n      let pathToExtensionsFolder = [pathToExtensions, folderName];\r\n      if (!isCheckLocalFiles) {\r\n        const [extensionVersion] = await readdir(path.join(pathToExtensions, folderName));\r\n        pathToExtensionsFolder = [pathToExtensions, folderName, extensionVersion];\r\n      }\r\n\r\n      const manifestPath = path.join(...pathToExtensionsFolder, 'manifest.json');\r\n      const manifestString = await readFile(manifestPath, 'utf8').catch(() => '');\r\n      if (!manifestString) {\r\n        return;\r\n      }\r\n\r\n      const manifestObject = JSON.parse(manifestString);\r\n      let name;\r\n      if (manifestObject.name.includes('__MSG')) {\r\n        const manifestName = manifestObject.name || '';\r\n        const [_, fieldNameInLocale] = manifestName.replace(/__/g, '').split('MSG_');\r\n        const localePath = path.join(...pathToExtensionsFolder, '_locales', manifestObject.default_locale, 'messages.json');\r\n        const localeString = await readFile(localePath, 'utf8').catch((error) => {\r\n          console.log(error);\r\n\r\n          return '';\r\n        });\r\n\r\n        try {\r\n          const parsedLocale = JSON.parse(localeString.trim());\r\n          name = parsedLocale[fieldNameInLocale].message;\r\n        } catch (error: unknown) {\r\n          console.log('localeString: ', localeString, 'fieldNameInLocale: ', fieldNameInLocale);\r\n          const message = error instanceof Error ? error.message : error;\r\n          sendErrorToSentry({\r\n            message,\r\n            transactionName: 'get-extension-metadata',\r\n            tags: [['scenario', 'upload-custom-extensions']],\r\n          });\r\n        }\r\n      } else {\r\n        ({ name: name } = manifestObject);\r\n      }\r\n\r\n      if (!name) {\r\n        return;\r\n      }\r\n\r\n      const iconObject = manifestObject.icons;\r\n      let iconPath = manifestObject.browser_action?.default_icon;\r\n      if (iconObject) {\r\n        const iconResolutions = Object.keys(iconObject).map(Number);\r\n        const maxIconResolution = Math.max(...iconResolutions);\r\n        iconPath = iconObject[maxIconResolution];\r\n      }\r\n\r\n      let iconBSON = '';\r\n      if (iconPath) {\r\n        const iconPathFull = path.join(...pathToExtensionsFolder, iconPath);\r\n        iconBSON = await readFile(iconPathFull, 'base64').catch(() => '');\r\n      }\r\n\r\n      return {\r\n        name,\r\n        extId: extensionsId,\r\n        iconBinary: iconBSON,\r\n      };\r\n    });\r\n\r\n    return (await Promise.all(namesPromise)).filter(Boolean) as IUserExtData[]|[];\r\n  }\r\n\r\n  async getExtStrToIncludeAsOrbitaParam(profileExtensions: string[] = [], extensionsPath = CHROME_EXTENSIONS_PATH): Promise<string[]> {\r\n    if (!(Array.isArray(profileExtensions) && profileExtensions.length)) {\r\n      return [];\r\n    }\r\n\r\n    const folders = await Promise.all([\r\n      readdir(extensionsPath).then((folderNames: string[]) => folderNames.map(folderName => path.join(extensionsPath, folderName))),\r\n    ]);\r\n\r\n    const chromeExtList = ([] as string[]).concat.apply([], folders).filter(Boolean);\r\n\r\n    if (!chromeExtList.length) {\r\n      return [];\r\n    }\r\n\r\n    console.log('splitting formattedList: ', chromeExtList);\r\n    const formattedIdsList = chromeExtList.map((el: string) => {\r\n      const [folderName] = el.split(path.sep).reverse();\r\n      const [originalId] = folderName.split('@');\r\n\r\n      return {\r\n        originalId,\r\n        path: el,\r\n      };\r\n    });\r\n\r\n    return profileExtensions.map((extId) => {\r\n      const extExisted = formattedIdsList.find(chromeExtPathElem => chromeExtPathElem.originalId === extId);\r\n      if (!extExisted) {\r\n        return '';\r\n      }\r\n\r\n      return extExisted.path;\r\n    }).filter(Boolean);\r\n  }\r\n\r\n  generateExtensionId(): string {\r\n    let result = '';\r\n    let extensionIdLength = 32;\r\n    const characters = 'abcdefghijklmnopqrstuvwxyz';\r\n    const charactersLength = characters.length;\r\n    while (extensionIdLength--) {\r\n      result += characters.charAt(Math.floor(Math.random() *\r\n        charactersLength));\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { ICalcLengthProps } from '../../interfaces/crx-to-zip.converter.interfaces';\r\n\r\nexport const crxToZip = (buf: Buffer): Buffer => {\r\n  if (buf[0] === 80 && buf[1] === 75 && buf[2] === 3 && buf[3] === 4) {\r\n    return buf;\r\n  }\r\n\r\n  if (!(buf[0] === 67 || buf[1] === 114 || buf[2] === 50 || buf[3] === 52)) {\r\n    throw new Error('Invalid header: Does not start with Cr24');\r\n  }\r\n\r\n  const isV3 = buf[4] === 3;\r\n  const isV2 = buf[4] === 2;\r\n\r\n  if (!(isV2 || isV3) || buf[5] || buf[6] || buf[7]) {\r\n    throw new Error('Unexpected crx format version number.');\r\n  }\r\n\r\n  if (isV2) {\r\n    const publicKeyLength = calcLength({ byteA: buf[8], byteB: buf[9], byteC: buf[10], byteD: buf[11] });\r\n    const signatureLength = calcLength({ byteA: buf[12], byteB: buf[13], byteC: buf[14], byteD: buf[15] });\r\n\r\n    const zipStartOffset = 16 + publicKeyLength + signatureLength;\r\n\r\n    return buf.slice(zipStartOffset, buf.length);\r\n  }\r\n\r\n  const headerSize = calcLength({ byteA: buf[8], byteB: buf[9], byteC: buf[10], byteD: buf[11] });\r\n  const zipStartOffset = 12 + headerSize;\r\n\r\n  return buf.slice(zipStartOffset, buf.length);\r\n};\r\n\r\nconst calcLength = (props: ICalcLengthProps): number => {\r\n  const { byteA, byteB, byteC, byteD } = props;\r\n  let length = 0;\r\n\r\n  length += byteA << 0;\r\n  length += byteB << 8;\r\n  length += byteC << 16;\r\n  length += byteD << 24 >>> 0;\r\n\r\n  return length;\r\n};\r\n","import EventEmitter from 'events';\r\nimport fs from 'fs';\r\nimport { mkdir, readdir, rmdir, unlink } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport { EXTENSION_URL } from '../constants/constants';\r\nimport { composeExtractionPromises, getExtMetadata, getExtVersion } from '../helpers/helper.functions';\r\nimport { IExtCheckResult, IExtsSettings } from '../interfaces/extension.manager.interfaces';\r\nimport { downloadWithRetryBuffer } from '../utils/downloadWithRetry';\r\nimport { makeRequest } from '../utils/make-request';\r\nimport { CHROME_EXTENSIONS_PATH, USER_EXTENSIONS_PATH } from '../utils/path-platforms';\r\nimport { sendCommonErrorToSentry, sendErrorToSentry } from '../utils/sentry';\r\nimport { CommonDataManager } from './common-data-manager';\r\nimport { UserExtensionsManager } from './user.extensions.manager';\r\nimport { crxToZip } from './utils/crx-to-zip.converter';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport class ExtensionsManager extends UserExtensionsManager {\r\n  #existedChromeExtensions: string[] = [];\r\n  #inited = false;\r\n  #deleteProfileExtFolders = false;\r\n  #extensionsUpdating = true;\r\n  #extensionsInProgress: string[] = [];\r\n  #blockEventEmitter = new EventEmitter();\r\n  static instance: any;\r\n\r\n  constructor() {\r\n    super();\r\n    if (!ExtensionsManager.instance) {\r\n      ExtensionsManager.instance = this;\r\n    }\r\n\r\n    return ExtensionsManager.instance;\r\n  }\r\n\r\n  async init(): Promise<void> {\r\n    if (this.#inited) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    const promises = [\r\n      mkdir(CHROME_EXTENSIONS_PATH, { recursive: true })\r\n        .then(() => readdir(CHROME_EXTENSIONS_PATH))\r\n        .then((filesList: string[]) => {\r\n          this.#existedChromeExtensions = filesList.filter(extPath => !extPath.includes('.zip')).map(extFolder => extFolder.split('@')[0]);\r\n\r\n          return filesList.map(fileName => fileName.includes('.zip') ?\r\n            unlink(path.join(CHROME_EXTENSIONS_PATH, fileName)) :\r\n            Promise.resolve());\r\n        })\r\n        .then((promisesToDelete: Promise<void>[]) => Promise.all(promisesToDelete))\r\n        .catch((err: unknown) => console.log('ExtensionsManager init error:', err)),\r\n      mkdir(USER_EXTENSIONS_PATH, { recursive: true })\r\n        .then(() => readdir(USER_EXTENSIONS_PATH))\r\n        .then((filesList: string[]) => {\r\n          this.existedUserExtensions = filesList.filter(extPath => !extPath.includes('.zip'));\r\n\r\n          return filesList.map(fileName => fileName.includes('.zip') ?\r\n            unlink(path.join(USER_EXTENSIONS_PATH, fileName)) :\r\n            Promise.resolve());\r\n        })\r\n        .then((promisesToDelete: Promise<void>[]) => Promise.all(promisesToDelete))\r\n        .catch(() => null),\r\n    ];\r\n\r\n    return Promise.all(promises).then(() => {\r\n      this.#inited = true;\r\n    });\r\n  }\r\n\r\n  get isInited(): boolean {\r\n    return this.#inited;\r\n  }\r\n\r\n  get deleteProfileExtFolders(): boolean {\r\n    return this.#deleteProfileExtFolders;\r\n  }\r\n\r\n  get existedChromeExtensionsList(): string[] {\r\n    return this.#existedChromeExtensions;\r\n  }\r\n\r\n  deleteExtIdFromExtensionsInProgress(extIdToDelete: string): void {\r\n    this.#extensionsInProgress = this.#extensionsInProgress.filter(extId => extId !== extIdToDelete);\r\n\r\n    if (!this.#extensionsInProgress.length) {\r\n      this.#blockEventEmitter.emit('unblocked');\r\n    }\r\n  }\r\n\r\n  async checkChromeExtensions(profileExtensions: string[] = [], isFromExtManager = false): Promise<string[]> {\r\n    if (!(Array.isArray(profileExtensions) && profileExtensions.length)) {\r\n      return [];\r\n    }\r\n\r\n    await mkdir(CHROME_EXTENSIONS_PATH, { recursive: true });\r\n\r\n    if (!isFromExtManager && this.#extensionsInProgress.length) {\r\n      // if extensions in downloading progress we need to wait until it finishes\r\n      await new Promise(resolve => this.#blockEventEmitter.on('unblocked', resolve));\r\n    }\r\n\r\n    const extensionsToDownload = this.#getExtensionsToDownload(profileExtensions);\r\n    // if we dont need to install extension from manager we dont need to return path for orbita\r\n    if (isFromExtManager && !extensionsToDownload.length) {\r\n      return [];\r\n    }\r\n\r\n    // if we press install in extensions manager we need to track progress\r\n    if (isFromExtManager) {\r\n      this.#extensionsInProgress.push(profileExtensions[0]);\r\n    }\r\n\r\n    const downloadedArchives = await this.downloadChromeExtensions(extensionsToDownload).catch(() => []);\r\n    const filteredArchives = downloadedArchives.filter(Boolean) as string[];\r\n    console.log('splitting downloadedExtensionIds: ', filteredArchives);\r\n    const downloadedExtensionIds = filteredArchives.map((archivePath: string) => {\r\n      const [archiveName] = archivePath.split(path.sep).reverse();\r\n      const [downloadedExtensionId] = archiveName.split('@');\r\n\r\n      return downloadedExtensionId;\r\n    });\r\n\r\n    this.#existedChromeExtensions = [...this.#existedChromeExtensions, ...downloadedExtensionIds];\r\n\r\n    const promises = composeExtractionPromises(filteredArchives);\r\n\r\n    await Promise.all(promises).catch(() => null);\r\n\r\n    if (isFromExtManager) {\r\n      this.deleteExtIdFromExtensionsInProgress(profileExtensions[0]);\r\n    }\r\n\r\n    return this.getExtStrToIncludeAsOrbitaParam(profileExtensions);\r\n  }\r\n\r\n  #getExtensionsToDownload(profileExtensions: string[]): string[] {\r\n    const existedOriginalIds = [...this.#existedChromeExtensions, ...this.existedUserExtensions];\r\n\r\n    return profileExtensions.reduce((res: string[], val) => {\r\n      console.log('splitting extrensions name: ', profileExtensions);\r\n      const [originalId] = val.split('@');\r\n      const extensionExists = existedOriginalIds.includes(originalId);\r\n      if (!extensionExists) {\r\n        res.push(val);\r\n      }\r\n\r\n      return res;\r\n    }, []);\r\n  }\r\n\r\n  async downloadChromeExtensions(idsToDownload: string[] = []): Promise<string[]> {\r\n    if (!(Array.isArray(idsToDownload) && idsToDownload.length)) {\r\n      return [];\r\n    }\r\n\r\n    console.log('splitting idsToDownload: ', idsToDownload);\r\n    const promises = idsToDownload.map(async (id: string) => {\r\n      const [originalId] = id.split('@');\r\n      const extUrl = EXTENSION_URL.replace('{ext_id}', originalId);\r\n\r\n      const uploadedProfileMetadata = await getExtMetadata(extUrl);\r\n      if (!uploadedProfileMetadata) {\r\n        return '';\r\n      }\r\n\r\n      const reqPath = uploadedProfileMetadata.req.path;\r\n      const extVer = getExtVersion(reqPath);\r\n\r\n      const buffer = await downloadWithRetryBuffer({\r\n        url: extUrl,\r\n      }).catch((err: unknown) => {\r\n        const message = err instanceof Error ? err.message : err;\r\n        sendCommonErrorToSentry({\r\n          message,\r\n          transactionName: 'download-chrome-extension',\r\n        });\r\n\r\n        return 'error';\r\n      });\r\n\r\n      if (buffer instanceof String && buffer === 'error') {\r\n        return '';\r\n      }\r\n\r\n      let zipExt: Buffer;\r\n      try {\r\n        if (buffer instanceof Buffer) {\r\n          zipExt = crxToZip(buffer);\r\n        } else {\r\n          throw Error('error, no buffer');\r\n        }\r\n      } catch (error) {\r\n        const message = error instanceof Error ? error.message : 'unknown';\r\n\r\n        if (message === 'error, no buffer') {\r\n          return '';\r\n        }\r\n\r\n        if (message === 'unknown') {\r\n          console.log(error);\r\n        }\r\n\r\n        if (message.includes('Does not start with Cr24')) {\r\n          return '';\r\n        }\r\n\r\n        sendErrorToSentry({\r\n          message,\r\n          transactionName: 'decompress-google-chrome-extension',\r\n          level: 'warning',\r\n          tags: [['scenario', 'download-extensions']],\r\n        });\r\n\r\n        return '';\r\n      }\r\n\r\n      const archiveZipPath = path.join(CHROME_EXTENSIONS_PATH, originalId + '@' + extVer + '.zip');\r\n\r\n      const archiveZip = fs.createWriteStream(archiveZipPath, { mode: 0o666 });\r\n      archiveZip.write(zipExt);\r\n      archiveZip.close();\r\n\r\n      return new Promise(resolve => {\r\n        archiveZip.on('close', () => resolve(archiveZipPath));\r\n        archiveZip.on('error', () => resolve(''));\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises) as Promise<string[]>;\r\n  }\r\n\r\n  async updateExtensions(): Promise<string|void> {\r\n    const fileList = await readdir(CHROME_EXTENSIONS_PATH).catch(() => []);\r\n    if (!fileList.length) {\r\n      return;\r\n    }\r\n\r\n    const oldFolders: string[] = [];\r\n\r\n    const versionCheckPromises = fileList.map(async (extension: string) => {\r\n      if (!extension.includes('@') || extension.includes('.zip')) {\r\n        return '';\r\n      }\r\n\r\n      const [originalId, currentVersion] = extension.split('@');\r\n      const extUrl = EXTENSION_URL.replace('{ext_id}', originalId);\r\n      const uploadedProfileMetadata = await getExtMetadata(extUrl);\r\n      if (!uploadedProfileMetadata) {\r\n        return '';\r\n      }\r\n\r\n      const reqPath = uploadedProfileMetadata.req.path;\r\n      const availableVersion = getExtVersion(reqPath);\r\n\r\n      if (!uploadedProfileMetadata || currentVersion === availableVersion) {\r\n        return '';\r\n      }\r\n\r\n      oldFolders.push(path.join(CHROME_EXTENSIONS_PATH, extension));\r\n\r\n      return originalId;\r\n    });\r\n\r\n    const extensionsNames = (await Promise.all(versionCheckPromises)).filter(Boolean) as string[];\r\n    const archivesPaths = (await this.downloadChromeExtensions(extensionsNames)).filter(Boolean) as string[];\r\n    const extractionPromises = composeExtractionPromises(archivesPaths);\r\n    await Promise.all(extractionPromises);\r\n\r\n    const removeFoldersPromises = oldFolders.map(folder => (\r\n      rmdir(folder, { recursive: true, maxRetries: 3 }).catch(() => void 0)\r\n    ));\r\n\r\n    await Promise.all(removeFoldersPromises).then(() => {\r\n      this.#extensionsUpdating = false;\r\n    });\r\n  }\r\n\r\n  async insertExtensionsToDb(extensionsIds: string[], pathToExtensions: string = CHROME_EXTENSIONS_PATH): Promise<unknown> {\r\n    if (!extensionsIds?.length) {\r\n      return;\r\n    }\r\n\r\n    const checkResponse = await makeRequest<IExtCheckResult>({\r\n      url: `${CommonDataManagerInst.apiBaseUrl}/extensions/check`, method: 'POST', body: { extensionsIds },\r\n    });\r\n\r\n    const { extensionsToAdd = [] } = checkResponse;\r\n\r\n    if (!extensionsToAdd.length) {\r\n      return;\r\n    }\r\n\r\n    const extensionsToUpdate = await this.getExtensionsNameAndImage(extensionsToAdd, pathToExtensions);\r\n\r\n    return makeRequest({\r\n      url: `${CommonDataManagerInst.apiBaseUrl}/extensions/create`, method: 'POST', body: { extensionsInfo: extensionsToUpdate },\r\n    });\r\n  }\r\n\r\n  getExtensionsToInstall(extensionsFromPref: IExtsSettings, extensionsFromDB: string[]): string[] {\r\n    if (!extensionsFromPref) {\r\n      return [];\r\n    }\r\n\r\n    const objectEntries = Object.entries(extensionsFromPref);\r\n    const extensionsInPref = objectEntries?.map(([_, settings]) => {\r\n      const [extFolderName] = settings.path.split(path.sep).reverse();\r\n      const [originalId] = extFolderName.split('@');\r\n\r\n      return originalId;\r\n    }) || [];\r\n\r\n    return extensionsFromDB.reduce((acc: string[], extension) => {\r\n      const [extFolderName] = extension.split(path.sep).reverse();\r\n      const [originalId] = extFolderName.split('@');\r\n      if (!extensionsInPref.includes(originalId)) {\r\n        acc.push(extension);\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n  }\r\n}\r\n","import { Stats } from 'fs';\r\nimport { rmdir, readdir, mkdir, writeFile, stat, unlink, rename } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { IProfileStorageInfo } from '../interfaces/profile-starter.manager.interfaces';\r\nimport { checkFileSizeSync } from '../../electron/utils/utils';\r\nimport { ICachedProfileDataObject } from '../interfaces/profile.caching.manager.interfaces';\r\nimport { CACHED_PROFILES_FOLDER } from '../utils/path-platforms';\r\n\r\nexport class ProfileCachingManager {\r\n  async init(): Promise<string | null | undefined> {\r\n    return mkdir(CACHED_PROFILES_FOLDER, { recursive: true })\r\n      .catch(() => null);\r\n  }\r\n\r\n  async copyClosedProfileToCacheDirectory(fileBuffer: Buffer, profileId: string, profileUid: string): Promise<void> {\r\n    const zipPath = `${path.join(CACHED_PROFILES_FOLDER, profileId, profileUid)}.zip`;\r\n    await rmdir(path.join(CACHED_PROFILES_FOLDER, profileId), { recursive: true }).catch(() => null);\r\n    await mkdir(path.join(CACHED_PROFILES_FOLDER, profileId), { recursive: true });\r\n    await writeFile(zipPath, fileBuffer, { mode: 0o666 });\r\n  }\r\n\r\n  checkCachedStorageSize(): Promise<number> {\r\n    return checkFileSizeSync(CACHED_PROFILES_FOLDER);\r\n  }\r\n\r\n  async clearCachedStorage(): Promise<void[]> {\r\n    const files = await readdir(CACHED_PROFILES_FOLDER).catch(() => []);\r\n\r\n    const promises = files.map(async (file: string) => {\r\n      const filePath = path.join(CACHED_PROFILES_FOLDER, file);\r\n      const isFolder = (await stat(filePath)).isDirectory();\r\n\r\n      if (isFolder) {\r\n        return rmdir(filePath, { recursive: true });\r\n      }\r\n\r\n      return unlink(filePath);\r\n    });\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  async clearProfileCache(profileId: string): Promise<void | null> {\r\n    const folderPath = path.join(CACHED_PROFILES_FOLDER, profileId);\r\n\r\n    return rmdir(folderPath, { recursive: true }).catch(() => null);\r\n  }\r\n\r\n  async getCachedProfile(storageInfo: IProfileStorageInfo, profileId: string): Promise<ICachedProfileDataObject> {\r\n\r\n    const cachedProfileFolder = path.join(CACHED_PROFILES_FOLDER, profileId);\r\n    const [zipFileName] = await readdir(cachedProfileFolder).catch(() => []);\r\n\r\n    if (!(zipFileName && zipFileName?.endsWith('.zip'))) {\r\n      return {\r\n        status: false,\r\n      };\r\n    }\r\n\r\n    const [cachedUid] = zipFileName.split('.');\r\n    const cachedArchivePath = path.join(cachedProfileFolder, zipFileName);\r\n\r\n    if (cachedUid === storageInfo.uid || (zipFileName && storageInfo.isNewProfile)) {\r\n      return {\r\n        status: true,\r\n        cachedArchivePath,\r\n      };\r\n    }\r\n\r\n    const stats: Stats | 'error' = await stat(cachedArchivePath).catch(() => 'error');\r\n\r\n    if (stats === 'error') {\r\n      return {\r\n        status: false,\r\n      };\r\n    }\r\n\r\n    const cachedDate = stats.birthtime;\r\n\r\n    const lastUploadDate = moment(storageInfo.lastDate).utc();\r\n    if (moment(lastUploadDate).isAfter(cachedDate)) {\r\n      return {\r\n        status: false,\r\n      };\r\n    }\r\n\r\n    return {\r\n      status: true,\r\n      cachedArchivePath,\r\n    };\r\n  }\r\n\r\n  async renameCachedProfile(profileId: string, oldProfileUid: string, newProfileUid: string): Promise<void> {\r\n    const curProfilePath = path.join(CACHED_PROFILES_FOLDER, profileId, oldProfileUid + '.zip');\r\n    const newProfilePath = path.join(CACHED_PROFILES_FOLDER, profileId, newProfileUid + '.zip');\r\n\r\n    return rename(curProfilePath, newProfilePath).catch((error: unknown) => {\r\n      console.log(error);\r\n\r\n      throw Error('renaming zip error');\r\n    });\r\n  }\r\n}\r\n","import {\r\n  getDB,\r\n} from './methods';\r\nimport { IPasswordFromFile } from '../../interfaces/passwords-decryptor.interfaces';\r\nimport { sendErrorToSentry } from '../sentry';\r\n\r\nexport const loadPasswordsFromFile = async (filePath: string): Promise<{passwords: IPasswordFromFile[]}> => {\r\n  const passwords: IPasswordFromFile[] = [];\r\n  const db = await getDB(filePath);\r\n\r\n  try {\r\n    const loginsRows = await db.all('select * from logins');\r\n    for (const row of loginsRows) {\r\n      const {\r\n        origin_url,\r\n        action_url,\r\n        username_element,\r\n        username_value,\r\n        password_element,\r\n        password_value,\r\n        submit_element,\r\n      } = row;\r\n\r\n      passwords.push({\r\n        origin_url,\r\n        action_url,\r\n        username_element,\r\n        username_value,\r\n        password_element,\r\n        password_value,\r\n        submit_element,\r\n      });\r\n    }\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    if (typeof message === 'string' && message.includes('no such table')) {\r\n      return { passwords };\r\n    }\r\n\r\n    sendErrorToSentry({\r\n      message, transactionName: 'load-passwords-from-file', level: 'error',\r\n      tags: [['scenario', 'close-profile']],\r\n    });\r\n  } finally {\r\n    await db.close();\r\n  }\r\n\r\n  return {\r\n    passwords,\r\n  };\r\n};\r\n","/* eslint-disable max-lines */\r\nimport { access, readFile, rm } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport * as Sentry from '@sentry/electron';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { deletedProfiles, syncingProfiles } from './renderer';\r\nimport { loadCookiesFromFile } from '../../../electron/utils/crypto/cookies-decryptor';\r\nimport { loadPasswordsFromFile } from '../../../electron/utils/crypto/passwords-decryptor';\r\nimport { makeRequest, makeRequestWithFullResponse } from '../../../electron/utils/make-request';\r\nimport { sendCommonErrorToSentry, sendErrorToSentry } from '../../../electron/utils/sentry';\r\nimport { AUTOMATION_EXTENSION_WEBSTORE_ID, STORAGE_GATEWAY_BASE_URL } from '../../constants/constants';\r\nimport { sentryTransactionDefaultObject } from '../../helpers/helper.functions';\r\nimport { IBookmarkFoldersObj } from '../../interfaces/bookmarks-utils.interfaces';\r\nimport {\r\n  ICleanDirsProps,\r\n  ICloseAndUpdateProfileProps,\r\n  IRemoveLocalStorageProps,\r\n  ISignedS3UrlObj,\r\n  IUpdateProfileAndGetUIploadURLProps,\r\n  IUpdateProfileDataObject,\r\n  IUploadAndUpdateProfileInDBProps,\r\n  IUploadAndUpdateProfileResult,\r\n  IUploadDataAndGetS3LinkProps,\r\n  IUploadProfileProcessProps,\r\n  IUploadProfileProps,\r\n  TLoadedPasswords,\r\n} from '../../interfaces/close-orbita.interfaces';\r\nimport { ITransactionSpanObject } from '../../interfaces/helper.functions.interfaces';\r\nimport { BASE_PATH_TEMPLATE, CACHED_PROFILES_FOLDER, CHROME_EXTENSIONS_PATH, getPathOs } from '../../utils/path-platforms';\r\nimport { archiveProfile, getBufferOfArchive } from '../../utils/profile-archiver';\r\nimport { removeFileOrFolder, removeItemFromArray } from '../../utils/utils';\r\nimport withRetry from '../../utils/with-retry';\r\nimport { pidList } from '../../window-raiser/focus-orbita-utils';\r\nimport { BrowserUserDataManager } from '../browser.user-data.manager';\r\nimport { CommonDataManager } from '../common-data-manager';\r\nimport { CookiesManager } from '../cookies-manager';\r\nimport { ExtensionsManager } from '../extensions.manager';\r\nimport { ProfileCachingManager } from '../profile.caching.manager';\r\nimport { ProfileStarterManager } from '../start-profile-manager';\r\n\r\nconst pathOs = getPathOs();\r\nconst BrowserUserDataManagerInst = new BrowserUserDataManager();\r\nconst ExtensionsManagerInst = new ExtensionsManager();\r\nconst CommonDataManagerInst = new CommonDataManager();\r\nconst ProfileStarterManagerInst = new ProfileStarterManager();\r\nconst ProfileCachingManagerInst = new ProfileCachingManager();\r\n\r\nconst BYTES_IN_MB = 1024 * 1024;\r\nexport const tempArchiveName = 'prepared_to_upload';\r\n\r\nexport const closeAndUploadProfile = async (props: ICloseAndUpdateProfileProps): Promise<void> => {\r\n  const {\r\n    profileId,\r\n    currentMs,\r\n    localStorageEnabled,\r\n    indexedDbEnabled,\r\n    debugMode = false,\r\n    channel,\r\n    os,\r\n    ProfileStatusManagerInst,\r\n    ProfileStatusManagerInstances,\r\n    automation,\r\n    apiTokenForClose,\r\n    twoFaKeyForClose,\r\n    vaultToken,\r\n  } = props;\r\n\r\n  const stopProfileTransactionSentry = Sentry.startTransaction({ name: 'stop-profile' }) || sentryTransactionDefaultObject;\r\n  syncingProfiles.push(profileId);\r\n\r\n  await cleanDirs({\r\n    profileId,\r\n    currentMs,\r\n    debugMode,\r\n    localStorageEnabled,\r\n    indexedDbEnabled,\r\n    stopProfileTransactionSentry,\r\n  });\r\n  await Promise.all([\r\n    removeLocalStorage({\r\n      profileId,\r\n      localStorageEnabled,\r\n      indexedDbEnabled,\r\n      stopProfileTransactionSentry,\r\n    }),\r\n    ProfileStarterManagerInst.removeUselessFolders(profileId, os),\r\n  ]).catch(() => null);\r\n\r\n  const { s3SignedUrl = { url: '' }, profileArchiveBuffer } = await updateProfileAndGetUploadUrl({\r\n    profileId,\r\n    channel,\r\n    ProfileStatusManagerInst,\r\n    automation,\r\n    apiTokenForClose,\r\n    twoFaKeyForClose,\r\n    vaultToken,\r\n  }).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n\r\n    stopProfileTransactionSentry.setStatus('aborted');\r\n    stopProfileTransactionSentry.finish();\r\n    removeItemFromArray(syncingProfiles, profileId);\r\n\r\n    return { s3SignedUrl: { url: message } } as IUpdateProfileDataObject;\r\n  });\r\n\r\n  if (s3SignedUrl.url === 'error') {\r\n    throw new Error('The profile has been deleted');\r\n  }\r\n\r\n  if (s3SignedUrl.url === 'error-429') {\r\n    throw new Error('Too many requests');\r\n  }\r\n\r\n  if (!profileArchiveBuffer) {\r\n    console.log('error, no buffer');\r\n    removeItemFromArray(syncingProfiles, profileId);\r\n    stopProfileTransactionSentry.setStatus('aborted');\r\n    stopProfileTransactionSentry.finish();\r\n\r\n    throw new Error('profile archive is not found');\r\n  }\r\n\r\n  await uploadingProfileProcess({\r\n    profileId,\r\n    s3SignedUrl,\r\n    profileArchiveBuffer,\r\n    ProfileStatusManagerInst,\r\n    ProfileStatusManagerInstances,\r\n    stopProfileTransactionSentry,\r\n    apiTokenForClose,\r\n    twoFaKeyForClose,\r\n  });\r\n};\r\n\r\n// eslint-disable-next-line id-length\r\nconst getProfileDataForUploadAndUpdate = async (props: IUploadAndUpdateProfileInDBProps): Promise<IUploadAndUpdateProfileResult> => {\r\n  const {\r\n    profileId,\r\n    channel,\r\n    pathToExtensions,\r\n    pathToPreferences,\r\n    pathToBookmarks,\r\n    ProfileStatusManagerInst,\r\n    stopProfileTransactionSentry,\r\n    automation,\r\n    apiTokenForClose,\r\n    twoFaKeyForClose,\r\n    vaultToken,\r\n  } = props;\r\n\r\n  const readingCookiesSentrySpan = stopProfileTransactionSentry.startChild({ op: 'upload-cookies' });\r\n  const uploadPasswordsSentrySpan = stopProfileTransactionSentry.startChild({ op: 'upload-passwords' });\r\n  const extensionsUploadSentrySpan = stopProfileTransactionSentry.startChild({ op: 'updating-extensions' });\r\n\r\n  const arrayPromises = [\r\n    loadCookiesPromise(profileId, readingCookiesSentrySpan).catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      sendErrorToSentry({\r\n        message, transactionName: 'get-cookies-file-error',\r\n        tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n      });\r\n\r\n      readingCookiesSentrySpan.setStatus('aborted');\r\n      readingCookiesSentrySpan.finish();\r\n\r\n      const errorCookiesArr = [{ domain: 'error' }];\r\n\r\n      return { cookies: errorCookiesArr };\r\n    }),\r\n    vaultToken ? loadPasswordsPromise(profileId, uploadPasswordsSentrySpan) : Promise.resolve([{ domain: 'error' }]),\r\n    getProfileExtPromise(pathToPreferences, extensionsUploadSentrySpan, profileId),\r\n    getProfileBookmarksPromise(pathToBookmarks, profileId),\r\n  ];\r\n\r\n  const profileDataResult = await Promise.allSettled(arrayPromises);\r\n  const parsedDataResult = profileDataResult.map((result) => {\r\n    if (result.status !== 'fulfilled') {\r\n      console.log(result.reason);\r\n\r\n      return {\r\n        value: '',\r\n      };\r\n    }\r\n\r\n    return result;\r\n  });\r\n\r\n  const [\r\n    { value: cookies = { cookies: [] } },\r\n    { value: passwords },\r\n    { value: extensionsIds },\r\n    { value: bookmarks },\r\n  ] = parsedDataResult;\r\n\r\n  let extensionsIdsFiltered = extensionsIds;\r\n  const shouldRemoveAutomationExtension = automation?.workflowId && !automation?.isAutomationExtensionSavedInDb;\r\n  if (shouldRemoveAutomationExtension) {\r\n    extensionsIdsFiltered = extensionsIdsFiltered.filter((id: string) => id !== AUTOMATION_EXTENSION_WEBSTORE_ID);\r\n  }\r\n\r\n  const zippingSentrySpan = stopProfileTransactionSentry.startChild({ op: 'zipping-profile' });\r\n  const buffer = await getProfileArchiveBufferPromise(profileId, zippingSentrySpan).catch(console.log);\r\n\r\n  if (!buffer) {\r\n    stopProfileTransactionSentry.finish();\r\n    removeItemFromArray(syncingProfiles, profileId);\r\n\r\n    makeRequest({\r\n      method: 'POST',\r\n      url: `${CommonDataManagerInst.apiBaseUrl}/analytics/add_action_analytics`,\r\n      body: {\r\n        action: 'synced unsuccessfully',\r\n      },\r\n    }).catch(() => null);\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: {\r\n        errorType: 'archiving',\r\n        errorMessage: 'notifications.error.archivingProfileError',\r\n        prefix: 'resync',\r\n      },\r\n    });\r\n    ProfileStatusManagerInst.removeStatus({ status: 'archiving' });\r\n\r\n    throw Error('archiving profile error');\r\n  }\r\n\r\n  console.log('upload cookies.length:', cookies.cookies.length);\r\n  if (!cookies.cookies.length) {\r\n    console.log(`Got empty cookies. profile ${profileId}`);\r\n  }\r\n\r\n  try {\r\n    channel.sender.send('update-extensions-on-close', {\r\n      extensionsIds: extensionsIdsFiltered,\r\n      profileId,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  const cachingSentrySpan = stopProfileTransactionSentry.startChild({ op: 'caching-profile-before-upload' });\r\n  await ProfileCachingManagerInst.copyClosedProfileToCacheDirectory(buffer, profileId, tempArchiveName)\r\n    .catch((error) => {\r\n      const transactionName = 'cache-profile-after-close';\r\n\r\n      sendCommonErrorToSentry({\r\n        message: error.message, transactionName,\r\n        tags: [['scenario', 'close-profile'], ['profileId', profileId], ['name', transactionName]],\r\n      });\r\n    })\r\n    .finally(() => cachingSentrySpan.finish());\r\n\r\n  const fileSize = Buffer.byteLength(buffer);\r\n  const s3 = await uploadDataAndGetS3Link({\r\n    profileId,\r\n    passwords,\r\n    cookies,\r\n    extensionsIds: extensionsIdsFiltered,\r\n    bookmarks,\r\n    fileSize,\r\n    pathToExtensions,\r\n    stopProfileTransactionSentry,\r\n    apiTokenForClose,\r\n    twoFaKeyForClose,\r\n  });\r\n\r\n  return {\r\n    s3,\r\n    buffer,\r\n  };\r\n};\r\n\r\nexport const updateProfileAndGetUploadUrl = async (props: IUpdateProfileAndGetUIploadURLProps): Promise<IUpdateProfileDataObject> => {\r\n  const {\r\n    profileId,\r\n    channel,\r\n    onlyUpload = false,\r\n    ProfileStatusManagerInst,\r\n    automation,\r\n    vaultToken,\r\n  } = props;\r\n\r\n  const stopProfileTransactionSentry = Sentry.startTransaction({ name: 'stop-profile' }) || sentryTransactionDefaultObject;\r\n  stopProfileTransactionSentry.tags = { ...stopProfileTransactionSentry.tags, profileId };\r\n\r\n  const pathToPreferences = `${BASE_PATH_TEMPLATE.replace('{profileId}', profileId)}Preferences`;\r\n  const pathToExtensions = `${BASE_PATH_TEMPLATE.replace('{profileId}', profileId)}Extensions`;\r\n\r\n  const pathToBookmarks = `${BASE_PATH_TEMPLATE.replace('{profileId}', profileId)}Bookmarks`;\r\n\r\n  const s3SignedUrl = { url: '', isCf: false };\r\n  let profileArchiveBuffer: Buffer | null = null;\r\n\r\n  if (onlyUpload) {\r\n    profileArchiveBuffer = await getBufferOfArchive(profileId, tempArchiveName)\r\n      .catch((error: any) => {\r\n        console.log(error);\r\n\r\n        return null;\r\n      });\r\n  } else {\r\n    await getProfileDataForUploadAndUpdate({\r\n      profileId,\r\n      channel,\r\n      pathToPreferences,\r\n      pathToExtensions,\r\n      pathToBookmarks,\r\n      ProfileStatusManagerInst,\r\n      stopProfileTransactionSentry,\r\n      automation,\r\n      vaultToken,\r\n    })\r\n      .then((data) => {\r\n        const { s3 = { url: '', isCf: false }, buffer } = data;\r\n        s3SignedUrl.url = s3.url;\r\n        s3SignedUrl.isCf = s3.isCf || false;\r\n        profileArchiveBuffer = buffer;\r\n      });\r\n  }\r\n\r\n  return {\r\n    s3SignedUrl,\r\n    profileArchiveBuffer,\r\n    stopProfileTransactionSentry,\r\n  };\r\n};\r\n\r\nconst uploadProfile = async (props: IUploadProfileProps): Promise<string | void> => {\r\n  const {\r\n    fileBuff,\r\n    profileId,\r\n    hk = false,\r\n    preloadedS3SignedUrl = { url: '', isCf: false },\r\n    stopProfileTransactionSentry,\r\n  } = props;\r\n\r\n  console.log('***********************************');\r\n  console.log(`Getting signed URL for S3 for ${hk ? 'Hong Kong' : 'Frankfurt'}`);\r\n  const uploadingProfileSentrySpan = stopProfileTransactionSentry.startChild({ op: 'upload-profile' });\r\n\r\n  const s3SignedUrl = preloadedS3SignedUrl;\r\n  const fileSize = Buffer.byteLength(fileBuff);\r\n\r\n  // in case we need to return to old logic\r\n\r\n  // if (!preloadedS3SignedUrl.url) {\r\n  //   const apiUrl =\r\n  //     `${CommonDataManagerInst.apiBaseUrl}/browser/${profileId}/storage-signature?fileSize=${fileSize}&cf=true&hk=${hk ? 'true' : ''}`;\r\n  //\r\n  //   s3SignedUrl = await withRetry<ISignedS3UrlObj>({\r\n  //     fn() {\r\n  //       return makeRequest({ url: apiUrl, method: 'GET', timeout: 30 * 1000, retryLimit: 1 });\r\n  //     },\r\n  //     retryDelay: 300,\r\n  //     stopRetryErrorPatterns: [404, 403, 429, 500, 401, 502],\r\n  //   }).catch((error: any) => {\r\n  //     console.log(error.response?.body);\r\n  //     const message = error instanceof Error ? error.message : error;\r\n  //     if (error.response?.body?.includes('Profile has been deleted already')) {\r\n  //       throw new Error('profile deleted');\r\n  //     }\r\n  //\r\n  //     if (error.message.includes('429')) {\r\n  //       throw new Error('too many requests');\r\n  //     }\r\n  //\r\n  //     sendErrorToSentry({\r\n  //       message, transactionName: 'get-s3-url-for-aws-upload',\r\n  //       tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n  //     });\r\n  //\r\n  //     uploadingProfileSentrySpan.setStatus('aborted');\r\n  //     stopProfileTransactionSentry.setStatus('aborted');\r\n  //     uploadingProfileSentrySpan.finish();\r\n  //     stopProfileTransactionSentry.finish();\r\n  //\r\n  //     throw new Error('no url');\r\n  //   });\r\n  // }\r\n\r\n  // const [uploadedProfileUrl] = s3SignedUrl.url.split('?');\r\n  // const [uid] = uploadedProfileUrl.split('/').reverse();\r\n  let uid;\r\n  try {\r\n    console.log('Uploading profile by signed URL to S3');\r\n\r\n    const headers: any = {\r\n      Authorization: `Bearer ${CommonDataManagerInst.accessToken}`,\r\n      'x-two-factor-token': CommonDataManagerInst.twoFaKey || '',\r\n      browserId: profileId,\r\n      'Content-Type': 'application/zip',\r\n    };\r\n\r\n    if (s3SignedUrl.isCf) {\r\n      headers['x-amz-acl'] = 'bucket-owner-full-control';\r\n    }\r\n\r\n    if (s3SignedUrl.url) {\r\n      delete headers.Authorization;\r\n    }\r\n\r\n    const response = await withRetry<Response>({\r\n      fn() {\r\n        return makeRequestWithFullResponse({\r\n          url: s3SignedUrl.url || `${STORAGE_GATEWAY_BASE_URL}/upload`,\r\n          headers,\r\n          body: fileBuff,\r\n          timeout: 500 * 1000,\r\n          method: 'PUT',\r\n          isBuffer: true,\r\n          retryLimit: 1,\r\n        });\r\n      },\r\n      retryDelay: 300,\r\n      limit: 1,\r\n    }).catch(async error => {\r\n      console.log(error.response?.body);\r\n      const message = error instanceof Error ? error.message : error;\r\n\r\n      sendCommonErrorToSentry({\r\n        message,\r\n        transactionName: `upload-profile-to-aws-${hk ? 'hong-kong' : 'frankfurt'}`,\r\n        tags: [['scenario', 'close-profile'], ['profileId', profileId], ['name', `upload-profile-to-aws-${hk ? 'hong-kong' : 'frankfurt'}`]],\r\n      });\r\n\r\n      throw error;\r\n    });\r\n\r\n    ({ uid } = response.headers as any);\r\n\r\n    stopProfileTransactionSentry.tags = { ...stopProfileTransactionSentry.tags, 'zip-size-MB': fileSize / BYTES_IN_MB };\r\n\r\n    console.log('Profile has been uploaded to S3 successfully');\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      console.log(error.message);\r\n    }\r\n\r\n    if (error instanceof Error && error.message === 'profile deleted') {\r\n      throw new Error('do not send to sentry');\r\n    }\r\n\r\n    if (hk) {\r\n      uploadingProfileSentrySpan.setStatus('aborted');\r\n      uploadingProfileSentrySpan.finish();\r\n      stopProfileTransactionSentry.setStatus('aborted');\r\n      stopProfileTransactionSentry.finish();\r\n\r\n      makeRequest({\r\n        method: 'POST',\r\n        url: `${CommonDataManagerInst.apiBaseUrl}/analytics/add_action_analytics`,\r\n        body: {\r\n          action: 'synced unsuccessfully',\r\n          profile: profileId,\r\n        },\r\n      }).catch(() => null);\r\n\r\n      throw new Error('do not send to sentry');\r\n    }\r\n\r\n    // in case we need to return to old logic\r\n    // return uploadProfile({ fileBuff, profileId, hk: true, stopProfileTransactionSentry });\r\n  }\r\n\r\n  makeRequest({\r\n    method: 'POST',\r\n    url: `${CommonDataManagerInst.apiBaseUrl}/analytics/add_action_analytics`,\r\n    body: {\r\n      action: 'synced successfully',\r\n      actionInfo: `${fileSize}`,\r\n      profile: profileId,\r\n    },\r\n  }).catch(() => null);\r\n\r\n  uploadingProfileSentrySpan.finish();\r\n\r\n  return uid;\r\n  // in case we need to return to old logic\r\n  // if (!hk) {\r\n  // return uid;\r\n  // }\r\n\r\n  // await withRetry({\r\n  //   fn() {\r\n  //     return makeRequest({\r\n  //       url: `${CommonDataManagerInst.apiBaseUrl}/browser/${profileId}/copy-profile`, method: 'PUT', body: { uid },\r\n  //     });\r\n  //   },\r\n  //   retryDelay: 300,\r\n  //   stopRetryErrorPatterns: [403, 404, 401],\r\n  // }).catch((error: unknown) => {\r\n  //   console.log('uid: ', uid);\r\n  //   console.log('message: ', error);\r\n  //   const message = error instanceof Error ? error.message : error;\r\n  //   sendErrorToSentry({\r\n  //     message, transactionName: 'copy-profile-from-hk-to-europe',\r\n  //     tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n  //   });\r\n  // });\r\n  //\r\n  // return uid;\r\n};\r\n\r\nexport const uploadingProfileProcess = async (props: IUploadProfileProcessProps): Promise<void> => {\r\n  const {\r\n    profileId,\r\n    s3SignedUrl,\r\n    profileArchiveBuffer,\r\n    ProfileStatusManagerInst,\r\n    ProfileStatusManagerInstances,\r\n    stopProfileTransactionSentry = sentryTransactionDefaultObject,\r\n    apiTokenForClose,\r\n    twoFaKeyForClose,\r\n  } = props;\r\n\r\n  console.log('Sending analytics before upload to s3');\r\n  const { userOs } = CommonDataManagerInst;\r\n  const timeBeforeUpload = moment().toDate().valueOf();\r\n  const deduplicationKey = uuidv4();\r\n\r\n  console.log('Uploading zip file');\r\n  ProfileStatusManagerInst.addStatus({ status: 'cloud_uploading' });\r\n  ProfileStatusManagerInst.removeStatus({ status: 'archiving' });\r\n\r\n  const profileUid = await uploadProfile({\r\n    fileBuff: profileArchiveBuffer,\r\n    profileId,\r\n    preloadedS3SignedUrl: s3SignedUrl,\r\n    stopProfileTransactionSentry,\r\n    apiTokenForClose,\r\n    twoFaKeyForClose,\r\n  }).catch((error: unknown) => {\r\n    removeItemFromArray(syncingProfiles, profileId);\r\n    let statusMessage = 'notifications.error.uploadingProfileError';\r\n    let sendToSentry = true;\r\n    const message = error instanceof Error ? error.message : error;\r\n    const errorIsString = typeof message === 'string';\r\n    if (errorIsString && message === 'profile deleted') {\r\n      statusMessage = 'notifications.error.profileAlreadyDeleted';\r\n      sendToSentry = false;\r\n    }\r\n\r\n    if (errorIsString && message === 'do not send to sentry') {\r\n      sendToSentry = false;\r\n    }\r\n\r\n    if (errorIsString && message === 'no url') {\r\n      sendToSentry = false;\r\n    }\r\n\r\n    if (errorIsString && message === 'Too many requests') {\r\n      statusMessage = 'profiles.profileStatusMessages.errorTooManyRequests';\r\n    }\r\n\r\n    sendToSentry && sendCommonErrorToSentry({\r\n      message, transactionName: 'upload-profile-global',\r\n      tags: [['scenario', 'close-profile'], ['profileId', profileId], ['name', 'upload-profile-global']],\r\n    });\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage,\r\n    });\r\n  });\r\n\r\n  if (!profileUid) {\r\n    removeItemFromArray(syncingProfiles, profileId);\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: 'notifications.error.uploadingProfileError',\r\n    });\r\n    ProfileStatusManagerInst.removeStatus({ status: 'cloud_uploading' });\r\n\r\n    return;\r\n  }\r\n\r\n  await ProfileCachingManagerInst.renameCachedProfile(profileId, tempArchiveName, profileUid)\r\n    .catch((renameError) => {\r\n      console.log(renameError);\r\n      const cachingSentrySpan = stopProfileTransactionSentry.startChild({ op: 'caching-profile' });\r\n\r\n      return ProfileCachingManagerInst.copyClosedProfileToCacheDirectory(profileArchiveBuffer, profileId, profileUid)\r\n        .catch((error: unknown) => {\r\n          const message = error instanceof Error ? error.message : error;\r\n          let transactionName = 'cache-profile-after-close';\r\n          if (typeof message === 'string' && message.includes('ENOSPC')) {\r\n            transactionName = 'no-disc-space';\r\n          }\r\n\r\n          sendErrorToSentry({\r\n            message, transactionName,\r\n            tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n          });\r\n        }).finally(() => cachingSentrySpan.finish());\r\n    });\r\n\r\n  console.log('Sending analytics after upload to s3');\r\n  const uploadDTime = moment().toDate().valueOf() - timeBeforeUpload;\r\n  const body = {\r\n    type: 'profile-s3-upload',\r\n    status: 'success',\r\n    profile: profileId,\r\n    time: uploadDTime,\r\n    os: userOs,\r\n    deduplicationKey,\r\n  };\r\n\r\n  makeRequest({ url: `${CommonDataManagerInst.apiBaseUrl}/analytics`, method: 'POST', body }).catch(() => null);\r\n\r\n  const removingFilesSentrySpan = stopProfileTransactionSentry.startChild({ op: 'remove-files' });\r\n  removeItemFromArray(syncingProfiles, profileId);\r\n  access(pathOs.PROFILES_DIR + profileId)\r\n    .then(() => rm(pathOs.PROFILES_DIR + profileId, { recursive: true }))\r\n    .catch(() => {\r\n      removingFilesSentrySpan.setStatus('aborted');\r\n    });\r\n  removingFilesSentrySpan.finish();\r\n  stopProfileTransactionSentry.finish();\r\n\r\n  ProfileStatusManagerInst.removeStatus({ status: 'cloud_uploading' });\r\n  delete ProfileStatusManagerInstances[profileId];\r\n};\r\n\r\nexport const removeLocalStorage = (props: IRemoveLocalStorageProps): Promise<void[]> => {\r\n  const {\r\n    profileId,\r\n    localStorageEnabled,\r\n    indexedDbEnabled,\r\n    stopProfileTransactionSentry,\r\n  } = props;\r\n\r\n  const removeDirs = {\r\n    localStorage: `${pathOs.ROUTE_SLASH}Default${pathOs.ROUTE_SLASH}Local Storage`,\r\n    indexedDb: `${pathOs.ROUTE_SLASH}Default${pathOs.ROUTE_SLASH}IndexedDB`,\r\n  };\r\n\r\n  const promises: Promise<void>[] = [];\r\n  if (!localStorageEnabled) {\r\n    stopProfileTransactionSentry && stopProfileTransactionSentry.setTag('local-storage-disabled', true);\r\n    promises.push(removeFileOrFolder(pathOs.PROFILES_DIR + profileId + removeDirs.localStorage));\r\n  }\r\n\r\n  if (!indexedDbEnabled) {\r\n    stopProfileTransactionSentry && stopProfileTransactionSentry.setTag('indexed-db-disabled', true);\r\n    promises.push(removeFileOrFolder(pathOs.PROFILES_DIR + profileId + removeDirs.indexedDb));\r\n  }\r\n\r\n  return Promise.all(promises);\r\n};\r\n\r\nconst cleanDirs = async (props: ICleanDirsProps): Promise<void> => {\r\n  const {\r\n    profileId,\r\n    currentMs,\r\n    localStorageEnabled,\r\n    indexedDbEnabled,\r\n    stopProfileTransactionSentry,\r\n  } = props;\r\n\r\n  const waitingSentrySpan = stopProfileTransactionSentry.startChild({ op: 'waiting-orbita-finish' });\r\n  delete pidList[profileId];\r\n  // Браузер удаляет какие-то файлы и на это нужно время\r\n  // Если мы не делаем таймаут - получаем ошибку:\r\n  // В архиве должен быть определенный файл, которого не становится\r\n  // Если вместо ссылки вернется ошибка, что профиль удален, на этом наши полномочия все\r\n  await new Promise(resolve => setTimeout(resolve, 1000));\r\n  waitingSentrySpan.finish();\r\n  const removingFoldersSentrySpan = stopProfileTransactionSentry.startChild({ op: 'removing-folders' });\r\n\r\n  const promises: Promise<void | void[]>[] = [];\r\n  promises.push(removeLocalStorage({ profileId, localStorageEnabled, indexedDbEnabled }));\r\n\r\n  // Удаляем архивы чтобы не перекликались они между собой\r\n  promises.push(rm(`${pathOs.PROFILES_DIR}${profileId}_${currentMs}.zip`).catch(() => void 0));\r\n\r\n  promises.push(rm(`${pathOs.PROFILES_DIR}${profileId}_${currentMs}_sync.zip`).catch(() => void 0));\r\n\r\n  await Promise.allSettled(promises);\r\n\r\n  removingFoldersSentrySpan.finish();\r\n};\r\n\r\nconst insertExtensionsToDb = async (extensionsToAdd: string[], pathToExtensions = CHROME_EXTENSIONS_PATH): Promise<unknown> => {\r\n  if (!extensionsToAdd.length) {\r\n    return;\r\n  }\r\n\r\n  const extensionsToUpdate = await ExtensionsManagerInst.getExtensionsNameAndImage(extensionsToAdd, pathToExtensions);\r\n\r\n  return makeRequest({\r\n    url: `${CommonDataManagerInst.apiBaseUrl}/extensions/create`, method: 'POST', body: { extensionsInfo: extensionsToUpdate },\r\n  });\r\n};\r\n\r\nconst getProfileArchiveBufferPromise = (profileId: string, sentrySpan: ITransactionSpanObject): Promise<Buffer | void | null> =>\r\n  archiveProfile(pathOs.PROFILES_DIR + profileId, profileId)\r\n    .catch((error: Error) => {\r\n      console.log('archiving error', error);\r\n      const cachedProfilePath = path.join(CACHED_PROFILES_FOLDER, profileId);\r\n      rm(cachedProfilePath, { recursive: true, force: true }).catch(console.log);\r\n      const message = error instanceof Error ? error.message : error;\r\n      const isProfileDeleted = deletedProfiles.includes(profileId);\r\n\r\n      if ((typeof message === 'string' && message.includes('Invalid profile folder path')) || isProfileDeleted) {\r\n        return null;\r\n      }\r\n\r\n      sentrySpan.setStatus('aborted');\r\n      sendCommonErrorToSentry({\r\n        message, transactionName: 'archive-profile-after-close',\r\n        tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n      });\r\n    })\r\n    .finally(() => sentrySpan.finish());\r\n\r\nconst loadCookiesPromise = async (profileId: string, sentrySpan: ITransactionSpanObject): Promise<any> => {\r\n  const cookiesFilePath = await CookiesManager.getCookiesFileToRead(profileId);\r\n\r\n  if (!cookiesFilePath) {\r\n    return;\r\n  }\r\n\r\n  return loadCookiesFromFile(cookiesFilePath)\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      if (deletedProfiles.includes(profileId)) {\r\n        return;\r\n      }\r\n\r\n      sendErrorToSentry({\r\n        message, transactionName: 'load-cookies-from-file',\r\n        tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n      });\r\n\r\n      sentrySpan.setStatus('aborted');\r\n\r\n      const errorCookiesArr = [{ domain: 'error' }];\r\n\r\n      return { cookies: errorCookiesArr };\r\n    })\r\n    .finally(() => sentrySpan.finish());\r\n};\r\n\r\nconst loadPasswordsPromise = async (profileId: string, sentrySpan: ITransactionSpanObject): Promise<TLoadedPasswords> => {\r\n  const passwordsFilePath = pathOs.PROFILES_DIR + profileId + pathOs.PASSWORDS_FILE;\r\n\r\n  const { passwords } = await withRetry<{ passwords: any[] }>({\r\n    fn() {\r\n      return loadPasswordsFromFile(passwordsFilePath);\r\n    },\r\n    retryDelay: 300,\r\n  })\r\n    .catch(async (error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      const errorPassObj = { origin_url: 'error', username_value: 'error', password_value: 'error' };\r\n\r\n      const isFileDeleted = deletedProfiles.includes(profileId);\r\n\r\n      if (!isFileDeleted) {\r\n        return { passwords: [errorPassObj] };\r\n      }\r\n\r\n      sendErrorToSentry({\r\n        message, transactionName: 'load-passwords-from-file',\r\n        tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n      });\r\n\r\n      sentrySpan.setStatus('aborted');\r\n\r\n      return { passwords: [errorPassObj] };\r\n    })\r\n    .finally(() => sentrySpan.finish());\r\n\r\n  return passwords.map(el => ({\r\n    domain: el.origin_url,\r\n    username: el.username_value,\r\n    password: el.password_value,\r\n  })).filter(el => el.username && el.password && el.domain);\r\n};\r\n\r\nconst getProfileExtPromise = async (pathToPreferences: string, sentrySpan: ITransactionSpanObject, profileId: string): Promise<string[]> =>\r\n  BrowserUserDataManagerInst.getProfileChromeExtensions(pathToPreferences)\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      if (deletedProfiles.includes(profileId)) {\r\n        return [];\r\n      }\r\n\r\n      if (typeof message === 'string' && message.includes('ENOENT')) {\r\n        return [];\r\n      }\r\n\r\n      sendErrorToSentry({\r\n        message, transactionName: 'read-chrome-extensions-from-pref-after-close',\r\n        tags: [['scenario', 'close-profile']],\r\n      });\r\n\r\n      sentrySpan.setStatus('aborted');\r\n\r\n      return [];\r\n    })\r\n    .finally(() => sentrySpan.finish());\r\n\r\nconst getProfileBookmarksPromise = async (pathToBookmarks: string, profileId: string): Promise<IBookmarkFoldersObj> => {\r\n  const profileBookmarks = await readFile(pathToBookmarks, 'utf-8')\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      if (typeof message === 'string' && message.includes('ENOENT')) {\r\n        return '';\r\n      }\r\n\r\n      sendErrorToSentry({\r\n        message, transactionName: 'read-bookmarks-after-profile-close',\r\n        tags: [['scenario', 'read-bookmarks'], ['profileId', profileId]],\r\n      });\r\n\r\n      return '';\r\n    });\r\n\r\n  let bookmarks = { roots: {} };\r\n\r\n  if (!profileBookmarks) {\r\n    return bookmarks.roots;\r\n  }\r\n\r\n  try {\r\n    bookmarks = JSON.parse(profileBookmarks);\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'parse-bookmarks-after-profile-close',\r\n      tags: [['scenario', 'parse-bookmarks'], ['profileId', profileId]],\r\n    });\r\n  }\r\n\r\n  return bookmarks.roots;\r\n};\r\n\r\nconst uploadDataAndGetS3Link = async (props: IUploadDataAndGetS3LinkProps): Promise<ISignedS3UrlObj> => {\r\n  const {\r\n    profileId,\r\n    passwords,\r\n    cookies,\r\n    extensionsIds,\r\n    bookmarks,\r\n    fileSize,\r\n    pathToExtensions,\r\n    stopProfileTransactionSentry,\r\n  } = props;\r\n\r\n  const uploadDataSentrySpan = stopProfileTransactionSentry.startChild({ op: 'upload-profile-data' });\r\n  if (deletedProfiles.includes(profileId)) {\r\n\r\n    return { url: 'error', isCf: false };\r\n  }\r\n\r\n  const uploadProfileDataResponse = await BrowserUserDataManagerInst.uploadProfileData({\r\n    browserId: profileId,\r\n    passwords,\r\n    cookies: cookies.cookies,\r\n    extensionsIds,\r\n    bookmarks,\r\n    fileSize,\r\n    cf: false,\r\n    hk: false,\r\n  }).catch((error: any) => {\r\n    if (error.response?.body?.includes('Profile has been deleted')) {\r\n      return { s3: { url: 'error', isCf: false }, extensionsToAdd: [] };\r\n    }\r\n\r\n    if (error.message.includes('429') || error.message.includes('Too many requests')) {\r\n      return { s3: { url: 'error-429', isCf: false }, extensionsToAdd: [] };\r\n    }\r\n\r\n    sendCommonErrorToSentry({\r\n      message: error.message, transactionName: 'update-profile-and-get-s3-url-after-close',\r\n      tags: [['name', 'update-profile-and-get-s3-url-after-close'], ['profileId', profileId]],\r\n    });\r\n    uploadDataSentrySpan.setStatus('aborted');\r\n    uploadDataSentrySpan.finish();\r\n    removeItemFromArray(syncingProfiles, profileId);\r\n\r\n    return { url: '', isCf: false };\r\n  });\r\n\r\n  uploadDataSentrySpan.finish();\r\n  const { s3 = { url: '', isCf: false }, extensionsToAdd: missingExtIds = [] } = uploadProfileDataResponse;\r\n\r\n  if (s3.url?.includes('error')) {\r\n    return s3;\r\n  }\r\n\r\n  insertExtensionsToDb(missingExtIds, pathToExtensions).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'insert-extensions-to-db-error',\r\n      tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n    });\r\n    console.log(error);\r\n  });\r\n\r\n  return s3;\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"open\");","import { readdir } from 'fs/promises';\r\n\r\nimport { sendErrorToSentry } from '../../electron/utils/sentry';\r\nimport { ISendOrbitaErrors } from '../interfaces/send-orbita-errors.interfaces';\r\nimport { ISentryTag } from '../interfaces/sentry.interfaces';\r\nimport { BrowserReleasesManager } from '../managers/browser-releases.manager';\r\nimport { downloadBrowser } from '../utils/check-browser';\r\n\r\nexport const ORBITA_SELF_CLOSE_MS = 3000;\r\n\r\nexport const sendOrbitaErrorToSentry = async ({\r\n  orbitaConsoleContainer,\r\n  message,\r\n  profileData,\r\n  processDurationMs,\r\n  code,\r\n  signal,\r\n  ProfileStatusManagerInst,\r\n  channel,\r\n}: ISendOrbitaErrors): Promise<void> => {\r\n  const ua = profileData.gologin?.userAgent || '';\r\n  const majorChromeVersion = new BrowserReleasesManager().getMajorVersionByUA(ua);\r\n  const {\r\n    browserWorkingDir,\r\n  } = new BrowserReleasesManager().getOrbitaPathToStart(majorChromeVersion);\r\n\r\n  const browserDir = await readdir(browserWorkingDir).catch(() => console.log('error reading browser dir'));\r\n\r\n  console.log(orbitaConsoleContainer);\r\n  console.log('orbita logs: ');\r\n  console.log(browserDir);\r\n  console.log('browser dir content: ');\r\n\r\n  let transactionName = 'crash-orbita';\r\n\r\n  const tags: ISentryTag[] = [['scenario', 'close-profile']];\r\n\r\n  if (processDurationMs < ORBITA_SELF_CLOSE_MS) {\r\n    transactionName = 'open-orbita';\r\n  }\r\n\r\n  switch (true) {\r\n    case code === 7:\r\n      tags.push(['reason', 'no-dll']);\r\n      downloadBrowser(channel, { orbitaVersion: majorChromeVersion });\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profilesTable.profileStatusTooltip.reDownloadOrbita',\r\n      });\r\n\r\n      break;\r\n    case signal === 'SIGABRT':\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profilesTable.profileStatusTooltip.oldMacOs',\r\n      });\r\n\r\n      transactionName = 'not-supported-os';\r\n      break;\r\n    case code === 2147483651:\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profilesTable.profileStatusTooltip.gpuCrash',\r\n      });\r\n      tags.push(['reason', 'gpu']);\r\n      break;\r\n    case orbitaConsoleContainer.some((log: string) => log.includes('Opening in existing browser session')):\r\n      tags.push(['reason', 'existing-session']);\r\n      break;\r\n    case code === 126:\r\n      tags.push(['reason', 'mac-processor']);\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profilesTable.profileStatusTooltip.macNotSupport',\r\n      });\r\n      break;\r\n    case orbitaConsoleContainer.some((log: string) => log.includes('chrome.exe')):\r\n      tags.push(['reason', 'no-exe']);\r\n      downloadBrowser(channel, { orbitaVersion: majorChromeVersion });\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profilesTable.profileStatusTooltip.reDownloadOrbita',\r\n      });\r\n      break;\r\n    case code === 3221225785:\r\n      tags.push(['reason', '3221225785']);\r\n      break;\r\n    case code === 21:\r\n      tags.push(['reason', 'cant-create-singleton']);\r\n      break;\r\n    case code === 3221225506:\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profilesTable.profileStatusTooltip.antivirus',\r\n      });\r\n      tags.push(['reason', 'access']);\r\n      break;\r\n    case code === 127:\r\n      tags.push(['reason', 'no-files-mac']);\r\n      downloadBrowser(channel, { orbitaVersion: majorChromeVersion });\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profilesTable.profileStatusTooltip.reDownloadOrbita',\r\n      });\r\n      break;\r\n    case code === 3765269347:\r\n      tags.push(['reason', '3765269347']);\r\n      break;\r\n    case code === 4294967295:\r\n      tags.push(['reason', '4294967295']);\r\n      break;\r\n    case code === 3221225477:\r\n      tags.push(['reason', '3221225477']);\r\n      break;\r\n    case code === 3221225501:\r\n      tags.push(['reason', '3221225501']);\r\n      break;\r\n    case code === 0:\r\n      return;\r\n    default:\r\n      tags.push(['reason', 'unknown']);\r\n  }\r\n\r\n  sendErrorToSentry({\r\n    message, transactionName, level: 'fatal',\r\n    tags,\r\n  });\r\n};\r\n","import { IAdditionalProps } from '../../../interfaces/server.api.interfaces';\r\nimport { BRAVE_PROCESSES } from '../../../managers/profile/renderer';\r\nimport { apiRequest } from './request';\r\n\r\nexport function apiStatusUpdater(profileId: string, additionalOpts: IAdditionalProps): void {\r\n  let running = !!BRAVE_PROCESSES[profileId];\r\n  // eslint-disable-next-line no-undefined\r\n  if (additionalOpts.running !== undefined) {\r\n    ({ running: running } = additionalOpts);\r\n  }\r\n\r\n  apiRequest({\r\n    endpoint: `/browser/${profileId}/run-sync`,\r\n    method: 'PATCH',\r\n    body: {\r\n      running,\r\n    },\r\n  }).catch(() => null);\r\n}\r\n","import { ChildProcessWithoutNullStreams, SpawnOptionsWithoutStdio, spawn } from 'child_process';\r\nimport { rm } from 'fs/promises';\r\nimport pathNode from 'path';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { closeAndUploadProfile } from './close-orbita';\r\nimport {\r\n  BRAVE_PROCESSES,\r\n  deletedProfiles, loadingProfiles, syncingProfiles,\r\n} from './renderer';\r\nimport packageSettings from '../../../../package.json';\r\nimport { IGeolocation } from '../../../app/interfaces';\r\nimport { OpenProfileViaLink } from '../../../common/constants/analytics';\r\nimport { makeRequest } from '../../../electron/utils/make-request';\r\nimport { sendCommonErrorToSentry, sendErrorToSentry } from '../../../electron/utils/sentry';\r\nimport { sentryTransactionDefaultObject } from '../../helpers/helper.functions';\r\nimport { ORBITA_SELF_CLOSE_MS, sendOrbitaErrorToSentry } from '../../helpers/orbita-errors';\r\nimport { ILaunchOrbitaProps, IProfilePreparingRes } from '../../interfaces/launch-orbita.interfaces';\r\nimport { apiStatusUpdater } from '../../server/src/services/profiles-timer';\r\nimport { downloadBrowser } from '../../utils/check-browser';\r\nimport { getPathOs } from '../../utils/path-platforms';\r\nimport { sendActionAnalytics } from '../../utils/send-action-analytics';\r\nimport { removeItemFromArray } from '../../utils/utils';\r\nimport { pidList } from '../../window-raiser/focus-orbita-utils';\r\nimport { BrowserReleasesManager } from '../browser-releases.manager';\r\nimport { CommonDataManager } from '../common-data-manager';\r\nimport { ProfileStarterManager } from '../start-profile-manager';\r\n\r\nconst pathOs = getPathOs();\r\nconst ProfileStarterManagerInst = new ProfileStarterManager();\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport const launchOrbita = async (props: ILaunchOrbitaProps): Promise<string> => {\r\n  const {\r\n    timezoneCheckResult, startProfileTimestamp, profileOptions,\r\n    remoteCb, profileData, automation, args, channel, passwordsTemporaryToken, currentMs, ProfileReadyEventEmitterInst,\r\n    profilePreparingRes, timings,\r\n    startProfileTransactionSentry = sentryTransactionDefaultObject,\r\n    ProfileStatusManagerInst,\r\n    ProfileStatusManagerInstances,\r\n    deepLinkProtocol,\r\n  } = props;\r\n\r\n  const { profileId } = profileData;\r\n  const { timezone: TZ, ll = ['0', '0'], accuracy = 100, ip, country } = timezoneCheckResult;\r\n  if (!(ip && TZ)) {\r\n    const statusMessage = 'Timezone request error.';\r\n    console.log(timezoneCheckResult);\r\n    sendErrorToSentry({\r\n      message: `Timezone request error - ${timezoneCheckResult}`, transactionName: 'timezone-request-error', level: 'fatal',\r\n      tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n    });\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage,\r\n      startProfileTimestamp,\r\n      profileOptions,\r\n    });\r\n\r\n    remoteCb && remoteCb(null, { status: 403, message: statusMessage });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  profileOptions.proxyCountry = country;\r\n\r\n  try {\r\n    const {\r\n      profileExtensionPathRes,\r\n      profileUserExtensionPathRes,\r\n    } = profilePreparingRes.reduce((acc: IProfilePreparingRes, doc: any) => {\r\n      if ('profileExtensionsCheckRes' in doc) {\r\n        acc.profileExtensionPathRes = doc;\r\n      }\r\n\r\n      if ('profileUserExtensionsCheckRes' in doc) {\r\n        acc.profileUserExtensionPathRes = doc;\r\n      }\r\n\r\n      return acc;\r\n    }, { profileExtensionPathRes : {}, profileUserExtensionPathRes: {} });\r\n\r\n    const [latitude, longitude] = ll;\r\n    console.log('Getting timezone:', TZ);\r\n\r\n    const tz = profileData.fillProxyByIp ? TZ : profileData.timezoneValue;\r\n    const profileGeolocation = profileData.gologin.geoLocation;\r\n    const tzGeoLocation = {\r\n      latitude,\r\n      longitude,\r\n      accuracy,\r\n    };\r\n\r\n    profileData.gologin.geoLocation = getGeolocationParams(profileGeolocation, tzGeoLocation);\r\n    profileData.gologin.timezone = { id: tz };\r\n\r\n    const profileExtensionsCheckRes =\r\n      (profileExtensionPathRes?.profileExtensionsCheckRes || []).concat(profileUserExtensionPathRes?.profileUserExtensionsCheckRes || []);\r\n\r\n    console.log('checkRes', profileExtensionsCheckRes);\r\n    const updateBrowserSettings = startProfileTransactionSentry.startChild({ op: 'write-preferences' });\r\n    await ProfileStarterManagerInst.updatingBrowserSettings({ profileData, publicUserIp: ip, profileExtensionsCheckRes, args, timezoneCheckResult });\r\n    updateBrowserSettings.finish();\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    let statusMessage = 'profileStatusMessages.defectiveProfileError';\r\n    let transactionName = 'update-preferences-file';\r\n\r\n    if (typeof message === 'string' && message.includes('ENOSPC')) {\r\n      transactionName = 'no-disk-space';\r\n      statusMessage = 'profileStatusMessages.discSpaceError';\r\n    }\r\n\r\n    sendErrorToSentry({\r\n      message, transactionName, level: 'fatal',\r\n      tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n    });\r\n    startProfileTransactionSentry.setStatus('aborted');\r\n    startProfileTransactionSentry.finish();\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      startProfileTimestamp,\r\n      statusMessage,\r\n      profileOptions,\r\n    });\r\n\r\n    remoteCb && remoteCb(null, { status: 403, message: statusMessage });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  let braveProc: any;\r\n\r\n  ProfileReadyEventEmitterInst.removeListener('profile-ready', () => {\r\n    console.log('listener removed');\r\n  });\r\n\r\n  if (!BRAVE_PROCESSES[profileId]) {\r\n    BRAVE_PROCESSES[profileId] = {};\r\n  }\r\n\r\n  await removeLockFiles(profileId).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'remove-lock-files-error', level: 'fatal',\r\n      tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n    });\r\n  });\r\n\r\n  // const { userOs } = CommonDataManagerInst;\r\n\r\n  // if (['mac', 'lin'].includes(userOs)) {\r\n  //   args.push('--enable-logging=stderr --v=1');\r\n  // }\r\n\r\n  // user-data-dir should be always last\r\n  const [userDataDirArg] = args;\r\n  args[0] = args[args.length - 1];\r\n  args[args.length - 1] = userDataDirArg;\r\n\r\n  console.log('args', args);\r\n  console.log('Spawning browser process');\r\n\r\n  const spawningBrowserSentry = startProfileTransactionSentry.startChild({ op: 'spawn-browser' });\r\n  let majorChromeVersion = '';\r\n  try {\r\n    const ua = profileData.gologin?.userAgent || '';\r\n    majorChromeVersion = new BrowserReleasesManager().getMajorVersionByUA(ua);\r\n    braveProc = await launchBrowser(args, ua);\r\n    spawningBrowserSentry.finish();\r\n    startProfileTransactionSentry.finish();\r\n    if (deepLinkProtocol) {\r\n      sendActionAnalytics(OpenProfileViaLink.opened, { mode: deepLinkProtocol, profile: profileId, actionInfo: profileData.gologin?.name || '' });\r\n    }\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    const statusMessage = `launchBrowser error ${profileId}. ${message}`;\r\n\r\n    sendCommonErrorToSentry({\r\n      message, transactionName: 'spawn-orbita-process',\r\n      tags: [['scenario', 'run-profile'], ['profileId', profileId], ['name', 'spawn-orbita-process']],\r\n    });\r\n\r\n    downloadBrowser(channel, { orbitaVersion: majorChromeVersion });\r\n\r\n    startProfileTransactionSentry.setStatus('aborted');\r\n    startProfileTransactionSentry.finish();\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: 'profilesTable.profileStatusTooltip.noInstalledOrbita',\r\n      startProfileTimestamp,\r\n      profileOptions,\r\n    });\r\n\r\n    remoteCb && remoteCb(null, { status: 403, message: statusMessage });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  const orbitaConsoleContainer: string[] = [];\r\n  removeItemFromArray<string>(loadingProfiles, profileId);\r\n\r\n  pidList[profileId] = braveProc?.pid;\r\n  console.log(`profile ${profileId} orbita pid:`, braveProc?.pid);\r\n\r\n  try {\r\n    BRAVE_PROCESSES[profileId].startProfileTimestamp = moment.now();\r\n    timings.overallTime = moment.now() - startProfileTimestamp;\r\n    profileOptions.proxyMode = profileData.proxy.mode;\r\n    BRAVE_PROCESSES[profileId].startMode = profileOptions.startMode;\r\n\r\n    // Присваиваем списку процессов браузера\r\n    // По идентификатору профиля\r\n    // Процесс браузера\r\n    BRAVE_PROCESSES[profileId].orbitaProc = braveProc;\r\n\r\n    if (profileData.lockEnabled) {\r\n      apiStatusUpdater(profileId, { running: true });\r\n      BRAVE_PROCESSES[profileId].bigTimer =\r\n        setInterval(() => apiStatusUpdater(profileId, {}), 3 * 60 * 1000);\r\n    }\r\n  } catch {\r\n    console.log('error assigning startProfileTimestamp');\r\n  }\r\n\r\n  // Уведомление на клиенте об успешном запуске профиля\r\n  ProfileStatusManagerInst.addStatus({\r\n    status: 'running',\r\n    startProfileTimestamp,\r\n    profileOptions,\r\n    timings,\r\n  });\r\n  ProfileStatusManagerInst.removeStatus({ status: 'preparing_profile' });\r\n\r\n  const addDataToConsoleContainer = (output: string): void => {\r\n    try {\r\n      orbitaConsoleContainer.unshift(output.toString().replace(/\\n/g, '').replace(/\\s\\s+/g, ' '));\r\n      if (orbitaConsoleContainer.length > 50) {\r\n        orbitaConsoleContainer.length = 50;\r\n      }\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  try {\r\n    braveProc && braveProc.stdout.on('data', (data: string) => {\r\n      // console.log(`STDOUT: ${data}`);\r\n      addDataToConsoleContainer(data);\r\n    });\r\n\r\n    braveProc && braveProc.stderr.on('data', (data: string) => {\r\n      // console.error(`STDERR: ${data}`);\r\n      addDataToConsoleContainer(data);\r\n    });\r\n\r\n    braveProc && braveProc.on('error', async (err: unknown) => {\r\n      const message = err instanceof Error ? err.message : err;\r\n      console.log(err);\r\n      downloadBrowser(channel, { orbitaVersion: majorChromeVersion });\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: 'profilesTable.profileStatusTooltip.noInstalledOrbita',\r\n      });\r\n\r\n      sendErrorToSentry({\r\n        message, transactionName: 'no-installed-orbita', level: 'fatal',\r\n        tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n      });\r\n\r\n      BRAVE_PROCESSES[profileId]?.bigTimer && clearInterval(BRAVE_PROCESSES[profileId].bigTimer);\r\n      delete BRAVE_PROCESSES[profileId];\r\n    });\r\n  } catch(err) {\r\n    console.log(err);\r\n  }\r\n\r\n  braveProc && braveProc.on('exit', async (code: number, signal: string) => {\r\n    console.log('closing profile', profileId);\r\n    if (profileData.lockEnabled) {\r\n      apiStatusUpdater(profileId, { running: false });\r\n    }\r\n\r\n    const processDurationMs = moment.now() - BRAVE_PROCESSES[profileId]?.startProfileTimestamp;\r\n\r\n    BRAVE_PROCESSES[profileId]?.bigTimer && clearInterval(BRAVE_PROCESSES[profileId].bigTimer);\r\n    delete BRAVE_PROCESSES[profileId];\r\n\r\n    if (deletedProfiles.includes(profileId) || loadingProfiles.includes(profileId) || syncingProfiles.includes(profileId)) {\r\n      return;\r\n    }\r\n\r\n    const message = `child process exited with code ${code} and signal ${signal}`;\r\n    ProfileStatusManagerInst.addStatus({ status: 'archiving' });\r\n    ProfileStatusManagerInst.removeStatus({ status: 'running' });\r\n    console.log(message);\r\n    if (![0, null].includes(code) || signal === 'SIGABRT' || processDurationMs < ORBITA_SELF_CLOSE_MS) {\r\n      sendOrbitaErrorToSentry({ orbitaConsoleContainer, message, profileData, processDurationMs, code, signal, ProfileStatusManagerInst, channel })\r\n        .catch(() => null);\r\n    }\r\n\r\n    const browserVersion = await new BrowserReleasesManager().getLocalOrbitaVersionByPath()\r\n      .catch((err) => {\r\n        console.log('Error in reading browser version', err);\r\n\r\n        return '';\r\n      });\r\n\r\n    console.log('braveProc browserVersion:', browserVersion);\r\n\r\n    const { userOs } = CommonDataManagerInst;\r\n\r\n    const body = {\r\n      type: 'browser-close',\r\n      status: code === 0 || code === null ? 'success' : 'error',\r\n      profile: profileId,\r\n      time: Date.now() - startProfileTimestamp,\r\n      message: `${code}`,\r\n      os: userOs,\r\n      browserVersion,\r\n      appVersion: packageSettings.version,\r\n      proxyMode: profileData.proxy.mode,\r\n    };\r\n\r\n    makeRequest({ url: `${CommonDataManagerInst.apiBaseUrl}/analytics`, method: 'POST', body })\r\n      .catch(err => console.log(err));\r\n\r\n    makeRequest({\r\n      url: `${CommonDataManagerInst.apiBaseUrl}/profiles-passwords/temporary-token`,\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${passwordsTemporaryToken}`,\r\n        'user-agent': CommonDataManagerInst.userAgent,\r\n        'x-two-factor-token': CommonDataManagerInst.twoFaKey || '',\r\n      },\r\n\r\n    }).catch(err => console.log(err));\r\n\r\n    const apiTokenForClose = CommonDataManagerInst.accessToken;\r\n    const twoFaKeyForClose = CommonDataManagerInst.twoFaKey;\r\n\r\n    await closeAndUploadProfile({\r\n      profileId,\r\n      currentMs,\r\n      debugMode: profileData.debugMode,\r\n      localStorageEnabled: profileData.localStorageEnabled,\r\n      indexedDbEnabled: profileData.indexedDbEnabled,\r\n      channel,\r\n      os: profileData.os,\r\n      ProfileStatusManagerInst,\r\n      ProfileStatusManagerInstances,\r\n      automation,\r\n      apiTokenForClose,\r\n      twoFaKeyForClose,\r\n      vaultToken: profileData.vaultToken,\r\n    }).catch((error: unknown) => {\r\n      removeItemFromArray(syncingProfiles, profileId);\r\n      const errMessage = error instanceof Error ? error.message : error;\r\n      let statusMessage = `profile close error ${profileId}. ${errMessage}`;\r\n      let sendToSentry = true;\r\n      if (errMessage === 'The profile has been deleted') {\r\n        statusMessage = 'notifications.error.profileAlreadyDeleted';\r\n        sendToSentry = false;\r\n      }\r\n\r\n      if (errMessage === 'profile archive is not found') {\r\n        sendToSentry = false;\r\n      }\r\n\r\n      if (errMessage === 'Too many requests') {\r\n        statusMessage = 'profiles.profileStatusMessages.errorTooManyRequests';\r\n      }\r\n\r\n      ProfileStatusManagerInst.addStatus({ status: 'error', statusMessage });\r\n\r\n      sendToSentry && sendCommonErrorToSentry({\r\n        message: errMessage, transactionName: 'close-profile-global',\r\n        tags: [['scenario', 'close-profile'], ['profileId', profileId], ['name', 'close-profile-global']],\r\n      });\r\n    });\r\n\r\n    ProfileStatusManagerInst.removeStatus({ status: 'syncing' });\r\n  });\r\n\r\n  remoteCb && remoteCb(null, null);\r\n\r\n  return 'success';\r\n};\r\n\r\nconst getGeolocationParams = (profileGeolocationParams: IGeolocation, tzGeolocationParams: IGeolocation): IGeolocation => {\r\n  if (profileGeolocationParams.fillBasedOnIp) {\r\n    return {\r\n      mode: profileGeolocationParams.mode,\r\n      latitude: Number(tzGeolocationParams.latitude),\r\n      longitude: Number(tzGeolocationParams.longitude),\r\n      accuracy: Number(tzGeolocationParams.accuracy),\r\n    };\r\n  }\r\n\r\n  return {\r\n    mode: profileGeolocationParams.mode,\r\n    latitude: profileGeolocationParams.latitude,\r\n    longitude: profileGeolocationParams.longitude,\r\n    accuracy: profileGeolocationParams.accuracy,\r\n  };\r\n};\r\n\r\nconst launchBrowser = async (args: string[], ua = ''): Promise<unknown> => {\r\n  const majorChromeVersion = new BrowserReleasesManager().getMajorVersionByUA(ua);\r\n  const {\r\n    pathToLaunch,\r\n    browserWorkingDir,\r\n  } = new BrowserReleasesManager().getOrbitaPathToStart(majorChromeVersion);\r\n\r\n  console.log('majorChromeVersion:', majorChromeVersion);\r\n  console.log('pathToLaunch:', pathToLaunch);\r\n  console.log('browserWorkingDir:', browserWorkingDir);\r\n\r\n  const options: SpawnOptionsWithoutStdio = {\r\n    shell: true,\r\n    cwd: browserWorkingDir,\r\n    detached: true,\r\n    // stdio: 'ignore',\r\n    stdio: 'pipe',\r\n  };\r\n\r\n  const spawnedProcess: ChildProcessWithoutNullStreams = spawn(`\"${pathToLaunch}\"`, args, options);\r\n  spawnedProcess.unref();\r\n\r\n  return spawnedProcess;\r\n};\r\n\r\nconst removeLockFiles = (profileId: string): Promise<void[]> => {\r\n  const promises = ['SingletonLock', 'SingletonSocket', 'SingletonCookie', 'RunningChromeVersion'].map(async (fileName) => {\r\n    const filePath = pathNode.resolve(pathOs.PROFILES_DIR, profileId, fileName);\r\n    console.log(filePath);\r\n\r\n    return rm(filePath, { force: true });\r\n  });\r\n\r\n  return Promise.all(promises);\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@sentry/react\");","import { IBookmarkFoldersObj } from '../interfaces/bookmarks-utils.interfaces';\r\n\r\ninterface IZeroProfileBookmarks {\r\n  checksum: string;\r\n  roots: IBookmarkFoldersObj;\r\n  version: number;\r\n}\r\n\r\nexport const zeroProfileBookmarks: IZeroProfileBookmarks = {\r\n  'checksum': 'f2a8ce0f0fddfeee2229d72f0f30e713',\r\n  'roots': {\r\n    'bookmark_bar': {\r\n      'children': [ {\r\n        'children': [ {\r\n          'name': 'Facebook',\r\n          'type': 'url',\r\n          'url': 'https://www.facebook.com/',\r\n        }, {\r\n          'name': 'Notifications',\r\n          'type': 'url',\r\n          'url': 'https://www.facebook.com/settings?tab=notifications',\r\n        }, {\r\n          'name': 'Account Quality',\r\n          'type': 'url',\r\n          'url': 'https://www.facebook.com/accountquality',\r\n        }, {\r\n          'name': 'Ads Manager',\r\n          'type': 'url',\r\n          'url': 'https://www.facebook.com/adsmanager/manage/campaigns',\r\n        }, {\r\n          'name': 'Billing',\r\n          'type': 'url',\r\n          'url': 'https://www.facebook.com/ads/manager/account_settings/account_billing',\r\n        }, {\r\n          'name': 'Business Manager',\r\n          'type': 'url',\r\n          'url': 'https://business.facebook.com/select',\r\n        } ],\r\n        'name': 'Facebook',\r\n        'type': 'folder',\r\n      }, {\r\n        'children': [ {\r\n          'name': 'Amazon',\r\n          'type': 'url',\r\n          'url': 'https://www.amazon.com/',\r\n        }, {\r\n          'name': 'eBay',\r\n          'type': 'url',\r\n          'url': 'https://ebay.com/',\r\n        }, {\r\n          'name': 'Walmart',\r\n          'type': 'url',\r\n          'url': 'https://walmart.com/',\r\n        }, {\r\n          'name': 'Shopify',\r\n          'type': 'url',\r\n          'url': 'https://www.shopify.com/',\r\n        }, {\r\n          'name': 'Avito',\r\n          'type': 'url',\r\n          'url': 'https://avito.ru/',\r\n        }, {\r\n          'name': 'Taobao',\r\n          'type': 'url',\r\n          'url': 'https://taobao.com/',\r\n        }, {\r\n          'name': 'Wildberries',\r\n          'type': 'url',\r\n          'url': 'https://wildberries.ru/',\r\n        }, {\r\n          'name': 'Aliexpress',\r\n          'type': 'url',\r\n          'url': 'https://aliexpress.com/',\r\n        }, {\r\n          'name': 'PayPal',\r\n          'type': 'url',\r\n          'url': 'https://paypal.com/',\r\n        }, {\r\n          'name': 'Payoneer',\r\n          'type': 'url',\r\n          'url': 'https://payoneer.com/',\r\n        } ],\r\n        'name': 'Dropshipphing',\r\n        'type': 'folder',\r\n      }, {\r\n        'children': [ {\r\n          'name': 'Coinlist',\r\n          'type': 'url',\r\n          'url': 'https://coinlist.co/',\r\n        }, {\r\n          'name': 'Huobi',\r\n          'type': 'url',\r\n          'url': 'https://www.huobi.com/',\r\n        }, {\r\n          'name': 'Discord',\r\n          'type': 'url',\r\n          'url': 'https://discord.com/',\r\n        }, {\r\n          'name': 'Premint',\r\n          'type': 'url',\r\n          'url': 'https://www.premint.xyz/',\r\n        } ],\r\n        'name': 'Crypto',\r\n        'type': 'folder',\r\n      }, {\r\n        'children': [ {\r\n          'name': 'bet365',\r\n          'type': 'url',\r\n          'url': 'https://www.bet365.com/',\r\n        }, {\r\n          'name': 'Fonbet',\r\n          'type': 'url',\r\n          'url': 'https://www.fon.bet/',\r\n        }, {\r\n          'name': '1xbet',\r\n          'type': 'url',\r\n          'url': 'https://1xbet.com/',\r\n        }, {\r\n          'name': 'Parimatch',\r\n          'type': 'url',\r\n          'url': 'https://parimatch.com/',\r\n        }, {\r\n          'name': 'Melbet',\r\n          'type': 'url',\r\n          'url': 'https://melbet.com/',\r\n        }, {\r\n          'name': '1xstavka',\r\n          'type': 'url',\r\n          'url': 'https://1xstavka.ru/',\r\n        } ],\r\n        'name': 'Betting',\r\n        'type': 'folder',\r\n      }, {\r\n        'name': 'Facebook',\r\n        'type': 'url',\r\n        'url': 'https://www.facebook.com/',\r\n      }, {\r\n        'name': 'Amazon',\r\n        'type': 'url',\r\n        'url': 'https://www.amazon.com/',\r\n      }, {\r\n        'name': 'TikTok',\r\n        'type': 'url',\r\n        'url': 'https://www.tiktok.com/',\r\n      }, {\r\n        'name': 'Google Ads',\r\n        'type': 'url',\r\n        'url': 'https://ads.google.com/',\r\n      }, {\r\n        'name': 'Browser check',\r\n        'type': 'url',\r\n        'url': 'https://iphey.com/',\r\n      } ],\r\n      'name': 'Bookmarks bar',\r\n      'type': 'folder',\r\n    },\r\n    'other': {\r\n      'children': [  ],\r\n      'name': 'Other bookmarks',\r\n      'type': 'folder',\r\n    },\r\n    'synced': {\r\n      'children': [  ],\r\n      'name': 'Mobile bookmarks',\r\n      'type': 'folder',\r\n    },\r\n  },\r\n  'version': 1,\r\n};\r\n","import { makeRequest } from './make-request';\r\n\r\ninterface IChangableAppConfig {\r\n  cookies: {\r\n    createCookiesTableQuery: string;\r\n  };\r\n}\r\n\r\nexport const getChangableAppConfigFromBack = async (): Promise<void> => {\r\n  const { CommonDataManager } = await import('../managers/common-data-manager');\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n  const configData =\r\n    await makeRequest<IChangableAppConfig>({ url: `${CommonDataManagerInst.apiBaseUrl}/gologin-global-settings/changable-app-config` });\r\n\r\n  if (configData.cookies.createCookiesTableQuery) {\r\n    CommonDataManagerInst.createCookiesTableQuery = configData.cookies.createCookiesTableQuery;\r\n  }\r\n};\r\n","import { unlink, writeFile, mkdir, readdir } from 'fs/promises';\r\nimport * as pathNodeJs from 'path';\r\n\r\nimport { SeverityLevel } from '@sentry/electron';\r\nimport moment from 'moment';\r\n\r\nimport { STORAGE_GATEWAY_BASE_URL } from '../constants/constants';\r\nimport { zeroProfileBookmarks } from '../constants/zero-profile-bookmarks';\r\nimport { zeroProfilePreferences } from '../constants/zero-profile-preferences';\r\nimport { IExtractProfileResult, IArchiveProfileProps, IUnzipProfileProps } from '../interfaces/profile-extractor.interfaces';\r\nimport { ProfileCachingManager } from '../managers/profile.caching.manager';\r\nimport { createDBFile } from './crypto/cookies-decryptor';\r\nimport { downloadWithRetry } from './downloadWithRetry';\r\nimport { getPathOs } from './path-platforms';\r\nimport { decompressProfile } from './profile-archiver';\r\nimport { sendCommonErrorToSentry } from './sentry';\r\nimport { checkFileSizeSync, removeFileOrFolder } from './utils';\r\nimport withRetry from './with-retry';\r\n\r\nconst path = getPathOs();\r\n\r\nconst BYTES_IN_MB = 1024 * 1024;\r\n\r\nconst ProfileCachingManagerInst = new ProfileCachingManager();\r\nProfileCachingManagerInst.init().catch(() => null);\r\n\r\nexport const unzipProfile = async (props: IUnzipProfileProps): Promise<string | void> => {\r\n  const {\r\n    timings,\r\n    remoteCb,\r\n    profilePath,\r\n    getProfileArchiveOptions,\r\n  } = props;\r\n\r\n  const {\r\n    storageInfo,\r\n    profileOptions,\r\n    startProfileTimestamp,\r\n    startProfileTransactionSentry,\r\n    ProfileStatusManagerInst,\r\n  } = getProfileArchiveOptions;\r\n\r\n  const timeBeforeAws = moment.utc().valueOf();\r\n  const zipPath = await getProfileArchive(getProfileArchiveOptions);\r\n\r\n  startProfileTransactionSentry.tags = { ...startProfileTransactionSentry.tags, 'profile-mode': profileOptions.startMode };\r\n\r\n  if (zipPath === 'error') {\r\n    return 'error';\r\n  }\r\n\r\n  if (zipPath === 'no need to decompress') {\r\n    ProfileStatusManagerInst.addStatus({ status: 'preparing_profile' });\r\n    ProfileStatusManagerInst.removeStatus({ status: 'downloading_profile_init' });\r\n\r\n    return;\r\n  }\r\n\r\n  let zipSize = 0;\r\n  checkFileSizeSync(zipPath).then((fileSize: number) => {\r\n    zipSize = fileSize;\r\n    startProfileTransactionSentry.tags = { ...startProfileTransactionSentry.tags, 'zip-size-MB': fileSize / BYTES_IN_MB };\r\n  }).catch(() => null);\r\n\r\n  timings.awsRequest = moment.utc().valueOf() - timeBeforeAws;\r\n\r\n  await removeFileOrFolder(profilePath).catch(console.log);\r\n\r\n  const timeBeforeDecompress = moment.utc().valueOf();\r\n  const decompressSentrySpan = startProfileTransactionSentry.startChild({ op: 'decompress-profile' });\r\n  // Распаковывает его в директорию /tmp/gologin/\r\n  const decompressRes = await extractProfile(zipPath, profilePath);\r\n\r\n  if (decompressRes.status === 'error') {\r\n    let statusMessage = 'profileStatusMessages.errorDefectiveProfile';\r\n    let sendError = true;\r\n\r\n    if (decompressRes.error.message.includes('ENOSPC')) {\r\n      statusMessage = 'profileStatusMessages.errorDiscSpace';\r\n    } else if (!storageInfo.isNewProfile) {\r\n      getProfileArchiveOptions.onlyAws = true;\r\n      console.log('try to download from aws');\r\n      const zipPathDownloaded = await getProfileArchive(getProfileArchiveOptions);\r\n\r\n      const decompressAwsRes = await extractProfile(zipPathDownloaded, profilePath);\r\n      if (decompressAwsRes.status !== 'error') {\r\n        sendError = false;\r\n      }\r\n    }\r\n\r\n    if (sendError) {\r\n      sendCommonErrorToSentry({\r\n        message: decompressRes.error.message, transactionName: 'extract-profile', level: 'fatal',\r\n        tags: [['scenario', 'run-profile'], ['name', 'extract-profile']],\r\n      });\r\n\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        startProfileTimestamp,\r\n        errorMessage: 'profileStatusMessages.archiveDecompressError',\r\n        profileOptions,\r\n      });\r\n\r\n      remoteCb && remoteCb(null, { status: 403, message: statusMessage });\r\n\r\n      return 'error';\r\n    }\r\n  }\r\n\r\n  console.log('Extracting profile zip-archive completed');\r\n  ProfileStatusManagerInst.addStatus({ status: 'preparing_profile' });\r\n  ProfileStatusManagerInst.removeStatus({ status: 'downloading_profile_init' });\r\n\r\n  if (!(zipPath.includes('gologin-cached-profiles') || zipPath.includes('zero_profile'))) {\r\n    // Удаляет zip-архив, скачанный с сервера\r\n    console.log('Removing profile zip-archive');\r\n    unlink(zipPath).catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      console.error('Error in removing zip and folders:', (message || 'no error'));\r\n    });\r\n  }\r\n\r\n  startProfileTransactionSentry.tags = {\r\n    ...startProfileTransactionSentry.tags,\r\n    'internet-speed-mbs': timings.awsRequest / 1000 / (zipSize / BYTES_IN_MB) * 8,\r\n  };\r\n\r\n  timings.decompress = moment.utc().valueOf() - timeBeforeDecompress;\r\n  decompressSentrySpan.finish();\r\n};\r\n\r\nconst extractProfile = async (zipPath = '', profilePath = ''): Promise<IExtractProfileResult> => {\r\n  console.log(`zipPath: ${zipPath}, profilePath: ${profilePath}`);\r\n  const decompressRes = await withRetry<IExtractProfileResult>({\r\n    fn() {\r\n      return decompressProfile(zipPath, profilePath)\r\n        .then(() => ({ status: 'success' }));\r\n    },\r\n    retryDelay: 300,\r\n    limit: 2,\r\n  }).catch(async (error: Error) => {\r\n    readdir(pathNodeJs.join(profilePath, 'Default')).then(console.log).catch(console.log);\r\n\r\n    sendCommonErrorToSentry({ message: error.message, transactionName: 'decompress-profile' });\r\n\r\n    return { status: 'error', error };\r\n  }) || {};\r\n\r\n  return decompressRes;\r\n};\r\n\r\nconst getProfileArchive = async (options: IArchiveProfileProps): Promise<string> => {\r\n  const {\r\n    zipPath,\r\n    profileId,\r\n    startProfileTimestamp,\r\n    startProfileTransactionSentry,\r\n    storageInfo,\r\n    profileOptions,\r\n    ProfileStatusManagerInst,\r\n    onlyAws = false,\r\n  } = options;\r\n\r\n  const cacheCheckResponse = await ProfileCachingManagerInst.getCachedProfile(storageInfo, profileId);\r\n\r\n  if (cacheCheckResponse.status && !onlyAws) {\r\n    profileOptions.startMode = 'cached';\r\n\r\n    return cacheCheckResponse.cachedArchivePath || '';\r\n  }\r\n\r\n  if (storageInfo.isNewProfile) {\r\n    profileOptions.startMode = 'zero profile';\r\n\r\n    return createZeroProfile({ profileId }).catch((error: unknown) => {\r\n      console.log(error);\r\n      const message = error instanceof Error ? error.message : error;\r\n      const transactionName = 'create-zero-profile';\r\n      const level: SeverityLevel = 'fatal';\r\n      if (typeof message === 'string' && message.includes('table cookies already exists')) {\r\n        return 'no need to decompress';\r\n      }\r\n\r\n      if (typeof message === 'string' && (message.includes('ENOENT') || message.includes('SQLITE_FULL'))) {\r\n        ProfileStatusManagerInst.addStatus({\r\n          status: 'error',\r\n          statusMessage: 'profileStatusMessages.discSpaceError',\r\n          startProfileTimestamp,\r\n        });\r\n      }\r\n\r\n      sendCommonErrorToSentry({\r\n        message, transactionName, level,\r\n        tags: [['scenario', 'run-profile'], ['name', transactionName]],\r\n      });\r\n\r\n      return 'error';\r\n    });\r\n  }\r\n\r\n  const downloadProfileSentrySpan = startProfileTransactionSentry.startChild({ op: 'download-profile-from-aws' });\r\n\r\n  const downloadResult = await downloadWithRetry({\r\n    url: storageInfo.storageLink || `${STORAGE_GATEWAY_BASE_URL}/download`,\r\n    destFile: zipPath,\r\n    profileId,\r\n  }).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    const transactionName = 'download-profile-from-aws';\r\n    let statusMessage = 'profileStatusMessages.errorProfileLoading';\r\n\r\n    if (typeof message === 'string' && message.includes('ENOSPC')) {\r\n      statusMessage = 'profileStatusMessages.discSpaceError';\r\n    }\r\n\r\n    if (typeof message === 'string' && message.includes('404')) {\r\n      statusMessage = 'profileStatusMessages.profileDeleted';\r\n    }\r\n\r\n    sendCommonErrorToSentry({\r\n      message, transactionName, tags: [['name', transactionName]],\r\n    });\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage,\r\n      startProfileTimestamp,\r\n    });\r\n\r\n    return 'error';\r\n  });\r\n\r\n  downloadProfileSentrySpan.finish();\r\n\r\n  if (downloadResult === 'error') {\r\n    const errorMessage = 'Error downloading profile. Check your internet connection.';\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: 'profileStatusMessages.errorProfileLoading',\r\n      startProfileTimestamp,\r\n      errorMessage,\r\n    });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  console.log('Profile zip-archive writing completed');\r\n\r\n  return zipPath;\r\n};\r\n\r\nexport const createZeroProfile = async ({ profileId }: any): Promise<string> => {\r\n  const profilePath = path.PROFILES_DIR + profileId;\r\n  const preferencesFilePath = pathNodeJs.resolve(profilePath, 'Default', 'Preferences');\r\n  const bookmarksFilePath = pathNodeJs.resolve(profilePath, 'Default', 'Bookmarks');\r\n  const networkFolderPath = pathNodeJs.resolve(profilePath, 'Default', 'Network');\r\n  const cookiesFilePath = pathNodeJs.resolve(profilePath, 'Default', 'Network', 'Cookies');\r\n  const secondCookiesFilePath = pathNodeJs.resolve(profilePath, 'Default', 'Cookies');\r\n\r\n  await mkdir(networkFolderPath, { recursive: true });\r\n\r\n  const promises = [\r\n    writeFile(preferencesFilePath, JSON.stringify(zeroProfilePreferences), { mode: 0o666 }),\r\n    writeFile(bookmarksFilePath, JSON.stringify(zeroProfileBookmarks), { mode: 0o666 }),\r\n    createDBFile(cookiesFilePath, secondCookiesFilePath),\r\n  ];\r\n\r\n  await Promise.all(promises);\r\n\r\n  return 'no need to decompress';\r\n};\r\n","import { EventEmitter } from 'stream';\r\n\r\nimport { IGetTimezoneResult } from '../interfaces/timezone.manager.interfaces';\r\n\r\nexport class ProfileReadyChecker {\r\n  #isProxyReady = false;\r\n  #proxyCheckResult: IGetTimezoneResult = {} as IGetTimezoneResult;\r\n  #isProfilePrepared = false;\r\n  #eventEmitter: EventEmitter;\r\n\r\n  constructor(eventEmitter: EventEmitter) {\r\n    this.#eventEmitter = eventEmitter;\r\n  }\r\n\r\n  set isProxyReady(proxyResult: IGetTimezoneResult) {\r\n    this.#isProxyReady = true;\r\n    this.#proxyCheckResult = proxyResult;\r\n    this.sendReadyEvent();\r\n  }\r\n\r\n  get eventEmitter(): EventEmitter {\r\n    return this.#eventEmitter;\r\n  }\r\n\r\n  set isProfilePrepared(status: boolean) {\r\n    this.#isProfilePrepared = status;\r\n    this.sendReadyEvent();\r\n  }\r\n\r\n  sendReadyEvent(): void {\r\n    if (!(this.#isProfilePrepared && this.#isProxyReady)) {\r\n      return;\r\n    }\r\n\r\n    this.#eventEmitter.emit('profile-ready', this.#proxyCheckResult);\r\n  }\r\n}\r\n","/* eslint-disable camelcase */\r\nimport moment from 'moment';\r\n\r\nimport { CommonDataManager } from './common-data-manager';\r\nimport { loadingProfiles } from './profile/renderer';\r\nimport packageSettings from '../../../package.json';\r\nimport { makeRequest } from '../../electron/utils/make-request';\r\nimport {\r\n  IProfileStatus,\r\n  IProfileStatusOrUnexpected,\r\n  ITransferStatusData,\r\n  IUpdateProfileStatusEvent,\r\n} from '../interfaces/profile.status.manager.interfaces';\r\nimport { removeItemFromArray } from '../utils/utils';\r\n\r\nexport class ProfileStatusManager {\r\n  #channel: Electron.IpcMainInvokeEvent;\r\n  #profileId: string;\r\n  #statusStack: IProfileStatus[];\r\n  #statusChangeBlocked = false;\r\n  #defaultStatus = this.getDefaultStatusData();\r\n  #commonDataManagerInst = new CommonDataManager();\r\n\r\n  constructor(channel: Electron.IpcMainInvokeEvent, profileId: string) {\r\n    this.#channel = channel;\r\n    this.#profileId = profileId;\r\n    this.#statusStack = [this.#defaultStatus];\r\n  }\r\n\r\n  unblock(): void {\r\n    this.#statusChangeBlocked = false;\r\n  }\r\n\r\n  cleanStack(): void {\r\n    this.#statusStack = [];\r\n    const curStatus = this.getCurrentStatus();\r\n\r\n    this.sendStatus({\r\n      status: curStatus.key,\r\n    });\r\n  }\r\n\r\n  refreshStatus(): void {\r\n    const curStatus = this.getCurrentStatus();\r\n    this.sendStatus({\r\n      status: curStatus.key,\r\n      statusMessage: curStatus.info,\r\n    });\r\n  }\r\n\r\n  getCurrentStatus(): IProfileStatus {\r\n    if (this.#statusStack.length) {\r\n      return this.#statusStack[0];\r\n    }\r\n\r\n    return this.#defaultStatus;\r\n  }\r\n\r\n  addStatus(transferStatusData: ITransferStatusData): void {\r\n    if (this.#statusChangeBlocked) {\r\n      return;\r\n    }\r\n\r\n    if (transferStatusData.status === 'error') {\r\n      removeItemFromArray<string>(loadingProfiles, this.#profileId);\r\n    }\r\n\r\n    const statusData = this.getStatusData(transferStatusData.status);\r\n    if (statusData.info === 'unexpected') {\r\n      console.log('error adding status, unexpected status');\r\n\r\n      return;\r\n    }\r\n\r\n    const statusObj: IProfileStatus = {\r\n      key: transferStatusData.status,\r\n      priority: statusData.priority,\r\n      info: statusData.info,\r\n    };\r\n\r\n    const index = this.#statusStack.findIndex(stackItem => stackItem.key === statusObj.key);\r\n    if (index < 0) {\r\n      this.#statusStack.push(statusObj);\r\n      this.#statusStack.sort((curr, next) => curr.priority - next.priority);\r\n      this.sendStatus(transferStatusData);\r\n\r\n      return;\r\n    }\r\n\r\n    this.#statusStack[index] = statusObj;\r\n    this.#statusStack.sort((curr, next) => curr.priority - next.priority);\r\n\r\n    this.sendStatus(transferStatusData);\r\n  }\r\n\r\n  removeStatus(transferStatusData: ITransferStatusData): void {\r\n    const statusInStack = this.#statusStack.find(statusFromStack => statusFromStack.key === transferStatusData.status);\r\n    if (!statusInStack) {\r\n      return;\r\n    }\r\n\r\n    this.#statusStack =\r\n      this.#statusStack\r\n        .filter((element) => element.key !== statusInStack.key)\r\n        .sort((curr, next) => curr.priority - next.priority);\r\n\r\n    this.sendStatus({ status: '' });\r\n  }\r\n\r\n  sendStatus(transferStatusData: ITransferStatusData): void {\r\n    if (this.#statusChangeBlocked) {\r\n      return;\r\n    }\r\n\r\n    if (transferStatusData.status === 'error') {\r\n      this.#statusChangeBlocked = true;\r\n    }\r\n\r\n    const curStatus = this.getCurrentStatus();\r\n\r\n    if (transferStatusData.startProfileTimestamp && ['running', 'error'].includes(transferStatusData.status)) {\r\n      const dTime = moment.utc().valueOf() - transferStatusData.startProfileTimestamp;\r\n      console.log(dTime, 'time');\r\n      const analyticsStatus = transferStatusData.status === 'error' ? 'error' : 'success';\r\n      const formattedErrorMessage = transferStatusData.errorMessage?.replace(',', '');\r\n\r\n      const body: any = {\r\n        type: 'profile-loading',\r\n        status: analyticsStatus,\r\n        profile: this.#profileId,\r\n        time: dTime,\r\n        os: this.#commonDataManagerInst.userOs,\r\n        message: formattedErrorMessage || transferStatusData.statusMessage,\r\n        mode: transferStatusData.profileOptions?.startMode,\r\n        timings: transferStatusData.timings,\r\n        proxyMode: transferStatusData.profileOptions?.proxyMode,\r\n        appVersion: packageSettings.version,\r\n      };\r\n\r\n      if (transferStatusData.profileOptions?.proxyCountry) {\r\n        body.proxyCountry = transferStatusData.profileOptions?.proxyCountry;\r\n      }\r\n\r\n      makeRequest({\r\n        method: 'POST',\r\n        url: `${this.#commonDataManagerInst.apiBaseUrl}/analytics`,\r\n        body,\r\n      }).catch(() => {\r\n        console.log('error sending profile-loading analytics');\r\n      });\r\n    }\r\n\r\n    const toSend: IUpdateProfileStatusEvent = {\r\n      status: curStatus.info,\r\n      message:  transferStatusData.statusMessage || transferStatusData.errorMessage || curStatus.info,\r\n      profileId: this.#profileId,\r\n    };\r\n\r\n    try {\r\n      this.#channel.sender.send('update-profile-status', toSend);\r\n    } catch (err) {\r\n      console.log('channel send error:', err);\r\n    }\r\n  }\r\n\r\n  private getDefaultStatusData(): IProfileStatus {\r\n    const res = this.getStatusData('ready');\r\n    if (res.info === 'unexpected') {\r\n      throw new Error('Unexpected status used as default');\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  getStatusData(key: string): IProfileStatusOrUnexpected {\r\n    // чем выше в объекте по порядку ключ - тем он приоритетнее\r\n    const statusObjects: any = {\r\n      error: { info: 'profileStatuses.error' },\r\n      cloud_uploading: { info: 'profileStatuses.cloudUploading' },\r\n      archiving: { info: 'profileStatuses.archiving' },\r\n      syncing: { info: 'profileStatuses.syncing' },\r\n      running: { info: 'profileStatuses.running' },\r\n      checking_proxy: { info: 'profileStatuses.checkingProxy' },\r\n      downloading_profile_init: { info: 'profileStatuses.downloadingProfile' },\r\n      downloading_profile_chrome_ext: { info: 'profileStatuses.downloadingChromeExtension' },\r\n      downloading_profile_user_ext: { info: 'profileStatuses.downloadingUserExtensions' },\r\n      downloading_profile_fonts: { info: 'profileStatuses.downloadingFonts' },\r\n      preparing_profile: { info: 'profileStatuses.preparingProfile' },\r\n      ready: { info: 'profileStatuses.ready' },\r\n    };\r\n\r\n    const priority = Object.keys(statusObjects).indexOf(key);\r\n\r\n    if (priority < 0) {\r\n      return { key, priority: 10000, info: 'unexpected' };\r\n    }\r\n\r\n    const { info } = statusObjects[key];\r\n\r\n    return { key, priority, info };\r\n  }\r\n}\r\n","import moment from 'moment';\r\n\r\nimport { setProxyStatuses } from './utils/api';\r\nimport { TIMEZONE_CHECK_URL } from '../constants/constants';\r\nimport { IProtocol, ICheckProxyResult } from '../interfaces/proxy.service.interfaces';\r\nimport { IProfileData } from '../interfaces/start-profile.renderer.interfaces';\r\nimport {\r\n  IGetGologinOrTorProxyParams,\r\n  IGetProxyCatchBlockParams,\r\n  IGetProxyResultBlockParams,\r\n  IGetTimezoneResult,\r\n  IProfileTimings,\r\n  ITimezoneManagerConstructorData,\r\n} from '../interfaces/timezone.manager.interfaces';\r\nimport { ProxyService } from '../services/proxy.service';\r\nimport { makeRequest } from '../utils/make-request';\r\nimport { makeProxyRequestWithTimeout } from '../utils/proxy-request-with-timeout';\r\n\r\nexport class TimezoneManager {\r\n  #proxyInfo;\r\n  #proxyEnabled = false;\r\n  #ProfileReadyChecker;\r\n\r\n  constructor(data: ITimezoneManagerConstructorData) {\r\n    this.#proxyInfo = data.proxyInfo;\r\n    this.#proxyEnabled = data.proxyEnabled;\r\n    this.#ProfileReadyChecker = data.ProfileReadyCheckerInst;\r\n  }\r\n\r\n  set proxyInfo(data: any) {\r\n    this.#proxyInfo = data;\r\n  }\r\n\r\n  set proxyEnabled(state: boolean) {\r\n    this.#proxyEnabled = state;\r\n  }\r\n\r\n  async getTimeZone(profileData: IProfileData, timings: IProfileTimings): Promise<IGetTimezoneResult> {\r\n    const startTime = moment.utc();\r\n    const { mode, host, port, username, password } = this.#proxyInfo;\r\n\r\n    const result: IGetTimezoneResult = {\r\n      status: 'error',\r\n      body: 'something went wrong',\r\n      type: 'proxy',\r\n    };\r\n\r\n    if (!this.#proxyEnabled) {\r\n      await makeRequest<ICheckProxyResult>({ url: TIMEZONE_CHECK_URL, method: 'GET' })\r\n        .then((timezoneInfo) => {\r\n          result.status = 'success';\r\n          result.body = timezoneInfo;\r\n\r\n          timings.timeZoneCheck = moment.utc().diff(startTime);\r\n          this.#ProfileReadyChecker.isProxyReady = result;\r\n        })\r\n        .catch((error: unknown) => {\r\n          console.log(error);\r\n\r\n          result.status = 'error';\r\n          result.body = 'notifications.error.timezoneRequestError';\r\n          result.type = 'timezone';\r\n\r\n          timings.timeZoneCheck = moment.utc().diff(startTime);\r\n          this.#ProfileReadyChecker.isProxyReady = result;\r\n        });\r\n    }\r\n\r\n    if (['gologin', 'tor'].includes(mode)) {\r\n      await getGologinTorProxy({\r\n        mode,\r\n        profileData,\r\n        result,\r\n        timings,\r\n        startTime,\r\n        profileReadyChecker: this.#ProfileReadyChecker,\r\n      }).catch((error: unknown) => {\r\n        catchBlock({\r\n          error,\r\n          result,\r\n          timings,\r\n          startTime,\r\n          profileReadyChecker: this.#ProfileReadyChecker,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (['socks4', 'socks5', 'possh', 'http', 'geolocation'].includes(mode)) {\r\n      const ping = await ProxyService.getPing(this.#proxyInfo);\r\n\r\n      if (!(ping || ping === 0) || ping === 'Check timeout exceeded') {\r\n        return {\r\n          status: 'error',\r\n          type: 'proxy',\r\n          body: 'profilesTable.profileStatusTooltip.proxy.pingFail',\r\n        };\r\n      }\r\n\r\n      const isHttpProxyType = ['http', 'geolocation'].includes(mode);\r\n      await makeProxyRequestWithTimeout({\r\n        mode,\r\n        type: isHttpProxyType ? 'http' : mode,\r\n        host: isHttpProxyType ? host.replace(/(http:\\/\\/|https:\\/\\/)/g, '') : host,\r\n        port,\r\n        username,\r\n        password,\r\n      })\r\n        .then(({ response: timeZoneResult, protocol }) => {\r\n          const trafficIsOver =\r\n              typeof timeZoneResult === 'string' && timeZoneResult.includes('402') && mode === 'geolocation';\r\n\r\n          if (trafficIsOver) {\r\n            result.status = 'error';\r\n            result.body = 'notifications.error.proxyTrafficIsOver';\r\n            result.type = 'proxy';\r\n\r\n            timings.timeZoneCheck = moment.utc().diff(startTime);\r\n            this.#ProfileReadyChecker.isProxyReady = result;\r\n\r\n            return;\r\n          }\r\n\r\n          resultBlock({\r\n            timeZoneResult,\r\n            result,\r\n            timings,\r\n            startTime,\r\n            protocol,\r\n            profileReadyChecker: this.#ProfileReadyChecker,\r\n          });\r\n        })\r\n        .catch((error: unknown) => {\r\n          catchBlock({\r\n            error,\r\n            result,\r\n            timings,\r\n            startTime,\r\n            profileReadyChecker: this.#ProfileReadyChecker,\r\n          });\r\n        });\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  static updateProxyStatus = async (proxyId: string, timezoneResult: IGetTimezoneResult): Promise<void> => {\r\n    if (!proxyId) {\r\n      return;\r\n    }\r\n\r\n    if (typeof timezoneResult.body === 'string') {\r\n      const proxyData = {\r\n        _id: proxyId,\r\n        status: false,\r\n        error: timezoneResult.body,\r\n        checkDate: moment().unix(),\r\n      };\r\n\r\n      setProxyStatuses([proxyData]);\r\n\r\n      return;\r\n    }\r\n\r\n    const { body: timezoneParams } = timezoneResult;\r\n    const proxyData = {\r\n      _id: proxyId,\r\n      status: timezoneResult.status === 'success',\r\n      country: timezoneParams.country,\r\n      city: timezoneParams.city,\r\n      error: timezoneResult.status !== 'success' ? timezoneResult.status : null,\r\n      checkDate: moment().unix(),\r\n      languages: timezoneParams.languages,\r\n      timezone: timezoneParams.timezone,\r\n      lastIp: timezoneParams.ip || '',\r\n    };\r\n\r\n    setProxyStatuses([proxyData]);\r\n  };\r\n}\r\n\r\nconst getGologinTorProxy = async (params: IGetGologinOrTorProxyParams): Promise<void> => {\r\n  const { profileData = { autoProxyServer: '' } } = params;\r\n  const splittedAutoProxyServer = profileData.autoProxyServer.split('://');\r\n  const [type = 'http'] = splittedAutoProxyServer;\r\n  const [freeProxyHost, freeProxyPort] = splittedAutoProxyServer[1].split(':');\r\n\r\n  const proxyParams = {\r\n    mode: params.mode,\r\n    type: type as IProtocol,\r\n    host: freeProxyHost,\r\n    port: Number(freeProxyPort),\r\n    username: params.profileData.autoProxyUsername,\r\n    password: params.profileData.autoProxyPassword,\r\n  };\r\n\r\n  const ping = await ProxyService.getPing(proxyParams);\r\n\r\n  if (!(ping || ping === 0) || ping === 'Check timeout exceeded') {\r\n    throw new Error('profilesTable.profileStatusTooltip.proxy.pingFail');\r\n  }\r\n\r\n  await makeProxyRequestWithTimeout(proxyParams)\r\n    .then(({ response: timeZoneResult, protocol }) => {\r\n      if (typeof timeZoneResult === 'string') {\r\n        throw new Error(timeZoneResult);\r\n      }\r\n\r\n      params.profileData.gologin.proxy.username = params.profileData.autoProxyUsername;\r\n      params.profileData.gologin.proxy.password = params.profileData.autoProxyPassword;\r\n\r\n      params.result.status = 'success';\r\n      params.result.protocol = protocol;\r\n      params.result.body = timeZoneResult;\r\n\r\n      params.timings.timeZoneCheck = moment.utc().diff(params.startTime);\r\n      params.profileReadyChecker.isProxyReady = params.result;\r\n    })\r\n    .catch((error: unknown) => {\r\n      catchBlock({\r\n        error,\r\n        result: params.result,\r\n        timings: params.timings,\r\n        startTime: params.startTime,\r\n        profileReadyChecker: params.profileReadyChecker,\r\n      });\r\n    });\r\n};\r\n\r\nconst resultBlock = (data: IGetProxyResultBlockParams): void => {\r\n  if (typeof data.timeZoneResult === 'string') {\r\n    throw new Error(data.timeZoneResult);\r\n  }\r\n\r\n  data.result.status = 'success';\r\n  data.result.protocol = data.protocol;\r\n  data.result.body = data.timeZoneResult;\r\n\r\n  data.timings.timeZoneCheck = moment.utc().diff(data.startTime);\r\n  data.profileReadyChecker.isProxyReady = data.result;\r\n};\r\n\r\nconst catchBlock = (data: IGetProxyCatchBlockParams): void => {\r\n  console.log(data.error);\r\n\r\n  data.result.status = 'error';\r\n  data.result.body = data.error instanceof Error ? data.error.message : 'notifications.error.somethingWentWrong';\r\n  data.result.type = 'proxy';\r\n\r\n  data.timings.timeZoneCheck = moment.utc().diff(data.startTime);\r\n  data.profileReadyChecker.isProxyReady = data.result;\r\n};\r\n","import { readFile } from 'fs/promises';\r\n\r\nimport { zeroProfileBookmarks } from '../../constants/zero-profile-bookmarks';\r\nimport { IBookmarkFoldersObj } from '../../interfaces/bookmarks-utils.interfaces';\r\nimport { sendErrorToSentry } from '../../utils/sentry';\r\n\r\nexport const checkBookmarks = async (profileId: string, bookmarks: any, pathToLocalBookmarks: string): Promise<IBookmarkFoldersObj> => {\r\n  if (bookmarks.bookmark_bar) {\r\n    return bookmarks;\r\n  }\r\n\r\n  const userBookmarksFromProfileFolder = await readFile(pathToLocalBookmarks, 'utf8')\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      if (typeof message === 'string' && message.includes('ENOENT')) {\r\n        return '';\r\n      }\r\n\r\n      sendErrorToSentry({\r\n        message, transactionName: 'read-bookmarks-before-profile-start',\r\n        tags: [['scenario', 'read-bookmarks'], ['profileId', profileId]],\r\n      });\r\n\r\n      return '';\r\n    });\r\n\r\n  if (!userBookmarksFromProfileFolder) {\r\n    return zeroProfileBookmarks.roots as IBookmarkFoldersObj;\r\n  }\r\n\r\n  try {\r\n    const bookmarksData = JSON.parse(userBookmarksFromProfileFolder);\r\n    bookmarks = bookmarksData.roots;\r\n  } catch (error: unknown) {\r\n    bookmarks = zeroProfileBookmarks.roots;\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'parse-bookmarks-before-profile-start',\r\n      tags: [['scenario', 'parse-bookmarks'], ['profileId', profileId]],\r\n    });\r\n  }\r\n\r\n  return bookmarks;\r\n};\r\n","/* eslint-disable max-lines */\r\nimport { exec } from 'child_process';\r\nimport EventEmitter from 'events';\r\nimport { access, mkdir, writeFile } from 'fs/promises';\r\nimport * as pathNodeJs from 'path';\r\n\r\nimport * as Sentry from '@sentry/electron';\r\nimport { screen } from 'electron';\r\nimport moment from 'moment';\r\nimport open from 'open';\r\nimport kill from 'tree-kill';\r\n\r\nimport {\r\n  updateProfileAndGetUploadUrl,\r\n  uploadingProfileProcess,\r\n} from './close-orbita';\r\nimport { launchOrbita } from './launch-orbita';\r\nimport { formatOs } from '../../../app/features/browser-system-icons';\r\nimport automationExtensionManifest from '../../../automation-extension-manifest.json';\r\nimport { OpenProfileViaLink } from '../../../common/constants/analytics';\r\nimport {\r\n  AUTOMATION_EXTENSION_WEBSTORE_ID,\r\n  BROWSER_ICONS_SIZES_FOR_MAC,\r\n  BROWSER_ICONS_SIZES_FOR_WIN10,\r\n  BROWSER_ICONS_SIZES_FOR_WIN11,\r\n} from '../../constants/constants';\r\nimport { zeroProfileBookmarks } from '../../constants/zero-profile-bookmarks';\r\nimport { zeroProfilePreferences } from '../../constants/zero-profile-preferences';\r\nimport { sentryTransactionDefaultObject } from '../../helpers/helper.functions';\r\nimport { IBrowserIconsPaths } from '../../interfaces/browser-icons-paths.interface';\r\nimport { IComposeFontsErrorData } from '../../interfaces/browser.user-data.manager.interfaces';\r\nimport { ICheckChromeExtensionsResult } from '../../interfaces/extension.manager.interfaces';\r\nimport { ITransactionObject } from '../../interfaces/helper.functions.interfaces';\r\nimport { IArchiveProfileProps } from '../../interfaces/profile-extractor.interfaces';\r\nimport { ICheckProxyResult } from '../../interfaces/proxy.service.interfaces';\r\nimport { ISaveBrowserIconsInProfileDirectoryData } from '../../interfaces/save-browser-icons-in-profile-directory-data.interface';\r\nimport {\r\n  IBraveProcesses,\r\n  IBrowserIconAvatar,\r\n  IGologinExtPathRes,\r\n  ILoadProfileDataProps,\r\n  IProfileData,\r\n  IProfileStatusManagerInstances,\r\n  IRequestProfileFromDBProps,\r\n  IStartProfileProps,\r\n  IStoppingProfiles,\r\n  ISyncProfileProps,\r\n} from '../../interfaces/start-profile.renderer.interfaces';\r\nimport {\r\n  IGetTimezoneResult,\r\n  IProfileTimings,\r\n  ITimeZoneError,\r\n} from '../../interfaces/timezone.manager.interfaces';\r\nimport { ICheckLocalUserChromeExtensionsResult } from '../../interfaces/user.extension.manager.interfaces';\r\nimport { saveBrowserIconsInProfileDirectory } from '../../utils/browser-icons';\r\nimport { getChangableAppConfigFromBack } from '../../utils/get-app-config-from-back';\r\nimport { makeRequest } from '../../utils/make-request';\r\nimport { BASE_PATH_TEMPLATE, getPathOs } from '../../utils/path-platforms';\r\nimport { unzipProfile } from '../../utils/profile-extractor';\r\nimport { ProfileReadyChecker } from '../../utils/profile-ready-checker';\r\nimport { sendActionAnalytics } from '../../utils/send-action-analytics';\r\nimport { sendCommonErrorToSentry, sendErrorToSentry } from '../../utils/sentry';\r\nimport { getWinRelease } from '../../utils/userOs';\r\nimport { focusOrbitaWindow, getWinOrbitaRealPid } from '../../window-raiser/focus-orbita-utils';\r\nimport { BrowserReleasesManager } from '../browser-releases.manager';\r\nimport { BrowserUserDataManager } from '../browser.user-data.manager';\r\nimport { CommonDataManager } from '../common-data-manager';\r\nimport { ExtensionsManager } from '../extensions.manager';\r\nimport { ProfileCachingManager } from '../profile.caching.manager';\r\nimport { ProfileStatusManager } from '../profile.status.manager';\r\nimport { ProfileStarterManager } from '../start-profile-manager';\r\nimport { TimezoneManager } from '../timezone.manager';\r\nimport { requestProfileFingerprint } from '../utils/api';\r\nimport { convertPublicKeyToExtensionId, generatePublicKey } from '../utils/automation.utils';\r\nimport { checkBookmarks } from '../utils/bookmarks.utils';\r\n\r\nexport const BRAVE_PROCESSES: IBraveProcesses = {};\r\nexport const loadingProfiles: string[] = [];\r\nexport const syncingProfiles: string[] = [];\r\nconst isStoppingProfiles: IStoppingProfiles = {};\r\n\r\nconst path = getPathOs();\r\nconst osPlatform = process.platform;\r\n\r\nconst BrowserUserDataManagerInst = new BrowserUserDataManager();\r\nconst ExtensionsManagerInst = new ExtensionsManager();\r\nconst CommonDataManagerInst = new CommonDataManager();\r\nconst ProfileCachingManagerInst = new ProfileCachingManager();\r\nconst ProfileStarterManagerInst = new ProfileStarterManager();\r\n\r\nconst ProfileStatusManagerInstances: IProfileStatusManagerInstances = {};\r\n\r\nProfileStarterManagerInst.init(path, CommonDataManagerInst.apiBaseUrl);\r\nExtensionsManagerInst.init().catch(() => null);\r\nProfileCachingManagerInst.init().catch(() => null);\r\n\r\nexport let deletedProfiles: string[] = [];\r\n\r\nexport const updateDeletedProfiles = (profileIdsToRestore: string[]): void => {\r\n  deletedProfiles = deletedProfiles.filter(deletedProfile => !profileIdsToRestore.includes(deletedProfile));\r\n};\r\n\r\nexport const loadProfile = async (props: ILoadProfileDataProps): Promise<string|void|null> => {\r\n  const {\r\n    profileId,\r\n    channel,\r\n    remoteApiOptions,\r\n    proxyInfo = {},\r\n    proxyEnabled = false,\r\n    automation = { workflowId: '' },\r\n    launchViaRestApi = false,\r\n    icons = { pngs: [], design: null },\r\n    traceId,\r\n    deepLinkProtocol,\r\n  } = props;\r\n\r\n  console.log('load profile start', profileId);\r\n  const isProfileRunning = Object.prototype.hasOwnProperty.call(BRAVE_PROCESSES, profileId);\r\n  if (deepLinkProtocol) {\r\n    const actionName = isProfileRunning ? OpenProfileViaLink.startedFocusing : OpenProfileViaLink.startedOpening;\r\n    sendActionAnalytics(actionName, { mode: deepLinkProtocol, profile: profileId });\r\n  }\r\n\r\n  if (isProfileRunning) {\r\n    return focusOrbitaWindow(profileId, deepLinkProtocol).catch(() => null);\r\n  }\r\n\r\n  const ProfileStatusManagerInst = new ProfileStatusManager(channel, profileId);\r\n\r\n  return requestProfileFromDbAndPrepare({\r\n    profileId,\r\n    channel,\r\n    remoteApiOptions,\r\n    proxyInfo,\r\n    proxyEnabled,\r\n    ProfileStatusManagerInst,\r\n    automation,\r\n    launchViaRestApi,\r\n    icons,\r\n    traceId,\r\n    deepLinkProtocol,\r\n  }).catch((error: unknown) => {\r\n    console.log(error);\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendCommonErrorToSentry({\r\n      message, tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n      transactionName: 'profile-prepare-error', level: 'fatal',\r\n    });\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error', errorMessage: 'profileStatusMessages.prepareProfileError',\r\n    });\r\n  });\r\n};\r\n\r\nconst requestProfileFromDbAndPrepare = async (props: IRequestProfileFromDBProps): Promise<string | void | null> => {\r\n  const {\r\n    profileId,\r\n    channel,\r\n    remoteApiOptions,\r\n    proxyInfo = {},\r\n    proxyEnabled = false,\r\n    ProfileStatusManagerInst,\r\n    automation,\r\n    launchViaRestApi,\r\n    icons = { pngs: [], design: null },\r\n    traceId,\r\n    deepLinkProtocol,\r\n  } = props;\r\n\r\n  const { cb, sync } = remoteApiOptions || {};\r\n  if (profileId.length !== 24) {\r\n    cb && cb(null, { status: 400, message: 'invalid profile id' });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  const startProfileTimestamp = moment.utc().valueOf();\r\n  const ProfileReadyEventEmitterInst = new EventEmitter();\r\n  const ProfileReadyCheckerInst = new ProfileReadyChecker(ProfileReadyEventEmitterInst);\r\n\r\n  const TimezoneManagerInst = new TimezoneManager({\r\n    proxyInfo, proxyEnabled, ProfileReadyCheckerInst,\r\n  });\r\n\r\n  ProfileStatusManagerInstances[profileId] = ProfileStatusManagerInst;\r\n\r\n  if (loadingProfiles.includes(profileId) || syncingProfiles.includes(profileId)) {\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: 'Profile is still syncing',\r\n    });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  loadingProfiles.push(profileId);\r\n\r\n  const startProfileTransactionSentry =\r\n    Sentry.startTransaction({ name: 'run-profile', traceId }) as ITransactionObject || sentryTransactionDefaultObject;\r\n\r\n  const profileRequestFromDbSentrySpan = startProfileTransactionSentry.startChild({ op: 'request-profile-from-db' });\r\n  const proxyCheckSpan = startProfileTransactionSentry.startChild({ op: 'check-proxy' });\r\n  const timings: IProfileTimings = {};\r\n  const timeBeforeProfileRequest = moment.utc();\r\n\r\n  const osArch = process.arch;\r\n\r\n  if (['x32', 'ia32'].includes(osArch)) {\r\n    sendErrorToSentry({\r\n      message: '32-bit operating system', tags: [['scenario', 'run-profile'], ['is-32-bit', true]],\r\n      transactionName: 'open-orbita-32-bit-system', level: 'warning',\r\n    });\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: 'profileStatusMessages.32bitError',\r\n    });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  ProfileStatusManagerInst.addStatus({ status: 'downloading_profile_init' });\r\n\r\n  if (proxyEnabled) {\r\n    ProfileStatusManagerInst.addStatus({ status: 'checking_proxy' });\r\n  }\r\n\r\n  const isFreeProxy = ['gologin', 'tor'].includes(proxyInfo.mode || '');\r\n  startProfileTransactionSentry.tags = { ...startProfileTransactionSentry.tags, 'proxy-mode': proxyInfo.mode, profileId };\r\n  if (!(isFreeProxy || launchViaRestApi)) {\r\n    TimezoneManagerInst.getTimeZone({} as IProfileData, timings)\r\n      .then((res) => {\r\n        if (res.status !== 'error') {\r\n          return;\r\n        }\r\n\r\n        sendTimezoneStatus(res as ITimeZoneError, ProfileStatusManagerInst, startProfileTimestamp);\r\n      })\r\n      .finally(() => {\r\n        proxyCheckSpan.finish();\r\n        ProfileStatusManagerInst.removeStatus({ status: 'checking_proxy' });\r\n      });\r\n  }\r\n\r\n  if (isStoppingProfiles[profileId]) {\r\n    delete isStoppingProfiles[profileId];\r\n    cb && cb(null, { status: 403, message: 'Profiles is not stopped yet' });\r\n\r\n    return null;\r\n  }\r\n\r\n  const profileFromDb = await requestProfileFingerprint(profileId).catch((error: any) => {\r\n    const backendErrorHeader = 'backend@error::';\r\n    const message = error instanceof Error ? error.message : error;\r\n    let statusMessage = 'profileStatusMessages.profileRequestError';\r\n    let sendToSentry = true;\r\n    console.log(error?.response?.body);\r\n    if (typeof message === 'string' && message.includes('429')) {\r\n      statusMessage = 'profileStatusMessages.tooManyRequestsError';\r\n    }\r\n\r\n    if (typeof message === 'string' && message.includes('404')) {\r\n      statusMessage = 'profileStatusMessages.profileDeleted';\r\n      sendToSentry = false;\r\n    }\r\n\r\n    if (typeof message === 'string' && message.includes('402')) {\r\n      statusMessage = 'profileStatusMessages.paymentRequired';\r\n    }\r\n\r\n    if (typeof message === 'string' && message.includes('403')) {\r\n      statusMessage = 'profileStatusMessages.noRights';\r\n      sendToSentry = false;\r\n    }\r\n\r\n    sendToSentry && sendCommonErrorToSentry({\r\n      message, tags: [['scenario', 'run-profile'], ['profileId', profileId], ['name', 'request-profile-from-db']],\r\n      transactionName: 'request-profile-from-db',\r\n    });\r\n\r\n    const errorContent = error.response?.body || '';\r\n    if (errorContent.includes(backendErrorHeader)) {\r\n      const errorData =\r\n        errorContent\r\n          .replace(backendErrorHeader, '')\r\n          .slice(1, -1); // убирает кавычки тела ответа\r\n\r\n      statusMessage = errorData;\r\n    }\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage,\r\n    });\r\n\r\n    cb && cb(null, { status: 403, message: 'Error in getting profile info' });\r\n    startProfileTransactionSentry.setStatus('aborted');\r\n    startProfileTransactionSentry.finish();\r\n\r\n    return 'error';\r\n  });\r\n\r\n  if (typeof profileFromDb === 'string') {\r\n    startProfileTransactionSentry.setStatus('aborted');\r\n    startProfileTransactionSentry.finish();\r\n\r\n    return 'error';\r\n  }\r\n\r\n  const { canBeRunning = false } = profileFromDb;\r\n  if (!canBeRunning) {\r\n    cb && cb(null, { status: 403, message: 'Profile is already running' });\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: 'notifications.error.runByAnotherUser',\r\n    });\r\n\r\n    return 'cantBeRunning';\r\n  }\r\n\r\n  const isOrbitaCompatible = new BrowserReleasesManager().checkOrbitaWinCompatible({\r\n    key: 'userAgent',\r\n    value: profileFromDb.navigator.userAgent,\r\n    ProfileStatusManagerInst,\r\n  });\r\n\r\n  if (!isOrbitaCompatible) {\r\n    sendErrorToSentry({\r\n      message: 'windows version is not supported',\r\n      tags: [['scenario', 'run-profile']],\r\n      transactionName: 'orbita-compatibility-with-windows-error',\r\n    });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  profileRequestFromDbSentrySpan.finish();\r\n\r\n  timings.profileRequest = moment.utc().diff(timeBeforeProfileRequest);\r\n  const isAutomationExtensionSavedInDb = profileFromDb.chromeExtensions && profileFromDb.chromeExtensions.includes(AUTOMATION_EXTENSION_WEBSTORE_ID);\r\n\r\n  if (automation.workflowId) {\r\n    const publicKey = generatePublicKey();\r\n    const extensionId = convertPublicKeyToExtensionId(publicKey);\r\n\r\n    automation.publicKey = publicKey;\r\n    automation.extensionId = extensionId;\r\n  }\r\n\r\n  const profileData = await ProfileStarterManagerInst.prepareProfileToLaunch({\r\n    profileFingerprint: profileFromDb,\r\n    profileId,\r\n    automation,\r\n  });\r\n\r\n  // запуск профиля с прокси через REST API\r\n  if (launchViaRestApi) {\r\n    const proxyTypes = ['gologin', 'tor', 'socks4', 'socks5', 'possh', 'http', 'geolocation'];\r\n    const isFreeProxyType = ['gologin', 'tor'].includes(profileData.proxy.mode || '');\r\n    const isProxyEnabled = proxyTypes.includes(profileData.proxy.mode || '');\r\n    if (isProxyEnabled) {\r\n      ProfileStatusManagerInst.addStatus({ status: 'checking_proxy' });\r\n    }\r\n\r\n    TimezoneManagerInst.proxyInfo = profileData.proxy;\r\n    TimezoneManagerInst.proxyEnabled = isProxyEnabled;\r\n    TimezoneManagerInst.getTimeZone(isFreeProxyType ? profileData : {} as IProfileData, timings)\r\n      .then((res) => {\r\n        if (res.status !== 'error') {\r\n          return;\r\n        }\r\n\r\n        sendTimezoneStatus(res as ITimeZoneError, ProfileStatusManagerInst, startProfileTimestamp);\r\n      })\r\n      .finally(() => {\r\n        proxyCheckSpan.finish();\r\n        ProfileStatusManagerInst.removeStatus({ status: 'checking_proxy' });\r\n      });\r\n  }\r\n\r\n  const freeProxyCheckSpan = startProfileTransactionSentry.startChild({ op: 'check-proxy' });\r\n\r\n  if (isFreeProxy && !launchViaRestApi) {\r\n    TimezoneManagerInst.getTimeZone(profileData, timings)\r\n      .then((res) => {\r\n        if (res.status !== 'error') {\r\n          return;\r\n        }\r\n\r\n        sendTimezoneStatus(res as ITimeZoneError, ProfileStatusManagerInst, startProfileTimestamp);\r\n      })\r\n      .finally(() => {\r\n        freeProxyCheckSpan.finish();\r\n        ProfileStatusManagerInst.removeStatus({ status: 'checking_proxy' });\r\n      });\r\n  }\r\n\r\n  // Проверяем файловую структуру\r\n  const foldersToCreate = [path.PROFILES_DIR, path.START_DIR_PATH, path.STARTED_DIR_PATH];\r\n\r\n  const promises = foldersToCreate.map((elem) =>\r\n    access(elem).then(Promise.resolve).catch(() => mkdir(elem, { recursive: true })),\r\n  );\r\n\r\n  await Promise.all(promises).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    console.log('Error in working folder init:', (message || 'no error'));\r\n    sendErrorToSentry({\r\n      message, tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n      transactionName: 'profile-folder-init-error', level: 'warning',\r\n    });\r\n  });\r\n\r\n  !sync && cb && cb(null, null);\r\n\r\n  return startProf({\r\n    profileData,\r\n    channel,\r\n    startProfileTimestamp,\r\n    remoteApiOptions,\r\n    ProfileReadyCheckerInst,\r\n    timings,\r\n    startProfileTransactionSentry,\r\n    ProfileStatusManagerInst,\r\n    automation: { ...automation, isAutomationExtensionSavedInDb },\r\n    icons,\r\n    deepLinkProtocol,\r\n  });\r\n};\r\n\r\nexport function updateUseragent(ua: string): void {\r\n  CommonDataManagerInst.userAgent = ua;\r\n\r\n  console.log('Useragent has been updated successfully:', ua);\r\n}\r\n\r\nexport function updateToken(token: string, twoFa: string): void {\r\n  if (!CommonDataManagerInst.accessToken) {\r\n    getChangableAppConfigFromBack().catch(console.log);\r\n  }\r\n\r\n  CommonDataManagerInst.accessToken = token;\r\n  CommonDataManagerInst.twoFaKey = twoFa;\r\n}\r\n\r\nexport function killProfile(profileId: string): void {\r\n  isStoppingProfiles[profileId] = true;\r\n  try {\r\n    if (profileId in BRAVE_PROCESSES) {\r\n      if (osPlatform === 'win32') {\r\n        getWinOrbitaRealPid(BRAVE_PROCESSES[profileId].orbitaProc?.pid)\r\n          .then((realPid) => {\r\n            if (!realPid) {\r\n              return;\r\n            }\r\n\r\n            exec(`taskkill /pid ${realPid}`);\r\n          }).catch((error: unknown) => {\r\n            const message = error instanceof Error ? error.message : error;\r\n            console.log(1, profileId, BRAVE_PROCESSES);\r\n            sendCommonErrorToSentry({\r\n              message, tags: [['scenario', 'close-profile'], ['profileId', profileId], ['name', 'kill-orbita-process-error']],\r\n              transactionName: 'kill-orbita-process-error',\r\n            });\r\n          });\r\n      } else if (BRAVE_PROCESSES[profileId].orbitaProc?.pid) {\r\n        kill(BRAVE_PROCESSES[profileId].orbitaProc?.pid, 'SIGTERM');\r\n      }\r\n    }\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    console.log(1, profileId, BRAVE_PROCESSES);\r\n    sendCommonErrorToSentry({\r\n      message, tags: [['scenario', 'close-profile'], ['profileId', profileId], ['name', 'kill-orbita-process-error']],\r\n      transactionName: 'kill-orbita-process-error',\r\n    });\r\n  }\r\n\r\n  delete isStoppingProfiles[profileId];\r\n}\r\n\r\n// TODO: Придумать более правильный подход\r\n// Если перенести убийство процесса в начало функции - мы можем даже отправить все на сервер\r\n// Но мы получаем краш.  А это уже другая история\r\nexport const closeAllProfiles = async (): Promise<void> => {\r\n  const processes: string[] = [];\r\n  for (const processId in BRAVE_PROCESSES) {\r\n    processes.push(processId);\r\n    BRAVE_PROCESSES[processId] && kill(BRAVE_PROCESSES[processId].orbitaProc?.pid, 'SIGTERM');\r\n    console.log('process', processId, 'has been stopped');\r\n  }\r\n\r\n  const promises = processes.map(procId =>\r\n    makeRequest({ url: `${CommonDataManagerInst.apiBaseUrl}/browser/${procId}/run-sync`, method: 'PATCH', body: { running: false } })\r\n      .catch(() => null),\r\n  );\r\n\r\n  await Promise.all(promises).catch(() => null);\r\n};\r\n\r\nexport const checkProfiles = (): void => {\r\n  const profiles = Object.keys(ProfileStatusManagerInstances);\r\n  for (const profile of profiles) {\r\n    const manager = ProfileStatusManagerInstances[profile];\r\n    if (!manager) {\r\n      continue;\r\n    }\r\n\r\n    manager.refreshStatus();\r\n  }\r\n};\r\n\r\nexport const startProf = async (props: IStartProfileProps): Promise<string> => {\r\n  const {\r\n    profileData,\r\n    channel,\r\n    startProfileTimestamp,\r\n    remoteApiOptions,\r\n    ProfileReadyCheckerInst,\r\n    timings,\r\n    startProfileTransactionSentry = sentryTransactionDefaultObject,\r\n    ProfileStatusManagerInst,\r\n    automation,\r\n    icons = { pngs: [], design: null },\r\n    deepLinkProtocol,\r\n  } = props;\r\n\r\n  const { profileId, storageInfo, owner, fonts, os, useCookiesExt, vaultToken } = profileData;\r\n  const { cb: remoteCb, debuggingPort = null } = remoteApiOptions || {};\r\n  const name = profileData.gologin?.name || '';\r\n  const currentMs = new Date().getMilliseconds();\r\n  const profilePath = path.PROFILES_DIR + profileId;\r\n\r\n  const fontsSupported = ['linux', 'win32', 'darwin'].includes(osPlatform);\r\n  const isWin7 = (CommonDataManagerInst.userAgent || '').includes('Windows NT 6.1');\r\n  const families = fonts.families || [];\r\n  const composeFonts = fontsSupported && fonts.enableMasking && !isWin7;\r\n\r\n  if (composeFonts && !families.length) {\r\n    sendErrorToSentry({\r\n      message: 'No fonts list provided. Please select at least 1', transactionName: 'prepare-fonts-not-provided', level: 'fatal',\r\n      tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n    });\r\n\r\n    const statusMessage = 'profileStatusMessages.noFontsProvided';\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage,\r\n      startProfileTimestamp,\r\n    });\r\n    startProfileTransactionSentry.setStatus('aborted');\r\n    startProfileTransactionSentry.finish();\r\n    remoteCb && remoteCb(null, { status: 403, message: statusMessage });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  const profileOptions = {};\r\n\r\n  const zipPath = `${path.PROFILES_DIR}${profileId}_${currentMs}.zip`;\r\n  const getProfileArchiveOptions: IArchiveProfileProps = {\r\n    profileId,\r\n    currentMs,\r\n    storageInfo,\r\n    startProfileTimestamp,\r\n    zipPath,\r\n    profileOptions,\r\n    ProfileStatusManagerInst,\r\n    startProfileTransactionSentry,\r\n  };\r\n\r\n  const unzipProfileResult = await unzipProfile({\r\n    timings,\r\n    remoteCb,\r\n    profilePath,\r\n    getProfileArchiveOptions,\r\n  });\r\n\r\n  if (unzipProfileResult === 'error') {\r\n    startProfileTransactionSentry.setStatus('aborted');\r\n    startProfileTransactionSentry.finish();\r\n\r\n    return 'error';\r\n  }\r\n\r\n  // добавляем промисы удаления ненужных папок/файлов, их результат на запуск не влияет\r\n  const promises: Promise<\r\n    ICheckLocalUserChromeExtensionsResult |\r\n    ICheckChromeExtensionsResult |\r\n    IComposeFontsErrorData |\r\n    IGologinExtPathRes |\r\n    void | void[]\r\n    >[] =\r\n    [\r\n      ProfileStarterManagerInst.checkTempFiles(profileId, startProfileTransactionSentry).catch(() => void 0),\r\n      ProfileStarterManagerInst.removeUselessFolders(profileId, os, startProfileTransactionSentry).catch(() => void 0),\r\n    ];\r\n\r\n  // добавляем промис записи кук, результат на запуск не влияет (всегда так было, пока не стал ничего во флоу менять)\r\n  const cookiesData = profileData.cookies || { checkCookies: profileData.checkCookies };\r\n  promises.push(ProfileStarterManagerInst.prepareCookies(profileId, cookiesData, startProfileTransactionSentry).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'cookies-global-error', level: 'error',\r\n      tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n    });\r\n  }));\r\n\r\n  // Аргументы для запуска процесса браузера\r\n  const args = [\r\n    `--user-data-dir=\"${profilePath}\"`,\r\n    '--disable-encryption',\r\n    `--donut-pie=${profileData.gologin.hashValues}`,\r\n    '--webrtc-ip-handling-policy=default_public_interface_only',\r\n  ];\r\n\r\n  if (debuggingPort) {\r\n    args.push(`--remote-debugging-port=${debuggingPort}`);\r\n  }\r\n\r\n  let fontArg = '--font-masking-mode=1';\r\n  if (composeFonts) {\r\n    const differentOs = os !== 'android' && (\r\n      osPlatform === 'win32' && os !== 'win' ||\r\n      osPlatform === 'darwin' && os !== 'mac' ||\r\n      osPlatform === 'linux' && os !== 'lin'\r\n    );\r\n\r\n    fontArg = '--font-masking-mode=2';\r\n    if (differentOs) {\r\n      fontArg = '--font-masking-mode=3';\r\n    }\r\n\r\n    ProfileStatusManagerInst.addStatus({ status: 'downloading_profile_fonts' });\r\n    // добавляем промис записи шрифтов, результат влияет на запуск, поэтому возвращаем объект\r\n    // с данными, чтобы вернуть юзеру статус\r\n    promises.push(BrowserUserDataManagerInst.composeFonts({ fontsList: families, profilePath, differentOs, startProfileTransactionSentry })\r\n      .catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        let errorTxt = 'profileStatusMessages.fontsError';\r\n        let level: Sentry.SeverityLevel = 'fatal';\r\n        let transactionName = 'prepare-fonts';\r\n\r\n        if (typeof message === 'string' && message.includes('ENOSPC')) {\r\n          errorTxt = 'profileStatusMessages.discSpaceError';\r\n          level = 'warning';\r\n          transactionName = 'no-disc-space';\r\n        }\r\n\r\n        sendErrorToSentry({\r\n          message, transactionName, level,\r\n          tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n        });\r\n\r\n        return {\r\n          isError: true,\r\n          type: 'fonts-error',\r\n          error,\r\n          errorTxt,\r\n        };\r\n      }).finally(() => ProfileStatusManagerInst.removeStatus({ status: 'downloading_profile_fonts' })));\r\n  }\r\n\r\n  args.push(fontArg);\r\n  // добавляем промис записи гологин расширений (пароли и кук),\r\n  // результат на запуск не влияет (всегда так было, пока не стал ничего во флоу менять)\r\n  promises.push(ProfileStarterManagerInst.prepareGologinExts({\r\n    name,\r\n    profileId,\r\n    owner,\r\n    useCookiesExt,\r\n    vaultToken,\r\n    startProfileTransactionSentry,\r\n  }));\r\n\r\n  const chromeExtensions = profileData.chromeExtensions || [];\r\n  const userChromeExtensions = profileData.userChromeExtensions || [];\r\n\r\n  startProfileTransactionSentry.tags = {\r\n    ...startProfileTransactionSentry.tags,\r\n    'extensions-count': chromeExtensions.length + userChromeExtensions.length,\r\n  };\r\n\r\n  const checkChromeExtensionsSpan = startProfileTransactionSentry.startChild({ op: 'download-chrome-extensions' });\r\n\r\n  if (chromeExtensions.length) {\r\n    ProfileStatusManagerInst.addStatus({ status: 'downloading_profile_chrome_ext' });\r\n    // добавляем промис записи хром расширений из менеджера расширений,\r\n    // результат на запуск не влияет (всегда так было, пока не стал ничего во флоу менять)\r\n    promises.push(ExtensionsManagerInst.checkChromeExtensions(chromeExtensions)\r\n      .then(async (res) => {\r\n        const automationExtensionPath = res.find((extensionPath) => extensionPath.includes(AUTOMATION_EXTENSION_WEBSTORE_ID));\r\n        if (automationExtensionPath) {\r\n          const checkAutomationChromeExtensionSpan = startProfileTransactionSentry.startChild({ op: 'modify-automation-chrome-extension' });\r\n          // We need to replace `manifest.json` to ensure the first run of automation\r\n          // runs correctly, without eternal spinner or 'chrome-extension://invalid' or 'ERR_BLOCKED_BY_CLIENT'.\r\n\r\n          // Anyway, this is a temprory solution and must be replaced with custom logic\r\n          // of downloading and unpacking a stable version of Goless extension from s3.\r\n\r\n          const manifestPath = pathNodeJs.join(automationExtensionPath, 'manifest.json');\r\n          let manifestToReplace;\r\n          if (automation.publicKey) {\r\n            automationExtensionManifest.key = automation.publicKey;\r\n          }\r\n\r\n          try {\r\n            manifestToReplace = JSON.stringify(automationExtensionManifest);\r\n          } catch (error) {\r\n            console.error('Automation error: replacing manifest.json', error);\r\n            checkAutomationChromeExtensionSpan.setStatus('aborted');\r\n          }\r\n\r\n          if (manifestToReplace) {\r\n            await writeFile(manifestPath, manifestToReplace, { mode: 0o666 }).catch((error) => {\r\n              console.error('Automation: ERROR while replacing manifest.json', error);\r\n              sendErrorToSentry({\r\n                message: error.message, transactionName: 'automation-error', level: 'error',\r\n                tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n              });\r\n            });\r\n          }\r\n\r\n          checkAutomationChromeExtensionSpan.finish();\r\n        }\r\n\r\n        return { profileExtensionsCheckRes: res };\r\n      })\r\n      .catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendErrorToSentry({\r\n          message, transactionName: 'check-chrome-extensions-at-profile-start', level: 'error',\r\n          tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n        });\r\n\r\n        console.error('checkChromeExtensions error: ', error);\r\n\r\n        return { profileExtensionsCheckRes: [] };\r\n      }).finally(() => {\r\n        checkChromeExtensionsSpan.finish();\r\n        ProfileStatusManagerInst.removeStatus({ status: 'downloading_profile_chrome_ext' });\r\n      }));\r\n  }\r\n\r\n  const checkUserExtensionsSpan = startProfileTransactionSentry.startChild({ op: 'download-user-extensions' });\r\n\r\n  if (userChromeExtensions.length) {\r\n    ProfileStatusManagerInst.addStatus({ status: 'downloading_profile_user_ext' });\r\n    promises.push(ExtensionsManagerInst.checkLocalUserChromeExtensions(userChromeExtensions, profileId)\r\n      .then(res => ({ profileUserExtensionsCheckRes: res }))\r\n      .catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendErrorToSentry({\r\n          message, transactionName: 'check-user-extensions-error', level: 'error',\r\n          tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n        });\r\n\r\n        return [];\r\n      }).finally(() => {\r\n        checkUserExtensionsSpan.finish();\r\n        ProfileStatusManagerInst.removeStatus({ status: 'downloading_profile_user_ext' });\r\n      }),\r\n    );\r\n  }\r\n\r\n  const pathToPreferences = BASE_PATH_TEMPLATE.replace('{profileId}', profileId) + 'Preferences';\r\n  const pathToBookmarks = BASE_PATH_TEMPLATE.replace('{profileId}', profileId) + 'Bookmarks';\r\n\r\n  promises.push(access(pathToPreferences).catch(() =>\r\n    writeFile(pathToPreferences, JSON.stringify(zeroProfilePreferences), { mode: 0o666 })\r\n      .catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendCommonErrorToSentry({\r\n          message, transactionName: 'write-preferences-before-profile-start',\r\n          tags: [['scenario', 'write-preferences'], ['profileId', profileId]],\r\n        });\r\n      })));\r\n\r\n  // eslint-disable-next-line camelcase\r\n  let { bookmarks = { bookmark_bar: null } } = profileData;\r\n  promises.push(checkBookmarks(profileId, bookmarks, pathToBookmarks)\r\n    .then((bookmarksData) => {\r\n      bookmarks = bookmarksData;\r\n      const profileBookmarks = {\r\n        ...zeroProfileBookmarks,\r\n        roots: bookmarks,\r\n      };\r\n\r\n      return writeFile(pathToBookmarks, JSON.stringify(profileBookmarks), { mode: 0o666 });\r\n    }).catch(() => void 0));\r\n\r\n  const winVersionMajor = getWinRelease();\r\n  const osFormatted = formatOs(osPlatform, winVersionMajor);\r\n  if (osFormatted && icons.design === '2:green-square') {\r\n    const { scaleFactor = 1 } = screen.getPrimaryDisplay();\r\n    const saveBrowserIconsSpan = startProfileTransactionSentry.startChild({ op: 'save-browser-icons' });\r\n    const browserIconsDataToSave: ISaveBrowserIconsInProfileDirectoryData = {\r\n      iconsPngs: icons.pngs,\r\n      os: osFormatted,\r\n      profilePath,\r\n      scaleFactor,\r\n      iconDesignVersion: icons.design,\r\n    };\r\n\r\n    promises.push(saveBrowserIconsInProfileDirectory(browserIconsDataToSave, saveBrowserIconsSpan));\r\n    let browserIconsSizes: number[] = [];\r\n    switch (true) {\r\n      case osFormatted === 'mac':\r\n        browserIconsSizes = BROWSER_ICONS_SIZES_FOR_MAC;\r\n        break;\r\n      case osFormatted === 'win10':\r\n        browserIconsSizes = BROWSER_ICONS_SIZES_FOR_WIN10;\r\n        break;\r\n      case osFormatted === 'win11':\r\n        browserIconsSizes = BROWSER_ICONS_SIZES_FOR_WIN11;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const browserIconsPaths: IBrowserIconsPaths = browserIconsSizes\r\n      .map(size => size * scaleFactor)\r\n      .reduce<IBrowserIconsPaths>((acc, size) => {\r\n        acc[`${size}`] = `${size}.png`;\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n    // eslint-disable-next-line camelcase\r\n    let avatar: IBrowserIconAvatar = { enabled: true, full_size: true };\r\n    if (icons.design === '2:green-square') {\r\n      // eslint-disable-next-line camelcase\r\n      avatar = { enabled: true, windows_icons: browserIconsPaths };\r\n    }\r\n\r\n    profileData.gologin.icon = { avatar };\r\n  }\r\n\r\n  profileData.chromeExtensions = [];\r\n  // собсно ждем все промисы\r\n  const timeBeforePromises = moment.utc();\r\n  const profilePreparingRes = (await Promise.all(promises)).flat().filter(Boolean);\r\n  timings.promises = moment.utc().diff(timeBeforePromises);\r\n\r\n  // console.log('profilePreparingRes:', profilePreparingRes);\r\n  // ищем хотя бы 1 промис с ошибкой, из-за которой надо прекратить запуск и отдать юзеру статус\r\n  const errorStageObj = profilePreparingRes.find((el: any) => Object.prototype.hasOwnProperty.call(el, 'isError'));\r\n  if (errorStageObj) {\r\n    const { errorTxt = '' } = errorStageObj as IComposeFontsErrorData;\r\n    startProfileTransactionSentry.setStatus('aborted');\r\n    startProfileTransactionSentry.finish();\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: errorTxt,\r\n      startProfileTimestamp,\r\n      profileOptions,\r\n    });\r\n\r\n    remoteCb && remoteCb(null, { status: 403, message: errorTxt });\r\n\r\n    return 'error';\r\n  }\r\n\r\n  let extParam = '--load-extension=';\r\n  const { extensionsEnabled } = profileData;\r\n\r\n  if (!extensionsEnabled) {\r\n    extParam = '--disable-extensions-except=';\r\n  }\r\n\r\n  const profileGologinExtensionPathRes = profilePreparingRes.find((el: any) => 'profileGologinExtensionPath' in el) as IGologinExtPathRes;\r\n\r\n  const extensionsStrToIncludeAsOrbitaParam = profileGologinExtensionPathRes?.profileGologinExtensionPath || '';\r\n  const passwordsTemporaryToken = profileGologinExtensionPathRes?.passwordsTemporaryToken || '';\r\n\r\n  args.push(`${extParam}\"${extensionsStrToIncludeAsOrbitaParam}\"`);\r\n\r\n  if (profileData.debugMode) {\r\n    if (osPlatform === 'win32') {\r\n      args.push('--enable-logging=stderr');\r\n    } else {\r\n      args.push('--enable-logging');\r\n    }\r\n\r\n    args.push('--v=1');\r\n    args.push('--vmodule=metrics=2');\r\n    args.push('--no-sandbox');\r\n  }\r\n\r\n  const { webglParams } = profileData;\r\n  if (!profileData.gologin.webgl.metadata.mode) {\r\n    args.push('--disable-webgl');\r\n    args.push('--disable-webgl2');\r\n  } else if (webglParams && webglParams.glCanvas === 'webgl') {\r\n    args.push('--disable-webgl2');\r\n  }\r\n\r\n  if (\r\n    webglParams &&\r\n    Object.prototype.hasOwnProperty.call(webglParams, 'antialiasing') &&\r\n    !webglParams.antialiasing\r\n  ) {\r\n    args.push('--webgl-antialiasing-mode=none');\r\n  }\r\n\r\n  if (profileData.session && !automation?.workflowId) {\r\n    args.push('--restore-last-session');\r\n  }\r\n\r\n  const {\r\n    autoProxyServer,\r\n  } = profileData;\r\n\r\n  const { mode = 'none', host: proxyHost = '', port = 80 } = profileData.proxy;\r\n  const proxyMode = mode.toLowerCase();\r\n  // Если передан прокси\r\n  // Добавляем аргументы для запуска brave под прокси\r\n  if (profileData.proxyEnabled) {\r\n    let server = ['gologin', 'tor'].includes(proxyMode) ? autoProxyServer : proxyHost;\r\n    let protocol = '';\r\n\r\n    if (proxyMode === 'http') {\r\n      protocol = 'http://';\r\n    }\r\n\r\n    if (proxyMode === 'socks4') {\r\n      protocol = 'socks4://';\r\n    }\r\n\r\n    if (proxyMode === 'socks5') {\r\n      protocol = 'socks5://';\r\n    }\r\n\r\n    if (server.includes('http://')) {\r\n      [, server] = server.split('http://');\r\n      protocol = 'http://';\r\n    }\r\n\r\n    if (server.includes('https://')) {\r\n      [, server] = server.split('https://');\r\n      protocol = 'https://';\r\n    }\r\n\r\n    if (server.includes('socks5://')) {\r\n      [, server] = server.split('socks5://');\r\n      protocol = 'socks5://';\r\n    }\r\n\r\n    if (server.includes('socks4://')) {\r\n      [, server] = server.split('socks4://');\r\n      protocol = 'socks4://';\r\n    }\r\n\r\n    if (['gologin', 'tor'].includes(proxyMode)) {\r\n      console.log('autoProxyServer', autoProxyServer);\r\n      const splittedAutoProxyServer = autoProxyServer.split('://');\r\n      const splittedProxyAddress = splittedAutoProxyServer[1].split(':');\r\n      const [host, _port] = splittedProxyAddress;\r\n\r\n      args.push(\r\n        // `--proxy-server=${splittedAutoProxyServer[0]}://${host}:${port}`,\r\n        `--proxy-server=${host}:${_port}`,\r\n      );\r\n      if (!protocol.includes('socks4')) {\r\n        args.push(`--host-resolver-rules=\"MAP * 0.0.0.0 , EXCLUDE ${host}\"`);\r\n      }\r\n    } else {\r\n      args.push(`--proxy-server=${protocol}${server}:${+port}`);\r\n      if (!protocol.includes('socks4')) {\r\n        args.push(`--host-resolver-rules=\"MAP * 0.0.0.0 , EXCLUDE ${server}\"`);\r\n      }\r\n    }\r\n  }\r\n\r\n  const ProfileReadyEventEmitterInst = ProfileReadyCheckerInst.eventEmitter;\r\n\r\n  ProfileReadyEventEmitterInst.on('profile-ready', async (timezoneCheckResult: IGetTimezoneResult) => {\r\n    if (profileData.proxyEnabled) {\r\n      TimezoneManager.updateProxyStatus(profileData.proxy.id || '', timezoneCheckResult);\r\n    }\r\n\r\n    // если тип тела === string, значит в status -> 'error', но на всякий случай сделал условие\r\n    if (typeof timezoneCheckResult.body === 'string') {\r\n      let errorMessage = timezoneCheckResult.status === 'error' ? timezoneCheckResult.body : 'notifications.error.timezoneRequestError';\r\n      if (errorMessage === 'Promise was canceled') {\r\n        errorMessage = 'profilesTable.error.proxyNonfunctional';\r\n      }\r\n\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error',\r\n        statusMessage: errorMessage,\r\n        startProfileTimestamp,\r\n        profileOptions,\r\n      });\r\n\r\n      remoteCb && remoteCb(null, { status: 403, message: errorMessage });\r\n\r\n      return 'error';\r\n    }\r\n\r\n    if (timezoneCheckResult.protocol === 'https') {\r\n      const proxyOptionIndex = args.findIndex((arg) => arg.startsWith('--proxy-server'));\r\n      args[proxyOptionIndex] = args[proxyOptionIndex].replace('http://', 'https://');\r\n    }\r\n\r\n    const isMAC = osPlatform === 'darwin';\r\n    const checkAutoLangResult = checkAutoLang(profileData, timezoneCheckResult.body);\r\n    const browserLang = isMAC ? 'en-US' : checkAutoLangResult;\r\n    args.push(`--lang=${browserLang}`);\r\n    console.log('args:', args);\r\n\r\n    launchOrbita({\r\n      timezoneCheckResult: timezoneCheckResult.body, startProfileTimestamp, profileOptions,\r\n      remoteCb, profileData, automation, args, channel, passwordsTemporaryToken, currentMs,\r\n      ProfileReadyEventEmitterInst, profilePreparingRes, timings, startProfileTransactionSentry,\r\n      ProfileStatusManagerInst, ProfileStatusManagerInstances, deepLinkProtocol,\r\n    }).catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      let statusMessage = 'profileStatusMessages.prepareProfileError';\r\n\r\n      if (message === 'No installed Orbita') {\r\n        statusMessage = 'profileStatusMessages.noOrbita';\r\n      }\r\n\r\n      sendErrorToSentry({\r\n        message, tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n        transactionName: 'prepare-orbita-launch-error', level: 'fatal',\r\n      });\r\n\r\n      startProfileTransactionSentry.setStatus('aborted');\r\n      startProfileTransactionSentry.finish();\r\n      ProfileStatusManagerInst.addStatus({\r\n        status: 'error', statusMessage,\r\n      });\r\n    });\r\n  });\r\n\r\n  ProfileReadyCheckerInst.isProfilePrepared = true;\r\n\r\n  return 'success';\r\n};\r\n\r\nexport const openLink = ({ link = '' }): void => {\r\n  open(link).catch(() => null);\r\n};\r\n\r\nexport const syncProfile = async (props: ISyncProfileProps): Promise<void> => {\r\n  const {\r\n    profileId,\r\n    channel,\r\n    onlyUpload = false,\r\n  } = props;\r\n\r\n  let ProfileStatusManagerInst = ProfileStatusManagerInstances[profileId];\r\n\r\n  if (!ProfileStatusManagerInst) {\r\n    ProfileStatusManagerInst = new ProfileStatusManager(channel, profileId);\r\n    ProfileStatusManagerInstances[profileId] = ProfileStatusManagerInst;\r\n  }\r\n\r\n  const status = onlyUpload ? 'cloud_uploading' : 'archiving';\r\n\r\n  ProfileStatusManagerInst.addStatus({ status });\r\n  ProfileStatusManagerInst.unblock();\r\n  ProfileStatusManagerInst.removeStatus({ status: 'error' });\r\n\r\n  const { s3SignedUrl = { url: '' }, profileArchiveBuffer, stopProfileTransactionSentry } = (await updateProfileAndGetUploadUrl({\r\n    profileId,\r\n    channel,\r\n    onlyUpload,\r\n    ProfileStatusManagerInst,\r\n    vaultToken: '',\r\n  }).catch((error: unknown) => {\r\n    console.log(error);\r\n    const message = error instanceof Error ? error.message : JSON.stringify(error);\r\n    if (message === 'archiving profile error') {\r\n      return;\r\n    }\r\n\r\n    sendErrorToSentry({\r\n      message, transactionName: 'sync-process-status-error', level: 'fatal',\r\n      tags: [['scenario', 'close-profile'], ['profileId', profileId]],\r\n    });\r\n  })) || {};\r\n\r\n  if (!profileArchiveBuffer) {\r\n    console.log('error, no buffer (sync)');\r\n\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: 'Archive with profile not found, synchronization is not possible',\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  await uploadingProfileProcess({\r\n    profileId,\r\n    s3SignedUrl,\r\n    profileArchiveBuffer,\r\n    ProfileStatusManagerInst,\r\n    ProfileStatusManagerInstances,\r\n    stopProfileTransactionSentry,\r\n  });\r\n};\r\n\r\nconst sendTimezoneStatus = (res: ITimeZoneError, ProfileStatusManagerInst: ProfileStatusManager, startProfileTimestamp: number): void => {\r\n  const errorMessage: string = getProxyErrorMessage(res.body);\r\n  if (res.type === 'timezone') {\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: {\r\n        errorType: 'notifications.error.timezoneRequestError',\r\n        errorMessage: 'error',\r\n        prefix: 'timezone',\r\n      },\r\n      startProfileTimestamp,\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  if (res.type === 'proxy') {\r\n    ProfileStatusManagerInst.addStatus({\r\n      status: 'error',\r\n      statusMessage: {\r\n        errorType: 'notifications.error.proxyError',\r\n        errorMessage,\r\n        prefix: 'proxy',\r\n      },\r\n      startProfileTimestamp,\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  ProfileStatusManagerInst.addStatus({\r\n    status: 'error',\r\n    statusMessage: {\r\n      errorType: 'notifications.error.somethingWentWrong',\r\n      errorMessage,\r\n      prefix: 'proxy',\r\n    },\r\n    startProfileTimestamp,\r\n  });\r\n};\r\n\r\nconst getProxyErrorMessage = (rawMessage: string): string => {\r\n  switch (true) {\r\n    case rawMessage === 'Promise was canceled':\r\n      return 'profilesTable.error.proxyNonfunctional';\r\n    default:\r\n      return rawMessage;\r\n  }\r\n};\r\n\r\nexport const checkAutoLang = (profileData: any, timezoneCheckResult: ICheckProxyResult): string => {\r\n  if (!profileData.autoLang) {\r\n    return checkBrowserLang(profileData);\r\n  }\r\n\r\n  let timezoneLang = '';\r\n  const { country: timezoneCountry = '', languages } = timezoneCheckResult || {} as ICheckProxyResult;\r\n  if (languages) {\r\n    const [firstDetectedLangLocale] = languages.split(',');\r\n    // если есть languages, значит есть и timezoneCountry, иначе в languages пришла бы пустая строка\r\n    timezoneLang = `${firstDetectedLangLocale}-${timezoneCountry}` || '';\r\n\r\n    let resultLangsArr: string[] = [];\r\n    const [lang = '', country = ''] = timezoneLang.split('-');\r\n    if (country) {\r\n      resultLangsArr.push([lang, country].join('-'));\r\n    }\r\n\r\n    resultLangsArr.push(lang, 'en-US', 'en');\r\n    resultLangsArr = [...new Set(resultLangsArr)];\r\n\r\n    const gologinLangsArr: string[] = [];\r\n    const result = resultLangsArr.reduce((acc: string, cur: string, index: number) => {\r\n      if (!index) {\r\n        acc += `${cur},`;\r\n        gologinLangsArr.push(cur);\r\n\r\n        return acc;\r\n      }\r\n\r\n      const qualityParam = 10 - index;\r\n      if (qualityParam > 0) {\r\n        const separator = (resultLangsArr.length - index) < 2 ? '' : ',';\r\n        gologinLangsArr.push(cur);\r\n        acc += `${cur};q=${Number(qualityParam * 0.1).toFixed(1)}${separator}`;\r\n      }\r\n\r\n      return acc;\r\n    }, '');\r\n\r\n    [profileData.browserLang] = resultLangsArr;\r\n    profileData.gologin.languages = gologinLangsArr.join(',');\r\n    profileData.gologin.langHeader = result;\r\n\r\n    return profileData.browserLang;\r\n  }\r\n\r\n  return checkBrowserLang(profileData);\r\n};\r\n\r\nconst checkBrowserLang = (profileData: any, defaultLocale = 'en-US'): string => {\r\n  if (profileData.gologin.langHeader) {\r\n    return profileData.browserLang;\r\n  }\r\n\r\n  profileData.browserLang = defaultLocale;\r\n  profileData.gologin.languages = defaultLocale;\r\n  profileData.gologin.langHeader = defaultLocale;\r\n\r\n  return defaultLocale;\r\n};\r\n","import { OsForBrowserIcons } from '../types';\r\n\r\nexport const formatOs = (os: string, winVersionMajor: number): OsForBrowserIcons|null => {\r\n  if (os === 'darwin') {\r\n    return 'mac';\r\n  }\r\n\r\n  if (os === 'linux') {\r\n    return 'linux';\r\n  }\r\n\r\n  if (winVersionMajor === 10 || winVersionMajor === 11) {\r\n    return `win${winVersionMajor}`;\r\n  }\r\n\r\n  return null;\r\n};\r\n","/* eslint-disable camelcase */\r\nimport { mainLocaleList } from '../../constants/constants';\r\nimport { IIntlProfileConfig } from '../../interfaces/intl-profile-config.interfaces';\r\nimport { ICheckProxyResult } from '../../interfaces/proxy.service.interfaces';\r\nimport { IProfileData } from '../../interfaces/start-profile.renderer.interfaces';\r\n\r\nexport const getIntlProfileConfig = (profileData: IProfileData, timezoneCheckResult: ICheckProxyResult): IIntlProfileConfig => {\r\n  if (!profileData.autoLang) {\r\n    return checkBrowserLang(profileData);\r\n  }\r\n\r\n  let timezoneLang = '';\r\n  const { country: timezoneCountry = '', languages } = timezoneCheckResult;\r\n  if (!languages) {\r\n    return checkBrowserLang(profileData);\r\n  }\r\n\r\n  const [firstDetectedLangLocale] = languages.split(',');\r\n  // если есть languages, значит есть и timezoneCountry, иначе в languages пришла бы пустая строка\r\n  timezoneLang = `${firstDetectedLangLocale}-${timezoneCountry}` || '';\r\n\r\n  let resultLangsArr: string[] = [];\r\n  const [lang = '', country = ''] = timezoneLang.split('-');\r\n  if (country) {\r\n    resultLangsArr.push([lang, country].join('-'));\r\n  }\r\n\r\n  resultLangsArr.push(lang, 'en-US', 'en');\r\n  resultLangsArr = [...new Set(resultLangsArr)];\r\n\r\n  const mainLanguage = getMainLanguage(resultLangsArr);\r\n\r\n  return {\r\n    accept_languages: resultLangsArr.join(','),\r\n    selected_languages: resultLangsArr.join(','),\r\n    app_locale: mainLanguage,\r\n    forced_languages: [\r\n      mainLanguage,\r\n    ],\r\n  };\r\n};\r\n\r\nconst checkBrowserLang = (profileData: IProfileData, defaultLocale = 'en-US'): IIntlProfileConfig => {\r\n  let userLangs = '';\r\n  let userMainLang = '';\r\n\r\n  if (profileData.gologin.languages) {\r\n    try {\r\n      const userLangsArr = profileData.gologin.languages.split(',');\r\n\r\n      userMainLang = getMainLanguage(userLangsArr);\r\n\r\n      userLangs = profileData.gologin.languages;\r\n    } catch (error) {\r\n      void 0;\r\n    }\r\n  }\r\n\r\n  return {\r\n    accept_languages: userLangs || defaultLocale,\r\n    selected_languages: userLangs || defaultLocale,\r\n    app_locale: userMainLang || defaultLocale,\r\n    forced_languages: [\r\n      userMainLang || defaultLocale,\r\n    ],\r\n  };\r\n};\r\n\r\nconst getMainLanguage = (langArr: string[]): string => {\r\n  for (const lang of langArr) {\r\n    if (mainLocaleList.includes(lang)) {\r\n      return lang;\r\n    }\r\n\r\n    const [locale] = lang.split('-');\r\n    if (mainLocaleList.includes(locale)) {\r\n      return locale;\r\n    }\r\n  }\r\n\r\n  return '';\r\n};\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable max-lines */\r\nimport { access, readFile, unlink, writeFile } from 'fs/promises';\r\n\r\nimport { BrowserReleasesManager } from './browser-releases.manager';\r\nimport { BrowserUserDataManager } from './browser.user-data.manager';\r\nimport { CommonDataManager } from './common-data-manager';\r\nimport { CookiesManager } from './cookies-manager';\r\nimport { ExtensionsManager } from './extensions.manager';\r\nimport { getProfileParamsToken } from './utils/api';\r\nimport { getAutomationStartupUrl } from './utils/automation.utils';\r\nimport { getIntlProfileConfig } from './utils/browser-locales.utils';\r\nimport { createProfileExt } from './utils/extract.downloaded.extensions';\r\nimport { IGeolocation, IProxy } from '../../app/interfaces';\r\nimport { AUTOMATION_EXTENSION_WEBSTORE_ID } from '../constants/constants';\r\nimport { zeroProfilePreferences } from '../constants/zero-profile-preferences';\r\nimport { sentryTransactionDefaultObject } from '../helpers/helper.functions';\r\nimport { ITransactionObject } from '../interfaces/helper.functions.interfaces';\r\nimport {\r\n  IPrepareGologinExtsProps,\r\n  IProfileAudioContext,\r\n  IProfileMediaDevices,\r\n  IProfilePlugins,\r\n  IProfileWebGL,\r\n  IProfileWebGLMetadata,\r\n  IProfileWebGLParams,\r\n  IStartProfilePaths,\r\n  IUpdateBrowserSettignsProps,\r\n  IPrepareProfileToLaunch,\r\n} from '../interfaces/profile-starter.manager.interfaces';\r\nimport {\r\n  IGologinExtPathRes,\r\n  IProfileData,\r\n  IProfileNavigator,\r\n} from '../interfaces/start-profile.renderer.interfaces';\r\nimport { saveConfigFile } from '../utils/config-manager';\r\nimport { BASE_PATH_TEMPLATE, MIN_MAJOR_CHROME_VERSION_FOR_CREATION_ORBITA_CONFIG, ORBITA_CONFIG_PATH } from '../utils/path-platforms';\r\nimport { sendErrorToSentry } from '../utils/sentry';\r\nimport { removeFileOrFolder } from '../utils/utils';\r\n\r\nconst ExtensionsManagerInst = new ExtensionsManager();\r\nconst CommonDataManagerInst = new CommonDataManager();\r\nconst BrowserUserDataManagerInst = new BrowserUserDataManager();\r\n\r\nexport class ProfileStarterManager {\r\n  static instance: ProfileStarterManager;\r\n\r\n  paths: IStartProfilePaths = {};\r\n  apiUrl = '';\r\n\r\n  constructor() {\r\n    if (!ProfileStarterManager.instance) {\r\n      ProfileStarterManager.instance = this;\r\n    }\r\n\r\n    return ProfileStarterManager.instance;\r\n  }\r\n\r\n  init(paths = {}, apiUrl = ''): void {\r\n    this.paths = paths;\r\n    this.apiUrl = apiUrl;\r\n  }\r\n\r\n  async prepareProfileToLaunch({ profileFingerprint, profileId, automation }: IPrepareProfileToLaunch): Promise<IProfileData> {\r\n    const token = CommonDataManagerInst.accessToken;\r\n\r\n    const {\r\n      name = '',\r\n      devicePixelRatio,\r\n      owner,\r\n      profile = '',\r\n      debugMode = false,\r\n      fonts,\r\n      os,\r\n      osSpec,\r\n      osProfileRunPrefs,\r\n      isM1 = false,\r\n      navigator: profileNavigator = {} as IProfileNavigator,\r\n      checkCookies = true,\r\n      clientRects = {\r\n        mode: 'noise',\r\n        noise: 0,\r\n      },\r\n      chromeExtensions = [],\r\n      userChromeExtensions = [],\r\n      cookies = {\r\n        clearCookies: false,\r\n        userCookies: false,\r\n      },\r\n      storageInfo,\r\n      startUrl = '',\r\n      useCookiesExt = true,\r\n      vaultToken = '',\r\n      bookmarks,\r\n      isAutoGenerated = false,\r\n      autoLang = true,\r\n      webRTC,\r\n      isBookmarksSynced,\r\n      lockEnabled = false,\r\n    } = profileFingerprint;\r\n\r\n    const isArm = (os === 'mac' && osSpec?.includes('M')) || isM1;\r\n\r\n    if (startUrl.includes('iphey.com/{compare_profile}')) {\r\n      const profileParamsToken = await getProfileParamsToken(this.apiUrl);\r\n\r\n      profileFingerprint.startUrl = profileFingerprint.startUrl.replace(\r\n        'iphey.com/{compare_profile}',\r\n        `iphey.com/fingerprint_params?token=${profileParamsToken?.token}&profile_id=${profileId}`,\r\n      );\r\n    }\r\n\r\n    const {\r\n      platform = 'win32',\r\n      resolution = '1920x1080',\r\n      userAgent,\r\n      doNotTrack = false,\r\n      language: langHeader = 'en-US,en;q=0.9',\r\n      hardwareConcurrency = 2,\r\n      deviceMemory = 2,\r\n      maxTouchPoints = 0,\r\n    } = profileNavigator;\r\n\r\n    const [screenWidth, screenHeight] = resolution.split('x');\r\n\r\n    const { canvas } = profileFingerprint;\r\n    const { mode: canvasMode, noise: canvasNoise } = canvas;\r\n\r\n    const {\r\n      proxy: profileProxy = {} as IProxy,\r\n      proxyEnabled = false,\r\n    } = profileFingerprint;\r\n\r\n    const {\r\n      username = '',\r\n      password = '',\r\n      mode: proxyMode = 'none',\r\n      autoProxyRegion = 'us',\r\n      torProxyRegion = 'us',\r\n    } = profileProxy;\r\n\r\n    const {\r\n      autoProxyServer = '',\r\n      autoProxyUsername = '',\r\n      autoProxyPassword = '',\r\n    } = profileFingerprint;\r\n\r\n    const { webGL: profileWebGL = {} as IProfileWebGL } = profileFingerprint;\r\n    const { mode: webGLMode = 'noise', noise: webGLNoise, getClientRectsNoise: webGLClientRectNoise = 0 } = profileWebGL;\r\n    const clientRectsNoise = clientRects.noise || webGLClientRectNoise;\r\n\r\n    const { webGLMetadata: profileWebGLMetadata = {} as IProfileWebGLMetadata, webglParams = {} as IProfileWebGLParams } = profileFingerprint;\r\n    const { vendor = '', renderer = '', mode: wegGLMetadataMode = 'mask' } = profileWebGLMetadata;\r\n\r\n    const { mediaDevices: profileMediaDevices = {} as IProfileMediaDevices } = profileFingerprint;\r\n    const {\r\n      enableMasking = true,\r\n      uid,\r\n      audioInputs = 1,\r\n      videoInputs = 1,\r\n      audioOutputs = 1,\r\n    } = profileMediaDevices;\r\n\r\n    const { plugins: profilePlugins = {} as IProfilePlugins } = profileFingerprint;\r\n    const {\r\n      enableVulnerable: all_enable = true,\r\n      enableFlash: flash_enable = true,\r\n    } = profilePlugins;\r\n\r\n    const { storage = {} } = profileFingerprint;\r\n    const {\r\n      local = true,\r\n      bookmarks: isAbleToEditBookmarks = true,\r\n      history = true,\r\n      passwords = true,\r\n      extensions = true,\r\n      session = true,\r\n      indexedDb = true,\r\n      enableExternalExtensions = false,\r\n    } = storage;\r\n\r\n    const { timezone: profileTimezone } = profileFingerprint;\r\n    const { timezone: timezoneValue, fillBasedOnIp: fillProxyByIp = false } = profileTimezone;\r\n\r\n    const { audioContext: profileAudioCtx = {} as IProfileAudioContext } = profileFingerprint;\r\n    const { mode: audioCtxMode = 'off', noise: audioCtxNoise } = profileAudioCtx;\r\n    const [splittedLangs] = langHeader.split(';');\r\n    const [browserLang] = splittedLangs.split(',');\r\n\r\n    let languages = splittedLangs;\r\n    const langsParams = langHeader.split(',');\r\n    langsParams.forEach((param: string, index: number) => {\r\n      if (!index) {\r\n        languages = param;\r\n\r\n        return;\r\n      }\r\n\r\n      const [lang] = param.split(';');\r\n      languages += `,${lang}`;\r\n    });\r\n\r\n    const { geolocation: geoLocation = {} as IGeolocation } = profileFingerprint;\r\n\r\n    const dns = profileFingerprint.dns || '';\r\n    const { createdInOs } = profileFingerprint;\r\n\r\n    let startupUrl: string, startupUrls: string[];\r\n    if (automation?.workflowId && automation?.extensionId) {\r\n      const automationStartUrl = getAutomationStartupUrl({ extensionId: automation.extensionId, workflowId: automation.workflowId });\r\n      console.info('automationStartUrl:', automationStartUrl);\r\n      [startupUrl, startupUrls] = [automationStartUrl, [automationStartUrl]];\r\n    } else {\r\n      startupUrl = this.getFirstStartupUrl(profileFingerprint.startUrl) || '';\r\n      startupUrls = (profileFingerprint.startUrl || '').split(',').map((url: string) => url.trim());\r\n    }\r\n\r\n    const deviceScaleFactorCeil = Math.ceil(devicePixelRatio || 3.5);\r\n    let deviceScaleFactor = devicePixelRatio;\r\n    if (deviceScaleFactorCeil === devicePixelRatio) {\r\n      deviceScaleFactor += 0.00000001;\r\n    }\r\n\r\n    const chromeExtensionsUpdated = automation?.workflowId\r\n      ? [...new Set([...chromeExtensions, AUTOMATION_EXTENSION_WEBSTORE_ID])]\r\n      : chromeExtensions;\r\n\r\n    return {\r\n      profileId,\r\n      lockEnabled,\r\n      vaultToken,\r\n      storageInfo,\r\n      useCookiesExt,\r\n      accessToken: token,\r\n      proxy: profileProxy,\r\n      profile,\r\n      owner,\r\n      os,\r\n      osSpec,\r\n      autoLang,\r\n      proxyEnabled,\r\n      autoProxyRegion,\r\n      torProxyRegion,\r\n      autoProxyServer,\r\n      autoProxyUsername,\r\n      autoProxyPassword,\r\n      region: 'US',\r\n      timezoneValue,\r\n      browserLang,\r\n      fillProxyByIp,\r\n      debugMode,\r\n      session,\r\n      createdInOs,\r\n      checkCookies,\r\n      isAutoGenerated,\r\n      bookmarks,\r\n      isBookmarksSynced,\r\n      bookmarksSettings: {\r\n        editing_enabled: isAbleToEditBookmarks,\r\n      },\r\n      history: {\r\n        saving_disabled: !history,\r\n      },\r\n      credentials_enable_service: passwords,\r\n      extensionsEnabled: extensions,\r\n      localStorageEnabled: local,\r\n      indexedDbEnabled: indexedDb,\r\n      enableExternalExtensions,\r\n      fonts,\r\n      chromeExtensions: chromeExtensionsUpdated,\r\n      userChromeExtensions,\r\n      cookies,\r\n      gologin: {\r\n        profile_id: profileId,\r\n        name,\r\n        is_m1: isArm,\r\n        ...osProfileRunPrefs,\r\n        geoLocation,\r\n        navigator: {\r\n          platform,\r\n          max_touch_points: maxTouchPoints,\r\n        },\r\n        dns,\r\n        proxy: {\r\n          username: proxyMode !== 'none' ? username : '',\r\n          password: proxyMode !== 'none' ? password : '',\r\n        },\r\n        screenHeight: parseInt(screenHeight, 10),\r\n        screenWidth: parseInt(screenWidth, 10),\r\n        userAgent,\r\n        webGl: {\r\n          vendor,\r\n          renderer,\r\n          mode: wegGLMetadataMode === 'mask',\r\n        },\r\n        webRTC,\r\n        webgl: {\r\n          metadata: {\r\n            vendor,\r\n            renderer,\r\n            mode: wegGLMetadataMode === 'mask',\r\n          },\r\n        },\r\n        mobile: {\r\n          enable: os === 'android',\r\n          width: parseInt(screenWidth, 10),\r\n          height: parseInt(screenHeight, 10),\r\n          device_scale_factor: deviceScaleFactor,\r\n        },\r\n        webglParams,\r\n        webgl_noice_enable: webGLMode === 'noise',\r\n        webglNoiceEnable: webGLMode === 'noise',\r\n        webgl_noise_enable: webGLMode === 'noise',\r\n        webgl_noise_value: webGLNoise,\r\n        webglNoiseValue: webGLNoise,\r\n        getClientRectsNoice: clientRectsNoise,\r\n        get_client_rects_noise: clientRectsNoise,\r\n        client_rects_noise_enable: clientRects.mode === 'noise',\r\n        mediaDevices: {\r\n          enable: enableMasking,\r\n          uid,\r\n          audioInputs,\r\n          audioOutputs,\r\n          videoInputs,\r\n        },\r\n        doNotTrack,\r\n        plugins: {\r\n          all_enable,\r\n          flash_enable,\r\n        },\r\n        storage: {\r\n          enable: local,\r\n        },\r\n        audioContext: {\r\n          enable: audioCtxMode !== 'off',\r\n          noiseValue: audioCtxNoise,\r\n        },\r\n        languages,\r\n        langHeader,\r\n        canvasMode,\r\n        canvasNoise,\r\n        hardwareConcurrency,\r\n        deviceMemory: deviceMemory * 1024,\r\n        startupUrl,\r\n        startup_urls: startupUrls,\r\n      },\r\n    };\r\n  }\r\n\r\n  async updatingBrowserSettings(props: IUpdateBrowserSettignsProps): Promise<void> {\r\n    const { profileData, publicUserIp, profileExtensionsCheckRes = [], timezoneCheckResult, args } = props;\r\n    const ua = profileData.gologin?.userAgent || '';\r\n    const majorChromeVersion = new BrowserReleasesManager().getMajorVersionByUA(ua);\r\n    if (Number(majorChromeVersion || 120) >= MIN_MAJOR_CHROME_VERSION_FOR_CREATION_ORBITA_CONFIG) {\r\n      const localeConfig = getIntlProfileConfig(profileData, timezoneCheckResult);\r\n      const intl = {\r\n        intl: localeConfig,\r\n      };\r\n\r\n      await saveConfigFile(ORBITA_CONFIG_PATH.replace('{profileId}', profileData.profileId), intl);\r\n    }\r\n\r\n    const { profileId } = profileData;\r\n\r\n    const pathToPreferences = BASE_PATH_TEMPLATE.replace('{profileId}', profileId) + 'Preferences';\r\n\r\n    console.log('path to preferences: ', pathToPreferences);\r\n\r\n    const settingsFile = await readFile(pathToPreferences, 'utf-8').catch(() => {\r\n      console.log('no pref file');\r\n\r\n      return JSON.stringify(zeroProfilePreferences);\r\n    });\r\n\r\n    let settings;\r\n    try {\r\n      settings = JSON.parse(settingsFile);\r\n    } catch (error) {\r\n      console.log(settingsFile);\r\n      throw error;\r\n    }\r\n\r\n    settings.gologin = profileData.gologin;\r\n    settings.gologin.unpinable_extension_names = ['passwords-ext'];\r\n    settings.bookmarks = profileData.bookmarksSettings;\r\n    settings.history = profileData.history;\r\n    settings.credentials_enable_service = profileData.credentials_enable_service;\r\n    settings.extensions.block_external_extensions = !profileData.enableExternalExtensions;\r\n\r\n    settings.gologin.webrtc = {\r\n      enable: profileData.gologin.webRTC.enable,\r\n      should_fill_empty_ice_list: profileData.gologin.webRTC.isEmptyIceList,\r\n      mode: profileData.gologin.webRTC.mode,\r\n    };\r\n    delete settings.gologin.webRTC;\r\n\r\n    const extSettings = await BrowserUserDataManagerInst.setExtPathsAndRemoveDeleted({\r\n      settings,\r\n      profileExtensionsCheckRes,\r\n      profileId,\r\n    });\r\n\r\n    let extensionsToInstall = ExtensionsManagerInst.getExtensionsToInstall(extSettings, profileExtensionsCheckRes);\r\n    const automationExtensionPath = profileExtensionsCheckRes\r\n      .find((extensionPath: string) => extensionPath.includes(AUTOMATION_EXTENSION_WEBSTORE_ID));\r\n\r\n    if (automationExtensionPath) {\r\n      extensionsToInstall.push(automationExtensionPath);\r\n      extensionsToInstall = [...new Set(extensionsToInstall)];\r\n    }\r\n\r\n    console.log('extensionsToInstall:', extensionsToInstall);\r\n\r\n    const extensionArgIndex: number = args.findIndex(arg => arg.includes('--load-extension')) || 0;\r\n    if (extensionsToInstall.length && extensionArgIndex > 0) {\r\n      args[extensionArgIndex] = args[extensionArgIndex].slice(0, -1) + ',' + extensionsToInstall.join(',') + '\"';\r\n    }\r\n\r\n    if (extSettings) {\r\n      const currentExtSettings = settings.extensions || {};\r\n      currentExtSettings.settings = extSettings;\r\n      settings.extensions = currentExtSettings;\r\n    }\r\n\r\n    await writeFile(pathToPreferences, JSON.stringify(settings), { mode: 0o666 });\r\n    console.log('Preferences has been successfully updated');\r\n  }\r\n\r\n  async prepareCookies(profileId: string, cookiesData: any, startProfileTransactionSentry = sentryTransactionDefaultObject): Promise<void> {\r\n    const prepareCookiesSentrySpan = startProfileTransactionSentry.startChild({ op: 'prepare-cookies' }) || { finish: () => null };\r\n    let cookiesFilePath = this.paths.PROFILES_DIR + profileId + this.paths.COOKIES_FILE;\r\n    await access(cookiesFilePath).catch(() => {\r\n      cookiesFilePath = this.paths.PROFILES_DIR + profileId + this.paths.COOKIES_FILE_NEW;\r\n    });\r\n    console.log('startProf cookiesFilePath:', cookiesFilePath);\r\n\r\n    return CookiesManager.prepareCookies(profileId, cookiesData, cookiesFilePath).finally(() => prepareCookiesSentrySpan.finish());\r\n  }\r\n\r\n  async prepareGologinExts(props: IPrepareGologinExtsProps): Promise<IGologinExtPathRes | void> {\r\n    const { name, profileId, owner, useCookiesExt, vaultToken, startProfileTransactionSentry } = props;\r\n    const prepareGologinExtsSpan = startProfileTransactionSentry.startChild({ op: 'prepare-gologin-extensions' });\r\n    const passwordsTemporaryToken = vaultToken;\r\n    // console.log('passwordsTemporaryToken:', passwordsTemporaryToken);\r\n    const paramsForExt = {\r\n      name,\r\n      profileId,\r\n      password: owner,\r\n      token: passwordsTemporaryToken,\r\n      useCookiesExt,\r\n    };\r\n\r\n    return createProfileExt(paramsForExt, false, startProfileTransactionSentry)\r\n      .then(res => ({\r\n        profileGologinExtensionPath: res.map(el => el?.extPath || '').join(','),\r\n        passwordsTemporaryToken,\r\n      }) as IGologinExtPathRes)\r\n      .catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendErrorToSentry({\r\n          message, transactionName: 'creating-profile-extensions-error',\r\n          tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n        });\r\n      }).finally(() => prepareGologinExtsSpan.finish());\r\n  }\r\n\r\n  async checkTempFiles(profileId: string, startProfileTransactionSentry: ITransactionObject): Promise<void[]> {\r\n    const checkFilesSentrySpan = startProfileTransactionSentry.startChild({ op: 'check-temp-files' });\r\n    console.log('Removing stuck files');\r\n\r\n    const tempFiles = [\r\n      `${this.paths.ROUTE_SLASH}SingletonLock`, `${this.paths.ROUTE_SLASH}RunningChromeVersion`,\r\n      `${this.paths.ROUTE_SLASH}SingletonCookie`, `${this.paths.ROUTE_SLASH}SingletonSocket`,\r\n    ];\r\n\r\n    const deletePromises =\r\n      tempFiles\r\n        .map((value) => unlink(this.paths.PROFILES_DIR + profileId + value).catch(() => Promise.resolve()));\r\n\r\n    return Promise.all(deletePromises).catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      sendErrorToSentry({\r\n        message, transactionName: 'check-temp-files', level: 'warning',\r\n        tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n      });\r\n      throw error;\r\n    }).finally(() => checkFilesSentrySpan.finish());\r\n  }\r\n\r\n  removeUselessFolders(\r\n    profileId: string,\r\n    os: string,\r\n    startProfileTransactionSentry = sentryTransactionDefaultObject,\r\n  ): Promise<void | void[]> {\r\n    console.log('Removing useless folders');\r\n    const removeUselessFoldersSpan = startProfileTransactionSentry.startChild({ op: 'remove-useless-folders' });\r\n\r\n    if (os === 'android') {\r\n      return removeFileOrFolder(this.paths.PROFILES_DIR + profileId + `${this.paths.ROUTE_SLASH}Default${this.paths.ROUTE_SLASH}Sessions`)\r\n        .catch((error: unknown) => {\r\n          const message = error instanceof Error ? error.message : error;\r\n          sendErrorToSentry({\r\n            message, transactionName: 'remove-useless-folder', level: 'warning',\r\n            tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n          });\r\n        }).finally(() => removeUselessFoldersSpan.finish());\r\n\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n\r\n  getFirstStartupUrl(startUpUrls: string): string {\r\n    if (!startUpUrls) {\r\n      return '';\r\n    }\r\n\r\n    const [firstUrl] = startUpUrls.split(',');\r\n\r\n    return firstUrl.trim();\r\n  }\r\n}\r\n","import { ISetProxyStatusParams } from '../../../app/state/proxies.context/interfaces/ISetProxyStatusParams';\r\nimport { makeRequest } from '../../../electron/utils/make-request';\r\nimport { sendErrorToSentry } from '../../../electron/utils/sentry';\r\nimport { IProfileFingerprint } from '../../interfaces/profile-starter.manager.interfaces';\r\nimport withRetry from '../../utils/with-retry';\r\nimport { CommonDataManager } from '../common-data-manager';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport const getProfileParamsToken = (apiUrl: string): Promise<{ token?: string }> =>\r\n  makeRequest<{ token?: string }>({ url: `${apiUrl}/browser/features/profile-params-token`, method: 'GET', timeout: 30 * 1000, retryLimit: 5 })\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      sendErrorToSentry({\r\n        message, transactionName: 'get-profile-params-token-error', level: 'warning',\r\n        tags: [['scenario', 'run-profile']],\r\n      });\r\n\r\n      return {};\r\n    });\r\n\r\nexport const requestProfileFingerprint = (profileId: string): Promise<IProfileFingerprint> => withRetry({\r\n  fn() {\r\n    return makeRequest<IProfileFingerprint>({ url: `${CommonDataManagerInst.apiBaseUrl}/browser/features/${profileId}/info-for-run` });\r\n  },\r\n  retryDelay: 300,\r\n});\r\n\r\nexport const setProxyStatuses = async (proxies: ISetProxyStatusParams[]): Promise<void> =>\r\n  makeRequest<void>({\r\n    url: `${CommonDataManagerInst.apiBaseUrl}/proxy/set_proxy_statuses`,\r\n    method: 'POST',\r\n    body: { proxies },\r\n  }).catch(() => void 0);\r\n\r\n","import crypto from 'crypto';\r\n\r\n// without `javascript:;` the ERR_BLOCKED_BY_CLIENT error is thrown\r\ninterface AutomationStartupUrlData {\r\n  extensionId: string;\r\n  workflowId: string;\r\n}\r\n\r\nexport const getAutomationStartupUrl = ({ extensionId = '', workflowId = '' }: AutomationStartupUrlData): string =>\r\n  `javascript:;window.open('chrome-extension://${extensionId}/newtab.html#/workflows/${workflowId}/run', '_self')`;\r\n\r\nexport const generatePublicKey = (): string => {\r\n  const keyPair = crypto.generateKeyPairSync('rsa', {\r\n    modulusLength: 2048,\r\n    publicKeyEncoding: {\r\n      type: 'spki',\r\n      format: 'pem',\r\n    },\r\n    privateKeyEncoding: {\r\n      type: 'pkcs8',\r\n      format: 'pem',\r\n    },\r\n  });\r\n\r\n  const publicKey = keyPair.publicKey\r\n    .concat()\r\n    .split('\\n')\r\n    .join('')\r\n    .replace('-----BEGIN PUBLIC KEY-----', '')\r\n    .replace('-----END PUBLIC KEY-----', '');\r\n\r\n  return publicKey;\r\n};\r\n\r\nexport const convertPublicKeyToExtensionId = (publicKey: string): string => {\r\n  const publicKeyBuffer = Buffer.from(publicKey, 'base64');\r\n  const hash = crypto.createHash('sha256').update(publicKeyBuffer).digest();\r\n\r\n  let characters = [...hash.slice(0, 16).toString('hex').toLowerCase()];\r\n  characters = characters.map((char) => isNaN(+char) ?\r\n    String.fromCharCode(char.charCodeAt(0) + 10) : 'abcdefghijklmnop'[parseInt(char, 16)]);\r\n\r\n  return characters.join('');\r\n};\r\n","import { readFile } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport {\r\n  BROWSER_FOLDER_NAME,\r\n  PLATFORM as osPlatform,\r\n  BROWSER_PATH,\r\n} from '../../../electron/utils/path-platforms';\r\nimport { VERSION_FILE } from '../../constants/constants';\r\n\r\nconst DEFAULT_VERSION = '0.0.0';\r\n\r\nexport const getChromeMajorVersion = (orbitaVersion = ''): string => {\r\n  if (!orbitaVersion.split) {\r\n    return '0';\r\n  }\r\n\r\n  const [majorChromeVersion] = orbitaVersion.split('.');\r\n\r\n  return majorChromeVersion;\r\n};\r\n\r\nexport const getOldLocalOrbitaVersion = (): Promise<string> => {\r\n  let versionFilePath = path.join(BROWSER_PATH, BROWSER_FOLDER_NAME, 'version');\r\n  if (osPlatform === 'darwin') {\r\n    versionFilePath = path.join(BROWSER_PATH, 'version', VERSION_FILE);\r\n  }\r\n\r\n  return readFile(versionFilePath, { encoding: 'utf-8' }).catch(() => DEFAULT_VERSION);\r\n};\r\n\r\nexport const getOrbitaDirNameByVersion = (majorVersion = ''): string => {\r\n  const chromiumVersion = majorVersion ? majorVersion : '0';\r\n\r\n  return [BROWSER_FOLDER_NAME, chromiumVersion].join('-');\r\n};\r\n","import { access, unlink } from 'fs/promises';\r\n\r\nimport decompress from 'decompress';\r\nimport decompressUnzip from 'decompress-unzip';\r\n\r\nimport withRetry from '../../utils/with-retry';\r\n\r\nexport class ExtensionsExtractor {\r\n  static extractExtension(source: string, dest: string): Promise<void> {\r\n    if (!(source && dest)) {\r\n      throw new Error('Missing parameter');\r\n    }\r\n\r\n    return access(source)\r\n      .then(() =>\r\n        withRetry({\r\n          fn() {\r\n            return decompress(source, dest, {\r\n              plugins: [decompressUnzip()],\r\n              filter: (file: { path: string }) => !file.path.endsWith('/'),\r\n            });\r\n          },\r\n        }),\r\n      );\r\n  }\r\n\r\n  static deleteExtensionArchive(dest: string): Promise<void> {\r\n    if (!dest) {\r\n      throw new Error('Missing parameter');\r\n    }\r\n\r\n    return access(dest)\r\n      .then(\r\n        () => unlink(dest),\r\n        () => Promise.resolve(),\r\n      );\r\n  }\r\n}\r\n","import path from 'path';\r\n\r\nimport { sentryTransactionDefaultObject } from '../../helpers/helper.functions';\r\nimport { IExtExistsObj, IExtObject, IUpdateFileOptions } from '../../interfaces/extract.download.ext.interface';\r\nimport { checkGologinExtensions, EXTENSIONS_TO_DOWNLOAD } from '../../utils/check-gologin-extensions';\r\nimport { EXTENSIONS_PATH } from '../../utils/path-platforms';\r\nimport { copyFolder } from '../../utils/utils';\r\n\r\ndeclare let global: any;\r\n\r\nconst { access, readFile, writeFile, readdir } = require('fs').promises;\r\n\r\nexport const checkDownloadedExtFolder = (extObj: IExtObject): boolean => access(path.join(EXTENSIONS_PATH, extObj.baseFolderName))\r\n  .then(() => true)\r\n  .catch(() => false);\r\n\r\nconst copyExtensionFolder = async (extObj: IExtObject, profileId: string): Promise<boolean|IExtExistsObj> => {\r\n  const source = path.join(EXTENSIONS_PATH, extObj.baseFolderName);\r\n  const dest = path.join(EXTENSIONS_PATH, extObj.extName, profileId);\r\n  await copyFolder(source, dest);\r\n\r\n  const checkExtractRes = true;\r\n\r\n  return checkProfileExtExists(extObj, { profileId }, checkExtractRes);\r\n};\r\n\r\nconst updateUidFile = async (extObj: IExtObject, opts: IUpdateFileOptions): Promise<void> => {\r\n  const { profileId, password, token, name } = opts;\r\n  const fileContent = await readFile(path.join(EXTENSIONS_PATH, extObj.extName, profileId, 'uid.example.json'), 'utf-8');\r\n  const parsedContent = JSON.parse(fileContent);\r\n\r\n  parsedContent.uid = profileId;\r\n  parsedContent.port = global.appPort || 36912;\r\n\r\n  if (extObj.name.includes('Pass')) {\r\n    delete parsedContent.port;\r\n    parsedContent.password = password;\r\n    parsedContent.token = token;\r\n    parsedContent.name = name;\r\n  }\r\n\r\n  await writeFile(path.join(EXTENSIONS_PATH, extObj.extName, profileId, 'uid.json'), JSON.stringify(parsedContent), { mode: 0o666 });\r\n};\r\n\r\nconst checkProfileExtExists =\r\n  async (\r\n    extObj: IExtObject,\r\n    opts: IUpdateFileOptions,\r\n    checkExtractRes = false,\r\n  ): Promise<boolean|IExtExistsObj> => {\r\n    const { profileId } = opts;\r\n    const objToReturn = { extPath: '' };\r\n    const isProfileExtExists = await access(path.join(EXTENSIONS_PATH, extObj.extName, profileId, 'manifest.json'))\r\n      .then(() => true)\r\n      .catch(() => false);\r\n\r\n    if (checkExtractRes || !isProfileExtExists) {\r\n      return checkExtractRes ? isProfileExtExists : objToReturn;\r\n    }\r\n\r\n    const extVersionFileContent = await readFile(path.join(EXTENSIONS_PATH, extObj.versionFile), 'utf-8').catch(() => '');\r\n    console.log(`${extObj.name} extVersionFileContent:`, extVersionFileContent);\r\n\r\n    if (!extVersionFileContent) {\r\n      console.log('ext version file not found!!');\r\n      const extensionsFolderContent = await readdir(EXTENSIONS_PATH).catch((error: unknown) => console.log(error));\r\n      console.log(extensionsFolderContent);\r\n      await checkGologinExtensions();\r\n\r\n      return objToReturn;\r\n    }\r\n\r\n    await updateUidFile(extObj, opts).then(() => true).catch(() => false);\r\n\r\n    return { ...objToReturn, extPath: path.join(EXTENSIONS_PATH, extObj.extName, profileId) };\r\n  };\r\n\r\nexport const createProfileExt =\r\n  async (\r\n    opts: IUpdateFileOptions,\r\n    returnRes = false,\r\n    startProfileSentryTransaction = sentryTransactionDefaultObject,\r\n  ): Promise<IExtExistsObj[]> => {\r\n    const { profileId, token, useCookiesExt = true } = opts;\r\n\r\n    const promises = EXTENSIONS_TO_DOWNLOAD.map(async (extObj) => {\r\n      if (\r\n        extObj.name === 'Passwords Ext' && !token ||\r\n        extObj.name === 'Cookies Ext' && !useCookiesExt\r\n      ) {\r\n        throw 'do nothing';\r\n      }\r\n\r\n      const extInfo = await checkProfileExtExists(extObj, opts);\r\n      const { extPath } = typeof extInfo === 'boolean' ? { extPath: null } : extInfo;\r\n\r\n      if (extPath) {\r\n        return { extPath };\r\n      }\r\n\r\n      const isExtArchiveExists = checkDownloadedExtFolder(extObj);\r\n      if (!isExtArchiveExists) {\r\n        startProfileSentryTransaction.setTag('download-gologin-extensions', true);\r\n        console.log('ext version file not found!!');\r\n        const extensionsFolderContent = await readdir(EXTENSIONS_PATH).catch((error: unknown) => console.log(error));\r\n        console.log(extensionsFolderContent);\r\n        await checkGologinExtensions();\r\n      }\r\n\r\n      const extractedRes = await copyExtensionFolder(extObj, profileId);\r\n      if (!extractedRes) {\r\n        throw `${extObj.name} extracting failed`;\r\n      }\r\n\r\n      await updateUidFile(extObj, opts).then(() => true).catch(() => false);\r\n\r\n      return { extPath: path.join(EXTENSIONS_PATH, extObj.extName, profileId) };\r\n    });\r\n\r\n    const promiseResult = await Promise.allSettled(promises) as { status: 'fulfilled' | 'rejected'; value: any }[];\r\n    const isAllExtAreExtracted = promiseResult.every(result => result.status === 'fulfilled');\r\n    if (isAllExtAreExtracted || returnRes) {\r\n      return promiseResult.map(result => result.value);\r\n    }\r\n\r\n    return createProfileExt(opts, true);\r\n  };\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import axios        from 'axios';\r\n\r\nimport { IServerApiRequestOptions, IServerApiRequestProps } from '../../../interfaces/server.api.interfaces';\r\nimport { CommonDataManager } from '../../../managers/common-data-manager';\r\nimport { makeRequest } from '../../../utils/make-request';\r\n\r\naxios.defaults.headers['Content-Type'] = 'application/json';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport const apiRequest = (props: IServerApiRequestProps): Promise<unknown> => {\r\n  const { endpoint, method, headers, body } = props;\r\n\r\n  const requestOpts: IServerApiRequestOptions = {\r\n    url: `${CommonDataManagerInst.apiBaseUrl}${endpoint}`,\r\n    method,\r\n    headers: {\r\n      ...headers,\r\n      Authorization: `Bearer ${CommonDataManagerInst.accessToken}`,\r\n      'user-agent': CommonDataManagerInst.userAgent,\r\n      'x-two-factor-token': CommonDataManagerInst.twoFaKey,\r\n    },\r\n  };\r\n\r\n  if (method !== 'GET') {\r\n    requestOpts.body = body;\r\n  }\r\n\r\n  return makeRequest(requestOpts).catch(() => null);\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"net\");","import net from 'net';\r\n\r\nimport { ICheckProxyData, ICheckProxyParams, ICheckProxyResult } from '../interfaces/proxy.service.interfaces';\r\nimport { makeProxyRequestWithTimeout } from '../utils/proxy-request-with-timeout';\r\nimport { sendErrorToSentry } from '../utils/sentry';\r\n\r\nexport class ProxyService {\r\n  static async checkProxy(params: ICheckProxyParams, checkPing = false): Promise<ICheckProxyResult> {\r\n    let status = 'fail';\r\n    let origin = '';\r\n    let country = '';\r\n    let timezone = '';\r\n    let languages = '';\r\n    let city = '';\r\n    let error = '';\r\n    let ping: string|number|null = '';\r\n\r\n    const { username = '', password = '', host } = params;\r\n\r\n    if (!(username && password) && host.includes('floppydata.com')) {\r\n      return {\r\n        status: 'fail',\r\n        error: 'profileStatusMessages.invalidProxy',\r\n      };\r\n    }\r\n\r\n    if (params.port < 0 || params.port > 65535) {\r\n      return {\r\n        status: 'fail',\r\n        error: 'notifications.error.invalidPort',\r\n      };\r\n    }\r\n\r\n    if (checkPing) {\r\n      ping = await this.getPing(params);\r\n    }\r\n\r\n    if (ping === 'Check timeout exceeded') {\r\n      return {\r\n        status: 'fail',\r\n        error: 'notifications.error.timeoutExceeded',\r\n      };\r\n    }\r\n\r\n    const checkProxyRes = await makeProxyRequestWithTimeout(params).catch((err: unknown) => {\r\n      const message = err instanceof Error ? err.message : err;\r\n      sendErrorToSentry({\r\n        message,\r\n        transactionName: 'check-proxy',\r\n        tags: [['scenario', 'check-proxy']],\r\n      });\r\n\r\n      error = ProxyService.getFormattedError(err);\r\n\r\n      return {\r\n        response: {},\r\n        status: 'fail',\r\n        error: 'profileStatusMessages.invalidProxy',\r\n      };\r\n    });\r\n\r\n    const checkData = checkProxyRes.response;\r\n    if (Object.prototype.hasOwnProperty.call(checkData, 'status')) {\r\n      return {\r\n        status,\r\n        origin,\r\n        country,\r\n        timezone,\r\n        languages,\r\n        city,\r\n        ping,\r\n        error: error ? error : 'notifications.error.proxyError',\r\n      };\r\n    }\r\n\r\n    const checedProxyData = checkData as ICheckProxyData;\r\n    if (!checedProxyData.ip && checedProxyData.statusCode && checedProxyData.statusCode.toString().startsWith('4')) {\r\n      error = ProxyService.getFormattedError(checkData);\r\n    }\r\n\r\n    if (checedProxyData.toString().toLowerCase().includes('access denied')) {\r\n      error = 'notifications.error.proxyAuthError';\r\n    } else {\r\n      origin = checedProxyData.ip || '';\r\n      country = checedProxyData.country || '';\r\n      timezone = checedProxyData.timezone || '';\r\n      languages = checedProxyData.languages || '';\r\n      city = checedProxyData.city || '';\r\n      status = origin && origin.length ? 'success' : 'fail';\r\n    }\r\n\r\n    return {\r\n      status,\r\n      origin,\r\n      country,\r\n      timezone,\r\n      languages,\r\n      city,\r\n      ping,\r\n      error: error ? error : 'notifications.error.proxyError',\r\n    };\r\n  }\r\n\r\n  static async getPing(params: ICheckProxyParams): Promise<string|number|null> {\r\n    return new Promise((resolve) => {\r\n      const timer = setTimeout(() => {\r\n        socket.destroy();\r\n        resolve('Check timeout exceeded');\r\n      }, 10000);\r\n\r\n      const socket = new net.Socket();\r\n      const start = process.hrtime();\r\n\r\n      socket.connect(params.port, params.host, () => {\r\n        clearTimeout(timer);\r\n        const timeArr = process.hrtime(start);\r\n        const time = parseInt(((timeArr[0] * 1e9 + timeArr[1]) / 1e6).toString());\r\n\r\n        socket.destroy();\r\n        resolve(time);\r\n      });\r\n\r\n      socket.on('error', () => {\r\n        clearTimeout(timer);\r\n        socket.destroy();\r\n        resolve(null);\r\n      });\r\n    });\r\n  }\r\n\r\n  static getFormattedError(error: any): string {\r\n    const errorData = JSON.stringify(error);\r\n    if (errorData.includes('407')) {\r\n      return 'notifications.error.proxyAuthError';\r\n    }\r\n\r\n    return 'notifications.error.proxyConnectionError';\r\n  }\r\n}\r\n","import path from 'path';\r\n\r\nimport { BrowserWindow, nativeTheme } from 'electron';\r\n\r\nimport { ThemeType } from '../../app/interfaces/theme.type';\r\nimport { IAppConfigRecord } from '../interfaces/app-config.interfaces';\r\nimport { readConfigFile, saveConfigFile } from './config-manager';\r\nimport { CONFIG_APP_PATH } from './path-platforms';\r\n\r\nconst configFileName = 'appConfig.json';\r\nconst configFilePath = path.join(CONFIG_APP_PATH, configFileName);\r\n\r\nexport const setupAppConfig = async (defaultWindowConfig: IAppConfigRecord): Promise<void> => {\r\n  const appConfig = await loadAppConfig();\r\n  if (appConfig) {\r\n    const {\r\n      windowWidth, windowHeight, windowPosX = 0, windowPosY = 0, isMaximized = false, isFullScreen = false,\r\n      theme = 'system',\r\n    } = appConfig;\r\n\r\n    windowWidth && Number(windowWidth) > 1000 && (defaultWindowConfig.windowWidth = Number(windowWidth));\r\n    windowHeight && Number(windowHeight) > 500 && (defaultWindowConfig.windowHeight = Number(windowHeight));\r\n    !isFullScreen && (defaultWindowConfig.windowPosX = Number(windowPosX));\r\n    !isFullScreen && (defaultWindowConfig.windowPosY = Number(windowPosY));\r\n\r\n    defaultWindowConfig.isMaximized = isMaximized;\r\n    defaultWindowConfig.isFullScreen = isFullScreen;\r\n    let currentTheme = theme;\r\n    if (currentTheme === 'system') {\r\n      currentTheme = nativeTheme?.shouldUseDarkColors ? 'dark' : 'light';\r\n    }\r\n\r\n    const backgroundColor = currentTheme === 'dark' ? '#191A23' : '#F9F9F9';\r\n    defaultWindowConfig.backgroundColor = backgroundColor;\r\n  }\r\n};\r\n\r\nexport const saveAppConfig = async (window: BrowserWindow, translationData: any, theme: ThemeType): Promise<void> => {\r\n  const configToSave = {} as IAppConfigRecord;\r\n\r\n  const { language } = translationData || {};\r\n  language && (configToSave.language = language);\r\n\r\n  const { width = 1024, height = 500, x: xCoordinate = 0, y: yCoordinate = 0 } = window && window.getBounds() || {};\r\n  configToSave.windowWidth = width;\r\n  configToSave.windowHeight = height;\r\n  configToSave.windowPosX = xCoordinate;\r\n  configToSave.windowPosY = yCoordinate;\r\n\r\n  configToSave.isMaximized = !!window.isMaximized();\r\n  configToSave.isFullScreen = !!window.isFullScreen();\r\n  configToSave.theme = theme;\r\n\r\n  await writeToAppConfig(configToSave).catch((error: unknown) => console.log(error));\r\n};\r\n\r\nexport const loadAppConfig = async (): Promise<IAppConfigRecord|void> => readConfigFile(configFilePath);\r\n\r\nexport const writeToAppConfig = async (config: IAppConfigRecord): Promise<void> => {\r\n  const { CommonDataManager } = await import('../managers/common-data-manager');\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n  const currentConfig = CommonDataManagerInst.appConfig;\r\n\r\n  const configRecords = Object.entries(config);\r\n  if (!configRecords.length) {\r\n    return;\r\n  }\r\n\r\n  configRecords.forEach(record => {\r\n    const [key, value = null] = record;\r\n    if (key && value !== null) {\r\n      currentConfig[key] = value;\r\n    }\r\n  });\r\n\r\n  CommonDataManagerInst.appConfig = currentConfig;\r\n  await saveConfigFile(configFilePath, currentConfig);\r\n};\r\n\r\nexport const clearAppConfig = async (): Promise<void> => {\r\n  const { CommonDataManager } = await import('../managers/common-data-manager');\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n  CommonDataManagerInst.appConfig = {};\r\n  await saveConfigFile(configFilePath, CommonDataManagerInst.appConfig);\r\n};\r\n","import { writeFile } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport { screen } from 'electron';\r\n\r\nimport { getIconsConstants } from '../../../app/features/browser-system-icons/constants';\r\nimport { ISaveBrowserIconsInProfileDirectoryData } from '../../interfaces/save-browser-icons-in-profile-directory-data.interface';\r\n\r\nexport const saveBrowserIconsInProfileDirectory = async ({\r\n  iconsPngs = [],\r\n  profilePath = '',\r\n  os,\r\n  iconDesignVersion = null,\r\n}: ISaveBrowserIconsInProfileDirectoryData, span?: { finish: () => void }): Promise<void> => {\r\n  let { browserIconsSizes } = getIconsConstants(os);\r\n  const { scaleFactor = 1 } = screen.getPrimaryDisplay();\r\n  if (['win10', 'win11', 'mac'].includes(os)) {\r\n    browserIconsSizes = browserIconsSizes.map(size => size * scaleFactor);\r\n    if (os === 'win10') {\r\n      const [iconBigSize] = browserIconsSizes;\r\n      const iconSmallSize = iconBigSize / 2;\r\n      browserIconsSizes = [iconBigSize, iconSmallSize]\r\n    }\r\n  }\r\n\r\n  const iconPngsPromises = iconsPngs.reduce<Promise<void>[]>((acc, iconPng, index) => {\r\n    let iconName = 'avatar.png';\r\n    const isNotAvatar = iconDesignVersion === '2:green-square';\r\n    if (isNotAvatar) {\r\n      const iconSize = `${browserIconsSizes[index]}`;\r\n      iconName = `${iconSize}.png`;\r\n    }\r\n\r\n    const iconPath = path.join(profilePath, iconName);\r\n    const iconBase64Ready = iconPng.replace(/^data:image\\/png;base64,/, '');\r\n    acc.push(writeFile(iconPath, iconBase64Ready, 'base64'));\r\n\r\n    return acc;\r\n  }, []);\r\n\r\n  await Promise.all(iconPngsPromises);\r\n  span?.finish();\r\n};\r\n","import { BrowserWindow, screen } from 'electron';\r\n\r\nimport { STORAGE_KEY_PREFIX } from '../../constants/constants';\r\nimport { BrowserReleasesManager } from '../../managers/browser-releases.manager';\r\nimport { getWinRelease } from '../userOs';\r\n\r\nexport const saveBrowserIconsData = (browserWindow: BrowserWindow|null): void => {\r\n  if (!browserWindow) {\r\n    return;\r\n  }\r\n\r\n  const { scaleFactor = 1 } = screen.getPrimaryDisplay();\r\n  const osPlatform = process.platform;\r\n  let winVersionMajor = 10;\r\n  browserWindow.webContents.executeJavaScript(`\r\n    localStorage.setItem('${STORAGE_KEY_PREFIX}:osPlatform', '${osPlatform}');\r\n    localStorage.setItem('${STORAGE_KEY_PREFIX}:scaleFactor', ${scaleFactor});\r\n  `);\r\n\r\n  if (osPlatform === 'win32') {\r\n    winVersionMajor = getWinRelease();\r\n    browserWindow.webContents.executeJavaScript(`localStorage.setItem('${STORAGE_KEY_PREFIX}:winVersionMajor', '${winVersionMajor}');`);\r\n  }\r\n\r\n  browserWindow && new BrowserReleasesManager().updateReleasesListInLocalStorage(browserWindow);\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"decompress-targz\");","/* eslint-disable max-lines */\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-ignore\r\nimport { access, mkdir, readdir, readFile, rm, writeFile, rename } from 'fs/promises';\r\nimport os from 'os';\r\nimport path from 'path';\r\nimport util from 'util';\r\n\r\nimport decompress from 'decompress';\r\nimport decompressTarGz from 'decompress-targz';\r\nimport decompressUnzip from 'decompress-unzip';\r\n\r\nimport { downloadPersistentWithProgress } from './downloadWithRetry';\r\nimport { makeRequest } from './make-request';\r\nimport { BROWSER_FOLDER_NAME, PLATFORM, BROWSER_PATH } from './path-platforms';\r\nimport { sendCommonErrorToSentry, sendErrorToSentry } from './sentry';\r\nimport { getOS, getWinRelease } from './userOs';\r\nimport { removeFileOrFolder, copyFolder } from './utils';\r\nimport withRetry from './with-retry';\r\nimport {\r\n  MAC_VERSION_FILE_URL,\r\n  MAC_ARM_VERSION_FILE_URL,\r\n  DEB_VERSION_FILE_URL,\r\n  WIN_VERSION_FILE_URL,\r\n  BROWSER_ARCHIVE_NAME,\r\n  MAC_BROWSER_LINK,\r\n  MAC_ARM_BROWSER_LINK,\r\n  DEB_BROWSER_LINK,\r\n  WIN_BROWSER_LINK,\r\n  MAC_HASH_FILE,\r\n  MAC_ARM_HASH_FILE,\r\n  DEB_HASH_FILE,\r\n  WIN_HASH_FILE,\r\n  MAC_HASHFILE_LINK,\r\n  MAC_ARM_HASHFILE_LINK,\r\n  DEB_HASHFILE_LINK,\r\n  WIN_HASHFILE_LINK,\r\n  FAIL_SUM_MATCH_MESSAGE,\r\n  EXTRACTED_FOLDER,\r\n  VERSION_FILE,\r\n  DEB_BROWSER_LINK_S3, WIN_BROWSER_LINK_S3, MAC_BROWSER_LINK_S3, MAC_ARM_BROWSER_LINK_S3,\r\n} from '../constants/constants';\r\nimport { BrowserReleasesManager } from '../managers/browser-releases.manager';\r\nimport { getChromeMajorVersion } from '../managers/utils/browser-checker.utils';\r\n\r\nconst exec = util.promisify(require('child_process').exec);\r\n\r\nconst INIT_PROGRESS_STATE = {\r\n  step: 0,\r\n  inProgress: true,\r\n};\r\n\r\nlet EVENT: any = null;\r\nlet progressState: any = {\r\n  ...INIT_PROGRESS_STATE,\r\n};\r\n\r\nconst checkBrowserArchive = (orbitaVersion = ''): Promise<void> => {\r\n  console.log('IN checkBrowserArchive');\r\n  progressState = { ...progressState, step: 1 };\r\n\r\n  EVENT && EVENT.sender.send('download-browser', {\r\n    progressState,\r\n    result: false,\r\n    orbitaVersion,\r\n  });\r\n\r\n  const archivePath = path.join(BROWSER_PATH, BROWSER_ARCHIVE_NAME).replace('{{orbita-version}}', '');\r\n\r\n  return withRetry({\r\n    fn() {\r\n      return access(archivePath);\r\n    },\r\n    retryDelay: 100,\r\n  });\r\n};\r\n\r\nconst downloadNewBrowser = async (orbitaVersion = ''): Promise<void> => {\r\n  console.log('IN downloadNewBrowser', { orbitaVersion });\r\n  EVENT && EVENT.sender.send('download-browser', {\r\n    progressState,\r\n    result: false,\r\n    orbitaVersion,\r\n  });\r\n\r\n  const pathStr = path.join(BROWSER_PATH, BROWSER_ARCHIVE_NAME).replace('{{orbita-version}}', '');\r\n  await removeFileOrFolder(pathStr).catch(() => null);\r\n  const localBrowserReleases = new BrowserReleasesManager().localOrbitaReleasesList;\r\n  let resultOrbitaVersion = orbitaVersion;\r\n  let replacedValue = resultOrbitaVersion ? `-${resultOrbitaVersion}` : '';\r\n\r\n  let link = DEB_BROWSER_LINK;\r\n  if (PLATFORM === 'win32') {\r\n    const winVersion = getWinRelease();\r\n    if (winVersion < 10) {\r\n      if (resultOrbitaVersion && Number(resultOrbitaVersion) >= 110) {\r\n        EVENT && EVENT.sender.send('download-browser', {\r\n          progressState,\r\n          result: true,\r\n          unsupportedWinVersion: true,\r\n        });\r\n\r\n        throw new Error('notifications.error.unsupportedWinVersion');\r\n      }\r\n\r\n      if (!(resultOrbitaVersion || localBrowserReleases['109'])) {\r\n        resultOrbitaVersion = '109';\r\n        replacedValue = '-109';\r\n      }\r\n    }\r\n\r\n    link = WIN_BROWSER_LINK;\r\n  }\r\n\r\n  if (PLATFORM === 'darwin') {\r\n    link = MAC_BROWSER_LINK;\r\n    const userOs = await getOS();\r\n    if (userOs === 'macM1') {\r\n      link = MAC_ARM_BROWSER_LINK;\r\n    }\r\n  }\r\n\r\n  link = link.replace('{{orbita-version}}', replacedValue);\r\n\r\n  await withRetry({\r\n    fn() {\r\n      return mkdir(BROWSER_PATH, { recursive: true });\r\n    },\r\n  }).catch((error) => {\r\n    console.log('error in making browser dir');\r\n    throw error;\r\n  });\r\n\r\n  console.log('orbita download started');\r\n\r\n  await downloadPersistentWithProgress({\r\n    url: link,\r\n    destFile: pathStr,\r\n    progressEvent: EVENT,\r\n    progressEventName: 'download-browser',\r\n    progressState,\r\n    isContinueStream: true,\r\n    retryDelay: 5000,\r\n    retryLimit: 100,\r\n    orbitaVersion,\r\n  });\r\n\r\n  console.log('orbita download finished');\r\n\r\n  await checkBrowserArchive(orbitaVersion);\r\n\r\n  await installBrowser(resultOrbitaVersion);\r\n};\r\n\r\nconst downloadHashFile = async (orbitaVersion = ''): Promise<void> => {\r\n  console.log('IN downloadHashFile');\r\n  const platform = PLATFORM;\r\n  let hashLink = DEB_HASHFILE_LINK;\r\n\r\n  let resultPath = path.join(BROWSER_PATH, DEB_HASH_FILE);\r\n  if (platform === 'win32') {\r\n    return Promise.resolve();\r\n\r\n    // eslint-disable-next-line no-unreachable\r\n    hashLink = WIN_HASHFILE_LINK;\r\n    resultPath = path.join(BROWSER_PATH, WIN_HASH_FILE);\r\n  }\r\n\r\n  if (platform === 'darwin') {\r\n    hashLink = MAC_HASHFILE_LINK;\r\n    resultPath = path.join(BROWSER_PATH, MAC_HASH_FILE);\r\n\r\n    const userOs = await getOS();\r\n    if (userOs === 'macM1') {\r\n      hashLink = MAC_ARM_HASHFILE_LINK;\r\n      resultPath = path.join(BROWSER_PATH, MAC_ARM_HASH_FILE);\r\n    }\r\n  }\r\n\r\n  const replacedValue = orbitaVersion ? `-${orbitaVersion}` : '';\r\n  hashLink = hashLink.replace('{{orbita-version}}', replacedValue);\r\n  resultPath = resultPath.replace('{{orbita-version}}', replacedValue);\r\n\r\n  return withRetry({\r\n    fn() {\r\n      return makeRequest<string | Uint8Array>({ url: hashLink, timeout: 30 * 1000, method: 'GET', json: false })\r\n        .then(content => writeFile(resultPath, content, { mode: 0o666 }))\r\n        .then(() => access(resultPath))\r\n        .then(\r\n          () => Promise.resolve(),\r\n          () => Promise.reject(new Error('Hash file has not been downloaded')),\r\n        );\r\n    },\r\n    retryDelay: 1000,\r\n    limit: 10,\r\n  });\r\n};\r\n\r\nconst checkBrowserSum = (orbitaVersion = ''): Promise<void> => downloadHashFile(orbitaVersion)\r\n  .then(() => {\r\n    console.log('IN checkBrowserSum');\r\n    const platform = PLATFORM;\r\n    const extractedFolderPath = path.join(BROWSER_PATH, EXTRACTED_FOLDER);\r\n    const replacedValue = orbitaVersion ? `-${orbitaVersion}` : '';\r\n    if (PLATFORM === 'win32') {\r\n      return Promise.resolve();\r\n\r\n      // eslint-disable-next-line no-unreachable\r\n      const winHashFilePath = path.join(BROWSER_PATH, WIN_HASH_FILE).replace('{{orbita-version}}', replacedValue);\r\n\r\n      return withRetry({\r\n        fn() {\r\n          return exec(`type \"${winHashFilePath}\"`, { maxBuffer: 1024 * 9000 }).then(\r\n            (res: any) => {\r\n              const serverRes = (res.stdout || '')\r\n                .toString()\r\n                .trim()\r\n                .replace(/(\\r\\n|\\n|\\r)/gm, '');\r\n\r\n              console.log('serverRes:', serverRes);\r\n\r\n              return exec(\r\n                // eslint-disable-next-line max-len\r\n                `cd \"${BROWSER_PATH}\" && CertUtil -hashfile ${BROWSER_ARCHIVE_NAME.replace('{{orbita-version}}', '')} SHA256 | find /i /v \"SHA256\" | find /i /v \"certutil\"`,\r\n                { maxBuffer: 1024 * 9000 },\r\n              ).then((userCheckRes: any) => {\r\n                const userRes = (userCheckRes.stdout || '')\r\n                  .toString()\r\n                  .trim()\r\n                  .replace(/(\\r\\n|\\n|\\r)/gm, '');\r\n\r\n                console.log('userRes:', userRes);\r\n                const formattedUserRes = userRes.replace(/\\s/g, '');\r\n                if (userRes !== serverRes && formattedUserRes !== serverRes) {\r\n                  return Promise.reject(new Error('Error in sum matching'));\r\n                }\r\n\r\n                return Promise.resolve();\r\n              });\r\n            },\r\n          );\r\n        },\r\n      });\r\n    }\r\n\r\n    if (platform === 'darwin') {\r\n      const macOrbitaPath = path.join(BROWSER_PATH, EXTRACTED_FOLDER, 'Orbita-Browser.app');\r\n      const macHashFilePath = path.join(BROWSER_PATH, MAC_HASH_FILE).replace('{{orbita-version}}', replacedValue);\r\n\r\n      return withRetry({\r\n        fn() {\r\n          return exec(`mtree -p ${macOrbitaPath} < ${macHashFilePath} || echo ${FAIL_SUM_MATCH_MESSAGE}`)\r\n            .then((res= '') => {\r\n              const checkedRes = res.toString().trim();\r\n              if (checkedRes.includes(FAIL_SUM_MATCH_MESSAGE)) {\r\n                const release = os.release();\r\n                const isDebian = release.toLowerCase().includes('debian');\r\n\r\n                if (isDebian) {\r\n                  return Promise.reject(new Error('Debian os is not supported'));\r\n                }\r\n\r\n                return Promise.reject(new Error('Error in sum matching'));\r\n              }\r\n\r\n              return Promise.resolve();\r\n            });\r\n        },\r\n      });\r\n    }\r\n\r\n    const debHashFile = path.join(BROWSER_PATH, DEB_HASH_FILE).replace('{{orbita-version}}', replacedValue);\r\n\r\n    return withRetry({\r\n      fn() {\r\n        return readFile(debHashFile, 'utf-8').then((res = '') => {\r\n          let serverRes = res.trim();\r\n          [serverRes] = res.split(' ');\r\n          serverRes = serverRes.replace(/(\\r\\n|\\n|\\r)/gm, '');\r\n\r\n          return exec(\r\n            `cd ${extractedFolderPath} && find orbita-browser -type f -print0 | sort -z | \\\r\n             xargs -0 sha256sum > ${BROWSER_PATH}/calculatedFolderSha.txt`,\r\n          )\r\n            .then(() => exec(`cd ${BROWSER_PATH} && sha256sum calculatedFolderSha.txt`))\r\n            .then((userCheckRes: any) => {\r\n              let userRes = (userCheckRes.stdout || '').toString().trim();\r\n              [userRes] = userRes.split(' ');\r\n              if (userRes !== serverRes) {\r\n                return Promise.reject(new Error('Error in sum matching'));\r\n              }\r\n\r\n              return Promise.resolve();\r\n            });\r\n        });\r\n      },\r\n    });\r\n  });\r\n\r\nconst replaceBrowser = async (orbitaVersion = ''): Promise<unknown> => {\r\n  console.log('IN replaceBrowser');\r\n  progressState = { ...progressState, step: 2 };\r\n  EVENT && EVENT.sender.send('download-browser', {\r\n    progressState,\r\n    result: false,\r\n    orbitaVersion,\r\n  });\r\n\r\n  const latestBrowserVersion = await getLatestBrowserVersion(orbitaVersion).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendCommonErrorToSentry({\r\n      message, transactionName: 'request-last-orbita-version-error', level: 'fatal',\r\n      tags: [['scenario', 'download-orbita'], ['name', 'request-last-orbita-version-error']],\r\n    });\r\n\r\n    throw error;\r\n  });\r\n\r\n  const [majorV] = latestBrowserVersion.split('.');\r\n  const browserPath = path.join(BROWSER_PATH, BROWSER_FOLDER_NAME + '-' + majorV);\r\n  console.log('browserPath:', browserPath);\r\n  const folderPathToCopy = PLATFORM === 'darwin' ?\r\n    path.join(BROWSER_PATH, EXTRACTED_FOLDER) :\r\n    path.join(BROWSER_PATH, EXTRACTED_FOLDER, BROWSER_FOLDER_NAME);\r\n\r\n  await rm(browserPath, { recursive: true }).catch(() => null);\r\n  await rename(folderPathToCopy, browserPath).catch(console.log);\r\n\r\n  if (PLATFORM !== 'darwin') {\r\n    return;\r\n  }\r\n\r\n  return withRetry({\r\n    fn() {\r\n      return mkdir(path.join(browserPath, 'version'), { recursive: true })\r\n        .then(() => writeFile(\r\n          path.join(browserPath, 'version', VERSION_FILE),\r\n          latestBrowserVersion,\r\n          { mode: 0o666 },\r\n        ));\r\n    },\r\n    retryDelay: 100,\r\n  }).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'writing-orbita-version-file-error',\r\n      tags: [['scenario', 'download-orbita']],\r\n    });\r\n  });\r\n};\r\n\r\nconst installBrowser = async (orbitaVersion = ''): Promise<void> => {\r\n  await decompressTar(orbitaVersion);\r\n  await checkBrowserArchive();\r\n  await checkBrowserSum(orbitaVersion);\r\n  await replaceBrowser(orbitaVersion);\r\n\r\n  progressState = { ...progressState, step: 3 };\r\n  EVENT && EVENT.sender.send('download-browser', {\r\n    progressState,\r\n    result: false,\r\n  });\r\n};\r\n\r\nconst decompressTar = async (orbitaVersion: string): Promise<void> => {\r\n  console.log('IN extractBrowser');\r\n  console.log(`extractBrowser absolutePath: ${BROWSER_PATH}`);\r\n\r\n  console.log('creating folder for extraction');\r\n  const extractedFolderPath = path.join(BROWSER_PATH, EXTRACTED_FOLDER);\r\n  const browserPath = path.join(BROWSER_PATH, BROWSER_ARCHIVE_NAME).replace('{{orbita-version}}', '');\r\n\r\n  await withRetry({\r\n    fn() {\r\n      return mkdir(extractedFolderPath, { recursive: true });\r\n    },\r\n    retryDelay: 100,\r\n  });\r\n  console.log('starting decompress');\r\n\r\n  if (PLATFORM === 'darwin') {\r\n    await exec(`tar -xzf \"${browserPath}\" -C \"${extractedFolderPath}\"`).catch((error: Error) => {\r\n      if (error.message?.includes('Ignoring malformed pax extended attribute')) {\r\n        return;\r\n      }\r\n\r\n      throw error;\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  const decompressOpts = {\r\n    plugins: [decompressTarGz()],\r\n    filter: (file: any): boolean => !file.path.endsWith('/'),\r\n  };\r\n\r\n  if (PLATFORM === 'win32') {\r\n    decompressOpts.plugins[0] = decompressUnzip();\r\n  }\r\n\r\n  const decompressResult = await withRetry({\r\n    fn() {\r\n      return decompress(browserPath, extractedFolderPath, decompressOpts);\r\n    },\r\n  }).catch(() => 'decompress error');\r\n\r\n  if (decompressResult === 'decompress error') {\r\n    await rm(browserPath, { recursive: true });\r\n    const link = await getS3BrowserUrl(orbitaVersion);\r\n    console.log(link);\r\n    await downloadPersistentWithProgress({\r\n      url: link,\r\n      destFile: browserPath,\r\n      progressEvent: EVENT,\r\n      progressEventName: 'download-browser',\r\n      progressState,\r\n      isContinueStream: true,\r\n      retryDelay: 5000,\r\n      retryLimit: 100,\r\n      orbitaVersion,\r\n    });\r\n\r\n    await withRetry({\r\n      fn() {\r\n        return decompress(browserPath, extractedFolderPath, decompressOpts);\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nconst getLatestBrowserVersion = async (orbitaVersion = ''): Promise<string> => {\r\n  const platform = PLATFORM;\r\n  let url = DEB_VERSION_FILE_URL;\r\n  if (platform === 'win32') {\r\n    url = WIN_VERSION_FILE_URL;\r\n  } else if (platform === 'darwin') {\r\n    url = MAC_VERSION_FILE_URL;\r\n    const userOs = await getOS();\r\n    if (userOs === 'macM1') {\r\n      url = MAC_ARM_VERSION_FILE_URL;\r\n    }\r\n  }\r\n\r\n  const replacedValue = orbitaVersion ? `-${orbitaVersion}` : '';\r\n  url = url.replace('{{orbita-version}}', replacedValue);\r\n\r\n  return withRetry<string>({\r\n    fn() {\r\n      return makeRequest<string>({ url, timeout: 10 * 1000, json: false })\r\n        .then((response) => {\r\n          if (!response) {\r\n            return Promise.reject(new Error('Latest Version has not been provided'));\r\n          }\r\n\r\n          return response.replace(/(\\r\\n|\\n|\\r)/gm, '');\r\n        });\r\n    },\r\n    retryDelay: 300,\r\n  });\r\n};\r\n\r\nexport const checkBrowser = (): Promise<{needDownloadNewBrowser: boolean}|void> => mkdir(BROWSER_PATH, { recursive: true }).catch(console.log)\r\n  .then(() => getLatestBrowserVersion())\r\n  .then((response) => {\r\n    let latestBrowserVersion = response;\r\n    let majorChromeVersion = getChromeMajorVersion(latestBrowserVersion);\r\n    console.log('majorChromeVersion:', majorChromeVersion);\r\n\r\n    const localBrowserReleases = new BrowserReleasesManager().localOrbitaReleasesList;\r\n    console.log('localBrowserReleases:', localBrowserReleases);\r\n\r\n    if (PLATFORM === 'win32') {\r\n      const winVersion = getWinRelease();\r\n\r\n      if (winVersion < 10 && Number(majorChromeVersion) >= 110 && localBrowserReleases['109']) {\r\n        return { needDownloadNewBrowser: false };\r\n      }\r\n\r\n      if (winVersion < 10 && !localBrowserReleases['109']) {\r\n        latestBrowserVersion = '109.1.2.9';\r\n        majorChromeVersion = '109';\r\n      }\r\n    }\r\n\r\n    const currentOrbitaPath = localBrowserReleases[majorChromeVersion];\r\n    if (!localBrowserReleases[majorChromeVersion]) {\r\n      return { needDownloadNewBrowser: true };\r\n    }\r\n\r\n    const baseOrbitaPath = path.join(BROWSER_PATH, currentOrbitaPath);\r\n    let executableFilePath = path.join(baseOrbitaPath, 'chrome');\r\n    if (PLATFORM === 'darwin') {\r\n      executableFilePath = path.join(baseOrbitaPath, 'Orbita-Browser.app');\r\n    } else if (PLATFORM === 'win32') {\r\n      executableFilePath = path.join(baseOrbitaPath, 'chrome.exe');\r\n    }\r\n\r\n    console.log('executableFilePath:', executableFilePath);\r\n\r\n    return withRetry({\r\n      fn() {\r\n        return access(executableFilePath);\r\n      },\r\n      limit: 3,\r\n    })\r\n      .then(() => true, () => false)\r\n      .then((browserFolderExists) => {\r\n        if (!browserFolderExists) {\r\n          return removeFileOrFolder(path.join(baseOrbitaPath)).then(() => ({ needDownloadNewBrowser: true }));\r\n        }\r\n\r\n        return withRetry({\r\n          fn() {\r\n            return new BrowserReleasesManager().getLocalOrbitaVersionByPath(baseOrbitaPath);\r\n          },\r\n        })\r\n          .then((currentVersion) => {\r\n            console.log('latestBrowserVersion:', latestBrowserVersion);\r\n            console.log('currentVersion:', currentVersion);\r\n            console.log(\r\n              'latestBrowserVersion === currentVersion:',\r\n              latestBrowserVersion === currentVersion,\r\n            );\r\n            if (latestBrowserVersion === currentVersion) {\r\n              return { needDownloadNewBrowser: false };\r\n            }\r\n\r\n            return { needDownloadNewBrowser: true, browserExist: true };\r\n          });\r\n      });\r\n  })\r\n  .catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendCommonErrorToSentry({\r\n      message, transactionName: 'check-orbita',\r\n      tags: [['scenario', 'download-orbita'], ['name', 'check-orbita']],\r\n    });\r\n  });\r\n\r\nconst deleteOldFiles = (orbitaVersion = '', finalTry = false): Promise<void> =>\r\n  withRetry({\r\n    fn() {\r\n      return rm(path.join(BROWSER_PATH, EXTRACTED_FOLDER), { recursive: true, force: true })\r\n        .then(() => readdir(BROWSER_PATH))\r\n        .then((files: string[]) => {\r\n          const promises: Promise<unknown>[] = [];\r\n          files.forEach((filename: string) => {\r\n            if (filename.match(/.*\\.txt$/)) {\r\n              promises.push(rm(path.join(BROWSER_PATH, filename), { recursive: true, force: true }));\r\n            }\r\n          });\r\n\r\n          return Promise.all(promises);\r\n        })\r\n        .then(async () => {\r\n          if (PLATFORM === 'darwin') {\r\n            const replacedValue = orbitaVersion ? `-${orbitaVersion}` : '';\r\n            const userOs = await getOS();\r\n            if (userOs === 'macM1') {\r\n              return rm(path.join(BROWSER_PATH, MAC_ARM_HASH_FILE).replace('{{orbita-version}}', replacedValue), { recursive: true, force: true });\r\n            }\r\n\r\n            return rm(path.join(BROWSER_PATH, MAC_HASH_FILE).replace('{{orbita-version}}', replacedValue), { recursive: true, force: true });\r\n          }\r\n        })\r\n        .catch((error: unknown) => {\r\n          const message = error instanceof Error ? error.message : error;\r\n\r\n          if (typeof message === 'string' && message.includes('ENOENT')) {\r\n            return;\r\n          }\r\n\r\n          if (typeof message === 'string' && message.includes('ENOTEMPTY')) {\r\n            throw error;\r\n          }\r\n\r\n          sendCommonErrorToSentry({\r\n            message, transactionName: 'delete-orbita-installation-files', level: 'warning',\r\n            tags: [['scenario', 'download-orbita'], ['name', 'delete-orbita-installation-files']],\r\n          });\r\n\r\n          return Promise.resolve();\r\n        });\r\n    },\r\n    retryDelay: 300,\r\n  });\r\n\r\nexport const downloadBrowser = (event: any, args = { orbitaVersion: '' }): Promise<unknown> => {\r\n  let { orbitaVersion } = args;\r\n  EVENT = event;\r\n\r\n  if (orbitaVersion === '100') {\r\n    orbitaVersion = '10';\r\n  }\r\n\r\n  if (orbitaVersion === '103') {\r\n    orbitaVersion = '13';\r\n  }\r\n\r\n  return downloadNewBrowser(orbitaVersion)\r\n    .then(() => new BrowserReleasesManager().checkLocalOrbitaReleases())\r\n    .then(() => deleteOldFiles(orbitaVersion))\r\n    .catch((err: unknown) => {\r\n      const message = err instanceof Error ? err.message : err;\r\n\r\n      if (typeof message === 'string' && message.includes('ENOSPC')) {\r\n        EVENT && EVENT.sender.send('download-browser', {\r\n          progressState,\r\n          result: true,\r\n          isDiscSpaceError: true,\r\n        });\r\n      }\r\n\r\n      progressState = { ...progressState, errorMessage: message };\r\n\r\n      const errorMessage = typeof message === 'string' ? message : 'deleting old files error';\r\n\r\n      return deleteOldFiles(orbitaVersion).finally(() => Promise.reject(new Error(errorMessage)));\r\n    })\r\n    .finally(() => {\r\n      const objToReturn = {\r\n        progressState: {\r\n          ...progressState,\r\n          inProgress: false,\r\n        },\r\n        result: !progressState.errorMessage,\r\n        errorMessage: progressState.errorMessage || '',\r\n      };\r\n\r\n      progressState = { ...INIT_PROGRESS_STATE };\r\n      EVENT && EVENT.sender.send('download-browser', objToReturn);\r\n    });\r\n};\r\n\r\nconst getS3BrowserUrl = async (resultOrbitaVersion: string): Promise<string> => {\r\n  let link = DEB_BROWSER_LINK_S3;\r\n  if (PLATFORM === 'win32') {\r\n    link = WIN_BROWSER_LINK_S3;\r\n  }\r\n\r\n  if (PLATFORM === 'darwin') {\r\n    link = MAC_BROWSER_LINK_S3;\r\n    const userOs = await getOS();\r\n    if (userOs === 'macM1') {\r\n      link = MAC_ARM_BROWSER_LINK_S3;\r\n    }\r\n  }\r\n\r\n  return link.replace('{{orbita-version}}', resultOrbitaVersion ? `-${resultOrbitaVersion}` : '');\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs-extra\");","import { access, mkdir, readFile, writeFile } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport fs from 'fs-extra';\r\nimport got from 'got';\r\n\r\n// import { checkDownloadedExtFolder } from './electron/managers/utils/extensions.utils';\r\nimport { downloadWithRetry } from './downloadWithRetry';\r\nimport { extractArchive } from './extract-archive';\r\nimport { EXTENSIONS_PATH } from './path-platforms';\r\nimport withRetry from './with-retry';\r\nimport { makeRequest } from '../../electron/utils/make-request';\r\nimport { sendCommonErrorToSentry } from '../../electron/utils/sentry';\r\nimport { IExtensionObject } from '../interfaces/check-gologin-extensions.interfaces';\r\nimport { checkDownloadedExtFolder } from '../managers/utils/extract.downloaded.extensions';\r\n\r\nconst util = require('util');\r\nconst exec = util.promisify(require('child_process').exec);\r\n\r\nexport const EXTENSIONS_TO_DOWNLOAD = [\r\n  {\r\n    name: 'Cookies Ext',\r\n    extName: 'cookies-ext',\r\n    extZipName: 'cookies-ext.zip',\r\n    hashFile: 'hashfile.txt',\r\n    hashFileUrl: 'https://extensions.gologin.com/hashfile.txt',\r\n    versionFile: 'latest-version.txt',\r\n    versionFileUrl: 'https://extensions.gologin.com/latest-version.txt',\r\n    extArchiveUrl: 'https://extensions.gologin.com/gologin-browser-ext.zip',\r\n    tempFolder: 'downloaded-cookies-ext',\r\n    baseFolderName: 'cookies-ext-base',\r\n  },\r\n  {\r\n    name: 'Passwords Ext',\r\n    extName: 'passwords-ext',\r\n    extZipName: 'passwords-ext.zip',\r\n    hashFile: 'passwords-hashfile.txt',\r\n    hashFileUrl: 'https://extensions.gologin.com/passwords-hashfile.txt',\r\n    versionFile: 'passwords-latest-version.txt',\r\n    versionFileUrl: 'https://extensions.gologin.com/passwords-latest-version.txt',\r\n    extArchiveUrl: 'https://extensions.gologin.com/gologin-browser-passwords-ext.zip',\r\n    tempFolder: 'downloaded-passwords-ext',\r\n    baseFolderName: 'passwords-ext-base',\r\n  },\r\n];\r\n\r\nconst getLatestExtVersion = (extFileUrl: string): Promise<string> => makeRequest({ url: extFileUrl, json: false });\r\n\r\nconst checkExtArchive = (extObj: IExtensionObject): Promise<void> => withRetry<void>({\r\n  fn() {\r\n    return access(path.join(EXTENSIONS_PATH, extObj.tempFolder, extObj.extZipName))\r\n      .catch((error: unknown) => {\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendCommonErrorToSentry({\r\n          message, transactionName: 'check-gologin-extensions',\r\n          tags: [['scenario', 'download-extensions'], ['name', 'check-gologin-extensions']],\r\n        });\r\n\r\n        return Promise.reject(new Error(`${extObj.name} Archive has not been found. ${message}`));\r\n      });\r\n  },\r\n});\r\n\r\nconst checkArchiveSum = async (extObj: IExtensionObject): Promise<void> => {\r\n  console.log(`IN checkArchiveSum ${extObj.name}`);\r\n  const { platform } = process;\r\n  const tempFolderPath = path.join(EXTENSIONS_PATH, extObj.tempFolder);\r\n  const hashFilePath = path.join(tempFolderPath, extObj.hashFile);\r\n  let commandToGenerateHash = `cd ${tempFolderPath} && sha256sum ${extObj.extZipName}`;\r\n\r\n  if (platform === 'win32') {\r\n    return Promise.resolve();\r\n    // commandToGenerateHash = `cd \"${tempFolderPath}\" && \\\r\n    // CertUtil -hashfile ${extObj.extZipName} SHA256 | find /i /v \"SHA256\" | find /i /v \"certutil\"`;\r\n    // commandToGetServerHash = `type \"${hashFilePath}\"`;\r\n  } else if (platform === 'darwin') {\r\n    commandToGenerateHash = `cd ${tempFolderPath} && shasum -a 256 ${extObj.extZipName}`;\r\n  }\r\n\r\n  return withRetry({\r\n    fn() {\r\n      return new Promise((resolve, reject) => {\r\n        const req = got.stream(extObj.hashFileUrl, {\r\n          timeout: {\r\n            request: 30 * 1000,\r\n          },\r\n        });\r\n\r\n        req.on('response', () => {\r\n          const file = fs.createWriteStream(hashFilePath, { mode: 0o666 });\r\n          req.pipe(file);\r\n          file.on('close', () => {\r\n            resolve(null);\r\n          });\r\n\r\n          file.on('error', (error) => {\r\n            reject(error);\r\n          });\r\n        });\r\n\r\n        req.on('error', (error) => {\r\n          reject(error);\r\n        });\r\n      });\r\n    },\r\n  })\r\n    .then(() => withRetry({\r\n      fn() {\r\n        return access(hashFilePath)\r\n          .catch(() => Promise.reject(new Error('Ext Hash file has not been downloaded')));\r\n      },\r\n    }))\r\n    .then(() =>\r\n      withRetry({\r\n        fn() {\r\n          return readFile(hashFilePath, 'utf8').then((severRes: any) => {\r\n            const checkServerRes = severRes;\r\n\r\n            return exec(commandToGenerateHash).then((userRes: any)  => {\r\n              const checkUserRes = (userRes.stdout || '').toString().trim();\r\n              const [serverHash] = checkServerRes.split(' ');\r\n\r\n              const splittedUserHash = checkUserRes.split(' ');\r\n              let [userHash] = splittedUserHash;\r\n              if (splittedUserHash.length > 2) {\r\n                splittedUserHash.pop();\r\n                userHash = splittedUserHash.join('');\r\n              }\r\n\r\n              console.log(`serverHash ${extObj.name}:`, serverHash);\r\n              console.log(`userHash ${extObj.name}:`, userHash);\r\n              if (userHash !== serverHash) {\r\n                return Promise.reject(new Error(`Error in ${extObj.name} sum matching`));\r\n              }\r\n\r\n              return Promise.resolve();\r\n            });\r\n          });\r\n        },\r\n      }),\r\n    );\r\n};\r\n\r\nconst moveNewExt = (extObj: IExtensionObject): Promise<void> => {\r\n  console.log(`IN moveNewExt ${extObj.name}`);\r\n\r\n  return withRetry<void>({\r\n    fn() {\r\n      return fs.remove(path.join(EXTENSIONS_PATH, extObj.extZipName))\r\n        .then(() => fs.remove(path.join(EXTENSIONS_PATH, extObj.versionFile)))\r\n        .then(() => extractArchive(\r\n          path.join(EXTENSIONS_PATH, extObj.tempFolder, extObj.extZipName), path.join(EXTENSIONS_PATH, extObj.baseFolderName),\r\n        ))\r\n        .then(() => fs.copy(path.join(EXTENSIONS_PATH, extObj.tempFolder, extObj.versionFile), path.join(EXTENSIONS_PATH, extObj.versionFile)));\r\n    },\r\n  })\r\n    .then(() => fs.remove(path.join(EXTENSIONS_PATH, extObj.tempFolder)))\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      sendCommonErrorToSentry({\r\n        message, transactionName: 'extract-gologin-extension',\r\n        tags: [['scenario', 'download-extensions'], ['name', 'extract-gologin-extension']],\r\n      });\r\n\r\n      return Promise.resolve();\r\n    });\r\n};\r\n\r\nconst downloadNewExt = (extObj: IExtensionObject): Promise<void> => {\r\n  console.log(`IN downloadNewExt ${extObj.name}`);\r\n\r\n  return downloadWithRetry({\r\n    url: extObj.extArchiveUrl,\r\n    destFile: path.join(EXTENSIONS_PATH, extObj.tempFolder, extObj.extZipName),\r\n  })\r\n    .then(() => console.log('download completed'))\r\n    .then(() => checkExtArchive(extObj))\r\n    .then(() => checkArchiveSum(extObj))\r\n    .then(() => moveNewExt(extObj))\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      sendCommonErrorToSentry({\r\n        message, transactionName: 'download-gologin-extensions',\r\n        tags: [['name', 'download-gologin-extensions']],\r\n      });\r\n    });\r\n};\r\n\r\nexport const checkGologinExtensions = async (): Promise<void> => {\r\n  const promises = EXTENSIONS_TO_DOWNLOAD.map(async (extObj) => {\r\n    const currentVersion = await readFile(path.join(EXTENSIONS_PATH, extObj.versionFile))\r\n      .catch(() => '');\r\n\r\n    const currentVersionString = currentVersion.toString();\r\n\r\n    const cloudVersion = await getLatestExtVersion(extObj.versionFileUrl);\r\n    const cloudVersionString = cloudVersion.toString().trim();\r\n    const isExtFolderExists = await checkDownloadedExtFolder(extObj);\r\n\r\n    if (!cloudVersionString || (cloudVersionString === currentVersionString && isExtFolderExists)) {\r\n      return;\r\n    }\r\n\r\n    await withRetry({\r\n      fn() {\r\n        return mkdir(path.join(EXTENSIONS_PATH, extObj.tempFolder), { recursive: true })\r\n          .then(() => writeFile(path.join(EXTENSIONS_PATH, extObj.tempFolder, extObj.versionFile), cloudVersionString, { mode: 0o666 }))\r\n          .then(() => mkdir(path.join(EXTENSIONS_PATH, extObj.extName), { recursive: true }));\r\n      },\r\n    }).catch((error) => Promise.reject(error));\r\n\r\n    await downloadNewExt(extObj);\r\n  });\r\n\r\n  const promisesWithCatch = promises.map(promise => promise.catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendCommonErrorToSentry({\r\n      message, transactionName: 'check-gologin-extensions',\r\n      tags: [['scenario', 'download-extensions'], ['name', 'check-gologin-extensions']],\r\n    });\r\n  }));\r\n\r\n  await Promise.allSettled(promisesWithCatch);\r\n};\r\n\r\nexport const deleteProfileExtFolder = (profileId: string): Promise<void|void[]> => {\r\n  const promises: Promise<void>[] = [];\r\n  for (const extObj of EXTENSIONS_TO_DOWNLOAD) {\r\n    promises.push(withRetry<void>({\r\n      fn() {\r\n        return fs.remove(path.join(EXTENSIONS_PATH, extObj.extName, profileId));\r\n      },\r\n    }));\r\n  }\r\n\r\n  return Promise.all(promises).catch(() => Promise.resolve());\r\n};\r\n","import { readFile, writeFile } from 'fs/promises';\r\n\r\nimport { IAppConfigRecord } from '../interfaces/app-config.interfaces';\r\nimport { IExtendedError } from '../interfaces/browser.user-data.manager.interfaces';\r\nimport { sendErrorToSentry } from './sentry';\r\n\r\nexport const saveConfigFile = async (configFilePath: string, config: IAppConfigRecord, sentryPrefix = 'app'): Promise<void> => {\r\n  try {\r\n    const data = JSON.stringify(config, null, '\\t');\r\n    await writeFile(configFilePath, data);\r\n  } catch (error: unknown) {\r\n    console.error('Error saving config file', error);\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: `save-${sentryPrefix}-config-error`, level: 'warning',\r\n      tags: [['scenario', `save-${sentryPrefix}-config`]],\r\n    });\r\n  }\r\n};\r\n\r\nexport const readConfigFile = async (configFilePath: string, sentryPrefix = 'app'): Promise<IAppConfigRecord|void> => {\r\n  try {\r\n    const data = await readFile(configFilePath, 'utf-8');\r\n    const json = JSON.parse(data);\r\n\r\n    return json;\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    const { code = '' } = error as IExtendedError;\r\n\r\n    if (code === 'ENOENT') {\r\n      return {};\r\n    }\r\n\r\n    sendErrorToSentry({\r\n      message, transactionName: `load-${sentryPrefix}-config-error`, level: 'warning',\r\n      tags: [['scenario', `load-${sentryPrefix}-config`]],\r\n    });\r\n  }\r\n};\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable max-len */\r\nimport { writeFile, rm, copyFile } from 'fs/promises';\r\n\r\nimport { open } from 'sqlite';\r\nimport sqlite3 from 'sqlite3';\r\n\r\nimport { getDB } from './methods';\r\nimport { IUserCookie } from '../../interfaces/browser.user-data.manager.interfaces';\r\nimport {\r\n  IDiffCookiesResult,\r\n  IInsertCookiesToDbProps,\r\n  ISameSite,\r\n  ISaveCookiesToFile,\r\n} from '../../interfaces/cookies-decryptor.interfaces';\r\nimport { CommonDataManager } from '../../managers/common-data-manager';\r\nimport { CookiesManager } from '../../managers/cookies-manager';\r\nimport { sendErrorToSentry } from '../sentry';\r\nimport withRetry from '../with-retry';\r\n\r\nconst MAX_SQLITE_VARIABLES = 76;\r\n\r\n/*\r\n  Виды samesite в куках\r\n  Исходник chromium:\r\n\r\n  enum class CookieSameSite {\r\n    UNSPECIFIED = -1,\r\n    NO_RESTRICTION = 0,\r\n    LAX_MODE = 1,\r\n    STRICT_MODE = 2,\r\n    // Reserved 3 (was EXTENDED_MODE), next number is 4.\r\n  };\r\n*/\r\nexport const SAME_SITE: ISameSite = {\r\n  '-1': 'unspecified',\r\n  '0': 'no_restriction',\r\n  '1': 'lax',\r\n  '2': 'strict',\r\n};\r\n\r\nconst chunk = <T>(arr: T[], chunkSize = 1): T[][] => {\r\n  const tmp = [...arr];\r\n  const cache: T[][] = [];\r\n\r\n  if (chunkSize <= 0) {\r\n    return cache;\r\n  }\r\n\r\n  while (tmp.length) {\r\n    cache.push(tmp.splice(0, chunkSize));\r\n  }\r\n\r\n  return cache;\r\n};\r\n\r\nexport const buildCookieURL = (domain: string, secure: boolean, path: string): string => {\r\n  let domainWithoutDot = domain;\r\n  if (domain.startsWith('.')) {\r\n    domainWithoutDot = domain.substring(1);\r\n  }\r\n\r\n  return 'http' + (secure ? 's' : '') + '://' + domainWithoutDot + path;\r\n};\r\n\r\nconst unixToLDAP = (unixtime: number): number => {\r\n  if (unixtime === 0) {\r\n    return unixtime;\r\n  }\r\n\r\n  const win32filetime = new Date(Date.UTC(1601, 0, 1)).getTime() / 1000;\r\n  const sum = unixtime - win32filetime;\r\n\r\n  return sum * 1000000;\r\n};\r\n\r\nexport const ldapToUnix = (ldap: number): number => {\r\n  const ldapLength = ldap.toString().length;\r\n  if (ldap === 0 || ldapLength > 18) {\r\n    return ldap;\r\n  }\r\n\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  let _ldap = ldap;\r\n  if (ldapLength < 18) {\r\n    _ldap = Number(_ldap + '0'.repeat(18 - ldapLength));\r\n  }\r\n\r\n  const win32filetime = new Date(Date.UTC(1601, 0, 1)).getTime();\r\n\r\n  return (_ldap / 10000 + win32filetime) / 1000;\r\n};\r\n\r\nconst equalCookieWith = (targetCookie: IUserCookie) => ({ domain, name, path }: IUserCookie): boolean => {\r\n  const targetCookieDomainWithoutDot = targetCookie.domain && targetCookie.domain.startsWith('.')\r\n    ? targetCookie.domain.substring(1)\r\n    : targetCookie.domain;\r\n\r\n  const cookieDomainWithoutDot = domain.startsWith('.') ? domain.substring(1) : domain;\r\n\r\n  return (\r\n    targetCookieDomainWithoutDot === cookieDomainWithoutDot &&\r\n    targetCookie.name === name &&\r\n    targetCookie.path === path\r\n  );\r\n};\r\n\r\nconst getDiffCookies = (fileCookies: IUserCookie[], newCookies: IUserCookie[]): IDiffCookiesResult => {\r\n  const uniqueDbCookies = newCookies.filter(\r\n    (dbCookie) => fileCookies.findIndex(equalCookieWith(dbCookie)) === -1);\r\n\r\n  const cookiesDifferenceValues = newCookies.filter((dbCookie) => {\r\n    const sameCookie = fileCookies.find(equalCookieWith(dbCookie));\r\n\r\n    return sameCookie && Buffer.compare(Buffer.from(sameCookie.value), (Buffer.from(dbCookie.value))) !== 0;\r\n  });\r\n\r\n  return {\r\n    unique: uniqueDbCookies,\r\n    withNewValue: cookiesDifferenceValues,\r\n  };\r\n};\r\n\r\nconst getChunckedInsertValues = (cookiesArr: IUserCookie[]): (string | (string | number | Buffer | undefined)[])[][] => {\r\n  const todayUnix = Math.floor(new Date().getTime() / 1000.0);\r\n  const chunckedCookiesArr: IUserCookie[][] = chunk<IUserCookie>(cookiesArr, MAX_SQLITE_VARIABLES);\r\n\r\n  return chunckedCookiesArr.map((cookies) => {\r\n    const queryPlaceholders = cookies.map(() => '(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)').join(', ');\r\n    const query = `insert or replace into cookies (creation_utc, host_key, top_frame_site_key, name, value, encrypted_value, path, expires_utc, is_secure, is_httponly, last_access_utc, has_expires, is_persistent, priority, samesite, source_scheme, source_port, is_same_party, last_update_utc) values ${queryPlaceholders}`;\r\n    const queryParams = cookies.flatMap((cookie) => {\r\n      const creationDate = cookie.creationDate || unixToLDAP(todayUnix);\r\n      let expirationDate = cookie.session ? 0 : unixToLDAP(cookie.expirationDate);\r\n      const encryptedValue = Buffer.from(cookie.value);\r\n\r\n      const samesite = Object.keys(SAME_SITE).find((key) => SAME_SITE[key] === (cookie.sameSite || '-1'));\r\n\r\n      const isSecure =\r\n        cookie.name.startsWith('__Host-') || cookie.name.startsWith('__Secure-') ? 1 : Number(cookie.secure ?? 1);\r\n\r\n      const sourceScheme = isSecure === 1 ? 2 : 1;\r\n      const sourcePort = isSecure === 1 ? 443 : 80;\r\n      // eslint-disable-next-line no-undefined\r\n      let isPersistent = cookie.session === undefined\r\n        ? Number(expirationDate !== 0)\r\n        : Number(!cookie.session);\r\n\r\n      if (/^(\\.)?mail.google.com$/.test(cookie.domain) && cookie.name === 'COMPASS') {\r\n        expirationDate = 0;\r\n        isPersistent = 0;\r\n      }\r\n\r\n      return [\r\n        creationDate,\r\n        cookie.domain,\r\n        '', // top_frame_site_key\r\n        cookie.name,\r\n        '', // value\r\n        encryptedValue,\r\n        cookie.path,\r\n        expirationDate,\r\n        isSecure,\r\n        Number(cookie.httpOnly ?? 1),\r\n        0, // last_access_utc\r\n        expirationDate === 0 ? 0 : 1, // has_expires\r\n        isPersistent,\r\n        1, // default priority value (https://github.com/chromium/chromium/blob/main/net/cookies/cookie_constants.h)\r\n        samesite,\r\n        sourceScheme,\r\n        sourcePort,\r\n        0, // is_same_party\r\n        0, // last_update_utc\r\n      ];\r\n    });\r\n\r\n    return [query, queryParams];\r\n  });\r\n};\r\n\r\nexport const loadCookiesFromFile = async (filePath: string, convertValueToUtf8 = false): Promise<{cookies: IUserCookie[]}> => {\r\n  const db = await getDB(filePath);\r\n  const cookies: IUserCookie[] = [];\r\n\r\n  try {\r\n    const cookiesRows = await db.all('select * from cookies');\r\n    for (const row of cookiesRows) {\r\n      const {\r\n        host_key,\r\n        name,\r\n        encrypted_value,\r\n        path,\r\n        is_secure,\r\n        is_httponly,\r\n        expires_utc,\r\n        is_persistent,\r\n        samesite,\r\n        creation_utc,\r\n      } = row;\r\n\r\n      cookies.push({\r\n        url: buildCookieURL(host_key, is_secure, path),\r\n        domain: host_key,\r\n        name,\r\n        value: convertValueToUtf8 ? encrypted_value.toString('utf8') : encrypted_value,\r\n        path,\r\n        sameSite: SAME_SITE[samesite],\r\n        secure: Boolean(is_secure),\r\n        httpOnly: Boolean(is_httponly),\r\n        hostOnly: !host_key.startsWith('.'),\r\n        session: !is_persistent,\r\n        expirationDate: ldapToUnix(expires_utc),\r\n        creationDate: ldapToUnix(creation_utc),\r\n      });\r\n    }\r\n  } catch (error) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'cookies-decrypt', level: 'error',\r\n      tags: [['scenario', 'start-profile']],\r\n    });\r\n  } finally {\r\n    await withRetry({\r\n      fn() {\r\n        return db.close();\r\n      },\r\n      retryDelay: 300,\r\n    }).catch((error) => {\r\n      sendErrorToSentry({\r\n        message: error.message, transactionName: 'close-cookie-db-error', level: 'error',\r\n        tags: [['scenario', 'start-profile']],\r\n      });\r\n    });\r\n  }\r\n\r\n  return {\r\n    cookies,\r\n  };\r\n};\r\n\r\nexport const saveCookiesToFile = async (props: ISaveCookiesToFile): Promise<void> => {\r\n  const { cookiesFromFile = [], serverCookies, profileId, cookiesFilePath } = props;\r\n  // получаем куки на замену и уникальные, которых нет в файле\r\n  const diffCookies = getDiffCookies(cookiesFromFile, serverCookies);\r\n  const cookiesArr = [...diffCookies.unique, ...diffCookies.withNewValue];\r\n  const chunkInsertValues = getChunckedInsertValues(cookiesArr);\r\n  const db = await getDB(cookiesFilePath, false);\r\n\r\n  let insertCookiesResult = await insertCookiesToDbAndCopyFile({\r\n    chunkInsertValues, db, cookiesFilePath, profileId,\r\n  }).catch((error) => error.message) || '';\r\n\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n\r\n  if (insertCookiesResult.includes('no such table: cookies')) {\r\n    await db.run(CommonDataManagerInst.createCookiesTableQuery);\r\n    await insertCookiesToDbAndCopyFile({\r\n      chunkInsertValues, db, cookiesFilePath, profileId,\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      insertCookiesResult = error.message;\r\n      sendErrorToSentry({\r\n        message: error.message, transactionName: 'save-cookies-to-file', level: 'error',\r\n        tags: [['scenario', 'start-profile']],\r\n      });\r\n    });\r\n  }\r\n\r\n  if (insertCookiesResult.includes('table cookies has no column named')) {\r\n    console.log('insertCookiesResult', insertCookiesResult);\r\n    const [missingColumn] = insertCookiesResult.split(' ').reverse();\r\n    const createColumnQuery = `ALTER TABLE cookies ADD ${missingColumn} INTEGER`;\r\n\r\n    await db.run(createColumnQuery);\r\n\r\n    await insertCookiesToDbAndCopyFile({\r\n      chunkInsertValues, db, cookiesFilePath, profileId,\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      sendErrorToSentry({\r\n        message: error.message, transactionName: 'save-cookies-to-file-after-add-column-error', level: 'error',\r\n        tags: [['scenario', 'start-profile']],\r\n      });\r\n    });\r\n  }\r\n\r\n  await db.close().catch((error) => {\r\n    sendErrorToSentry({\r\n      message: error.message, transactionName: 'close-cookie-db-error', level: 'error',\r\n      tags: [['scenario', 'start-profile']],\r\n    });\r\n  });\r\n};\r\n\r\nconst insertCookiesToDbAndCopyFile = async (props: IInsertCookiesToDbProps): Promise<void> => {\r\n  const { chunkInsertValues, db, cookiesFilePath, profileId } = props;\r\n  for (const [query, queryParams] of chunkInsertValues) {\r\n    const insertStmt = await db.prepare(query);\r\n    await insertStmt.run(queryParams);\r\n    await insertStmt.finalize();\r\n  }\r\n\r\n  await CookiesManager.copyCookiesFile(cookiesFilePath, profileId);\r\n};\r\n\r\nexport const clearCookiesFile = async (filePath: string): Promise<void> => {\r\n  const db = await getDB(filePath, false);\r\n  try {\r\n    const query = 'delete from cookies';\r\n    const insertStmt = await db.prepare(query);\r\n    await insertStmt.run();\r\n    await insertStmt.finalize();\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    console.log(message);\r\n  } finally {\r\n    await db.close();\r\n  }\r\n};\r\n\r\nexport const removeCookiesFile = (filePath: string): Promise<void> =>\r\n  withRetry({\r\n    fn() {\r\n      return rm(filePath, { recursive: true, force: true });\r\n    },\r\n    retryDelay: 300,\r\n  });\r\n\r\nexport const createDBFile = async (pathToCookiesFile: string, secondPathToCookiesFile = ''): Promise<void> => {\r\n  await writeFile(pathToCookiesFile, '', { mode: 0o666 }).catch(console.log);\r\n\r\n  await new Promise((resolve) => {\r\n    new sqlite3.Database(pathToCookiesFile, (error) => {\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      resolve(null);\r\n    });\r\n  });\r\n\r\n  const connectionOpts = {\r\n    filename: pathToCookiesFile,\r\n    driver: sqlite3.Database,\r\n  };\r\n\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n\r\n  const db = await open(connectionOpts);\r\n  await db.run(CommonDataManagerInst.createCookiesTableQuery);\r\n  await db.close();\r\n\r\n  secondPathToCookiesFile && await copyFile(pathToCookiesFile, secondPathToCookiesFile).catch(console.log);\r\n};\r\n","import { access, mkdir } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport { Database, open } from 'sqlite';\r\nimport sqlite3 from 'sqlite3';\r\n\r\nimport { createDBFile } from './cookies-decryptor';\r\nimport { ICheckLocalServerResult, ICryptoDbOptions } from '../../interfaces/crypto.interfaces';\r\nimport { makeRequest } from '../make-request';\r\nimport withRetry from '../with-retry';\r\n\r\nexport const checkLocalServer = async (profileId: string): Promise<boolean> => {\r\n  const serverRes = await makeRequest<ICheckLocalServerResult>({\r\n    url: `http://localhost:${global.appPort}/cookies/${profileId}?isAvailable=true`,\r\n    method: 'GET',\r\n  }).catch(() => ({} as ICheckLocalServerResult));\r\n\r\n  return serverRes.status || false;\r\n};\r\n\r\nexport const getDB = async (filePath: string, readOnly = true): Promise<Database> => {\r\n  const connectionOpts: ICryptoDbOptions = {\r\n    filename: filePath,\r\n    driver: sqlite3.Database,\r\n  };\r\n\r\n  await access(filePath).then(() => console.log(`${filePath} cookies file exists`)).catch(() => {\r\n    console.log('creating new cookies file');\r\n\r\n    return mkdir(path.dirname(filePath), { recursive: true })\r\n      .then(() => createDBFile(filePath))\r\n      .catch((error) => {\r\n        if (error.message.includes('table cookies already exists')) {\r\n          return;\r\n        }\r\n\r\n        throw error;\r\n      });\r\n  });\r\n\r\n  if (readOnly) {\r\n    connectionOpts.mode = sqlite3.OPEN_READONLY;\r\n  }\r\n\r\n  return withRetry<Database>({\r\n    fn() {\r\n      return open(connectionOpts);\r\n    },\r\n    retryDelay: 500,\r\n  });\r\n};\r\n","export class ElectronError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'ElectronError';\r\n  }\r\n}\r\n","import { createWriteStream, promises } from 'fs';\r\nimport path from 'path';\r\n\r\nimport got from 'got';\r\n\r\nimport withRetry from './with-retry';\r\nimport {\r\n  IDownloadPersistentWithProgress,\r\n  IDownloadWithRetry,\r\n  IDownloadWithRetryBuffer,\r\n} from '../interfaces/download-with-retry.interfaces';\r\nimport { CommonDataManager } from '../managers/common-data-manager';\r\n\r\nconst { rm, readdir } = promises;\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport const downloadWithRetry = (props: IDownloadWithRetry): Promise<void> => withRetry({\r\n  fn() {\r\n    return new Promise((resolve, reject) => {\r\n      const options: { timeout: { request: number }; headers?: Record<string, string> } = {\r\n        timeout: {\r\n          request: 350 * 1000,\r\n        },\r\n      };\r\n\r\n      if (props.profileId) {\r\n        options.headers = {\r\n          Authorization: `Bearer ${CommonDataManagerInst.accessToken}`,\r\n          'x-two-factor-token': CommonDataManagerInst.twoFaKey || '',\r\n          browserId: props.profileId,\r\n        };\r\n      }\r\n\r\n      const req = got.stream(props.url, options);\r\n\r\n      const localStream = createWriteStream(props.destFile, { mode: 0o666 });\r\n\r\n      localStream.on('error', (error) => {\r\n        localStream.destroy();\r\n\r\n        reject(error);\r\n      });\r\n\r\n      req.on('response', (response) => {\r\n        if (response.statusCode.toString().startsWith('2')) {\r\n          req.pipe(localStream);\r\n          localStream.on('close', () => {\r\n            resolve('success');\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        localStream.destroy();\r\n        reject(response);\r\n      });\r\n\r\n      req.on('error', (error) => {\r\n        localStream.destroy();\r\n\r\n        reject(error);\r\n      });\r\n    });\r\n  },\r\n  retryDelay: 300,\r\n});\r\n\r\nexport const downloadWithRetryBuffer = (props: IDownloadWithRetryBuffer): Promise<Buffer> => withRetry<Buffer>({\r\n  fn() {\r\n    return new Promise((resolve, reject) => {\r\n      const chunks: any[] = [];\r\n      const req = got.stream(props.url, {\r\n        timeout: {\r\n          request: 30 * 1000,\r\n        },\r\n      });\r\n\r\n      req.on('response', (response) => {\r\n        if (response.statusCode.toString().startsWith('2')) {\r\n          req.on('data', (data) => chunks.push(data));\r\n          req.on('end', () => resolve(Buffer.concat(chunks)));\r\n\r\n          return;\r\n        }\r\n\r\n        reject(response);\r\n      });\r\n\r\n      req.on('error', (error) => {\r\n        reject(error);\r\n      });\r\n    });\r\n  },\r\n});\r\n\r\nexport const downloadPersistentWithProgress = (props: IDownloadPersistentWithProgress): Promise<unknown> => {\r\n  const {\r\n    url,\r\n    destFile,\r\n    progressEvent = null,\r\n    progressEventName = '',\r\n    retryDelay = 0,\r\n    retryLimit = 5,\r\n    orbitaVersion = '',\r\n  } = props;\r\n\r\n  let { progressState = {} } = props;\r\n\r\n  return withRetry({\r\n    fn() {\r\n      // return stat(destFile) отключил для R2. раскоментить, если снова вернемся на амазон\r\n      //   .then((res: any) => res.size, () => 0)\r\n      return rm(destFile)\r\n        .then(() => 0, () => 0)\r\n        .then((size: number) => new Promise((resolve, reject) => {\r\n          const endRange = Number.MAX_SAFE_INTEGER;\r\n          const headers = {\r\n            // Range: `bytes=${size}-${endRange}`, отключил для R2. раскоментить, если снова вернемся на амазон\r\n          };\r\n\r\n          console.log(`bytes=${size}-${endRange}`);\r\n          const req = got.stream(url, {\r\n            headers,\r\n          });\r\n\r\n          req.on('error', (error) => {\r\n            console.log('request error', error);\r\n            localStream.end();\r\n            reject(error);\r\n          });\r\n\r\n          let streamOptions = {};\r\n\r\n          if (size) {\r\n            streamOptions = {\r\n              start: size,\r\n              mode: 0o666,\r\n              flags: 'r+',\r\n            };\r\n          }\r\n\r\n          const localStream = createWriteStream(destFile, streamOptions);\r\n          localStream.on('error', (error: unknown) => {\r\n            console.log('stream error', error);\r\n            try {\r\n              readdir(path.dirname(destFile)).then((dirContent) => {\r\n                console.log('dir content', dirContent);\r\n              }).catch(console.log);\r\n            } catch (err) {\r\n              console.log('dir content error', err);\r\n            }\r\n\r\n            const message = error instanceof Error ? error.message : error;\r\n            if (typeof message === 'string' && message.includes('ENOSPC')) {\r\n              localStream.end();\r\n              reject(message);\r\n\r\n              return;\r\n            }\r\n\r\n            localStream.end();\r\n            reject(error);\r\n          });\r\n\r\n          req.on('response', (response) => {\r\n            if (response.statusCode.toString().startsWith('2')) {\r\n              console.log('received success code');\r\n              req.pipe(localStream);\r\n              localStream.on('close', () => {\r\n                console.log('stream closed');\r\n                resolve('success');\r\n              });\r\n\r\n              return;\r\n            }\r\n\r\n            localStream.end();\r\n            reject(response);\r\n          });\r\n\r\n          req.on('downloadProgress', (progress) => {\r\n            if (!progressEvent) {\r\n              return;\r\n            }\r\n\r\n            progress.total = size + progress.total;\r\n            progress.transferred = size + progress.transferred;\r\n            progress.percent = progress.transferred / progress.total;\r\n\r\n            // to send only percent change\r\n            const isPercentDifferent = progressState?.percent?.toFixed(2) !== progress.percent.toFixed(2);\r\n\r\n            progressState = { ...progressState, ...progress };\r\n            isPercentDifferent && progressEvent.sender.send(progressEventName, {\r\n              progressState,\r\n              result: false,\r\n              orbitaVersion,\r\n            });\r\n          });\r\n        }));\r\n    },\r\n    retryDelay,\r\n    onRetry: () => {\r\n      progressEvent.sender.send(progressEventName, {\r\n        progressState,\r\n        result: false,\r\n        isRetrying: true,\r\n      });\r\n    },\r\n    callLimit: retryLimit,\r\n  });\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"unzipper\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"yauzl\");","import { createWriteStream, createReadStream } from 'fs';\r\nimport { mkdir, writeFile } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport unzipper from 'unzipper';\r\nimport yauzl from 'yauzl';\r\n\r\nexport const extractArchiveAuzl = (pathToZip: string, targetPath: string): Promise<void> => new Promise((resolve, reject) =>\r\n  yauzl.open(pathToZip, { lazyEntries: true, autoClose: false }, (error, zipFile) => {\r\n    if (error) {\r\n      reject(error);\r\n\r\n      return;\r\n    }\r\n\r\n    if (!zipFile) {\r\n      reject(new Error('no zipFile'));\r\n\r\n      return;\r\n    }\r\n\r\n    zipFile.on('error', (zipFileError) => {\r\n      console.log('zip File Error');\r\n      zipFile.close();\r\n      reject(zipFileError);\r\n    });\r\n\r\n    zipFile.readEntry();\r\n    const entries: any[] = [];\r\n\r\n    zipFile.on('entry', (entry) => {\r\n      zipFile.readEntry();\r\n      if (/\\/$/.test(entry.fileName)) {\r\n        return;\r\n      }\r\n\r\n      entries.push(entry);\r\n    });\r\n\r\n    zipFile.on('end', () => {\r\n      console.log('zipFile entries ended');\r\n\r\n      return Promise.all(entries.map(async (entry) => mkdir(path.join(targetPath, path.dirname(entry.fileName)), { recursive: true })\r\n        .then(() =>\r\n          new Promise((resolveWrite, rejectWrite) => {\r\n            zipFile.openReadStream(entry, (err, readStream) => {\r\n              if (err) {\r\n                rejectWrite(err);\r\n\r\n                return;\r\n              }\r\n\r\n              readStream.on('error', (readStreamError) => {\r\n                readStream.destroy();\r\n                rejectWrite(readStreamError);\r\n              });\r\n\r\n              const writeStream = createWriteStream(path.join(targetPath, entry.fileName), { mode: 0o666 });\r\n              writeStream.on('error', (writeError) => {\r\n                writeStream.end();\r\n                rejectWrite(writeError);\r\n              });\r\n\r\n              writeStream.on('close', resolveWrite);\r\n\r\n              readStream.pipe(writeStream);\r\n            });\r\n          }),\r\n        )))\r\n        .then(() => {\r\n          console.log('decompress resolved');\r\n          resolve();\r\n          zipFile.close();\r\n        })\r\n        .catch((promiseError) => {\r\n          console.log('rejected');\r\n          reject(promiseError);\r\n          zipFile.close();\r\n        });\r\n    });\r\n  }),\r\n);\r\n\r\nexport const extractArchive = (pathToZip: string, targetPath: string): Promise<void> => new Promise((resolve, reject) => {\r\n  const readStream = createReadStream(pathToZip);\r\n  readStream.on('error', reject);\r\n\r\n  readStream.pipe(unzipper.Extract({ path: targetPath }))\r\n    .on('close', async () => {\r\n      await writeFile(path.join(targetPath, 'First Run'), '', { mode: 0o666 }).catch(() => null);\r\n      console.log('Extraction complete.');\r\n      resolve();\r\n    })\r\n    .on('error', (err: Error) => {\r\n      reject(err);\r\n    });\r\n});\r\n","import got, { CancelableRequest, Headers, Response } from 'got';\r\n\r\nimport { IGetOptions, IMakeRequestProps, IMakeRequestPropsOptions, IMakeRequestWithFullResponseProps } from '../interfaces/make-request.interfaces';\r\nimport { CommonDataManager } from '../managers/common-data-manager';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nconst getBaseHeaders = (commonDataManager: CommonDataManager): Headers => ({\r\n  Authorization: `Bearer ${commonDataManager.accessToken}`,\r\n  'user-agent': commonDataManager.userAgent,\r\n  'x-two-factor-token': commonDataManager.twoFaKey || '',\r\n  'GoLogin-Meta-Header': commonDataManager.metaHeader || '',\r\n});\r\n\r\nconst getOptions = ({ method, headers = getBaseHeaders(CommonDataManagerInst), timeout, retryLimit }: IGetOptions): IMakeRequestPropsOptions => ({\r\n  method,\r\n  headers,\r\n  timeout: {\r\n    request: timeout,\r\n  },\r\n  retry: {\r\n    limit: retryLimit,\r\n    errorCodes: [\r\n      'ETIMEDOUT',\r\n      'ECONNRESET',\r\n      'EADDRINUSE',\r\n      'ECONNREFUSED',\r\n      'EPIPE',\r\n      'ENOTFOUND',\r\n      'EAI_AGAIN',\r\n    ],\r\n  },\r\n});\r\n\r\nexport const makeRequest = <T>(props: IMakeRequestProps): Promise<T> => {\r\n  const {\r\n    method = 'GET',\r\n    url,\r\n    body = {},\r\n    headers,\r\n    timeout = 30 * 1000,\r\n    json = true,\r\n    isBuffer = false,\r\n    retryLimit = 3,\r\n  } = props;\r\n\r\n  const options = getOptions({ method, headers, timeout, retryLimit });\r\n  if (!['GET', 'HEAD'].includes(method)) {\r\n    options.json = body;\r\n  }\r\n\r\n  if (isBuffer) {\r\n    delete options.json;\r\n    options.body = body;\r\n  }\r\n\r\n  if (json) {\r\n    return got(url, options).json();\r\n  }\r\n\r\n  return got(url, options).then(res => res.body) as Promise<T>;\r\n};\r\n\r\nexport const makeRequestWithFullResponse = (\r\n  props: IMakeRequestWithFullResponseProps,\r\n): CancelableRequest<Response<string>> => {\r\n  const {\r\n    method = 'GET',\r\n    url,\r\n    body = {},\r\n    headers,\r\n    timeout = 30 * 1000,\r\n    isBuffer = false,\r\n    retryLimit = 3,\r\n  } = props;\r\n\r\n  const options = getOptions({ method, headers, timeout, retryLimit });\r\n  if (!['GET', 'HEAD'].includes(method)) {\r\n    options.json = body;\r\n  }\r\n\r\n  if (isBuffer) {\r\n    delete options.json;\r\n    options.body = body;\r\n  }\r\n\r\n  return got(url, options);\r\n};\r\n","import { execSync } from 'child_process';\r\nimport crypto from 'crypto';\r\nimport { accessSync } from 'fs';\r\nimport os from 'os';\r\nimport path from 'path';\r\n\r\nimport { IUserPaths } from '../interfaces/path-platforms.interfaces';\r\n\r\nexport const HOMEDIR = os.homedir();\r\nexport const PLATFORM = process.platform;\r\nconst SEPARATOR = path.sep;\r\nconst CHROME_EXT_DIR_NAME = 'chrome-extensions';\r\nconst USER_EXT_DIR_NAME = 'user-extensions';\r\nexport const GOLOGIN_BASE_FOLDER_NAME = '.gologin';\r\nexport const GOLOGIN_TEST_FOLDER_NAME = '.gologin_test';\r\nexport const EXTENSIONS_PATH = path.join(HOMEDIR, GOLOGIN_BASE_FOLDER_NAME, 'extensions');\r\nexport const CHROME_EXTENSIONS_PATH = path.join(EXTENSIONS_PATH, CHROME_EXT_DIR_NAME);\r\nexport const USER_EXTENSIONS_PATH = path.join(EXTENSIONS_PATH, USER_EXT_DIR_NAME);\r\nexport const CACHED_PROFILES_FOLDER = path.join(HOMEDIR, GOLOGIN_BASE_FOLDER_NAME, 'gologin-cached-profiles');\r\n\r\nexport const CONFIG_APP_PATH = path.join(HOMEDIR, GOLOGIN_BASE_FOLDER_NAME);\r\n\r\nexport const BROWSER_FOLDER_NAME = 'orbita-browser';\r\nexport const MAC_ORBITA_DIR_NAME = 'Orbita-Browser.app';\r\nexport const BROWSER_PATH = path.join(HOMEDIR, GOLOGIN_BASE_FOLDER_NAME, 'browser');\r\n\r\nconst generateUserPaths = (paths: IUserPaths): IUserPaths => {\r\n  if (!paths.BASE_FOLDER || PLATFORM === 'win32') {\r\n    return paths;\r\n  }\r\n\r\n  const userName = execSync('echo $USER')\r\n    .toString()\r\n    .trim();\r\n\r\n  try {\r\n    accessSync(paths.BASE_FOLDER);\r\n  } catch (err) {\r\n    paths.BASE_FOLDER = path.sep + path.join('tmp', 'gologin');\r\n  }\r\n\r\n  const userHash = crypto.createHash('sha1').update(userName).digest('hex').substring(0, 10);\r\n  paths.BASE_FOLDER = `${paths.BASE_FOLDER}_${userHash}`;\r\n  paths.PROFILES_DIR = `${paths.PROFILES_DIR.replace('{base_folder}', paths.BASE_FOLDER)}`;\r\n  paths.START_DIR_PATH = `${paths.START_DIR_PATH.replace('{base_folder}', paths.BASE_FOLDER)}`;\r\n  paths.STARTED_DIR_PATH = `${paths.STARTED_DIR_PATH.replace('{base_folder}', paths.BASE_FOLDER)}`;\r\n\r\n  return paths;\r\n};\r\n\r\nconst baseLinPath = {\r\n  BASE_FOLDER: path.sep + path.join('tmp', 'gologin'),\r\n  PROFILES_DIR: '{base_folder}/profiles/',\r\n  START_DIR_PATH: '{base_folder}/start',\r\n  STARTED_DIR_PATH: '{base_folder}/started',\r\n  ROUTE_SLASH: SEPARATOR,\r\n  COOKIES_FILE: path.join(SEPARATOR, 'Default', 'Cookies'),\r\n  COOKIES_FILE_NEW: path.join(SEPARATOR, 'Default', 'Network', 'Cookies'),\r\n  PASSWORDS_FILE: path.join(SEPARATOR, 'Default', 'Login Data'),\r\n  BROWSER_BASE_PATH: BROWSER_PATH,\r\n};\r\n\r\nconst linuxPath = generateUserPaths({\r\n  ...baseLinPath,\r\n  BROWSER_EXEC_FILE_NAME: ['chrome'],\r\n\r\n  DOLPHIN_DIR_PATH: path.join(HOMEDIR, '.config', 'dolphin_anty') + path.sep,\r\n  OCTO_DIR_PATH: path.join(HOMEDIR, '.config', 'Octo Browser') + path.sep,\r\n  MULTILOGIN_DIR_PATH: path.join(HOMEDIR, '.config', 'Multilogin') + path.sep,\r\n  ADSPOWER_DIR_PATH: path.join(HOMEDIR, '.config', 'adspower_global') + path.sep,\r\n  UNDETECTABLE_DIR_PATH: path.join(HOMEDIR, '.config', 'Undetectable') + path.sep,\r\n  INDIGO_DIR_PATH: path.join(HOMEDIR, '.config', 'Indigo') + path.sep,\r\n  INCOGNITION_DIR_PATH: path.join(HOMEDIR, '.config', 'Incogniton') + path.sep,\r\n  MORELOGIN_DIR_PATH: path.join(HOMEDIR, '.config', 'MoreLogin') + path.sep,\r\n});\r\n\r\nconst macPath = generateUserPaths({\r\n  ...baseLinPath,\r\n  BASE_FOLDER: path.sep + path.join('private', 'tmp', 'gologin'),\r\n  BROWSER_EXEC_FILE_NAME: [MAC_ORBITA_DIR_NAME, 'Contents', 'MacOS', 'Orbita'],\r\n  BROWSER_OLD_EXEC_FILE_NAME: '',\r\n  BROWSER_BASE_PATH: BROWSER_PATH,\r\n\r\n  DOLPHIN_DIR_PATH: path.join(HOMEDIR, 'Library', 'Application Support', 'dolphin_anty') + path.sep,\r\n  OCTO_DIR_PATH: path.join(HOMEDIR, '.Octo Browser') + path.sep,\r\n  MULTILOGIN_DIR_PATH: path.join(HOMEDIR, 'Library', 'Application Support', 'Multilogin') + path.sep,\r\n  ADSPOWER_DIR_PATH: path.join(HOMEDIR, 'Library', 'Application Support', 'adspower_global') + path.sep,\r\n  UNDETECTABLE_DIR_PATH: path.join(HOMEDIR, 'Library', 'Application Support', 'Undetectable') + path.sep,\r\n  INDIGO_DIR_PATH: path.join(HOMEDIR, 'Library', 'Application Support', 'Indigo') + path.sep,\r\n  INCOGNITION_DIR_PATH: path.join(HOMEDIR, 'Library', 'Application Support', 'Incogniton') + path.sep,\r\n  MORELOGIN_DIR_PATH: path.join(HOMEDIR, 'Library', 'Application Support', 'MoreLogin') + path.sep,\r\n});\r\n\r\nconst winPath = {\r\n  BASE_FOLDER: path.join(HOMEDIR, 'AppData', 'Local', 'Temp', 'GoLogin') + path.sep,\r\n  PROFILES_DIR: path.join(HOMEDIR, 'AppData', 'Local', 'Temp', 'GoLogin', 'profiles') + path.sep,\r\n  START_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Local', 'Temp', 'GoLogin', 'start') + path.sep,\r\n  STARTED_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Local', 'Temp', 'GoLogin', 'started') + path.sep,\r\n  ROUTE_SLASH: SEPARATOR,\r\n  BROWSER_EXEC_FILE_NAME: ['chrome.exe'],\r\n  BROWSER_BASE_PATH: BROWSER_PATH,\r\n  COOKIES_FILE: path.join(SEPARATOR, 'Default', 'Cookies'),\r\n  COOKIES_FILE_NEW: path.join(SEPARATOR, 'Default', 'Network', 'Cookies'),\r\n  PASSWORDS_FILE: path.join(SEPARATOR, 'Default', 'Login Data'),\r\n\r\n  DOLPHIN_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Roaming', 'dolphin_anty') + path.sep,\r\n  OCTO_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Roaming', 'Octo Browser') + path.sep,\r\n  MULTILOGIN_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Roaming', 'Multilogin') + path.sep,\r\n  ADSPOWER_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Roaming', 'adspower_global') + path.sep,\r\n  UNDETECTABLE_DIR_PATH: path.join(HOMEDIR, '..', '..', 'Program Files', 'Undetectable') + path.sep,\r\n  INDIGO_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Roaming', 'Indigo') + path.sep,\r\n  INCOGNITION_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Roaming', 'Incogniton') + path.sep,\r\n  MORELOGIN_DIR_PATH: path.join(HOMEDIR, 'AppData', 'Roaming', 'MoreLogin') + path.sep,\r\n};\r\n\r\nexport const getPathOs = (): IUserPaths => {\r\n  if (PLATFORM === 'win32') {\r\n    return winPath;\r\n  }\r\n\r\n  if (PLATFORM === 'darwin') {\r\n    return macPath;\r\n  }\r\n\r\n  return linuxPath;\r\n};\r\n\r\nconst pathOs = getPathOs();\r\nexport const BASE_PATH_TEMPLATE =\r\n  pathOs.PROFILES_DIR +\r\n  '{profileId}' +\r\n  pathOs.ROUTE_SLASH +\r\n  'Default' +\r\n  pathOs.ROUTE_SLASH;\r\n\r\nconst ORBITA_CONFIG_FILE_NAME = 'orbita.config';\r\nexport const ORBITA_CONFIG_PATH =\r\n  pathOs.PROFILES_DIR +\r\n  '{profileId}' +\r\n  pathOs.ROUTE_SLASH +\r\n  ORBITA_CONFIG_FILE_NAME;\r\n\r\nexport const MIN_MAJOR_CHROME_VERSION_FOR_CREATION_ORBITA_CONFIG = 121;\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"yazl\");","import * as path from 'path';\r\n\r\nconst DEFAULT_FOLDER_USELESS_FILE = [\r\n  {\r\n    name: 'Cache',\r\n    subs: [],\r\n    isDirectory: true,\r\n  },\r\n  {\r\n    name: 'DawnCache',\r\n    subs: [],\r\n    isDirectory: true,\r\n  },\r\n  {\r\n    name: 'Extensions',\r\n    subs: [],\r\n    isDirectory: true,\r\n  },\r\n  {\r\n    name: 'GPUCache',\r\n    subs: [],\r\n    isDirectory: true,\r\n  },\r\n  {\r\n    name: 'fonts_config',\r\n    subs: [],\r\n    isDirectory: false,\r\n  },\r\n  {\r\n    name: 'Service Worker',\r\n    subs: [],\r\n    isDirectory: true,\r\n  },\r\n  {\r\n    name: 'Code Cache',\r\n    subs: [],\r\n    isDirectory: true,\r\n  },\r\n  {\r\n    name: 'GPUCache',\r\n    subs: [],\r\n    isDirectory: true,\r\n  },\r\n];\r\n\r\nexport const getDirectoriesToDeleteForNode = (): string[] =>\r\n  DEFAULT_FOLDER_USELESS_FILE.reduce((res: string[], el) => {\r\n    const basePath = path.sep + 'Default' + path.sep + el.name;\r\n    if (el.subs.length) {\r\n      el.subs.forEach(sub => res.push(basePath + path.sep + sub));\r\n    } else {\r\n      res.push(basePath);\r\n    }\r\n\r\n    return res;\r\n  }, []);\r\n\r\nexport const getDirectoriesForArchiver = (): string[] => DEFAULT_FOLDER_USELESS_FILE.reduce((res: string[], el) => {\r\n  const { name, subs, isDirectory } = el;\r\n  const basePath = 'Default/' + name;\r\n\r\n  if (subs.length) {\r\n    subs.forEach((sub) => {\r\n      const resPath = basePath + '/' + (isDirectory ? sub + '/' : sub);\r\n      res.push(resPath);\r\n    });\r\n  } else {\r\n    res.push(basePath + (isDirectory ? '/' : ''));\r\n  }\r\n\r\n  return res;\r\n}, []);\r\n","import { createWriteStream } from 'fs';\r\nimport { access, mkdir, readdir, readFile, stat } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport yazl from 'yazl';\r\n\r\nimport { extractArchive, extractArchiveAuzl } from './extract-archive';\r\nimport { CACHED_PROFILES_FOLDER } from './path-platforms';\r\nimport { getDirectoriesToDeleteForNode } from './profile-directories-to-remove';\r\nimport { IAddDefaultFolder } from '../interfaces/archiving.interfaces';\r\nimport { tempArchiveName } from '../managers/profile/close-orbita';\r\n\r\nexport const archiveProfile = async (profileFolder = '', profileId: string): Promise<Buffer> => {\r\n  const folderExists = await access(profileFolder).then(() => true, () => false);\r\n  if (!folderExists) {\r\n    throw new Error('Invalid profile folder path: ' + profileFolder);\r\n  }\r\n\r\n  const defaultFolderPath = path.join(profileFolder, 'Default');\r\n\r\n  const archive = new yazl.ZipFile();\r\n  let isArchiveError = false;\r\n  let archiveError;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  archive.once('error', (error: any) => {\r\n    archive.end();\r\n    console.log('archive error', error);\r\n    isArchiveError = true;\r\n    archiveError = error;\r\n  });\r\n\r\n  await addDefaultFolderToArchive({ folderPath: defaultFolderPath, archive, relativePath: 'Default' });\r\n\r\n  try {\r\n    archive.addFile(path.join(profileFolder, 'First Run'), '/');\r\n  } catch(error: unknown) {\r\n    archive.addBuffer(Buffer.from(''), 'First Run');\r\n  }\r\n\r\n  const cachedProfilePath = `${path.join(CACHED_PROFILES_FOLDER, profileId, tempArchiveName)}.zip`;\r\n\r\n  if (isArchiveError) {\r\n    throw archiveError;\r\n  }\r\n\r\n  await mkdir(path.join(CACHED_PROFILES_FOLDER, profileId), { recursive: true }).catch((error) => {\r\n    console.log('mkdir error', error);\r\n    console.log('cached profile path', cachedProfilePath);\r\n  });\r\n\r\n  await new Promise((resolve, reject) => {\r\n    const stream = createWriteStream(cachedProfilePath, { mode: 0o666 });\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore\r\n    archive.once('error', (error: any) => {\r\n      archive.end();\r\n      stream.destroy();\r\n      console.log('archive error inside promise', error);\r\n      reject(error);\r\n    });\r\n\r\n    stream.on('error', (error) => {\r\n      stream.destroy();\r\n      reject(error);\r\n    });\r\n    stream.on('close', () => {\r\n      resolve('');\r\n    });\r\n\r\n    archive.end();\r\n    archive.outputStream.pipe(stream);\r\n\r\n  });\r\n\r\n  // TODO: нужно сделать чтото более оптимальное, чтобы не хранить все в памяти\r\n  return readFile(cachedProfilePath);\r\n};\r\n\r\nexport const decompressProfile = (zipPath = '', profileFolder = ''): Promise<void> => extractArchiveAuzl(zipPath, profileFolder).catch(() => extractArchive(zipPath, profileFolder));\r\n\r\nexport const getBufferOfArchive = async (profileId: string, archiveName: string): Promise<Buffer> => {\r\n  const zipPath = path.join(CACHED_PROFILES_FOLDER, profileId, archiveName + '.zip');\r\n\r\n  return readFile(zipPath).catch((error: unknown) => {\r\n    console.log(error);\r\n\r\n    throw Error('zip error');\r\n  });\r\n};\r\n\r\nconst addDefaultFolderToArchive = async ({ folderPath, archive, relativePath }: IAddDefaultFolder): Promise<void> => {\r\n  const directoriesToNotInclude = getDirectoriesToDeleteForNode();\r\n  const defaultFolderContent = await readdir(folderPath);\r\n\r\n  for (const folderContent of defaultFolderContent) {\r\n    const currentFilePath = path.resolve(folderPath, folderContent);\r\n    const folderContentStat = await stat(currentFilePath).catch(() => null);\r\n\r\n    if (!folderContentStat) {\r\n      continue;\r\n    }\r\n\r\n    if (directoriesToNotInclude.includes(`${path.sep}${path.join(relativePath, folderContent)}`)) {\r\n      continue;\r\n    }\r\n\r\n    if (folderContentStat.isDirectory()) {\r\n      archive.addEmptyDirectory(path.join(relativePath, folderContent));\r\n      await addDefaultFolderToArchive({ folderPath: currentFilePath, archive, relativePath: path.join(relativePath, folderContent) });\r\n\r\n      continue;\r\n    }\r\n\r\n    archive.addFile(currentFilePath, `${relativePath}/${folderContent}`);\r\n  }\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https-proxy-agent\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"socks-proxy-agent\");","import got, { Headers } from 'got';\r\nimport { HttpsProxyAgent } from 'https-proxy-agent';\r\nimport { SocksProxyAgent } from 'socks-proxy-agent';\r\n\r\nimport { sendErrorToSentry } from './sentry';\r\nimport { TIMEZONE_CHECK_URL } from '../constants/constants';\r\nimport { IProxyRequestParams, IProxyRequestResponse } from '../interfaces/request-with-timeout.interfaces';\r\nimport { CommonDataManager } from '../managers/common-data-manager';\r\n\r\nconst TIMEOUT = 12000;\r\nconst HTTP_PROTO = 'http://';\r\nconst HTTPS_PROTO = 'https://';\r\nconst HTTPS_ERRORS = ['socket hang up', 'read ECONNRESET', 'Proxy connection ended before receiving CONNECT response'];\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport const makeProxyRequestWithTimeout = async (proxyParams: IProxyRequestParams, retries = 2): Promise<IProxyRequestResponse> => {\r\n  let response: any = {};\r\n  let agent: HttpsProxyAgent<string> | SocksProxyAgent;\r\n\r\n  const { username, password, mode = '' } = proxyParams;\r\n  let { host = '', port = '', type } = proxyParams;\r\n\r\n  let proxyType: string = type;\r\n  if (type.includes('socks')) {\r\n    proxyType = 'socks';\r\n  }\r\n\r\n  host = host.trim().replace(' ', '');\r\n  if (host.includes('.')) {\r\n    [host] = host.split(':');\r\n  }\r\n\r\n  port = port.toString().trim();\r\n  if (port.includes(':')) {\r\n    [, port] = port.split(':');\r\n  }\r\n\r\n  const isFreeProxy = mode.includes('gologin');\r\n  const isTorProxy = mode === 'tor';\r\n  let proxyString = `${proxyType}://`;\r\n\r\n  if (username && password) {\r\n    proxyString += `${encodeURIComponent(username)}:${encodeURIComponent(password)}@`;\r\n  }\r\n\r\n  proxyString += `${host}:${port}`;\r\n\r\n  // для Sentry\r\n  if (!(isFreeProxy || isTorProxy)) {\r\n    console.log('proxyString:', proxyString, 'host:', host, 'port:', port);\r\n  }\r\n\r\n  if (proxyString.startsWith('http')) {\r\n    agent = getHttpProxyAgent(proxyString);\r\n  } else {\r\n    agent = new SocksProxyAgent(proxyString);\r\n  }\r\n\r\n  const url = TIMEZONE_CHECK_URL;\r\n  let headers: Headers = {\r\n    Authorization: `Bearer ${CommonDataManagerInst.accessToken}`,\r\n    'user-agent': CommonDataManagerInst.userAgent,\r\n    'x-two-factor-token': CommonDataManagerInst.twoFaKey || '',\r\n  };\r\n\r\n  if (isFreeProxy || isTorProxy) {\r\n    headers = {};\r\n  }\r\n\r\n  while(retries--) {\r\n    const request = got(\r\n      url,\r\n      {\r\n        agent: {\r\n          https: agent,\r\n        },\r\n        headers,\r\n      },\r\n    );\r\n\r\n    const timeout = setTimeout(() => request.cancel(), TIMEOUT);\r\n    response = await request.json().catch((error) => error.message);\r\n\r\n    clearTimeout(timeout);\r\n    if (HTTPS_ERRORS.includes(response) && proxyString.startsWith(HTTP_PROTO)) {\r\n      type = 'https';\r\n      agent = getHttpProxyAgent(proxyString.replace(HTTP_PROTO, HTTPS_PROTO));\r\n\r\n      continue;\r\n    }\r\n\r\n    if (response?.ip) {\r\n      return { response, protocol: type };\r\n    }\r\n  }\r\n\r\n  const isFloppyData = host.includes('floppydata.com');\r\n  let transactionName = 'check-proxy-response';\r\n  console.log(isFloppyData, 'isFloppyData');\r\n  if (isFloppyData) {\r\n    transactionName = 'check-proxy-response-floppydata';\r\n  }\r\n\r\n  sendErrorToSentry({\r\n    message: response, level: 'warning', transactionName,\r\n    tags: [['proxy-mode', mode]],\r\n  });\r\n\r\n  return { response, protocol: type };\r\n};\r\n\r\nconst getHttpProxyAgent = (proxyString: string): HttpsProxyAgent<string> =>\r\n  new HttpsProxyAgent(proxyString, {\r\n    keepAlive: true,\r\n    keepAliveMsecs: 1000,\r\n    maxSockets: 256,\r\n    maxFreeSockets: 256,\r\n    scheduling: 'lifo',\r\n  });\r\n","import { makeRequest } from './make-request';\r\nimport { version } from '../../../package.json';\r\nimport { CommonDataManager } from '../managers/common-data-manager';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport const sendActionAnalytics = (action: string, extraInfo: any = {}): void => {\r\n  extraInfo.appVersion = version;\r\n\r\n  makeRequest({\r\n    method: 'POST',\r\n    url: `${CommonDataManagerInst.apiBaseUrl}/analytics/add_action_analytics`,\r\n    body: { action, ...extraInfo },\r\n  }).catch(() => null);\r\n};\r\n","import * as Sentry         from '@sentry/electron';\r\n\r\nimport { ISendErrorToSentryProps, ISentryTag } from '../interfaces/sentry.interfaces';\r\nimport { ElectronError } from './custom-errors';\r\n\r\nexport const sendErrorToSentry = (props: ISendErrorToSentryProps): void => {\r\n  const {\r\n    message,\r\n    level = 'error',\r\n    tags = [],\r\n    transactionName,\r\n  } = props;\r\n\r\n  Sentry.captureException(new ElectronError(message.toString()), (scope) => {\r\n    scope.setLevel(level);\r\n    scope.setTransactionName(transactionName);\r\n    scope.setFingerprint([transactionName]);\r\n\r\n    tags.forEach((tagArray: ISentryTag) => {\r\n      const [tag, value] = tagArray;\r\n      scope.setTag(tag, value);\r\n    });\r\n\r\n    return scope;\r\n  });\r\n};\r\n\r\nexport const initSentry = (): void => {\r\n  process.env.NODE_ENV === 'production' &&\r\n  Sentry.init({\r\n    dsn: 'https://8a490970aa7e0c82863d55ce224b68cb@sentry.amzn.pro/3',\r\n    tracesSampleRate: 1.0,\r\n    release: process.env.npm_package_version,\r\n    environment: 'production',\r\n    ignoreErrors: [\r\n      'Invalid Minidump',\r\n      'Object has been destroyed',\r\n      'Cannot set headers after they are sent to the client',\r\n      'Cannot read properties of undefined (reading \\'isServer\\')',\r\n      'The `onCancel` handler was attached after the promise settled.',\r\n    ],\r\n  });\r\n};\r\n\r\nexport const sendCommonErrorToSentry = (props: ISendErrorToSentryProps): void => {\r\n  const {\r\n    message,\r\n    tags = [],\r\n  } = props;\r\n\r\n  let { transactionName } = props;\r\n\r\n  const isInternetError = ['SSL', 'certificate', 'socket hang up', 'ECONNRESET', 'getaddrinfo', 'connect', 'Timeout']\r\n    .some((messagePart) => message.includes(messagePart));\r\n\r\n  switch(true) {\r\n    case isInternetError:\r\n      transactionName = 'internet-error';\r\n      break;\r\n    case message.includes('402'):\r\n      transactionName = 'payment-required';\r\n      break;\r\n    case message.includes('EPERM') || message.includes('EACCES'):\r\n      transactionName = 'permission-error';\r\n      break;\r\n    case message.includes('429') || message.toLowerCase() === 'too many requests':\r\n      transactionName = 'too-many-requests';\r\n      break;\r\n    case message.includes('ENOSPC') || message.includes('SQLITE_FULL'):\r\n      transactionName = 'no-disc-space';\r\n      break;\r\n    case message.includes('The server aborted pending request'):\r\n      transactionName = 'aws-aborted';\r\n      break;\r\n    case message.includes('unexpected number of bytes'):\r\n      transactionName = 'orbita-files-busy';\r\n      break;\r\n    default:\r\n      // do nothing\r\n  }\r\n\r\n  Sentry.captureException(new ElectronError(message.toString()), (scope) => {\r\n    scope.setTransactionName(transactionName);\r\n    scope.setFingerprint([transactionName]);\r\n\r\n    tags.forEach((tagArray: ISentryTag) => {\r\n      const [tag, value] = tagArray;\r\n      scope.setTag(tag, value);\r\n    });\r\n\r\n    return scope;\r\n  });\r\n};\r\n","import { exec } from 'child_process';\r\nimport * as os from 'os';\r\nimport { promisify } from 'util';\r\n\r\nimport packageSettings from '../../../package.json';\r\nimport { UserOS } from '../interfaces/common-data-manager.interfaces';\r\n\r\nconst doExec = promisify(exec);\r\nconst { version, subVersion } = packageSettings;\r\n\r\nexport const osPlatform = process.platform;\r\n\r\nexport const getOS = async (): Promise<UserOS> => {\r\n  if (process.platform === 'win32') {\r\n    return 'win';\r\n  }\r\n\r\n  if (process.platform === 'darwin') {\r\n    const m1 = await isM1();\r\n\r\n    return m1 ? 'macM1' : 'mac';\r\n  }\r\n\r\n  return 'lin';\r\n};\r\n\r\nconst isM1 = async (): Promise<boolean> => {\r\n  const { stdout } = await doExec('sysctl machdep.cpu')\r\n    .catch((error: unknown) => {\r\n      console.log('error in M1 detection ', error);\r\n\r\n      return { stdout: '' };\r\n    });\r\n\r\n  return /Apple M\\d/.test(stdout);\r\n};\r\n\r\nexport const getWinRelease = (): number => {\r\n  const winRelease = os.release() || '';\r\n  const [winVersion = '10', _versionMinor, buildVersion] = winRelease.split('.');\r\n  if (buildVersion.startsWith('2')) {\r\n    return 11;\r\n  }\r\n\r\n  return +winVersion;\r\n};\r\n\r\n\r\nexport const getGologinMetaHeader = async (): Promise<string> => {\r\n  const typeOS = await getOS();\r\n  const [osRelease = ''] = os.release();\r\n  const appRelease = `${version} ${subVersion}`;\r\n  if (typeOS === 'win') {\r\n    return `${appRelease}-${typeOS}-${getWinRelease()}`;\r\n  }\r\n\r\n  return `${appRelease}-${typeOS}-${osRelease}}`;\r\n};\r\n","import { copyFile, mkdir, readdir, rmdir, stat, unlink } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nexport const checkFileSizeSync = async (pathToFile: string): Promise<number> => {\r\n  try {\r\n    const [fileName] = pathToFile.split(path.sep).reverse();\r\n    if (fileName === '.DS_Store') {\r\n      return 0;\r\n    }\r\n\r\n    const fileStats = await stat(pathToFile);\r\n    if (!fileStats.isDirectory()) {\r\n      return fileStats.size;\r\n    }\r\n\r\n    const files = await readdir(pathToFile);\r\n    const promises = files.map(async file => checkFileSizeSync(path.join(pathToFile, file)));\r\n\r\n    return (await Promise.all(promises)).reduce((result, value) => result + value, 0);\r\n  } catch {\r\n    return -1;\r\n  }\r\n};\r\n\r\nexport const copyFolder = async (fromPath: string, destPath: string): Promise<void|void[]> => {\r\n  const stats = await stat(fromPath);\r\n\r\n  if (!stats.isDirectory()) {\r\n    return copyFile(fromPath, destPath);\r\n  }\r\n\r\n  await mkdir(destPath, { recursive: true }).catch(() => void 0);\r\n  const files = await readdir(fromPath);\r\n  const promises = files.map(async file => {\r\n    await mkdir(destPath, { recursive: true }).catch(() => void 0);\r\n\r\n    return copyFolder(path.join(fromPath, file), path.join(destPath, file));\r\n  });\r\n\r\n  return Promise.all(promises) as Promise<void|void[]>;\r\n};\r\n\r\nexport const removeFileOrFolder = async (pathToFile: string): Promise<void> => {\r\n  const stats = await stat(pathToFile).catch(() => null);\r\n\r\n  if (!stats) {\r\n    return;\r\n  }\r\n\r\n  if (stats.isDirectory()) {\r\n    return rmdir(pathToFile, { recursive: true });\r\n  }\r\n\r\n  return unlink(pathToFile);\r\n};\r\n\r\nexport const getRootDirectory = (): string => __dirname;\r\n\r\nexport const extIdEncoding: { [key: string]: string } = {\r\n  0: 'a',\r\n  1: 'b',\r\n  2: 'c',\r\n  3: 'd',\r\n  4: 'e',\r\n  5: 'f',\r\n  6: 'g',\r\n  7: 'h',\r\n  8: 'i',\r\n  9: 'j',\r\n  a: 'k',\r\n  b: 'l',\r\n  c: 'm',\r\n  d: 'n',\r\n  e: 'o',\r\n  f: 'p',\r\n};\r\n\r\nexport const removeItemFromArray = <Type>(array: Type[], itemToRemove: Type): void =>  {\r\n  const indexToRemove = array.indexOf(itemToRemove);\r\n  if (indexToRemove < -1) {\r\n    return;\r\n  }\r\n\r\n  array.splice(indexToRemove, 1);\r\n};\r\n","import { IOptions } from '../interfaces/with-retry.interfaces';\r\n\r\nconst withRetry = <T>(optionsOrUndefined: IOptions): Promise<T> => {\r\n  const opts = optionsOrUndefined || {};\r\n  const {\r\n    retryDelay = 0,\r\n    limit: callLimit = 5,\r\n    fn: fnToProducePromise,\r\n    callCounter = 1,\r\n    onRetry,\r\n    stopRetryErrorPatterns = [404, 403, 429, 500, 401],\r\n  } = opts;\r\n\r\n  delete opts.callCounter;\r\n\r\n  return fnToProducePromise(opts).catch((err: unknown) => {\r\n    const message = err instanceof Error ? err.message : 'unknown';\r\n    const isStopRetryError = stopRetryErrorPatterns.some((pattern: number) => message.includes(pattern.toString()));\r\n    const skipRetry = callCounter >= callLimit || isStopRetryError || process.env.NODE_ENV === 'test';\r\n    if (skipRetry) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    onRetry && onRetry();\r\n\r\n    opts.callCounter = callCounter + 1;\r\n\r\n    const resolver = retryDelay ?\r\n      // eslint-disable-next-line no-unused-vars\r\n      (resolve: (value: unknown) => void): Promise<unknown> => new Promise(() => setTimeout(resolve, retryDelay)) :\r\n      // eslint-disable-next-line no-unused-vars\r\n      (resolve: (value: unknown) => void): void => process.nextTick(resolve);\r\n\r\n    return new Promise(resolve => resolver(resolve)).then(() => withRetry(opts));\r\n  }) as Promise<T>;\r\n};\r\n\r\nexport default withRetry;\r\n","import os from 'os';\r\nimport util from 'util';\r\n\r\nimport { OpenProfileViaLink } from '../../common/constants/analytics';\r\nimport { DeepLinkProtocol } from '../../common/types/deep-link-protocol';\r\nimport { IPidList } from '../interfaces/focus-orbita-utils.interfaces';\r\nimport { PLATFORM } from '../utils/path-platforms';\r\nimport { sendActionAnalytics } from '../utils/send-action-analytics';\r\n\r\nconst exec = util.promisify(require('child_process').exec);\r\n\r\nexport const pidList: IPidList = {};\r\n\r\nexport const getWinOrbitaRealPid = async (pid: string): Promise<string> => {\r\n  const { stdout: childPID } = await exec(`wmic process get ProcessID, ParentProcessID | find \"${pid}\"`)\r\n    .catch(() => ({ stdout: '' }));\r\n\r\n  if (!childPID) {\r\n    return '';\r\n  }\r\n\r\n  const arrayOfPidLinks = childPID.toString().split('\\n');\r\n  console.log('array of pid: ', arrayOfPidLinks);\r\n  const [targetArray] = arrayOfPidLinks.filter((pidInfo: string) => pidInfo.split(' ')[0] === pid.toString());\r\n  console.log('target array: ', targetArray);\r\n  const [_, targetPID] = targetArray.split(' ').filter(Boolean);\r\n\r\n  return targetPID;\r\n};\r\n\r\nexport const focusOrbitaWindow = async (profileId: string, deepLinkProtocol?: DeepLinkProtocol): Promise<void> => {\r\n  let targetPID = pidList[profileId];\r\n\r\n  if (PLATFORM === 'win32') {\r\n    const addon = require('./win32/pid_raiser.node');\r\n    targetPID = await getWinOrbitaRealPid(pidList[profileId]);\r\n\r\n    if (!targetPID) {\r\n      return;\r\n    }\r\n\r\n    addon.awaken(Number(targetPID));\r\n  }\r\n\r\n  if (PLATFORM === 'linux') {\r\n    const addon = require('./linux/pid_raiser.node');\r\n\r\n    const { stdout: childPID } = await exec(`pgrep -P ${targetPID}`)\r\n      .catch(() => ({ stdout: '' }));\r\n\r\n    if (!childPID) {\r\n      return;\r\n    }\r\n\r\n    addon.awaken(Number(childPID));\r\n  }\r\n\r\n  if (PLATFORM === 'darwin' && os.arch() ==='x64') {\r\n    const addon = require('./darwin/pid_raiser_intel.node');\r\n    addon.awaken(Number(targetPID));\r\n  }\r\n\r\n  if (PLATFORM === 'darwin' && os.arch() ==='arm64') {\r\n    const addon = require('./darwin/pid_raiser_m1.node');\r\n    addon.awaken(Number(targetPID));\r\n  }\r\n\r\n  if (deepLinkProtocol) {\r\n    sendActionAnalytics(OpenProfileViaLink.focused, { mode: deepLinkProtocol, profile: profileId });\r\n  }\r\n};\r\n","\ntry {\n  process.dlopen(module, __dirname + require(\"path\").sep + __webpack_public_path__ + \"c1ce21a4e14afcf3fac288acd8271e92.node\");\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","\ntry {\n  process.dlopen(module, __dirname + require(\"path\").sep + __webpack_public_path__ + \"22e092f604fa76275821d9e439296082.node\");\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","\ntry {\n  process.dlopen(module, __dirname + require(\"path\").sep + __webpack_public_path__ + \"a31b39500533eb1843a297db3624cc0a.node\");\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","\ntry {\n  process.dlopen(module, __dirname + require(\"path\").sep + __webpack_public_path__ + \"473d8d23bc0a26322367b595674dadda.node\");\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classPrivateFieldGet\");","module.exports = require(\"@babel/runtime/helpers/classPrivateFieldSet\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@sentry/electron\");","module.exports = require(\"decompress\");","module.exports = require(\"decompress-unzip\");","module.exports = require(\"electron\");","module.exports = require(\"electron-reload\");","module.exports = require(\"events\");","module.exports = require(\"get-system-fonts\");","module.exports = require(\"got\");","module.exports = require(\"moment\");","module.exports = require(\"sqlite\");","module.exports = require(\"sqlite3\");","module.exports = require(\"tree-kill\");","module.exports = require(\"util\");","module.exports = require(\"uuid\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".main.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@electron/remote/main\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@sentry/tracing\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron-updater\");","export const isNotNull = <T>(value: T | null): value is T => value !== null;\r\n","export interface IMigrationData {\r\n  isDolphinChecked?: boolean;\r\n}\r\n\r\nexport interface ICheckCompetitorsArgs {\r\n  migrationData: IMigrationData;\r\n}\r\n\r\nexport interface ICheckCompetitorsAppsData {\r\n  lastCheckDate?: Date;\r\n}\r\n\r\nexport enum E_ACTIONS_WITH_COMPETITORS_APPS {\r\n  INSTALLED = 'competitor installed',\r\n  UNINSTALLED = 'competitor uninstalled',\r\n}\r\n","import { mkdir } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { IAppConfigRecord } from '../../interfaces/app-config.interfaces';\r\nimport { readConfigFile, saveConfigFile } from '../../utils/config-manager';\r\nimport { CONFIG_APP_PATH } from '../../utils/path-platforms';\r\nimport { sendErrorToSentry } from '../../utils/sentry';\r\n\r\nconst pathToMetadataFolder = path.join(CONFIG_APP_PATH, path.sep, 'gologin-metadata');\r\nconst metadataFileName = 'data.json';\r\nconst configFilePath = path.join(pathToMetadataFolder, path.sep, metadataFileName);\r\n\r\nexport const getCurrentMetadata = async (): Promise<any> => {\r\n  const currentMetadata = await readConfigFile(configFilePath, 'metadata');\r\n  if (!(currentMetadata && !currentMetadata.fingerprint)) {\r\n    return currentMetadata;\r\n  }\r\n\r\n  const defaultMetadata = {\r\n    fingerprint: uuidv4(),\r\n    data: {},\r\n  };\r\n\r\n  await mkdir(pathToMetadataFolder, { recursive: true })\r\n    .then(() => saveConfigFile(configFilePath, defaultMetadata, 'metadata'))\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      sendErrorToSentry({\r\n        message, tags: [['scenario', 'check-competitors']],\r\n        transactionName: 'saveing-competitor-check-metadata-error', level: 'warning',\r\n      });\r\n    });\r\n\r\n  return defaultMetadata;\r\n};\r\n\r\nexport const saveMetadata = async (data: IAppConfigRecord): Promise<any> =>\r\n  saveConfigFile(configFilePath, data, 'metadata');\r\n","const competitorsCryptoMap: { [key: string]: string } = ({\r\n  'DOLPHIN': 'rjzfxd',\r\n  'OCTO': '0fprsl',\r\n  'MULTILOGIN': 'yx2dnu',\r\n  'ADSPOWER': 'wpvub7',\r\n  'UNDETECTABLE': 'j5qcm9',\r\n  'INCOGNITION': '9o1tie',\r\n  'INDIGO': 'lhzv3p',\r\n  'MORELOGIN': '9dbawo7',\r\n});\r\n\r\nexport const encryptCompetitorName = (competitor: string): string =>\r\n  competitorsCryptoMap[competitor];\r\n\r\nexport const decryptCompetitorName = (code: string): string =>\r\n  Object.keys(competitorsCryptoMap).find(key => competitorsCryptoMap[key] === code) || 'unknown';\r\n\r\n","import packageSettings from '../../../package.json';\r\nimport { ICheckCompetitorsAppsData } from '../interfaces/check-competitors.interfaces';\r\nimport { CommonDataManager } from '../managers/common-data-manager';\r\nimport { makeRequest } from '../utils/make-request';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport const electronSendActionAnalytics = (action: string, extraInfo: any = {}): Promise<any> => {\r\n  const { version } = packageSettings;\r\n  extraInfo.appVersion = version;\r\n\r\n  return makeRequest({\r\n    method: 'POST',\r\n    url: `${CommonDataManagerInst.apiBaseUrl}/analytics/add_action_analytics`,\r\n    body: { action, ...extraInfo },\r\n  });\r\n};\r\n\r\nexport const syncGologinCompetitorsMetadata = (gologinMetadata: ICheckCompetitorsAppsData): Promise<any> => makeRequest({\r\n  method: 'PUT',\r\n  url: `${CommonDataManagerInst.apiBaseUrl}/gologin-settings/gologin-metadata`,\r\n  body: gologinMetadata,\r\n});\r\n","import { access } from 'fs/promises';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { getCurrentMetadata, saveMetadata } from './check-competitors-config.utils';\r\nimport { ICompetitorCheckResult } from './interfaces/check-result.interface';\r\nimport { E_ACTIONS_WITH_COMPETITORS_APPS, ICheckCompetitorsAppsData } from '../../interfaces/check-competitors.interfaces';\r\nimport { CommonDataManager } from '../../managers/common-data-manager';\r\nimport { getPathOs } from '../../utils/path-platforms';\r\nimport { sendErrorToSentry } from '../../utils/sentry';\r\nimport { decryptCompetitorName, encryptCompetitorName } from '../crypto.utils';\r\nimport { electronSendActionAnalytics, syncGologinCompetitorsMetadata } from '../utils';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\nconst pathOS = getPathOs();\r\nconst {\r\n  DOLPHIN_DIR_PATH,\r\n  OCTO_DIR_PATH,\r\n  MULTILOGIN_DIR_PATH,\r\n  ADSPOWER_DIR_PATH,\r\n  UNDETECTABLE_DIR_PATH,\r\n  INCOGNITION_DIR_PATH,\r\n  INDIGO_DIR_PATH,\r\n  MORELOGIN_DIR_PATH,\r\n} = pathOS;\r\n\r\nconst pathsData: { [name: string]: string } = {\r\n  DOLPHIN_DIR_PATH,\r\n  OCTO_DIR_PATH,\r\n  MULTILOGIN_DIR_PATH,\r\n  ADSPOWER_DIR_PATH,\r\n  UNDETECTABLE_DIR_PATH,\r\n  INCOGNITION_DIR_PATH,\r\n  INDIGO_DIR_PATH,\r\n  MORELOGIN_DIR_PATH,\r\n};\r\n\r\nconst checkCompetitorsApps = async (): Promise<ICompetitorCheckResult[]> => {\r\n  const promises = Object.keys(pathsData).map((pathToApp: string): Promise<ICompetitorCheckResult> => {\r\n    const [COMPETITOR_NAME] = pathToApp.split('_');\r\n\r\n    return access(pathsData[pathToApp]).then(() => ({ [COMPETITOR_NAME]: true }), () => ({ [COMPETITOR_NAME]: false }));\r\n  });\r\n\r\n  return Promise.all(promises);\r\n};\r\n\r\nexport const checkCompetitorsMetadata = async (gologinMetadata: ICheckCompetitorsAppsData): Promise<void> => {\r\n  const { lastCheckDate = '' } = gologinMetadata;\r\n  let isSyncError = false;\r\n\r\n  const newMetadata: any = {};\r\n  let currentMetadata: any = {};\r\n\r\n  try {\r\n    const isAbleToCheckMetadata =\r\n      !lastCheckDate ||\r\n      moment(lastCheckDate).utc().add(1, 'd').valueOf() < moment().utc().valueOf();\r\n\r\n    if (!(isAbleToCheckMetadata && CommonDataManagerInst.accessToken)) {\r\n      return;\r\n    }\r\n\r\n    const checkInstallCompetitorsResults = await checkCompetitorsApps();\r\n    checkInstallCompetitorsResults.forEach((checkInstallCompetitorResult) => {\r\n      Object.keys(checkInstallCompetitorResult).forEach(key => {\r\n        newMetadata[encryptCompetitorName(key)] = checkInstallCompetitorResult[key];\r\n      });\r\n    });\r\n\r\n    currentMetadata = await getCurrentMetadata();\r\n    const { data: currentCompetitorsData = {} } = currentMetadata;\r\n    const competitorsNames = Object.keys(newMetadata);\r\n\r\n    const promises = competitorsNames.map((competitor): Promise<string> | null => {\r\n      const isInstalled = !currentCompetitorsData[competitor] && newMetadata[competitor];\r\n      const isDeleted = currentCompetitorsData[competitor] && !newMetadata[competitor];\r\n      const decryptedName = decryptCompetitorName(competitor).toLowerCase();\r\n\r\n      if (!(isInstalled || isDeleted)) {\r\n        return null;\r\n      }\r\n\r\n      const action = isInstalled ? E_ACTIONS_WITH_COMPETITORS_APPS.INSTALLED : E_ACTIONS_WITH_COMPETITORS_APPS.UNINSTALLED;\r\n\r\n      return sendCompetitorAnalytics({ action, actionId: currentMetadata.fingerprint, decryptedName });\r\n    });\r\n\r\n    await Promise.all(promises)\r\n      .then((results) => {\r\n        if (results.includes('error')) {\r\n          isSyncError = true;\r\n        }\r\n      })\r\n      .catch((error: unknown) => {\r\n        isSyncError = true;\r\n        const message = error instanceof Error ? error.message : error;\r\n        sendErrorToSentry({\r\n          message, tags: [['scenario', 'check-competitors']],\r\n          transactionName: 'check-competitors-apps-states-error', level: 'warning',\r\n        });\r\n      });\r\n  } catch (error: unknown) {\r\n    isSyncError = true;\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, tags: [['scenario', 'check-competitors']],\r\n      transactionName: 'in-check-process-error', level: 'warning',\r\n    });\r\n  }\r\n\r\n  if (isSyncError) {\r\n    return;\r\n  }\r\n\r\n  const metadata = {\r\n    ...currentMetadata,\r\n    data: newMetadata,\r\n  };\r\n\r\n  await saveMetadata(metadata).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, tags: [['scenario', 'check-competitors']],\r\n      transactionName: 'save-metadata-error', level: 'warning',\r\n    });\r\n  });\r\n\r\n  syncGologinCompetitorsMetadata({\r\n    lastCheckDate: moment().utc().toDate(),\r\n  }).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, tags: [['scenario', 'check-competitors']],\r\n      transactionName: 'sync-metadata-with-db-error', level: 'warning',\r\n    });\r\n  });\r\n};\r\n\r\nconst sendCompetitorAnalytics = ({\r\n  action,\r\n  actionId,\r\n  decryptedName,\r\n}: {\r\n  action: E_ACTIONS_WITH_COMPETITORS_APPS;\r\n  actionId: string;\r\n  decryptedName: string;\r\n}): Promise<string> =>\r\n  electronSendActionAnalytics(`${action} - ${decryptedName}`, {\r\n    actionInfo: decryptedName,\r\n    actionId,\r\n  })\r\n    .then(() => 'ok')\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      sendErrorToSentry({\r\n        message, tags: [['scenario', 'check-competitors'], ['competitor', decryptedName]],\r\n        transactionName: `sending-analytics-${action}-error`, level: 'warning',\r\n      });\r\n\r\n      return 'error';\r\n    });\r\n","/* eslint-disable camelcase */\r\nimport { access, rmdir } from 'fs/promises';\r\nimport { join, sep } from 'path';\r\n\r\nimport { IExtractProfileResult } from '../../interfaces/profile-extractor.interfaces';\r\nimport { loadCookiesFromFile } from '../../utils/crypto/cookies-decryptor';\r\nimport { getPathOs } from '../../utils/path-platforms';\r\nimport { decompressProfile } from '../../utils/profile-archiver';\r\nimport { sendErrorToSentry } from '../../utils/sentry';\r\nimport withRetry from '../../utils/with-retry';\r\n\r\nconst pathOS = getPathOs();\r\n\r\nexport const getDolphinProfilesCookies = async (profileIds: string[]): Promise<any[]> => {\r\n  const promises = profileIds.map(async (profileId) => {\r\n    const pathToProfileArchive =\r\n      join(\r\n        pathOS.DOLPHIN_DIR_PATH,\r\n        sep,\r\n        'browser_profiles',\r\n        sep,\r\n        profileId,\r\n        sep,\r\n        `${profileId}.datadir.zip`,\r\n      );\r\n\r\n    const isProfileDataExists = await access(pathToProfileArchive)\r\n      .then(() => true, () => false);\r\n\r\n    if (!isProfileDataExists) {\r\n      return null;\r\n    }\r\n\r\n    const pathToUnzip = join(\r\n      pathOS.BASE_FOLDER,\r\n      sep,\r\n      'dolphin-temp',\r\n      sep,\r\n      profileId,\r\n    );\r\n\r\n    const decompressRes = await extractProfile(pathToProfileArchive, pathToUnzip);\r\n    if (decompressRes.status === 'error') {\r\n      return null;\r\n    }\r\n\r\n    const pathToCookies = join(\r\n      pathToUnzip,\r\n      sep,\r\n      'Default',\r\n      sep,\r\n      'Cookies',\r\n    );\r\n\r\n    const cookiesFileReq = await loadCookiesFromFile(pathToCookies, true).finally(() =>\r\n      rmdir(pathToUnzip, { recursive: true }));\r\n\r\n    const { cookies = [] } = cookiesFileReq;\r\n    if (!cookies.length) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      profileId,\r\n      cookies,\r\n    };\r\n  });\r\n\r\n  return Promise.all(promises);\r\n};\r\n\r\nconst extractProfile = async (zipPath: string, profilePath: string): Promise<IExtractProfileResult>  => {\r\n  console.log(`zipPath: ${zipPath}, profilePath: ${profilePath}`);\r\n  const decompressRes = await withRetry<IExtractProfileResult>({\r\n    fn() {\r\n      return decompressProfile(zipPath, profilePath)\r\n        .then(() => ({ status: 'success' }));\r\n    },\r\n    retryDelay: 300,\r\n  }).catch(async (error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    if (typeof message === 'string' && message === 'Invalid filename') {\r\n      const isExists = await access(zipPath).then(() => true, () => false);\r\n      console.log('input: ', zipPath);\r\n      console.log('isFolderExists: ', isExists);\r\n    }\r\n\r\n    sendErrorToSentry({\r\n      message, transactionName: 'extract-dolphin-profile', level: 'fatal',\r\n      tags: [['scenario', 'import-dolphin-cookies']],\r\n    });\r\n\r\n    console.error('error extracting dolphin profile zip');\r\n    console.log(zipPath);\r\n\r\n    return { status: 'error', error };\r\n  }) || {};\r\n\r\n  return decompressRes;\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"body-parser\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"is-port-reachable\");","import * as isPortReachable from 'is-port-reachable';\r\n\r\nexport const getRandomPort = async (): Promise<number> => {\r\n  let port = getRandomInt(20000, 30000);\r\n  let isPortBusy = await isPortReachable(port);\r\n  while (isPortBusy) {\r\n    port = getRandomInt(20000, 30000);\r\n    isPortBusy = await isPortReachable(port);\r\n  }\r\n\r\n  return port;\r\n};\r\n\r\nconst getRandomInt = (min: number , max: number): number => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n","import { Router } from 'express';\r\nimport got from 'got';\r\nimport moment from 'moment';\r\nimport kill from 'tree-kill';\r\n\r\nimport { sendErrorToSentry } from '../../../electron/utils/sentry';\r\nimport { IStartProfileCb, IWebSocketDebugger } from '../../interfaces/server.api.interfaces';\r\nimport { CommonDataManager } from '../../managers/common-data-manager';\r\nimport {\r\n  loadProfile,\r\n  killProfile,\r\n  BRAVE_PROCESSES,\r\n} from '../../managers/profile/renderer';\r\nimport { getRandomPort } from '../../utils/get-random-port';\r\nimport { apiRequest } from '../src/services/request';\r\n\r\nconst router = Router();\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nrouter.get('/service/check-server', (req, res) => {\r\n  console.log('check-server');\r\n  res.status(200);\r\n\r\n  return res.json({\r\n    status: true,\r\n  });\r\n});\r\n\r\nrouter.post('/service/credentials', (req, res) => {\r\n  console.log('credentials');\r\n  const {\r\n    access = '',\r\n    api = 'https://api.gologin.com',\r\n    twoFa = '',\r\n  } = req.body;\r\n\r\n  global.credentials = {\r\n    access,\r\n    api,\r\n    twoFa,\r\n    userAgent: req.headers['user-agent'],\r\n  };\r\n\r\n  res.status(200);\r\n\r\n  return res.json({\r\n    credentials: global.credentials,\r\n  });\r\n});\r\n\r\nrouter.post('/browser/start-profile', async (req, res) => {\r\n  console.log('start-profile');\r\n  const { profileId = '', sync = false } = req.body;\r\n  if (!profileId) {\r\n    return res.status(400).send('Invalid params').end();\r\n  }\r\n\r\n  let debuggingPort = 0;\r\n  if (sync) {\r\n    debuggingPort = await getRandomPort();\r\n  }\r\n\r\n  const startProfileCb = async (_: any, error: IStartProfileCb = {} as IStartProfileCb): Promise<void> => {\r\n    if (error) {\r\n      const { status = 400, message = '' } = error;\r\n\r\n      return res.status(status).send(message).end();\r\n    }\r\n\r\n    let wsUrl = '';\r\n    if (debuggingPort) {\r\n      const data = await got(`http://127.0.0.1:${debuggingPort}/json/version`).json<IWebSocketDebugger>().catch(() => null);\r\n      if (data) {\r\n        wsUrl = data.webSocketDebuggerUrl;\r\n      }\r\n    }\r\n\r\n    res.status(200).json({ status: 'success', wsUrl });\r\n  };\r\n\r\n  const remoteApiOptions = {\r\n    cb: startProfileCb,\r\n    sync,\r\n    debuggingPort,\r\n  };\r\n\r\n  await loadProfile({\r\n    profileId,\r\n    iconBase64: '',\r\n    channel: global.channel,\r\n    remoteApiOptions,\r\n    launchViaRestApi: true,\r\n  }).catch(() => null);\r\n});\r\n\r\nrouter.post('/browser/stop-profile', async (req, res) => {\r\n  console.log('stop-profile');\r\n  const { profileId = '' } = req.body;\r\n  if (!profileId) {\r\n    return res.status(400).send('Invalid params').end();\r\n  }\r\n\r\n  killProfile(profileId);\r\n\r\n  return res.status(204).end();\r\n});\r\n\r\nrouter.get('/cookies/:id', async (req, res): Promise<any|Record<string, any>|number> => {\r\n  console.log('get cookies');\r\n  if (req.query?.isAvailable === 'true') {\r\n    return res.json({\r\n      status: true,\r\n    });\r\n  }\r\n\r\n  if (BRAVE_PROCESSES[req.params.id]?.init) {\r\n    return res.json([]);\r\n  }\r\n\r\n  const startProfileTimestamp = BRAVE_PROCESSES[req.params.id]?.startProfileTimestamp;\r\n  const cookies = await apiRequest({\r\n    endpoint: `/browser/${req.params.id}/cookies`,\r\n    method: 'GET',\r\n  }) || [];\r\n\r\n  if (startProfileTimestamp) {\r\n    const timeDif = moment.now() - startProfileTimestamp;\r\n    console.log(timeDif, 'browser start');\r\n\r\n    apiRequest({\r\n      endpoint: '/analytics/compound_action_analytics',\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${CommonDataManagerInst.accessToken}`,\r\n        'user-agent': CommonDataManagerInst.userAgent,\r\n        'x-two-factor-token': CommonDataManagerInst.twoFaKey || '',\r\n      },\r\n      body: JSON.stringify({\r\n        action: 'browser opened',\r\n        time: timeDif,\r\n        mode: BRAVE_PROCESSES[req.params.id]?.startMode || 'unknown',\r\n        profile: req.params.id.toString(),\r\n      }),\r\n    }).catch(() => null);\r\n  }\r\n\r\n  if (BRAVE_PROCESSES[req.params.id]) {\r\n    BRAVE_PROCESSES[req.params.id].init = true;\r\n  }\r\n\r\n  return res.json(cookies);\r\n});\r\n\r\nrouter.post('/cookies/:id', async (req, res) => {\r\n  console.log('post cookies');\r\n  const request = await apiRequest({\r\n    endpoint: `/browser/${req.params.id}/cookies`,\r\n    method: 'POST',\r\n    body: req.body,\r\n  });\r\n\r\n  return res.json(request);\r\n});\r\n\r\nrouter.post('/cookies/:id/cookies_stats', async(req, res) => {\r\n  console.log('cookies_stats');\r\n  const request = await apiRequest({\r\n    endpoint: `/browser/${req.params.id}/cookies/cookies_stats`,\r\n    method: 'POST',\r\n    body: req.body,\r\n  });\r\n\r\n  return res.json(request);\r\n});\r\n\r\nrouter.get('/session/ready', (req, res) => res.end());\r\n\r\nrouter.get('/timer/update/:id', (req, res) => res.end());\r\n\r\n// маршрут для полного закрытия браузер на маке\r\nrouter.get('/close/:id', (req, res) => {\r\n  console.log('close');\r\n  const profileId = req.params.id;\r\n  try {\r\n    if (process.platform === 'darwin') {\r\n      console.log('Closing browser...');\r\n      BRAVE_PROCESSES[profileId] && kill(BRAVE_PROCESSES[profileId].orbitaProc?.pid, 'SIGTERM');\r\n    }\r\n  } catch(error: unknown) {\r\n    console.log(profileId);\r\n    console.log(BRAVE_PROCESSES);\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'kill-process-mac',\r\n      tags: [['scenario', 'run-profile'], ['profileId', profileId]],\r\n    });\r\n  }\r\n\r\n  res.end();\r\n});\r\n\r\nexport default router;\r\n","import bodyParser from 'body-parser';\r\nimport * as cors from 'cors';\r\nimport express from 'express';\r\nimport * as isPortReachable from 'is-port-reachable';\r\n\r\nimport { sendCommonErrorToSentry } from '../../electron/utils/sentry';\r\nimport Router from './routes';\r\n\r\nconst app = express();\r\n\r\nconst corsOptions = {\r\n  origin: /.*/,\r\n  optionsSuccessStatus: 200,\r\n};\r\n\r\napp.use(cors(corsOptions));\r\napp.use(bodyParser.json({ limit: '10mb' }));\r\napp.use(Router);\r\n\r\nexport async function init(global: any): Promise<void> {\r\n  let port = 36912;\r\n  let isPortBusy = await isPortReachable(port);\r\n  while (isPortBusy) {\r\n    isPortBusy = await isPortReachable(++port);\r\n  }\r\n\r\n  const server = app.listen(port, () => {\r\n    console.log(`Local server started on port ${port}`);\r\n  });\r\n\r\n  global.appPort = port;\r\n  server.on('error', (error) => {\r\n    if (error.message.includes('EADDRINUSE')) {\r\n      init(global);\r\n\r\n      return;\r\n    }\r\n\r\n    sendCommonErrorToSentry({\r\n      message: error.message, transactionName: 'local-server-init-error',\r\n      tags: [['name', 'local-server-init-error']],\r\n    });\r\n  });\r\n}\r\n","import { access, mkdir } from 'fs/promises';\r\nimport path from 'path';\r\n\r\nimport { BrowserWindow } from 'electron';\r\n\r\nimport { CONFIG_APP_PATH, getPathOs } from '../../electron/utils/path-platforms';\r\nimport { ICheckCompetitorsArgs, IMigrationData } from '../interfaces/check-competitors.interfaces';\r\nimport { readConfigFile, saveConfigFile } from '../utils/config-manager';\r\n\r\nconst pathOS = getPathOs();\r\n\r\nconst pathToMigrationDataFolder = path.join(CONFIG_APP_PATH, path.sep, 'migration');\r\nconst migrationConfigFileName = 'migrationConfig.json';\r\nconst configFilePath = path.join(pathToMigrationDataFolder, path.sep, migrationConfigFileName);\r\n\r\nexport const checkCompetitorsApps = async (window: BrowserWindow|null, args: ICheckCompetitorsArgs): Promise<IMigrationData|null> => {\r\n  const { migrationData = {} } = args;\r\n  if (migrationData.isDolphinChecked) {\r\n    return null;\r\n  }\r\n\r\n  const migrationConfig = await readConfigFile(configFilePath);\r\n  if (migrationConfig) {\r\n    const { dolphinChecked } = migrationConfig;\r\n    if (dolphinChecked) {\r\n      return {\r\n        isDolphinChecked: true,\r\n      };\r\n    }\r\n  }\r\n\r\n  const dolphinAppPath = pathOS.DOLPHIN_DIR_PATH;\r\n  const dolphinExists = await access(dolphinAppPath).then(() => true, () => false);\r\n  if (!dolphinExists) {\r\n    return null;\r\n  }\r\n\r\n  window && window.webContents.send('dolphin-anty-detected');\r\n\r\n  const changedConfig = migrationConfig || {};\r\n  changedConfig.dolphinChecked = true;\r\n  await mkdir(pathToMigrationDataFolder, { recursive: true });\r\n  await saveConfigFile(configFilePath, changedConfig, 'migration').catch(() => void 0);\r\n\r\n  return {\r\n    isDolphinChecked: true,\r\n  };\r\n};\r\n","import path from 'path';\r\n\r\nimport { STORAGE_KEY_PREFIX } from '../../constants/constants';\r\n\r\nexport const ACCESS_TOKEN_STORAGE_KEY = `${STORAGE_KEY_PREFIX}:access_token`;\r\nexport const BASE_URL = `file://${path.join(__dirname, 'index.html')}`;\r\n","import { BrowserWindow } from 'electron';\r\n\r\nimport { ACCESS_TOKEN_STORAGE_KEY, BASE_URL } from './constants';\r\nimport { TWO_FA_TOKEN_KEY_NAME } from '../../../common/constants/constants';\r\nimport { sendErrorToSentry } from '../sentry';\r\n\r\nexport const handleOAuth = async (window: BrowserWindow, responseUrl = ''): Promise<void> => {\r\n  try {\r\n    const { searchParams } = new URL(responseUrl);\r\n    const accessToken = searchParams.get('accessToken');\r\n    const twoFaToken = searchParams.get('twoFaToken');\r\n    const isNewUser = !!searchParams.get('isNewUser');\r\n    if (!accessToken) {\r\n      return;\r\n    }\r\n\r\n    const pathToNavigateTo = isNewUser ? 'quiz' : 'profileList';\r\n    await window.webContents.executeJavaScript(`\r\n      localStorage.setItem('${ACCESS_TOKEN_STORAGE_KEY}', '${accessToken}');\r\n      localStorage.setItem('${TWO_FA_TOKEN_KEY_NAME}', '${twoFaToken}');\r\n    `);\r\n\r\n    const absolutePathUrl = new URL(`${BASE_URL}#/${pathToNavigateTo}`);\r\n    window.loadURL(absolutePathUrl.toString());\r\n  } catch (error) {\r\n    const message = error instanceof Error ? error.message : JSON.stringify(error);\r\n    sendErrorToSentry({\r\n      message, transactionName: 'google-oauth-error',\r\n      tags: [['scenario', 'google-oauth']],\r\n    });\r\n  }\r\n};\r\n","export const PROFILE_RUN_DEEP_LINK_EVENT_NAME = 'run-profile-with-external-protocol';\r\nexport const PROFILE_SHARE_DEEP_LINK_EVENT_NAME = 'share-profile-with-external-protocol';\r\n","/* eslint-disable id-length */\r\n\r\nexport const PRICING_ROUTE_NAME = 'checkout';\r\n\r\nexport const PROFILE_LIST_PAGE = '/profileList';\r\nexport const PRICING_PAGE = `/${PRICING_ROUTE_NAME}`;\r\nexport const PRICING_PAGE_WITH_OPENED_PAYMENT_METHODS = `${PRICING_PAGE}/payment-methods`;\r\n\r\n","import { BrowserWindow } from 'electron';\r\n\r\nimport { BASE_URL } from './constants';\r\nimport { OpenProfileViaLink } from '../../../common/constants/analytics';\r\nimport { PROFILE_RUN_DEEP_LINK_EVENT_NAME } from '../../../common/constants/events';\r\nimport { PROFILE_LIST_PAGE } from '../../../common/constants/routes';\r\nimport { sendActionAnalytics } from '../send-action-analytics';\r\nimport { sendErrorToSentry } from '../sentry';\r\n\r\nexport const handleProfileRun = async (window: BrowserWindow, responseUrl = ''): Promise<void> => {\r\n  const { href, searchParams, search } = new URL(responseUrl);\r\n  const deepLinkProtocol = searchParams.get('protocol') || 'custom';\r\n  const analyticsDataBase = { mode: deepLinkProtocol };\r\n  sendActionAnalytics(OpenProfileViaLink.startedHandling, analyticsDataBase);\r\n  if (deepLinkProtocol !== 'http') {\r\n    sendActionAnalytics(OpenProfileViaLink.visited, analyticsDataBase);\r\n  }\r\n\r\n  const [_protocolName, argument1, argument2] = href.split('/').filter(Boolean);\r\n  const profileIdOrName = argument1 === 'open' && argument2 ? argument2.replace(search, '') : argument1;\r\n  if (!profileIdOrName) {\r\n    return sendErrorToSentry({\r\n      message: 'profile id or name is falsy', transactionName: 'profile-id-or-name-is-falsy',\r\n      tags: [['scenario', 'open-profiles-via-link']],\r\n    });\r\n  }\r\n\r\n  const urlCurrent = window.webContents.getURL();\r\n  if (urlCurrent.includes(PROFILE_LIST_PAGE)) {\r\n    sendActionAnalytics(OpenProfileViaLink.startedRedirecting, { ...analyticsDataBase, actionInfo: PROFILE_LIST_PAGE });\r\n\r\n    return window.webContents.send(PROFILE_RUN_DEEP_LINK_EVENT_NAME, { profileIdOrName, deepLinkProtocol });\r\n  }\r\n\r\n  sendActionAnalytics(OpenProfileViaLink.startedRedirecting, analyticsDataBase);\r\n  const urlToLoad = `${BASE_URL}#${PROFILE_LIST_PAGE}?profile-id-or-name=${profileIdOrName}&protocol=${deepLinkProtocol}`;\r\n\r\n  return window.loadURL(urlToLoad.toString());\r\n};\r\n","import { IProfile } from '../../../../app/interfaces';\r\nimport { API_BASE_URL } from '../../../../common/constants/constants';\r\nimport { makeRequest } from '../../make-request';\r\n\r\ntype ShareLinkErrorMessage = 'tableProfiles.notification.cannotShareProfilesToYourself'|\r\n  'tableProfiles.notification.linkNotFound'|\r\n  'tableProfiles.notification.linkIsPaused';\r\n\r\nexport const shareProfilesViaLink = async (profileName: string, linkId: string): Promise<IProfile|ShareLinkErrorMessage|null> =>\r\n  makeRequest<IProfile|ShareLinkErrorMessage|null>({\r\n    url: `${API_BASE_URL}/share-links/profiles/share`,\r\n    method: 'POST',\r\n    body: { profileName, linkId },\r\n  }).then((profile) => profile).catch((error: unknown) => {\r\n    const errorMessage = error instanceof Error ? error.message : 'unknown';\r\n    switch (true) {\r\n      case errorMessage.includes('400'):\r\n        return 'tableProfiles.notification.cannotShareProfilesToYourself';\r\n      case errorMessage.includes('404'):\r\n        return 'tableProfiles.notification.linkNotFound';\r\n      case errorMessage.includes('405'):\r\n        return 'tableProfiles.notification.linkIsPaused';\r\n      default:\r\n        return null;\r\n    }\r\n  });\r\n","import { BrowserWindow } from 'electron';\r\n\r\nimport { shareProfilesViaLink } from './api';\r\nimport { PROFILE_SHARED_KEY_NAME } from '../../../../common/constants/constants';\r\nimport { PROFILE_SHARE_DEEP_LINK_EVENT_NAME } from '../../../../common/constants/events';\r\nimport { PROFILE_LIST_PAGE } from '../../../../common/constants/routes';\r\nimport { CommonDataManager } from '../../../managers/common-data-manager';\r\nimport { updateDeletedProfiles } from '../../../managers/profile/renderer';\r\nimport { sendErrorToSentry } from '../../sentry';\r\nimport { ACCESS_TOKEN_STORAGE_KEY, BASE_URL } from '../constants';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nexport const handleShare = async (window: BrowserWindow, responseUrl = ''): Promise<void> => {\r\n  const { pathname, searchParams } = new URL(responseUrl);\r\n  const [profileName, linkId] = pathname.split('/').filter(Boolean);\r\n  const accessTokenFromWeb = searchParams.get('access-token');\r\n  if (!(profileName && linkId)) {\r\n    return;\r\n  }\r\n\r\n  const accessTokenFromDesktop = CommonDataManagerInst.accessToken;\r\n  try {\r\n    if (!accessTokenFromDesktop && accessTokenFromWeb) {\r\n      CommonDataManagerInst.accessToken = accessTokenFromWeb;\r\n      await window.webContents.executeJavaScript(`\r\n        localStorage.setItem('${ACCESS_TOKEN_STORAGE_KEY}', '${accessTokenFromWeb}');\r\n      `);\r\n    }\r\n\r\n    if (!CommonDataManagerInst.accessToken) {\r\n      return;\r\n    }\r\n\r\n    const response = await shareProfilesViaLink(profileName, linkId);\r\n    if (!response || typeof response === 'string') {\r\n      return window.webContents.send(PROFILE_SHARE_DEEP_LINK_EVENT_NAME, { message: response });\r\n    }\r\n\r\n    updateDeletedProfiles([response.id]);\r\n    const urlCurrent = window.webContents.getURL();\r\n    if (urlCurrent.includes(PROFILE_LIST_PAGE)) {\r\n      return window.webContents.send(PROFILE_SHARE_DEEP_LINK_EVENT_NAME, {\r\n        profile: { ...response, isShared: true },\r\n        isUpdatePage: urlCurrent.includes('/update/'),\r\n      });\r\n    }\r\n\r\n    const profileJson = JSON.stringify({ ...response, isShared: true });\r\n    await window.webContents.executeJavaScript(`\r\n      sessionStorage.setItem('${PROFILE_SHARED_KEY_NAME}', '${profileJson}');\r\n    `).catch(console.error);\r\n\r\n    return window.loadURL(`${BASE_URL}#${PROFILE_LIST_PAGE}`);\r\n  } catch (error) {\r\n    const message = error instanceof Error ? error.message : JSON.stringify(error);\r\n    sendErrorToSentry({\r\n      message, transactionName: 'share-profiles-via-link-error',\r\n      tags: [['scenario', 'share-profiles-via-link']],\r\n    });\r\n  }\r\n};\r\n","import { BrowserWindow } from 'electron';\r\n\r\nimport { BASE_URL } from './constants';\r\nimport { handleOAuth } from './handle-o-auth';\r\nimport { handleProfileRun } from './handle-profile-run';\r\nimport { handleShare } from './handle-share';\r\n\r\nexport const handleDeepLink = async (window: BrowserWindow|null, responseUrl = ''): Promise<void> => {\r\n  if (!(window && responseUrl.includes('gologin://'))) {\r\n    console.info('Skipping handling a deep link');\r\n\r\n    return;\r\n  }\r\n\r\n  const [_protocolName, argument1, argument2, argument3] = responseUrl.split('/').filter(Boolean);\r\n  switch (true) {\r\n    case argument1.startsWith('o-auth'):\r\n      return handleOAuth(window, responseUrl);\r\n    case argument1.startsWith('redirect') && argument2.startsWith('after-payment'): {\r\n      const absolutePathUrl = new URL(`${BASE_URL}#/profileList`);\r\n      window.loadURL(absolutePathUrl.toString());\r\n\r\n      break;\r\n    }\r\n    case argument2 && argument3 && argument1 === 'share':\r\n      return handleShare(window, responseUrl);\r\n    case argument1 === 'open' || (argument1 && !argument2):\r\n      return handleProfileRun(window, responseUrl);\r\n    default:\r\n      return console.info('Pathname is not recognised');\r\n  }\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"keytar\");","import keytar from 'keytar';\r\n\r\nimport { sendErrorToSentry } from './sentry';\r\nimport { CommonDataManager } from '../managers/common-data-manager';\r\n\r\nconst CommonDataManagerInst = new CommonDataManager();\r\n\r\nconst vaultService = 'GoLogin';\r\nconst vaultAccessTokenAccount = 'temp_auth_token';\r\nconst googleClientIdKey = 'google_client_id';\r\n\r\nexport const saveAccessToken = (): Promise<void> =>\r\n  writeAccessTokenToVault().catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'write-app-config-error', level: 'warning',\r\n      tags: [['scenario', 'write-app-config']],\r\n    });\r\n  });\r\n\r\nexport const saveGoogleClientIdToVault = async (googleClientId: string): Promise<void> => {\r\n  const currentGid = await keytar.getPassword(vaultService, vaultAccessTokenAccount);\r\n  if (currentGid === googleClientId) {\r\n    return;\r\n  }\r\n\r\n  await keytar.setPassword(vaultService, googleClientIdKey, googleClientId);\r\n};\r\n\r\nexport const getGoogleClientIdFromVault = keytar.getPassword(vaultService, googleClientIdKey);\r\n\r\nexport const checkAccessTokenInVault = async (): Promise<void> => {\r\n  const accessToken = await keytar.getPassword(vaultService, vaultAccessTokenAccount);\r\n  if (!accessToken) {\r\n    return;\r\n  }\r\n\r\n  CommonDataManagerInst.accessToken = accessToken;\r\n  keytar.deletePassword(vaultService, vaultAccessTokenAccount).catch(() => null);\r\n};\r\n\r\nconst writeAccessTokenToVault = async (): Promise<void> =>\r\n  keytar.setPassword(vaultService, vaultAccessTokenAccount, CommonDataManagerInst.accessToken);\r\n","/* eslint-disable max-lines */\r\nimport { rm } from 'fs/promises';\r\nimport path from 'path';\r\nimport url from 'url';\r\n\r\nimport * as remoteMain from '@electron/remote/main';\r\nimport * as Sentry from '@sentry/electron';\r\nimport { addExtensionMethods } from '@sentry/tracing';\r\nimport {\r\n  app,\r\n  BrowserWindow,\r\n  dialog,\r\n  ipcMain,\r\n  Menu,\r\n  nativeImage,\r\n  Tray,\r\n  globalShortcut,\r\n  screen,\r\n  nativeTheme,\r\n} from 'electron';\r\nimport { autoUpdater } from 'electron-updater';\r\n\r\nimport { ThemeType } from './app/interfaces/theme.type';\r\nimport { isNotNull } from './common/typescript/predicates';\r\nimport { checkCompetitorsMetadata } from './electron/analytics/competitors/metadata.utils';\r\nimport { IAppConfigRecord } from './electron/interfaces/app-config.interfaces';\r\nimport { IOrbitaWinCompatibilityData } from './electron/interfaces/browser-releases.interfaces';\r\nimport { BrowserUserDataManager } from './electron/managers/browser.user-data.manager';\r\nimport { getDolphinProfilesCookies } from './electron/migration/dolphin/import-dolphin-cookies';\r\nimport { init as initServer } from './electron/server';\r\nimport { saveAppConfig, setupAppConfig, writeToAppConfig } from './electron/utils/app-config.utils';\r\nimport { saveBrowserIconsData } from './electron/utils/browser-icons';\r\nimport { checkCompetitorsApps } from './electron/utils/check-anty.utils';\r\nimport { ElectronError } from './electron/utils/custom-errors';\r\nimport { handleDeepLink } from './electron/utils/deep-links';\r\nimport { getPathOs } from './electron/utils/path-platforms';\r\nimport { initSentry, sendErrorToSentry } from './electron/utils/sentry';\r\nimport { getOS } from './electron/utils/userOs';\r\nimport {\r\n  checkAccessTokenInVault,\r\n  saveAccessToken,\r\n  getGoogleClientIdFromVault,\r\n  saveGoogleClientIdToVault,\r\n} from './electron/utils/windows-vault.utils';\r\nimport packageSettings from '../package.json';\r\n\r\ntry {\r\n  require('electron-reload')(__dirname, {\r\n    electron: path.join(__dirname, 'node_modules', '.bin', 'electron'),\r\n  });\r\n} catch {\r\n  // do nothing\r\n}\r\n\r\nconst { name, version, subVersion } = packageSettings;\r\n\r\nlet isAppUpdateChecking = false;\r\nlet isAppUpdateDownloading = false;\r\nlet isAppUpdateReady = false;\r\n\r\ninitServer(global);\r\n\r\naddExtensionMethods();\r\n\r\nremoteMain.initialize();\r\n\r\nlet isApplicationUpdate = false;\r\n\r\nconst folderPaths = getPathOs();\r\nconsole.log('folderPaths:', folderPaths);\r\nconst requireFinished = Date.now();\r\n\r\nconst DEEP_LINKS_PROTOCOL = 'gologin';\r\nlet deepLinkOnAppLaunch = '';\r\nif (process.platform === 'win32') {\r\n  deepLinkOnAppLaunch = process.argv.find(arg => arg.startsWith(DEEP_LINKS_PROTOCOL)) || '';\r\n}\r\n\r\nlet window: BrowserWindow | null;\r\n(global as any).channel = null;\r\n\r\nlet translationData: {\r\n  language: string;\r\n  closeAppTitle: string;\r\n  closeAppMessage: string;\r\n  closeAppBtnClose: string;\r\n  closeAppBtnCancel: string;\r\n};\r\n\r\nlet theme: ThemeType;\r\n\r\nconst gotApplicationLock = app.requestSingleInstanceLock();\r\n\r\ninitSentry();\r\n\r\nconst startAppSentryTransaction = Sentry.startTransaction({\r\n  name: 'start-app',\r\n});\r\n\r\nconst electronSentrySpan = startAppSentryTransaction.startChild({\r\n  op: 'electron',\r\n});\r\n\r\nconst contextMenuTray = Menu.buildFromTemplate([{\r\n  label: 'Show',\r\n  click: (): void => window?.show(),\r\n}, {\r\n  label: 'Quit',\r\n  click: (): void => {\r\n    app.quit();\r\n  },\r\n}]);\r\n\r\nconst checkAppUpdate = (): void => {\r\n  if (isAppUpdateReady || isAppUpdateDownloading || isAppUpdateChecking) {\r\n    return;\r\n  }\r\n\r\n  isAppUpdateChecking = true;\r\n  autoUpdater.checkForUpdatesAndNotify()\r\n    .then((result) => {\r\n      if (!result) {\r\n        isAppUpdateChecking = false;\r\n      }\r\n    })\r\n    .catch(() => null);\r\n};\r\n\r\nconst menuTemplate: any = [\r\n  {\r\n    label: 'GoLogin',\r\n    submenu: [\r\n      {\r\n        label: 'Quit',\r\n        accelerator: 'CmdOrCtrl+Q',\r\n        click: (): void => {\r\n          app.quit();\r\n        },\r\n      },\r\n      {\r\n        label: 'Hide',\r\n        accelerator: 'CmdOrCtrl+W',\r\n        click: (): void => {\r\n          window?.hide();\r\n        },\r\n      },\r\n    ],\r\n  }, {\r\n    label: 'Edit',\r\n    submenu: [\r\n      { role: 'undo' },\r\n      { role: 'redo' },\r\n      { type: 'separator' },\r\n      { role: 'cut' },\r\n      { role: 'copy' },\r\n      { role: 'paste' },\r\n      { role: 'selectAll' },\r\n    ],\r\n  },\r\n];\r\n\r\nlet domRenderSentrySpan: any;\r\nlet domStarted: number;\r\n\r\nprocess.env.NODE_ENV === 'production' &&\r\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menuTemplate));\r\n\r\nconst title = `${name} v${version} ${subVersion}`;\r\n\r\nconst createWindow = async (): Promise<void> => {\r\n  const { CommonDataManager } = await import('./electron/managers/common-data-manager');\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n\r\n  const windowSettings: IAppConfigRecord = {\r\n    windowHeight: 768,\r\n    windowWidth: 1200,\r\n    windowPosX: 0,\r\n    windowPosY: 0,\r\n    isFullScreen: false,\r\n    isMaximized: false,\r\n    backgroundColor: '#F9F9F9',\r\n  };\r\n\r\n  await setupAppConfig(windowSettings);\r\n\r\n  process.env.GOLOGIN_ELECTRON_THEME = CommonDataManagerInst.appConfig.theme || 'system';\r\n  const primaryDisplay = screen.getPrimaryDisplay();\r\n  const { width } = primaryDisplay.workAreaSize;\r\n  window = new BrowserWindow({\r\n    minWidth: 1024,\r\n    minHeight: 500,\r\n    width: windowSettings.windowWidth,\r\n    height: windowSettings.windowHeight,\r\n    x: windowSettings.windowPosX,\r\n    y: windowSettings.windowPosY,\r\n    useContentSize: true,\r\n    title,\r\n    webPreferences: {\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n    },\r\n    show: false,\r\n    backgroundColor: windowSettings.backgroundColor,\r\n  });\r\n\r\n  remoteMain.enable(window.webContents);\r\n\r\n  if (width <= 1400 || windowSettings.isMaximized) {\r\n    // maximize for small screens\r\n    window.maximize();\r\n  }\r\n\r\n  window.setFullScreen(windowSettings.isFullScreen);\r\n\r\n  setTimeout(() => (window as any).show(), 600);\r\n\r\n  window.webContents.on('new-window', (error) => error.preventDefault());\r\n  electronSentrySpan.finish();\r\n  domRenderSentrySpan = startAppSentryTransaction.startChild({ op: 'render-dom' });\r\n  domStarted = Date.now();\r\n  window.loadURL(\r\n    url.format({\r\n      pathname: path.join(__dirname, 'index.html'),\r\n      protocol: 'file:',\r\n      // host: 'app.gologin.com',\r\n      // protocol: 'https:',\r\n      slashes: true,\r\n    }),\r\n  );\r\n\r\n  // for development hot reload\r\n  // window.loadURL('http://localhost:8081/');\r\n\r\n  if (deepLinkOnAppLaunch) {\r\n    handleDeepLink(window, deepLinkOnAppLaunch);\r\n  }\r\n\r\n  const iconPath = path.join(__dirname, 'iconTemplate@5x.png');\r\n  (window as any).tray = new Tray(nativeImage.createFromPath(iconPath));\r\n  (window as any).tray.setToolTip('GoLogin');\r\n  (window as any).tray.setContextMenu(contextMenuTray);\r\n\r\n  (window as any).tray.on('double-click', () => window?.show());\r\n\r\n  window.on('close', (event) => {\r\n    console.log('Window Close Event Detected');\r\n\r\n    if (isApplicationUpdate) {\r\n      return;\r\n    }\r\n\r\n    console.log('No update application detected');\r\n    event.preventDefault();\r\n\r\n    if (window?.isFullScreen()) {\r\n      window.once('leave-full-screen', () => window?.hide());\r\n      window.setFullScreen(false);\r\n    } else {\r\n      window?.hide();\r\n    }\r\n  });\r\n\r\n  const os = await getOS();\r\n  if (os === 'win') {\r\n    await checkAccessTokenInVault();\r\n  }\r\n\r\n  globalShortcut.register('CmdOrCtrl+Shift+I', () => {\r\n    window?.isFocused() && window?.webContents.toggleDevTools();\r\n  });\r\n};\r\n\r\nconst closeApp = (): null => {\r\n  // Отключаем on-close event от window - он больше не понадобится\r\n  window && window.removeAllListeners('close');\r\n  // Закрываем окно\r\n  window && window.close();\r\n\r\n  return null;\r\n};\r\n\r\napp.on('activate', () => window?.show());\r\n\r\napp.on('render-process-gone', (event, webContents, details) => {\r\n  if (['clean-exit', 'killed'].includes(details.reason)) {\r\n    return;\r\n  }\r\n\r\n  console.log(details.reason);\r\n\r\n  sendErrorToSentry({\r\n    message: 'crash-electron-renderer', transactionName: 'crash-electron-renderer', level: 'fatal',\r\n    tags: [['scenario', 'crash-electron']],\r\n  });\r\n});\r\n\r\napp.on('child-process-gone', (event, details) => {\r\n  if (['clean-exit', 'killed'].includes(details.reason)) {\r\n    return;\r\n  }\r\n\r\n  console.log(details.reason);\r\n\r\n  sendErrorToSentry({\r\n    message: 'crash-electron-gpu', transactionName: 'crash-electron-gpu', level: 'fatal',\r\n    tags: [['scenario', 'crash-electron']],\r\n  });\r\n});\r\n\r\nconsole.log('gotApplicationLock', gotApplicationLock);\r\nif (!gotApplicationLock) {\r\n  app.quit();\r\n} else {\r\n  app.on('second-instance', async (event, commandLine, workingDirectory, additionalData) => {\r\n    console.info(event, commandLine, workingDirectory, additionalData);\r\n    const responseUrl = commandLine.at(-1);\r\n    if (window) {\r\n      window.isMinimized() && window.restore();\r\n      window.show();\r\n      window.focus();\r\n    } else if (responseUrl) {\r\n      deepLinkOnAppLaunch = responseUrl;\r\n    }\r\n\r\n    // handling `gologin://` urls on windows\r\n    await handleDeepLink(window, responseUrl);\r\n  });\r\n\r\n  app.on('ready', async () => {\r\n    const [{ checkGologinExtensions }, { checkSystemFonts }, { CommonDataManager }, { BrowserReleasesManager },\r\n      { ExtensionsManager }] = await Promise.all([\r\n        import('./electron/utils/check-gologin-extensions'),\r\n        import('./electron/utils/check-system-fonts'),\r\n        import('./electron/managers/common-data-manager'),\r\n        import('./electron/managers/browser-releases.manager'),\r\n        import('./electron/managers/extensions.manager'),\r\n      ]);\r\n\r\n    const CommonDataManagerInst = new CommonDataManager();\r\n    new BrowserReleasesManager().getSupportedOrbitaVersions(CommonDataManagerInst.apiBaseUrl).catch(() => null);\r\n    new BrowserReleasesManager().checkLocalOrbitaReleases().catch(() => null);\r\n\r\n    if (folderPaths.BASE_FOLDER) {\r\n      rm(folderPaths.BASE_FOLDER).catch((error) => console.log('Error in removing base folder:', error));\r\n    }\r\n\r\n    const extensionManagerInst = new ExtensionsManager();\r\n    extensionManagerInst.init()\r\n      .then(() => extensionManagerInst.updateExtensions())\r\n      .catch(() => void 0);\r\n\r\n    const BrowserUserDataManagerInst = new BrowserUserDataManager();\r\n\r\n    createWindow();\r\n    checkGologinExtensions().catch(console.log);\r\n    BrowserUserDataManagerInst.downloadFonts([], true).catch(() => null);\r\n\r\n    checkSystemFonts().catch(error => console.log('Error in checkSystemFonts:', error.message));\r\n    checkAppUpdate();\r\n  });\r\n\r\n  app.whenReady().then(() => {\r\n    let isProtocolCreated = false;\r\n\r\n    if (!process.defaultApp) {\r\n      isProtocolCreated = app.setAsDefaultProtocolClient(DEEP_LINKS_PROTOCOL);\r\n    } else if (process.argv.length >= 2) {\r\n      // required for windows\r\n      isProtocolCreated = app.setAsDefaultProtocolClient(\r\n        DEEP_LINKS_PROTOCOL,\r\n        process.execPath,\r\n        [path.resolve(process.argv[1])],\r\n      );\r\n    }\r\n\r\n    console.log('Protocol success creation:', isProtocolCreated);\r\n  });\r\n}\r\n\r\nautoUpdater.on('update-downloaded', () => {\r\n  isAppUpdateReady = true;\r\n  isAppUpdateChecking = false;\r\n  isAppUpdateDownloading = false;\r\n  window && window.webContents.send('app-update-downloaded');\r\n});\r\n\r\nautoUpdater.on('update-available', () => {\r\n  isAppUpdateDownloading = true;\r\n  isAppUpdateChecking = false;\r\n});\r\n\r\nautoUpdater.on('update-not-available', () => {\r\n  isAppUpdateChecking = false;\r\n});\r\n\r\nipcMain.handle('check-is-update-ready', () => {\r\n  if (isAppUpdateReady) {\r\n    window && window.webContents.send('app-update-downloaded');\r\n  }\r\n});\r\n\r\nautoUpdater.on('error', () => null);\r\n\r\nipcMain.handle('check-competitors-metadata', (event, args) => checkCompetitorsMetadata(args));\r\n\r\nipcMain.handle('check-competitors-apps-for-migration', (event, args) => checkCompetitorsApps(window, args));\r\n\r\nipcMain.handle('check-app-update', () => checkAppUpdate());\r\n\r\nipcMain.handle('app-loaded', () => {\r\n  const domReady = Date.now();\r\n  domRenderSentrySpan?.finish();\r\n  startAppSentryTransaction.finish();\r\n  saveBrowserIconsData(window);\r\n\r\n  console.log('electron: ', domStarted / 1000 - requireFinished / 1000);\r\n  console.log('dom: ', domReady / 1000 - domStarted / 1000);\r\n});\r\n\r\nipcMain.handle('set-user', async (event, args) => {\r\n  const { CommonDataManager } = await import('./electron/managers/common-data-manager');\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n\r\n  const { userId, isFirstSession, plan, planId } = args;\r\n  const systemTheme = nativeTheme.shouldUseDarkColors ? 'dark' : 'light';\r\n\r\n  CommonDataManagerInst.userPlanId = planId;\r\n  Sentry.setTag('is-first-session', isFirstSession);\r\n  Sentry.setUser({ id: userId });\r\n  Sentry.setTag('plan', plan);\r\n  Sentry.setTag('system-theme', systemTheme);\r\n});\r\n\r\nipcMain.handle('set-global-channel', (event) => {\r\n  (global as any).channel = event;\r\n});\r\n\r\nipcMain.handle('start-profile', async (event, args) => {\r\n  const { loadProfile } = await import('./electron/managers/profile/renderer');\r\n\r\n  const { profileId, proxyInfo, proxyEnabled, automation, icons, traceId, deepLinkProtocol } = args;\r\n  console.log('starting profile: ', profileId);\r\n\r\n  return loadProfile({ profileId, channel: event, proxyEnabled, proxyInfo, automation, icons, traceId, deepLinkProtocol })\r\n    .catch((error) => {\r\n      Sentry.captureException(new ElectronError(error), (scope) => {\r\n        scope.setLevel(<Sentry.Severity>'error');\r\n        scope.setTag('scenario', 'run-profile');\r\n        scope.setTransactionName('load-profile-error');\r\n        scope.setFingerprint(['load-profile-error']);\r\n\r\n        return scope;\r\n      });\r\n    });\r\n});\r\n\r\nipcMain.handle('retry-sync-profile', async (event, args) => {\r\n  const { profileId, onlyUpload = false } = args;\r\n  const { syncProfile } = await import('./electron/managers/profile/renderer');\r\n\r\n  return syncProfile({ profileId, channel: event, onlyUpload })\r\n    .catch((error: unknown) => {\r\n      const message = error instanceof Error ? error.message : error;\r\n      sendErrorToSentry({\r\n        message, transactionName: 'sync-profile-error',\r\n        tags: [['scenario', 'sync-profile']],\r\n      });\r\n    });\r\n});\r\n\r\nipcMain.handle('focus-orbita-window', async (event, arg) => {\r\n  const { focusOrbitaWindow } = await import('./electron/window-raiser/focus-orbita-utils');\r\n  focusOrbitaWindow(arg.profileId).catch((error: unknown) => {\r\n    const message = error instanceof Error ? error.message : error;\r\n    sendErrorToSentry({\r\n      message, transactionName: 'view-button-error',\r\n      tags: [['scenario', 'view-profile']],\r\n    });\r\n  });\r\n});\r\n\r\nipcMain.handle('send-translation-data-to-electron', (event, args) => {\r\n  translationData = args;\r\n});\r\n\r\nipcMain.handle('send-theme-to-electron', (event, args) => {\r\n  theme = args;\r\n});\r\n\r\nipcMain.handle('install-app-updates', async () => {\r\n  const [{ closeAllProfiles }, { CommonDataManager }] = await Promise.all([\r\n    import('./electron/managers/profile/renderer'),\r\n    import('./electron/managers/common-data-manager'),\r\n  ]);\r\n\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n  isApplicationUpdate = true;\r\n\r\n  const promises: Promise<void>[] = [closeAllProfiles()];\r\n  const isWindows = CommonDataManagerInst.userOs === 'win';\r\n  if (isWindows) {\r\n    promises.push(saveAccessToken());\r\n  }\r\n\r\n  await Promise.all(promises);\r\n  try {\r\n    autoUpdater.quitAndInstall();\r\n  } catch (error) {\r\n    const message: string = error instanceof Error ? error.message : JSON.stringify(error);\r\n\r\n    sendErrorToSentry({\r\n      message, transactionName: 'electron-update', level: 'fatal',\r\n      tags: [['scenario', 'crash-electron']],\r\n    });\r\n  }\r\n});\r\n\r\nipcMain.handle('download-chrome-extension', async (event, args) => {\r\n  const { ExtensionsManager } = await import('./electron/managers/extensions.manager');\r\n\r\n  const [extensionId] = args;\r\n\r\n  const extensionManagerInst = new ExtensionsManager();\r\n  extensionManagerInst.checkChromeExtensions([extensionId], true).catch((error) => console.log(error));\r\n});\r\n\r\nipcMain.handle('download-user-chrome-extension', async (event, args) => {\r\n  const { ExtensionsManager } = await import('./electron/managers/extensions.manager');\r\n  const [extensionId] = args;\r\n  const extensionManagerInst = new ExtensionsManager();\r\n  extensionManagerInst.checkLocalUserChromeExtensions([extensionId], '', true).catch((error) => console.log(error));\r\n});\r\n\r\nipcMain.handle('set-token', async (_: any, { token, twoFa }) => {\r\n  const { updateToken } = await import('./electron/managers/profile/renderer');\r\n  console.log('update token: ', !!token);\r\n  updateToken(token, twoFa);\r\n});\r\n\r\nipcMain.handle('set-useragent', async (_: any, { ua }) => {\r\n  const { updateUseragent } = await import('./electron/managers/profile/renderer');\r\n  updateUseragent(ua);\r\n});\r\n\r\nipcMain.handle('stop-profile', async (event, arg) => {\r\n  const { killProfile } = await import('./electron/managers/profile/renderer');\r\n  killProfile(arg);\r\n});\r\n\r\nipcMain.handle('stop-multiple-profiles', async (event, arg) => {\r\n  const { killProfile } = await import('./electron/managers/profile/renderer');\r\n  arg.map((profileId: any) => killProfile(profileId));\r\n});\r\n\r\nipcMain.handle('check-profiles', async () => {\r\n  const { checkProfiles } = await import('./electron/managers/profile/renderer');\r\n  checkProfiles();\r\n});\r\n\r\nipcMain.handle('check-proxy', async (event, arg) => {\r\n  const { ProxyService } = await import('./electron/services/proxy.service');\r\n\r\n  return ProxyService.checkProxy(arg, true);\r\n});\r\n\r\nipcMain.handle('check-cached-storage-size', async () => {\r\n  const { ProfileCachingManager } = await import('./electron/managers/profile.caching.manager');\r\n  const ProfileCachingManagerInst = new ProfileCachingManager();\r\n\r\n  return ProfileCachingManagerInst.init()\r\n    .then(() => ProfileCachingManagerInst.checkCachedStorageSize())\r\n    .catch(() => 0);\r\n});\r\n\r\nipcMain.handle('clear-cached-storage', async () => {\r\n  const { ProfileCachingManager } = await import('./electron/managers/profile.caching.manager');\r\n  const ProfileCachingManagerInst = new ProfileCachingManager();\r\n\r\n  return ProfileCachingManagerInst.init()\r\n    .then(() => ProfileCachingManagerInst.clearCachedStorage())\r\n    .catch(() => void 0);\r\n});\r\n\r\nipcMain.handle('clear-profile-cache', async (event, profileId) => {\r\n  const { ProfileCachingManager } = await import('./electron/managers/profile.caching.manager');\r\n  const ProfileCachingManagerInst = new ProfileCachingManager();\r\n\r\n  return ProfileCachingManagerInst.init()\r\n    .then(() => ProfileCachingManagerInst.clearProfileCache(profileId))\r\n    .catch(() => void 0);\r\n});\r\n\r\nipcMain.handle('restore-profiles', async (_event, profileIds: string[]) => {\r\n  const { updateDeletedProfiles } = await import('./electron/managers/profile/renderer');\r\n  updateDeletedProfiles(profileIds);\r\n});\r\n\r\nipcMain.handle('del-profile-ext-folder', async (event, arg) => {\r\n  const { deletedProfiles } = await import('./electron/managers/profile/renderer');\r\n  const { deleteProfileExtFolder } = await import('./electron/utils/check-gologin-extensions');\r\n\r\n  const pathOs = getPathOs();\r\n  deletedProfiles.push(arg);\r\n  rm(pathOs.PROFILES_DIR + arg, { recursive: true });\r\n  deleteProfileExtFolder(arg);\r\n});\r\n\r\nipcMain.handle('del-profiles-ext-folder', async (event, arg: string[]) => {\r\n  const { deletedProfiles } = await import('./electron/managers/profile/renderer');\r\n  const { deleteProfileExtFolder } = await import('./electron/utils/check-gologin-extensions');\r\n  const pathOs = getPathOs();\r\n  deletedProfiles.push(...arg);\r\n\r\n  arg.forEach((profileId: string) => {\r\n    rm(pathOs.PROFILES_DIR + profileId, { recursive: true, force: true }).catch(() => null);\r\n    deleteProfileExtFolder(profileId).catch(() => null);\r\n  });\r\n});\r\n\r\nipcMain.handle('get-app-version', () => `${version} ${subVersion}`);\r\n\r\nipcMain.handle('get-orbita-browser-version', async () => {\r\n  const { BrowserReleasesManager } = await import('./electron/managers/browser-releases.manager');\r\n  const currentOrbitaVer = await new BrowserReleasesManager().getLocalOrbitaVersionByPath();\r\n\r\n  return currentOrbitaVer || '0.0.0';\r\n});\r\n\r\nipcMain.handle('check-supported-orbita', async (_event, { key = 'orbitaMajorVersion', value }: IOrbitaWinCompatibilityData) => {\r\n  const { BrowserReleasesManager } = await import('./electron/managers/browser-releases.manager');\r\n\r\n  const versionToDownload = new BrowserReleasesManager().getOrbitaVersionToDownload({ key, value });\r\n  const browserVersionMajorFromUA = new BrowserReleasesManager().getMajorVersionByUA(value);\r\n  const { pickedMajorVer: pickedVersionIfSkipDownload } = new BrowserReleasesManager().getOrbitaPathToStart(browserVersionMajorFromUA);\r\n\r\n  return { versionToDownload, pickedVersionIfSkipDownload };\r\n});\r\n\r\nipcMain.handle('check-orbita-compatible', async (_event, { key = 'orbitaMajorVersion', value }: IOrbitaWinCompatibilityData) => {\r\n  const { BrowserReleasesManager } = await import('./electron/managers/browser-releases.manager');\r\n\r\n  return new BrowserReleasesManager().checkOrbitaWinCompatible({ key, value });\r\n});\r\n\r\nipcMain.handle('check-orbitas-available', async (_event, orbitasMajorVersions: number[]) => {\r\n  const { BrowserReleasesManager } = await import('./electron/managers/browser-releases.manager');\r\n\r\n  return new BrowserReleasesManager().checkOrbitasAvailable(orbitasMajorVersions);\r\n});\r\n\r\nipcMain.handle('check-browser', async (event) => {\r\n  const { checkBrowser } = await import('./electron/utils/check-browser');\r\n\r\n  return checkBrowser()\r\n    .then((res: any) => event.sender.send('check-browser', res))\r\n    .catch(() => event.sender.send('check-browser', {}));\r\n});\r\n\r\nipcMain.handle('download-browser', async (event, args) => {\r\n  const { downloadBrowser } = await import('./electron/utils/check-browser');\r\n  downloadBrowser(event, args).catch(error => {\r\n    sendErrorToSentry({\r\n      message: error.message, level: 'fatal', transactionName: 'download-orbita-global',\r\n      tags: [['scenario', 'download-orbita']],\r\n    });\r\n  });\r\n});\r\n\r\nipcMain.handle('check-profiles-running', async () => {\r\n  const { BRAVE_PROCESSES } = await import('./electron/managers/profile/renderer');\r\n\r\n  return Object.keys(BRAVE_PROCESSES).length > 0;\r\n});\r\n\r\nipcMain.handle('close-all-profiles', async () => {\r\n  const { closeAllProfiles } = await import('./electron/managers/profile/renderer');\r\n  closeAllProfiles();\r\n});\r\n\r\nipcMain.handle('get-client-id-from-metadata', async () => {\r\n  const getClientIdFromMetadataFileModule = await import('./electron/utils/get-clientId-from-metadata');\r\n  const getClientIdFromMetadataFile = getClientIdFromMetadataFileModule.default;\r\n\r\n  const currentGoogleClientId = process.platform === 'win32' && await getGoogleClientIdFromVault.catch(() => null);\r\n  if (!currentGoogleClientId) {\r\n    return getClientIdFromMetadataFile();\r\n  }\r\n\r\n  return currentGoogleClientId;\r\n});\r\n\r\nipcMain.handle('update-google-client-id', async (event, googleClientId) => {\r\n  if (process.platform !== 'win32') {\r\n    return;\r\n  }\r\n\r\n  await saveGoogleClientIdToVault(googleClientId);\r\n});\r\n\r\nipcMain.handle('get-system-fonts-from-file', async () => {\r\n  const { getSystemFontsFromFile } = await import('./electron/utils/check-system-fonts');\r\n\r\n  return getSystemFontsFromFile().catch(() => []);\r\n});\r\n\r\nipcMain.handle('upload-custom-extension', async (event, extPath: string) => {\r\n  const { ExtensionsManager } = await import('./electron/managers/extensions.manager');\r\n\r\n  const extensionManagerInst = new ExtensionsManager();\r\n\r\n  return extensionManagerInst.addCustomExtension(extPath);\r\n});\r\n\r\nipcMain.handle('get-dolphin-cookies', async (event, profileIds: string[]) => {\r\n  const result = await getDolphinProfilesCookies(profileIds);\r\n\r\n  return result.filter(isNotNull);\r\n});\r\n\r\nipcMain.handle('get-system-locale', () => app.getLocale() || 'en');\r\n\r\nipcMain.handleOnce('check-auth-token', async () => {\r\n  const { CommonDataManager } = await import('./electron/managers/common-data-manager');\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n\r\n  return CommonDataManagerInst.accessToken;\r\n});\r\n\r\nipcMain.handle('remove-token-electron', async () => {\r\n  const { CommonDataManager } = await import('./electron/managers/common-data-manager');\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n\r\n  CommonDataManagerInst.accessToken = '';\r\n});\r\n\r\nipcMain.handle('get-app-config', async () => {\r\n  const { CommonDataManager } = await import('./electron/managers/common-data-manager');\r\n  const CommonDataManagerInst = new CommonDataManager();\r\n\r\n  return CommonDataManagerInst.appConfig;\r\n});\r\n\r\nipcMain.handle('set-app-config', async (event, args) => {\r\n  await writeToAppConfig(args);\r\n});\r\n\r\nipcMain.handle('too-many-requests', async () => console.log('TOO MANY REQUESTS'));\r\nipcMain.handle('redirected-to-2fa', async () => console.log('REDIRECTED-TO-2FA'));\r\nipcMain.handle('redirected-to-sign-up', async () => console.log('REDIRECTED-TO-SIGN-UP'));\r\nipcMain.handle('changed-account', async () => console.log('CHANGED ACCOUNT'));\r\n\r\n// handling `gologin://` urls on macOS and linux\r\napp.on('open-url', async (_event, responseUrl) => {\r\n  if (window) {\r\n    window.isMinimized() && window.restore();\r\n    window.focus();\r\n  } else {\r\n    deepLinkOnAppLaunch = responseUrl;\r\n  }\r\n\r\n  await handleDeepLink(window, responseUrl);\r\n});\r\n\r\napp.on('before-quit', async (event) => {\r\n  const promises: Promise<void>[] = [];\r\n  if (window) {\r\n    promises.push(saveAppConfig(window, translationData, theme).catch(() => void 0));\r\n    promises.push(window.webContents.session.clearCache().catch(() => void 0));\r\n  }\r\n\r\n  if (isAppUpdateReady) {\r\n    promises.push(saveAccessToken().catch(() => void 0));\r\n  }\r\n\r\n  await Promise.all(promises);\r\n\r\n  const { BRAVE_PROCESSES, closeAllProfiles } = await import('./electron/managers/profile/renderer');\r\n  const runningProfiles = BRAVE_PROCESSES || {};\r\n  const runningProfilesCount = Object.keys(runningProfiles)?.length || 0;\r\n  if (!runningProfilesCount) {\r\n    return closeApp();\r\n  }\r\n\r\n  try {\r\n    const { closeAppTitle, closeAppMessage, closeAppBtnClose, closeAppBtnCancel } = translationData;\r\n    const choice = dialog.showMessageBoxSync(\r\n      window as any,\r\n      {\r\n        type: 'question',\r\n        buttons: [closeAppBtnCancel, closeAppBtnClose],\r\n        title: closeAppTitle,\r\n        message: closeAppMessage,\r\n        noLink: true,\r\n      },\r\n    );\r\n\r\n    if (choice === 0) {\r\n      console.log('Preventing close application');\r\n      event.preventDefault();\r\n\r\n      return null;\r\n    }\r\n\r\n    // TODO: создавать отдельный процесс отдетаченый от апп для отправки профиля на сервер\r\n    await closeAllProfiles();\r\n  } catch (error: unknown) {\r\n    const message = error instanceof Error ? error.message : error;\r\n    console.log(message);\r\n  }\r\n\r\n  return closeApp();\r\n});\r\n\r\napp.on('activate', () => window?.show());\r\n\r\napp.on('window-all-closed', app.quit);\r\n\r\n"],"names":["installedChunks","BROWSER_ICONS_CONSTANTS_FOR_MAC","_objectSpread","browserIconsSizes","iconsPaddingBase","borderRadiusBase","textMaxWidthBase","textFontSizeBase","lineHeightRatio","BROWSER_ICONS_CONSTANTS_FOR_WIN_10","BROWSER_ICONS_CONSTANTS_FOR_WIN_11","CONSTANTS_COMMON","textColor","rectFillColor","getIconsConstants","os","constantsForOs","OpenProfileViaLink","E_APP_TYPE","STORAGE_KEY_NAME_PREFIX","TWO_FA_TOKEN_KEY_NAME","concat","PROFILE_SHARED_KEY_NAME","API_BASE_URL","process","env","GOLOGIN_OLD_PRICING_PAGE_URL","VERSION_FILE","VERSION_FILE_LINK","MAC_VERSION_FILE_URL","MAC_ARM_VERSION_FILE_URL","DEB_VERSION_FILE_URL","WIN_VERSION_FILE_URL","BROWSER_ARCHIVE_NAME","osPlatform","MAC_BROWSER_LINK","MAC_ARM_BROWSER_LINK","DEB_BROWSER_LINK","WIN_BROWSER_LINK","MAC_BROWSER_LINK_S3","MAC_ARM_BROWSER_LINK_S3","DEB_BROWSER_LINK_S3","WIN_BROWSER_LINK_S3","MAC_HASH_FILE","MAC_ARM_HASH_FILE","DEB_HASH_FILE","WIN_HASH_FILE","MAC_HASHFILE_LINK","MAC_ARM_HASHFILE_LINK","DEB_HASHFILE_LINK","WIN_HASHFILE_LINK","FAIL_SUM_MATCH_MESSAGE","EXTRACTED_FOLDER","EXTENSION_URL","AUTOMATION_EXTENSION_WEBSTORE_ID","TIMEZONE_CHECK_URL","BROWSER_ICONS_SIZES_FOR_MAC","BROWSER_ICONS_SIZES_FOR_WIN10","BROWSER_ICONS_SIZES_FOR_WIN11","STORAGE_KEY_PREFIX","STORAGE_GATEWAY_BASE_URL","mainLocaleList","zeroProfilePreferences","getExtMetadata","extUrl","withRetry","fn","makeRequestWithFullResponse","url","method","retryLimit","retryDelay","catch","error","message","Error","includes","sendCommonErrorToSentry","transactionName","tags","getExtVersion","metadata","extFullName","split","reverse","extName","splitExtName","shift","join","composeExtractionPromises","filteredArchives","destPath","arguments","length","undefined","CHROME_EXTENSIONS_PATH","map","extArchivePath","archiveName","path","destFolder","ExtensionsExtractor","then","sentryTransactionDefaultObject","startChild","finish","setStatus","setTag","readdir","rm","readFile","mkdir","require","DEFAULT_VERSION","_osPaths","WeakMap","_localOrbitaReleasesList","_localOrbitaVersion","_supportedOrbitaVersions","_getSortedOrbitaVersions","WeakSet","BrowserReleasesManager","constructor","_classPrivateFieldInitSpec","writable","value","getPathOs","_defineProperty","instance","this","getLocalOrbitaReleasesList","_this","_asyncToGenerator","regex","RegExp","BROWSER_FOLDER_NAME","_classPrivateFieldSet","BROWSER_PATH","filter","el","MAC_ORBITA_DIR_NAME","test","reduce","res","val","chromeMajorVersionMatch","match","_","chromeMajorVersion","updateReleasesListInLocalStorage","localOrbitaReleasesList","_classPrivateFieldGet","getSupportedOrbitaVersions","_arguments","_this2","makeRequest","timeout","supportedOrbitaVersions","checkLocalOrbitaReleases","_this3","orbitaDirName","localOrbitaVersion","getOldLocalOrbitaVersion","getChromeMajorVersion","newOrbitaDirName","getOrbitaDirNameByVersion","sourcePath","files","Promise","all","file","copyFolder","removeFileOrFolder","recursive","maxRetries","getLocalOrbitaVersionByPath","_arguments2","_this4","browserPath","Object","keys","formattedBrowserPath","newestOrbita","_classPrivateMethodGet","_getSortedOrbitaVersions2","call","orbitaFolderPath","BROWSER_BASE_PATH","versionFilePath","encoding","getOrbitaPathToStart","majorVer","pickedMajorVer","pathToLaunch","BROWSER_EXEC_FILE_NAME","browserWorkingDir","getMajorVersionByUA","chromeVersionMatch","version","getOrbitaVersionToDownload","_ref","key","uaMajorVersion","isVersionCompatible","checkOrbitaWinCompatible","hasLocalOrbita","hasSupportedVersions","toString","_ref2","ProfileStatusManagerInst","releaseVersionRaw","majorChromeVersion","getWinRelease","addStatus","status","statusMessage","checkOrbitasAvailable","orbitasMajorVersions","orbitasVersionsAvailable","orbitasDownloadedLocally","Number","updateVersionFullInLocalStorage","window","localBrowsers","_this5","localBrowserReleases","versionsFullForSquareIconsPromises","versionMajor","currentOrbitaPath","baseOrbitaPath","versionsFullForSquareIcons","allSettled","result","Boolean","webContents","executeJavaScript","console","_this6","browserWindow","versionsMajorPromise","versionFullPromise","sort","a","b","name","fileNames","FONTS_DIR_NAME","DEFAULT_ORBITA_EXTENSIONS_NAMES","pathOs","_commonDataManagerInst","BrowserUserDataManager","CommonDataManager","uploadProfileData","props","browserId","passwords","cookies","extensionsIds","bookmarks","fileSize","cf","hk","body","isCookiesEncrypted","isStorageGateway","apiBaseUrl","timeoutDetailed","socket","downloadFonts","fontsList","getAllFonts","browserFontsPath","fonts","fontObj","flat","push","promises","font","downloadWithRetry","destFile","log","copyFontsToProfileFolder","profilePath","targetFontName","replace","copyFile","limit","composeFonts","differentOs","startProfileTransactionSentry","composeFontsSentrySpan","op","fontsToDownload","elem","pathToFontsDir","copyFontsConfigFile","dirname","getRootDirectory","defaultFolderPath","writeFile","mode","getProfileChromeExtensions","profilePreferencesPath","profileChromeExtensions","fileContent","settings","JSON","parse","extensionsSettings","extensions","extensionsEntries","entries","currentExtensions","forEach","extensionObj","extensionsId","extensionsContent","extPath","formattedPath","pathMatch","matched","originalExtId","deleteUselessExtensionSettings","preferencesPath","localExtensionSettingsPath","deletePromises","extId","_x","apply","setExtPathsAndRemoveDeleted","profileExtensionsCheckRes","profileId","formattedLocalExtArray","extFolderName","originalId","_currentExtSettings$m","extensionId","currentExtSettings","manifest","some","substring","GOLOGIN_BASE_FOLDER_NAME","GOLOGIN_TEST_FOLDER_NAME","splittedPath","isExtensionManageable","find","_el$path","localExtObj","_el$path2","initialExtName","recalculateId","PROFILES_DIR","extensionSettingsFolder","getExtensionSettingsFolder","extSyncFolder","newSyncFolder","renameResult","rename","_ref3","stringify","_x3","_ref4","_x4","endsWith","_x2","setOriginalExtPaths","_settings$extensions","originalExtensionsFolder","originalExtensionsList","_ref5","extFolderPath","extFolderContent","_x5","originalExtPaths","originalExtPath","_props$currentExtSett","manifestObject","manifestFilePath","manifestString","_unused","extPathToEncode","Buffer","from","newId","crypto","update","digest","slice","symbol","extIdEncoding","initialExtensionId","localFolderPath","syncFolderPath","access","_API_BASE_URL","_ACCESS_TOKEN","_USER_AGENT","_TWO_FA_KEY","_OS_WITH_M","_META_HEADER","_userPlanId","_APP_CONFIG","getUserOS","getGologinMetaHeader","loadAppConfig","getOS","userAgent","userPlanId","accessToken","twoFaKey","userOs","metaHeader","appConfig","config","paths","CookiesManager","static","cookiesData","cookiesFilePath","checkCookies","clearCookies","userCookies","removeCookiesFile","cookiesFileReq","loadCookiesFromFile","cookiesFromFile","localServerAvailable","checkLocalServer","serverCookies","saveCookiesToFile","fromPath","COOKIES_FILE_NEW","COOKIES_FILE","basePath","defaultPath","networkPath","stat","mtimeMs","defaultPathLastMod","networkPathLastMod","MAX_FILE_SIZE","_existedUserExtensions","_extensionsInProgress","_blockEventEmitter","UserExtensionsManager","EventEmitter","existedUserExtensions","fileList","deleteUserExtIdFromInProgress","extIdToDelete","emit","addCustomExtension","pathToFiles","filesSize","checkFileSizeSync","isZip","maxFileSize","customId","generateExtensionId","pathToExtract","USER_EXTENSIONS_PATH","folderContent","isDirectory","folderName","rmdir","nameIconId","getExtensionsNameAndImage","extensionInfo","extensionUrl","json","fileBuffer","zipdir","signedUrl","uploadResponse","headers","byteLength","isBuffer","sendErrorToSentry","checkLocalUserChromeExtensions","userChromeExtensions","isFromExtManager","resolve","on","downloadedExtensions","extensionsToDownload","getExtStrToIncludeAsOrbitaParam","extensionsToDownloadPathsFiltered","existedUserChromeExtensions","awsPath","zipPath","zipPaths","extractionPromises","isExtensionsExtracted","downloadedFolders","archivePath","pathToExtensions","isCheckLocalFiles","filteredExtensionFolderNames","extensionFolder","namesPromise","_manifestObject$brows","pathToExtensionsFolder","extensionVersion","manifestPath","manifestName","fieldNameInLocale","localePath","default_locale","localeString","trim","iconObject","icons","iconPath","browser_action","default_icon","iconResolutions","Math","max","iconBSON","iconPathFull","iconBinary","profileExtensions","extensionsPath","Array","isArray","folders","folderNames","chromeExtList","formattedIdsList","extExisted","chromeExtPathElem","extensionIdLength","characters","charactersLength","charAt","floor","random","calcLength","byteA","byteB","byteC","byteD","CommonDataManagerInst","_existedChromeExtensions","_inited","_deleteProfileExtFolders","_extensionsUpdating","_getExtensionsToDownload","ExtensionsManager","super","init","filesList","extFolder","fileName","unlink","promisesToDelete","err","isInited","deleteProfileExtFolders","existedChromeExtensionsList","deleteExtIdFromExtensionsInProgress","checkChromeExtensions","_getExtensionsToDownload2","downloadChromeExtensions","downloadedExtensionIds","downloadedExtensionId","idsToDownload","id","uploadedProfileMetadata","zipExt","reqPath","req","extVer","buffer","downloadWithRetryBuffer","String","buf","isV3","isV2","zipStartOffset","crxToZip","level","archiveZipPath","archiveZip","fs","write","close","updateExtensions","oldFolders","versionCheckPromises","extension","currentVersion","availableVersion","extensionsNames","archivesPaths","removeFoldersPromises","folder","insertExtensionsToDb","_arguments3","checkResponse","extensionsToAdd","extensionsToUpdate","extensionsInfo","getExtensionsToInstall","extensionsFromPref","extensionsFromDB","objectEntries","extensionsInPref","acc","existedOriginalIds","ProfileCachingManager","CACHED_PROFILES_FOLDER","copyClosedProfileToCacheDirectory","profileUid","checkCachedStorageSize","clearCachedStorage","filePath","clearProfileCache","folderPath","getCachedProfile","storageInfo","cachedProfileFolder","zipFileName","cachedUid","cachedArchivePath","uid","isNewProfile","stats","cachedDate","birthtime","lastUploadDate","moment","lastDate","utc","isAfter","renameCachedProfile","oldProfileUid","newProfileUid","curProfilePath","newProfilePath","loadPasswordsFromFile","db","getDB","loginsRows","row","origin_url","action_url","username_element","username_value","password_element","password_value","submit_element","BrowserUserDataManagerInst","ExtensionsManagerInst","ProfileStarterManagerInst","ProfileStarterManager","ProfileCachingManagerInst","tempArchiveName","closeAndUploadProfile","currentMs","localStorageEnabled","indexedDbEnabled","debugMode","channel","ProfileStatusManagerInstances","automation","apiTokenForClose","twoFaKeyForClose","vaultToken","stopProfileTransactionSentry","Sentry","syncingProfiles","cleanDirs","removeLocalStorage","removeUselessFolders","s3SignedUrl","profileArchiveBuffer","updateProfileAndGetUploadUrl","removeItemFromArray","uploadingProfileProcess","getProfileDataForUploadAndUpdate","pathToPreferences","pathToBookmarks","readingCookiesSentrySpan","uploadPasswordsSentrySpan","extensionsUploadSentrySpan","arrayPromises","loadCookiesPromise","domain","loadPasswordsPromise","getProfileExtPromise","getProfileBookmarksPromise","parsedDataResult","reason","extensionsIdsFiltered","workflowId","isAutomationExtensionSavedInDb","zippingSentrySpan","getProfileArchiveBufferPromise","action","errorType","errorMessage","prefix","removeStatus","sender","send","cachingSentrySpan","finally","s3","uploadDataAndGetS3Link","onlyUpload","BASE_PATH_TEMPLATE","isCf","getBufferOfArchive","data","uploadProfile","fileBuff","preloadedS3SignedUrl","uploadingProfileSentrySpan","Authorization","response","_error$response","profile","actionInfo","_ref6","timeBeforeUpload","toDate","valueOf","deduplicationKey","uuidv4","sendToSentry","errorIsString","renameError","uploadDTime","type","time","removingFilesSentrySpan","_x6","removeDirs","ROUTE_SLASH","_ref7","waitingSentrySpan","pidList","setTimeout","removingFoldersSentrySpan","_x7","_ref8","_x8","sentrySpan","archiveProfile","cachedProfilePath","force","isProfileDeleted","deletedProfiles","_ref9","_x9","_x10","_ref10","passwordsFilePath","PASSWORDS_FILE","_ref11","errorPassObj","_x13","username","password","_x11","_x12","_ref12","_x14","_x15","_x16","_ref13","profileBookmarks","roots","_x17","_x18","_ref14","_s3$url","uploadDataSentrySpan","uploadProfileDataResponse","_error$response2","_error$response2$body","missingExtIds","_x19","sendOrbitaErrorToSentry","_profileData$gologin","orbitaConsoleContainer","profileData","processDurationMs","code","signal","ua","gologin","browserDir","downloadBrowser","orbitaVersion","apiStatusUpdater","additionalOpts","running","BRAVE_PROCESSES","apiRequest","endpoint","launchOrbita","_braveProc","_braveProc2","braveProc","timezoneCheckResult","startProfileTimestamp","profileOptions","remoteCb","args","passwordsTemporaryToken","ProfileReadyEventEmitterInst","profilePreparingRes","timings","deepLinkProtocol","timezone","TZ","ll","accuracy","ip","country","proxyCountry","profileExtensionPathRes","profileUserExtensionPathRes","doc","latitude","longitude","tz","fillProxyByIp","timezoneValue","profileGeolocation","geoLocation","tzGeoLocation","getGeolocationParams","profileUserExtensionsCheckRes","updateBrowserSettings","updatingBrowserSettings","publicUserIp","removeListener","removeLockFiles","userDataDirArg","spawningBrowserSentry","_profileData$gologin2","launchBrowser","sendActionAnalytics","loadingProfiles","pid","overallTime","proxyMode","proxy","startMode","orbitaProc","lockEnabled","bigTimer","setInterval","addDataToConsoleContainer","output","unshift","stdout","stderr","_BRAVE_PROCESSES$prof","clearInterval","_BRAVE_PROCESSES$prof2","_BRAVE_PROCESSES$prof3","browserVersion","Date","now","appVersion","packageSettings","errMessage","profileGeolocationParams","tzGeolocationParams","fillBasedOnIp","options","shell","cwd","detached","stdio","spawnedProcess","spawn","unref","pathNode","zeroProfileBookmarks","getChangableAppConfigFromBack","configData","createCookiesTableQuery","BYTES_IN_MB","unzipProfile","getProfileArchiveOptions","timeBeforeAws","getProfileArchive","zipSize","awsRequest","timeBeforeDecompress","decompressSentrySpan","decompressRes","extractProfile","sendError","onlyAws","zipPathDownloaded","decompress","decompressProfile","pathNodeJs","cacheCheckResponse","createZeroProfile","downloadProfileSentrySpan","downloadResult","storageLink","preferencesFilePath","bookmarksFilePath","networkFolderPath","secondCookiesFilePath","createDBFile","ProfileReadyChecker","eventEmitter","_isProxyReady","_proxyCheckResult","_isProfilePrepared","_eventEmitter","isProxyReady","proxyResult","sendReadyEvent","isProfilePrepared","_channel","_profileId","_statusStack","_statusChangeBlocked","_defaultStatus","ProfileStatusManager","getDefaultStatusData","unblock","cleanStack","curStatus","getCurrentStatus","sendStatus","refreshStatus","info","transferStatusData","statusData","getStatusData","statusObj","priority","index","findIndex","stackItem","curr","next","statusInStack","statusFromStack","element","_transferStatusData$e","_transferStatusData$p","_transferStatusData$p2","_transferStatusData$p3","dTime","_transferStatusData$p4","analyticsStatus","formattedErrorMessage","toSend","statusObjects","cloud_uploading","archiving","syncing","checking_proxy","downloading_profile_init","downloading_profile_chrome_ext","downloading_profile_user_ext","downloading_profile_fonts","preparing_profile","ready","indexOf","_proxyInfo","_proxyEnabled","_ProfileReadyChecker","TimezoneManager","proxyInfo","proxyEnabled","ProfileReadyCheckerInst","state","getTimeZone","startTime","host","port","timezoneInfo","timeZoneCheck","diff","getGologinTorProxy","profileReadyChecker","catchBlock","ping","ProxyService","isHttpProxyType","makeProxyRequestWithTimeout","timeZoneResult","protocol","resultBlock","proxyId","timezoneResult","timezoneParams","proxyData","_id","city","checkDate","unix","languages","lastIp","setProxyStatuses","params","autoProxyServer","splittedAutoProxyServer","freeProxyHost","freeProxyPort","proxyParams","autoProxyUsername","autoProxyPassword","checkBookmarks","pathToLocalBookmarks","bookmark_bar","userBookmarksFromProfileFolder","isStoppingProfiles","platform","updateDeletedProfiles","profileIdsToRestore","deletedProfile","loadProfile","remoteApiOptions","launchViaRestApi","pngs","design","traceId","isProfileRunning","prototype","hasOwnProperty","actionName","focusOrbitaWindow","requestProfileFromDbAndPrepare","cb","sync","TimezoneManagerInst","profileRequestFromDbSentrySpan","proxyCheckSpan","timeBeforeProfileRequest","osArch","arch","isFreeProxy","sendTimezoneStatus","profileFromDb","requestProfileFingerprint","backendErrorHeader","errorContent","canBeRunning","navigator","profileRequest","chromeExtensions","publicKey","generatePublicKey","convertPublicKeyToExtensionId","prepareProfileToLaunch","profileFingerprint","isFreeProxyType","isProxyEnabled","freeProxyCheckSpan","START_DIR_PATH","STARTED_DIR_PATH","startProf","updateUseragent","updateToken","token","twoFa","killProfile","getWinOrbitaRealPid","realPid","exec","kill","closeAllProfiles","processes","processId","_BRAVE_PROCESSES$proc","procId","checkProfiles","profiles","manager","owner","useCookiesExt","debuggingPort","getMilliseconds","fontsSupported","isWin7","families","enableMasking","checkTempFiles","prepareCookies","hashValues","fontArg","errorTxt","isError","prepareGologinExts","checkChromeExtensionsSpan","automationExtensionPath","extensionPath","manifestToReplace","checkAutomationChromeExtensionSpan","automationExtensionManifest","checkUserExtensionsSpan","bookmarksData","winVersionMajor","osFormatted","formatOs","scaleFactor","screen","saveBrowserIconsSpan","browserIconsDataToSave","iconsPngs","iconDesignVersion","saveBrowserIconsInProfileDirectory","browserIconsPaths","size","avatar","enabled","full_size","windows_icons","icon","timeBeforePromises","errorStageObj","extParam","extensionsEnabled","profileGologinExtensionPathRes","extensionsStrToIncludeAsOrbitaParam","profileGologinExtensionPath","webglParams","webgl","glCanvas","antialiasing","session","proxyHost","toLowerCase","server","splittedProxyAddress","_port","updateProxyStatus","proxyOptionIndex","arg","startsWith","isMAC","checkAutoLangResult","checkAutoLang","browserLang","openLink","link","open","syncProfile","getProxyErrorMessage","rawMessage","autoLang","checkBrowserLang","timezoneLang","timezoneCountry","firstDetectedLangLocale","resultLangsArr","lang","Set","gologinLangsArr","cur","qualityParam","separator","toFixed","langHeader","defaultLocale","userLangs","userMainLang","userLangsArr","getMainLanguage","accept_languages","selected_languages","app_locale","forced_languages","langArr","locale","apiUrl","devicePixelRatio","osSpec","osProfileRunPrefs","isM1","profileNavigator","clientRects","noise","startUrl","isAutoGenerated","webRTC","isBookmarksSynced","isArm","profileParamsToken","getProfileParamsToken","resolution","doNotTrack","language","hardwareConcurrency","deviceMemory","maxTouchPoints","screenWidth","screenHeight","canvas","canvasMode","canvasNoise","profileProxy","autoProxyRegion","torProxyRegion","webGL","profileWebGL","webGLMode","webGLNoise","getClientRectsNoise","webGLClientRectNoise","clientRectsNoise","webGLMetadata","profileWebGLMetadata","vendor","renderer","wegGLMetadataMode","mediaDevices","profileMediaDevices","audioInputs","videoInputs","audioOutputs","plugins","profilePlugins","enableVulnerable","all_enable","enableFlash","flash_enable","storage","local","isAbleToEditBookmarks","history","indexedDb","enableExternalExtensions","profileTimezone","audioContext","profileAudioCtx","audioCtxMode","audioCtxNoise","splittedLangs","param","startupUrl","startupUrls","geolocation","dns","createdInOs","automationStartUrl","getAutomationStartupUrl","getFirstStartupUrl","deviceScaleFactor","ceil","region","bookmarksSettings","editing_enabled","saving_disabled","credentials_enable_service","profile_id","is_m1","max_touch_points","parseInt","webGl","mobile","enable","width","height","device_scale_factor","webgl_noice_enable","webglNoiceEnable","webgl_noise_enable","webgl_noise_value","webglNoiseValue","getClientRectsNoice","get_client_rects_noise","client_rects_noise_enable","noiseValue","startup_urls","MIN_MAJOR_CHROME_VERSION_FOR_CREATION_ORBITA_CONFIG","localeConfig","mainLanguage","getIntlProfileConfig","intl","saveConfigFile","ORBITA_CONFIG_PATH","settingsFile","unpinable_extension_names","block_external_extensions","webrtc","should_fill_empty_ice_list","isEmptyIceList","extSettings","extensionsToInstall","extensionArgIndex","prepareCookiesSentrySpan","prepareGologinExtsSpan","paramsForExt","createProfileExt","checkFilesSentrySpan","removeUselessFoldersSpan","startUpUrls","firstUrl","proxies","modulusLength","publicKeyEncoding","format","privateKeyEncoding","publicKeyBuffer","char","isNaN","fromCharCode","charCodeAt","majorVersion","chromiumVersion","source","dest","decompressUnzip","checkDownloadedExtFolder","extObj","EXTENSIONS_PATH","baseFolderName","copyExtensionFolder","checkProfileExtExists","updateUidFile","opts","parsedContent","global","appPort","checkExtractRes","objToReturn","isProfileExtExists","extVersionFileContent","versionFile","extensionsFolderContent","checkGologinExtensions","returnRes","startProfileSentryTransaction","EXTENSIONS_TO_DOWNLOAD","extInfo","promiseResult","every","axios","requestOpts","checkPing","origin","getPing","checkData","getFormattedError","checedProxyData","statusCode","timer","destroy","net","start","hrtime","connect","clearTimeout","timeArr","configFilePath","CONFIG_APP_PATH","setupAppConfig","defaultWindowConfig","windowWidth","windowHeight","windowPosX","windowPosY","isMaximized","isFullScreen","theme","currentTheme","nativeTheme","backgroundColor","saveAppConfig","translationData","configToSave","x","xCoordinate","y","yCoordinate","getBounds","writeToAppConfig","readConfigFile","currentConfig","configRecords","record","span","iconBigSize","iconPngsPromises","iconPng","iconName","iconSize","iconBase64Ready","saveBrowserIconsData","util","INIT_PROGRESS_STATE","step","inProgress","EVENT","progressState","checkBrowserArchive","downloadNewBrowser","pathStr","resultOrbitaVersion","replacedValue","PLATFORM","unsupportedWinVersion","downloadPersistentWithProgress","progressEvent","progressEventName","isContinueStream","installBrowser","downloadHashFile","hashLink","resultPath","content","reject","checkBrowserSum","extractedFolderPath","macOrbitaPath","macHashFilePath","debHashFile","serverRes","userCheckRes","userRes","replaceBrowser","latestBrowserVersion","getLatestBrowserVersion","majorV","folderPathToCopy","decompressTar","decompressOpts","decompressTarGz","getS3BrowserUrl","_error$message","checkBrowser","winVersion","needDownloadNewBrowser","executableFilePath","browserFolderExists","browserExist","deleteOldFiles","filename","event","isDiscSpaceError","promisify","extZipName","hashFile","hashFileUrl","versionFileUrl","extArchiveUrl","tempFolder","checkArchiveSum","tempFolderPath","hashFilePath","commandToGenerateHash","got","request","pipe","severRes","checkServerRes","checkUserRes","serverHash","splittedUserHash","userHash","pop","downloadNewExt","checkExtArchive","extractArchive","moveNewExt","extFileUrl","currentVersionString","cloudVersionString","isExtFolderExists","promisesWithCatch","promise","deleteProfileExtFolder","_loop","sentryPrefix","SAME_SITE","buildCookieURL","secure","domainWithoutDot","unixToLDAP","unixtime","UTC","getTime","ldapToUnix","ldap","ldapLength","_ldap","repeat","equalCookieWith","targetCookie","convertValueToUtf8","cookiesRows","host_key","encrypted_value","is_secure","is_httponly","expires_utc","is_persistent","samesite","creation_utc","sameSite","httpOnly","hostOnly","expirationDate","creationDate","fileCookies","newCookies","diffCookies","unique","dbCookie","withNewValue","sameCookie","compare","chunkInsertValues","cookiesArr","todayUnix","chunckedCookiesArr","arr","chunkSize","tmp","cache","splice","chunk","queryPlaceholders","flatMap","cookie","_cookie$secure","_cookie$httpOnly","encryptedValue","isSecure","sourceScheme","sourcePort","isPersistent","getChunckedInsertValues","insertCookiesResult","insertCookiesToDbAndCopyFile","run","missingColumn","createColumnQuery","query","queryParams","insertStmt","prepare","finalize","pathToCookiesFile","secondPathToCookiesFile","sqlite3","connectionOpts","driver","readOnly","ElectronError","localStream","createWriteStream","chunks","endRange","MAX_SAFE_INTEGER","end","streamOptions","flags","dirContent","progress","_progressState","_progressState$percen","total","transferred","percent","isPercentDifferent","onRetry","isRetrying","callLimit","extractArchiveAuzl","pathToZip","targetPath","yauzl","lazyEntries","autoClose","zipFile","zipFileError","readEntry","entry","resolveWrite","rejectWrite","openReadStream","readStream","readStreamError","writeStream","writeError","promiseError","createReadStream","unzipper","getBaseHeaders","commonDataManager","getOptions","retry","errorCodes","HOMEDIR","SEPARATOR","generateUserPaths","BASE_FOLDER","userName","execSync","accessSync","baseLinPath","linuxPath","DOLPHIN_DIR_PATH","OCTO_DIR_PATH","MULTILOGIN_DIR_PATH","ADSPOWER_DIR_PATH","UNDETECTABLE_DIR_PATH","INDIGO_DIR_PATH","INCOGNITION_DIR_PATH","MORELOGIN_DIR_PATH","macPath","BROWSER_OLD_EXEC_FILE_NAME","winPath","DEFAULT_FOLDER_USELESS_FILE","subs","profileFolder","archiveError","archive","yazl","isArchiveError","once","addDefaultFolderToArchive","relativePath","addFile","addBuffer","stream","outputStream","directoriesToNotInclude","sub","defaultFolderContent","currentFilePath","folderContentStat","addEmptyDirectory","TIMEOUT","HTTP_PROTO","HTTPS_PROTO","HTTPS_ERRORS","agent","retries","proxyType","isTorProxy","proxyString","encodeURIComponent","getHttpProxyAgent","SocksProxyAgent","_response","https","cancel","v","_ret","isFloppyData","HttpsProxyAgent","keepAlive","keepAliveMsecs","maxSockets","maxFreeSockets","scheduling","extraInfo","scope","setLevel","setTransactionName","setFingerprint","tagArray","tag","initSentry","dsn","tracesSampleRate","release","npm_package_version","environment","ignoreErrors","messagePart","doExec","subVersion","winRelease","_versionMinor","buildVersion","typeOS","osRelease","appRelease","pathToFile","fileStats","__dirname","c","d","e","f","array","itemToRemove","indexToRemove","optionsOrUndefined","fnToProducePromise","callCounter","stopRetryErrorPatterns","isStopRetryError","pattern","resolver","nextTick","childPID","arrayOfPidLinks","targetArray","pidInfo","targetPID","addon","awaken","dlopen","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","m","n","getter","__esModule","definition","o","defineProperty","enumerable","get","chunkId","u","obj","prop","r","Symbol","toStringTag","nmd","children","p","moreModules","modules","chunkIds","ids","runtime","i","installChunk","E_ACTIONS_WITH_COMPETITORS_APPS","isNotNull","pathToMetadataFolder","getCurrentMetadata","currentMetadata","fingerprint","defaultMetadata","saveMetadata","competitorsCryptoMap","pathOS","pathsData","checkCompetitorsApps","pathToApp","COMPETITOR_NAME","checkCompetitorsMetadata","gologinMetadata","lastCheckDate","isSyncError","newMetadata","add","checkInstallCompetitorResult","competitor","currentCompetitorsData","isInstalled","isDeleted","decryptedName","INSTALLED","UNINSTALLED","sendCompetitorAnalytics","actionId","results","syncGologinCompetitorsMetadata","electronSendActionAnalytics","getDolphinProfilesCookies","profileIds","pathToProfileArchive","sep","pathToUnzip","pathToCookies","isExists","getRandomPort","getRandomInt","isPortBusy","isPortReachable","min","router","Router","post","api","credentials","startProfileCb","wsUrl","webSocketDebuggerUrl","iconBase64","_req$query","_BRAVE_PROCESSES$req$","_BRAVE_PROCESSES$req$2","isAvailable","_BRAVE_PROCESSES$req$3","timeDif","app","express","_init","listen","use","cors","optionsSuccessStatus","bodyParser","pathToMigrationDataFolder","migrationData","isDolphinChecked","migrationConfig","dolphinChecked","dolphinAppPath","changedConfig","ACCESS_TOKEN_STORAGE_KEY","BASE_URL","handleOAuth","responseUrl","searchParams","URL","twoFaToken","isNewUser","pathToNavigateTo","absolutePathUrl","loadURL","PROFILE_RUN_DEEP_LINK_EVENT_NAME","PROFILE_SHARE_DEEP_LINK_EVENT_NAME","PROFILE_LIST_PAGE","PRICING_PAGE","handleProfileRun","href","search","analyticsDataBase","_protocolName","argument1","argument2","profileIdOrName","getURL","urlToLoad","shareProfilesViaLink","profileName","linkId","handleShare","pathname","accessTokenFromWeb","accessTokenFromDesktop","urlCurrent","isShared","isUpdatePage","profileJson","handleDeepLink","argument3","vaultService","vaultAccessTokenAccount","googleClientIdKey","saveAccessToken","writeAccessTokenToVault","saveGoogleClientIdToVault","googleClientId","keytar","getGoogleClientIdFromVault","checkAccessTokenInVault","electron","isAppUpdateChecking","isAppUpdateDownloading","isAppUpdateReady","initServer","addExtensionMethods","remoteMain","isApplicationUpdate","folderPaths","requireFinished","DEEP_LINKS_PROTOCOL","deepLinkOnAppLaunch","argv","gotApplicationLock","domRenderSentrySpan","domStarted","startAppSentryTransaction","electronSentrySpan","contextMenuTray","Menu","label","click","_window","show","checkAppUpdate","autoUpdater","menuTemplate","submenu","accelerator","_window2","hide","role","title","createWindow","windowSettings","GOLOGIN_ELECTRON_THEME","primaryDisplay","workAreaSize","BrowserWindow","minWidth","minHeight","useContentSize","webPreferences","nodeIntegration","contextIsolation","maximize","setFullScreen","preventDefault","slashes","tray","Tray","nativeImage","setToolTip","setContextMenu","_window3","_window4","_window6","_window5","globalShortcut","_window7","_window8","isFocused","toggleDevTools","closeApp","removeAllListeners","_window9","details","commandLine","workingDirectory","additionalData","at","isMinimized","restore","focus","checkSystemFonts","extensionManagerInst","isProtocolCreated","defaultApp","execPath","ipcMain","_domRenderSentrySpan","domReady","userId","isFirstSession","plan","planId","systemTheme","_x20","_ref15","_x21","_x22","_ref16","_x23","_x24","_ref18","checkProxy","_x25","_x26","_ref21","_x27","_x28","_ref22","_event","_x29","_x30","_ref23","_x31","_x32","_ref24","_x33","_x34","_ref27","_ref26","versionToDownload","browserVersionMajorFromUA","pickedVersionIfSkipDownload","_x35","_x36","_ref29","_ref28","_x37","_x38","_ref30","_x39","_x40","_ref31","_x41","_ref32","_x42","_x43","getClientIdFromMetadataFile","default","currentGoogleClientId","_ref36","_x44","_x45","getSystemFontsFromFile","_ref38","_x46","_x47","_ref39","_x48","_x49","_ref43","_x50","_x51","_ref48","_x52","_x53","_ref49","_Object$keys","clearCache","runningProfiles","closeAppTitle","closeAppMessage","closeAppBtnClose","closeAppBtnCancel","dialog","buttons","noLink","_x54","_window10"],"sourceRoot":""}