{"version":3,"file":"936.renderer.js","mappings":"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","sources":["webpack://GoLogin/./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","webpack://GoLogin/./src/app/features/authentification/SignIn/api.ts","webpack://GoLogin/./src/app/features/authentification/SignIn/components/index.tsx","webpack://GoLogin/./src/app/features/authentification/StyledComponents/AuthFormContainer.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/AuthTextField.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/Form.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/NavigationContainer.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/NavigationDividerContainer.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/NavigationLink.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/PageWrapper.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/SubmitButton.tsx","webpack://GoLogin/./src/app/features/authentification/StyledComponents/Subtitle.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/Title.ts","webpack://GoLogin/./src/app/features/authentification/helpers/check-authentification.ts"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import { API_BASE_URL } from '../../../../common/constants/constants';\r\nimport { initGA } from '../../../initGA';\r\nimport { http } from '../../../services';\r\nimport { saveToken } from '../../../services/http/storage';\r\n\r\nconst isElectron = !!window.require;\r\n\r\nexport async function logIn(username: string, password: string) {\r\n  const googleClientId = await initGA();\r\n\r\n  const requestBody = JSON.stringify({\r\n    fromApp: isElectron,\r\n    googleClientId,\r\n    password,\r\n    username,\r\n  });\r\n\r\n  const loggedInAccount = await http(`${API_BASE_URL}/user/login`, {\r\n    method: 'POST',\r\n    body: requestBody,\r\n  });\r\n\r\n  saveToken(loggedInAccount?.body?.token, 'logIn');\r\n\r\n  await initGA();\r\n\r\n  return loggedInAccount;\r\n}\r\n","import React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { history } from '../../../../services';\r\nimport { isEmailValid } from '../../../../utils/email-validator';\r\nimport { checkAuthentication } from '../../helpers';\r\nimport OAuth from '../../o-auth';\r\nimport {\r\n  AuthContentContainer,\r\n  AuthTextField,\r\n  Form,\r\n  NavigationContainer,\r\n  NavigationDividerContainer,\r\n  NavigationLink,\r\n  PageWrapper,\r\n  SubmitButton,\r\n  Title,\r\n} from '../../StyledComponents';\r\nimport { logIn } from '../api';\r\n\r\ntype TErrorInputs = 'email'|'password';\r\n\r\nconst isElectron = !!window.require;\r\n\r\nconst SignIn = () => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [errorInputs, setErrorInputs] = useState<TErrorInputs[]>([]);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const emailFieldRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const passwordFieldRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n\r\n  useEffect(() => {\r\n    checkAuthentication();\r\n  }, []);\r\n\r\n  const onLoginSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const email = emailFieldRef.current.value;\r\n    const password = passwordFieldRef.current.value;\r\n\r\n    // Validating email\r\n    const isEmailValidationSuccess = isEmailValid(email);\r\n    if (!isEmailValidationSuccess) {\r\n      emailFieldRef.current.focus();\r\n      setErrorInputs(['email']);\r\n\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      await logIn(email, password);\r\n\r\n      history.replace('/profileList');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <AuthContentContainer>\r\n        <Title>\r\n          {translation('auth.login.title')}\r\n        </Title>\r\n\r\n        <OAuth.Buttons isElectron={isElectron} />\r\n\r\n        <Form onSubmit={onLoginSubmit}>\r\n          <AuthTextField\r\n            ref={emailFieldRef}\r\n            status={errorInputs.includes('email') ? 'error' : 'default'}\r\n            placeholder={translation('auth.login.form.emailInputPlaceholder')}\r\n            type='email'\r\n            required={true}\r\n            autoFocus={true}\r\n          />\r\n          <AuthTextField\r\n            ref={passwordFieldRef}\r\n            status={errorInputs.includes('email') ? 'error' : 'default'}\r\n            placeholder={translation('auth.login.form.passwordInputPlaceholder')}\r\n            type='password'\r\n            required={true}\r\n          />\r\n\r\n          <SubmitButton type='submit' loading={isLoading}>\r\n            {translation('auth.login.form.submitBtnTxt')}\r\n          </SubmitButton>\r\n        </Form>\r\n\r\n        <NavigationContainer>\r\n          <NavigationLink to='/sign_up'>\r\n            {translation('auth.login.links.signUp')}\r\n          </NavigationLink>\r\n          <NavigationDividerContainer>\r\n            •\r\n          </NavigationDividerContainer>\r\n          <NavigationLink to='/forgot_password'>\r\n            {translation('auth.login.links.forgotPassword')}\r\n          </NavigationLink>\r\n        </NavigationContainer>\r\n      </AuthContentContainer>\r\n\r\n      <Helmet>\r\n        <title>\r\n          {translation('auth.login.windowTitle')}\r\n          {' '}\r\n          - GoLogin\r\n          {' '}\r\n          {window.gologinAppVersion || ''}\r\n        </title>\r\n      </Helmet>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(SignIn);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const AuthContentContainer = styled.div`\r\n  width: 404px;\r\n  color: var(--FFFFFF-auth-pages-form);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\ninterface IAuthTextField {\r\n  status?: 'error'|'default';\r\n}\r\n\r\nexport const AuthTextField = styled.input<IAuthTextField>`\r\n  height: 50px;\r\n  padding: 13px 14px;\r\n  border: 1px solid var(--E0E0E0-auth-pages-text);\r\n  border-radius: 4px;\r\n\r\n  font-family: Calibre, Roboto;\r\n  font-weight: 400;\r\n  line-height: 21px;\r\n  color: var(--808080-auth-pages-text);\r\n  outline: none;\r\n  background: var(--FCFCFC-auth-pages-text);\r\n\r\n  & + * {\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  // Handling \"status\" props\r\n  ${(props) => {\r\n    if (props.status === 'error') {\r\n      return 'border: 2px solid var(--F5222D-auth-pages-text);';\r\n    }\r\n  }}\r\n  \r\n  mix-blend-mode: normal;\r\n  \r\n  &::placeholder {\r\n    color: var(--808080-auth-pages-text);\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 20px;\r\n  background: var(--00A987-auth-pages);\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const NavigationContainer = styled.span`\r\n  margin-top: 32px;\r\n  width: max-content;\r\n  text-align: center;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const NavigationDividerContainer = styled.span`\r\n  margin: 0 5px;\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const NavigationLink = styled(Link)`;\r\n  color: var(--FFFFFF-auth-pages-navigation-link);\r\n  font: 300 18px/21.6px 'Graphik LC', Roboto;\r\n  transition: opacity linear .2s;\r\n  \r\n  :hover {\r\n    color: var(--FFFFFF-auth-pages-navigation-link);\r\n    opacity: .5;\r\n  }\r\n`;\r\n\r\nexport const NavigationSpan = styled('span')`;\r\n  color: var(--FFFFFF-auth-pages-navigation-link);\r\n  font: 300 18px/21.6px 'Graphik LC', Roboto;\r\n  transition: opacity linear .2s;\r\n  cursor: pointer;\r\n  \r\n  :hover {\r\n    color: var(--FFFFFF-auth-pages-navigation-link);\r\n    opacity: .5;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const PageWrapper = styled.div`\r\n  background: var(--00A987-auth-pages);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  height: auto;\r\n  min-height: 100%;\r\n  flex: 1;\r\n  flex-direction: column;\r\n`;\r\n","import React, { FC, memo } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface IStyledButton {\r\n  loading?: boolean;\r\n  width?: number;\r\n}\r\n\r\nexport const StyledButton = styled.button<IStyledButton>`\r\n  height: 56px;\r\n  padding: 17px 30px;\r\n  margin: 32px auto 0 auto;\r\n  border-radius: 60px;\r\n  border: none;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-family: 'Graphik LC', Roboto;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 21.6px;\r\n  color: var(--000000-auth-pages-button);\r\n\r\n  background: var(--FFE164-auth-pages-button);\r\n  outline: none;\r\n  cursor: pointer;\r\n  transition: all linear .3s;\r\n  \r\n  width: ${props => `${props.width}px` || 'auto'};\r\n\r\n  ${(props) => {\r\n    if (!props.loading) {\r\n      return `\r\n        :hover {\r\n          color: var(--FFE164-auth-pages-button);\r\n          background: var(--000000-auth-pages-button);\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n\r\ninterface ISubmitButton extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  loading?: boolean;\r\n  width?: number;\r\n}\r\nconst SButton: FC<ISubmitButton> = (props) => {\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <StyledButton {...props}>\r\n        <CircularProgress value={99} disableShrink={true} size={14} color='inherit' />\r\n      </StyledButton>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledButton {...props}>{props.children}</StyledButton>\r\n  );\r\n}\r\n\r\nexport const SubmitButton = memo(SButton);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Subtitle = styled.h2`\r\n  font: 300 18px/21.6px 'Graphik LC', Roboto;\r\n  text-align: center;\r\n  color: var(--FFFFFF-auth-pages-text);\r\n  margin-top: 19px;\r\n  margin-bottom: 0;\r\n  width: 336px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h1`\r\n  margin: 0;\r\n\r\n  font-family: 'Graphik LC', Roboto;\r\n  font-size: 38px;\r\n  font-weight: 700;\r\n  line-height: 45.6px;\r\n  text-align: center;\r\n  color: var(--FFFFFF-auth-pages-text);\r\n`;\r\n","import { history } from '../../../services';\r\nimport { retrieveToken } from '../../../services/http/storage';\r\n\r\nexport const checkAuthentication = async (): Promise<void> => {\r\n  const token = await retrieveToken();\r\n\r\n  if (token) {\r\n    history.replace('/profileList');\r\n  }\r\n};\r\n"],"names":["SIZE","CircularProgress","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","root","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","isElectron","window","require","_logIn","_asyncToGenerator","username","password","_loggedInAccount$body","googleClientId","initGA","requestBody","JSON","stringify","fromApp","loggedInAccount","http","API_BASE_URL","method","body","saveToken","token","apply","arguments","SignIn","isLoading","setIsLoading","useState","errorInputs","setErrorInputs","t","translation","useTranslation","emailFieldRef","useRef","passwordFieldRef","useEffect","checkAuthentication","onLoginSubmit","_ref","e","preventDefault","email","current","isEmailValid","focus","_x","_x2","logIn","history","React","PageWrapper","AuthContentContainer","Title","OAuth","Form","onSubmit","AuthTextField","status","includes","placeholder","type","required","autoFocus","SubmitButton","loading","NavigationContainer","NavigationLink","to","NavigationDividerContainer","Helmet","gologinAppVersion","memo","styled","_templateObject","_taggedTemplateLiteral","Link","NavigationSpan","_templateObject2","StyledButton","SButton","children","Subtitle","retrieveToken"],"sourceRoot":""}