{"version":3,"file":"315.renderer.js","mappings":"qmBACYA,E,uBAQX,SARWA,GAAAA,EAAkB,wCAAlBA,EAAkB,yDAAlBA,EAAkB,+DAAlBA,EAAkB,kDAAlBA,EAAkB,iCAAlBA,EAAkB,oDAAlBA,EAAkB,mCAQ7B,CARWA,IAAAA,EAAkB,K,gDCQxBC,EAA0B,OA0BhC,QAxB+B,WAC7B,IAAM,gBAAEC,EAAkB,KAAqCC,EAAAA,EAAAA,MAEzDC,EAAiB,WACrB,IAAKF,EACH,OAAOG,EAAAA,GAAAA,KAAa,MAGtBC,EAAAA,EAAAA,IAAoBN,EAAmBO,QAAS,CAAEC,KAAMP,EAAyBQ,WAAYP,KAC7FQ,EAAAA,EAAAA,GAAmB,QAADC,OAAST,EAAe,cAAAS,OAAaV,GACzD,EAWA,OAJAW,EAAAA,EAAAA,YAAU,WACRR,GACF,GAAG,IAEIS,EAAAA,cAACC,EAAAA,EAAqB,CAACC,WAAW,EAAOC,YATH,SAACC,GAC5CA,EAAMC,iBACNd,GACF,GAOF,C","sources":["webpack://GoLogin/./src/common/constants/analytics.ts","webpack://GoLogin/./src/app/features/deep-links/open-links/redirect-to-desktop-page.tsx/index.tsx"],"sourcesContent":["/* eslint-disable no-shadow */\r\nexport enum OpenProfileViaLink {\r\n  visited = 'visited open profile via link',\r\n  startedHandling = 'started handling open profile via link',\r\n  startedRedirecting = 'started redirecting open profile via link',\r\n  startedOpening = 'started opening profile via link',\r\n  opened = 'opened profile via link',\r\n  startedFocusing = 'started focusing profile via link',\r\n  focused = 'focused profile via link',\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { OpenProfileViaLink } from '../../../../../common/constants/analytics';\r\nimport { history } from '../../../../services';\r\nimport { sendActionAnalytics } from '../../../common/api';\r\nimport { RedirectToDesktopPage } from '../../../common/components/redirect-to-desktop-page';\r\nimport { redirectToElectron } from '../../../common/components/redirect-to-desktop-page/utils';\r\n\r\nconst DEEP_LINK_PROTOCOL_HTTP = 'http';\r\n\r\nconst OpenLinkPage: React.FC = () => {\r\n  const { profileIdOrName = '' }: { profileIdOrName?: string } = useParams();\r\n\r\n  const handleRedirect = (): void => {\r\n    if (!profileIdOrName) {\r\n      return history.push('/');\r\n    }\r\n\r\n    sendActionAnalytics(OpenProfileViaLink.visited, { mode: DEEP_LINK_PROTOCOL_HTTP, actionInfo: profileIdOrName });\r\n    redirectToElectron(`open/${profileIdOrName}?protocol=${DEEP_LINK_PROTOCOL_HTTP}`);\r\n  };\r\n\r\n  const handleClick: React.MouseEventHandler = (event) => {\r\n    event.preventDefault();\r\n    handleRedirect();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleRedirect();\r\n  }, []);\r\n\r\n  return <RedirectToDesktopPage isLoading={false} handleClick={handleClick} />;\r\n};\r\n\r\nexport default OpenLinkPage;\r\n"],"names":["OpenProfileViaLink","DEEP_LINK_PROTOCOL_HTTP","profileIdOrName","useParams","handleRedirect","history","sendActionAnalytics","visited","mode","actionInfo","redirectToElectron","concat","useEffect","React","RedirectToDesktopPage","isLoading","handleClick","event","preventDefault"],"sourceRoot":""}