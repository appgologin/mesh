{"version":3,"file":"422.renderer.js","mappings":"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","sources":["webpack://GoLogin/./src/app/features/quickProfiles/components/body-container.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/container-dashboard.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/manage-profile-tags.ts","webpack://GoLogin/./src/app/features/quickProfiles/components/default-columns-settings.ts","webpack://GoLogin/./src/app/state/is-more-profiles-available.atom.ts","webpack://GoLogin/./src/app/features/quickProfiles/components/infinite-scroll-profiles-table.tsx","webpack://GoLogin/./src/app/features/tags/interfaces/tag.interface.ts","webpack://GoLogin/./src/app/features/tags/api.ts","webpack://GoLogin/./src/app/ui/icons/IconCheck.tsx","webpack://GoLogin/./src/app/ui/icons/IconDotsHorizontal.tsx","webpack://GoLogin/./src/app/ui/icons/IconRemove.tsx","webpack://GoLogin/./src/app/features/tags/components/colors.ts","webpack://GoLogin/./src/app/features/tags/components/tag-colors.tsx","webpack://GoLogin/./src/app/features/tags/components/tag-list-item.tsx","webpack://GoLogin/./src/app/features/tags/components/tag-suggest-item.tsx","webpack://GoLogin/./src/app/features/tags/components/add-tag.tsx","webpack://GoLogin/./src/app/features/tags/components/tag.tsx","webpack://GoLogin/./src/app/features/tags/components/edit-mode-tags.tsx","webpack://GoLogin/./src/app/features/tags/components/multiple-tags-popper.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/edit-tags-menu-btn.tsx","webpack://GoLogin/./src/app/state/edit-mode-profile-id.atom.ts","webpack://GoLogin/./src/app/ui/Footer/utils.ts","webpack://GoLogin/./src/app/ui/icons/IconAddFolder.tsx","webpack://GoLogin/./src/app/ui/icons/IconAddMembersGreen.tsx","webpack://GoLogin/./src/app/ui/icons/IconDeleteProfile.tsx","webpack://GoLogin/./src/app/ui/icons/IconFinger.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multiple-proxy-manager/components/profile-proxy.tsx","webpack://GoLogin/./src/app/features/proxy/api.ts","webpack://GoLogin/./src/app/features/proxy/add-multiple-proxies.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multiple-proxy-manager/api.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multiple-proxy-manager/components/auto-form.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multiple-proxy-manager/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/profile-bookmarks/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/profile-bookmarks/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/share-modal.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/transfer-profile/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/transfer-profile/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/transfer-profile/transfer-confirm.tsx","webpack://GoLogin/./src/app/features/quickProfiles/actions/stop-profile-orbita.ts","webpack://GoLogin/./src/app/features/updateProfile/api.ts","webpack://GoLogin/./src/app/features/quickProfiles/actions/launch-profile-web.ts","webpack://GoLogin/./src/app/features/quickProfiles/components/profiles-menu.tsx","webpack://GoLogin/./src/app/utils/cloud-browser.ts","webpack://GoLogin/./src/app/features/quickProfiles/actions/stop-profile-web.ts","webpack://GoLogin/./src/app/features/quickProfiles/components/resizable-title.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/styles.tsx","webpack://GoLogin/./src/app/ui/icons/IconSharing.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/tab-profile.tsx","webpack://GoLogin/./src/app/features/proxy/styles/check-proxy-btn.ts","webpack://GoLogin/./src/app/features/proxy/proxy-selector/proxy-form/styles.ts","webpack://GoLogin/./src/app/features/proxy/proxy-selector/proxy-selector-buttons/styles.ts","webpack://GoLogin/./src/app/features/proxy/styles/proxy-search-input.ts","webpack://GoLogin/./src/app/features/proxy/proxy-selector/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/components/table-custom.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/TableColumns/ProxyColumn/styles.ts","webpack://GoLogin/./src/app/ui/gologin-table/styles.ts","webpack://GoLogin/./src/app/features/tags/components/add-tag-placeholder.tsx","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/table/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/components/TableColumns/ProxyTypeColumn.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/TableColumns/ProxyParamColumn.tsx","webpack://GoLogin/./src/common/constants/events.ts","webpack://GoLogin/./src/app/state/profiles-table.commands.ts","webpack://GoLogin/./src/app/ui/icons/IconDotsInButton.tsx","webpack://GoLogin/./src/app/features/common/deep-links/get-profile-for-link.ts","webpack://GoLogin/./src/app/features/common/deep-links/handle-share-via-link-from-event.ts","webpack://GoLogin/./src/app/features/common/deep-links/get-profile-from-storage.ts","webpack://GoLogin/./src/app/features/common/deep-links/constants.ts","webpack://GoLogin/./src/app/features/drawer/api.ts","webpack://GoLogin/./src/app/features/drawer/components/styles.ts","webpack://GoLogin/./src/app/features/drawer/components/drawer-backdrop.tsx","webpack://GoLogin/./src/app/ui/icons/IconSpinnerAutosave.tsx","webpack://GoLogin/./src/app/ui/icons/IconSuccessAutosave.tsx","webpack://GoLogin/./src/app/features/drawer/components/Loader.tsx","webpack://GoLogin/./src/app/features/drawer/components/drawer-geolocation.tsx","webpack://GoLogin/./src/app/ui/icons/IconTrustworthy.tsx","webpack://GoLogin/./src/app/features/quickProfiles/run-button/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/run-button/view-button.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/button-run-profile.tsx","webpack://GoLogin/./src/app/features/quickProfiles/run-button/index.tsx","webpack://GoLogin/./src/app/features/drawer/components/drawer-header-buttons.tsx","webpack://GoLogin/./src/app/features/drawer/components/drawer-language.tsx","webpack://GoLogin/./src/app/ui/icons/IconCopyProxyInDrawer.tsx","webpack://GoLogin/./src/app/ui/icons/IconSelectProxyInDrawer.tsx","webpack://GoLogin/./src/app/features/drawer/components/drawer-proxy.tsx","webpack://GoLogin/./src/app/features/drawer/components/drawer-timezone.tsx","webpack://GoLogin/./src/app/ui/icons/IconClose.tsx","webpack://GoLogin/./src/app/ui/icons/IconRemoveFolderFromRow.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/cookies-manager/cookies-manager.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/cookies-manager/cookies-list.tsx","webpack://GoLogin/./src/app/features/profile-settings/styles.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/sections-group/styles.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/sections-group/collapse.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/sections-group/settings-lists.ts","webpack://GoLogin/./src/app/features/profile-settings/interfaces.ts","webpack://GoLogin/./src/app/features/profile-settings/content/sections-group/default-sections.ts","webpack://GoLogin/./src/app/features/profile-settings/content/sections-group/section-header.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/sections-group/setting-row.tsx","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/add-notes-placeholder.tsx","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/notes-color-replace.hook.ts","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/quill-notes.tsx","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/sanitize-html.tsx","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/static-notes.tsx","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/utils.ts","webpack://GoLogin/./src/app/hooks/use-element-height.hook.ts","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/notes.tsx","webpack://GoLogin/./src/app/ui/modern-switch/styles.tsx","webpack://GoLogin/./src/app/ui/modern-switch/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/active-session-lock.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/resolution.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/canvas.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/language/styles.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/language/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/fonts.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/audio-context.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/browser-bookmark-saving.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/browser-history-saving.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/browser-plugins.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/cookies/styles.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/cookies/index.tsx","webpack://GoLogin/./src/app/ui/closeable-input/styles.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/fingerprint.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/custom-dns.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/device-memory.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/extension-storage.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/external-extensions.tsx","webpack://GoLogin/./src/app/ui/gologin-header/icons/icon-check-fingerprint.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/geolocation/select-items.ts","webpack://GoLogin/./src/app/features/profile-settings/content/settings/geolocation/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/google-services.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/hardware-concurrency.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/local-storage-and-indexed-db.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/max-touch-points.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/media-devices.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/operating-system.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/password-saving.tsx","webpack://GoLogin/./src/app/features/proxy/send-pasted-proxies.ts","webpack://GoLogin/./src/app/state/proxy-operations.commands.ts","webpack://GoLogin/./src/app/features/proxy/components/proxy-icon-btn-with-tooltip.tsx","webpack://GoLogin/./src/app/features/proxy/styles/proxy-info.ts","webpack://GoLogin/./src/app/features/proxy/styles/proxy-info-error.ts","webpack://GoLogin/./src/app/features/proxy/components/proxy-info-error.tsx","webpack://GoLogin/./src/app/ui/icons/IconCheckCircle.tsx","webpack://GoLogin/./src/app/ui/icons/IconCloseCurrentColor.tsx","webpack://GoLogin/./src/app/ui/icons/IconProxyPencil.tsx","webpack://GoLogin/./src/app/ui/icons/IconWarningTr.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/styles/proxy-list-item.ts","webpack://GoLogin/./src/app/features/proxy/components/proxy-info.tsx","webpack://GoLogin/./src/app/features/proxy/components/check-proxy-btn.tsx","webpack://GoLogin/./src/app/ui/icons/IconEmptyFlag.tsx","webpack://GoLogin/./src/app/features/proxy/styles/proxy-flag.ts","webpack://GoLogin/./src/app/features/proxy/components/proxy-flag.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/styles/proxy-item.ts","webpack://GoLogin/./src/app/features/proxy/proxy-selector/proxy-form/index.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-selector/proxy-placeholder/styles.ts","webpack://GoLogin/./src/app/features/proxy/proxy-selector/proxy-placeholder/index.tsx","webpack://GoLogin/./src/app/hooks/use-should-mount.hook.ts","webpack://GoLogin/./src/app/ui/icons/IconPasteProxy.tsx","webpack://GoLogin/./src/app/ui/icons/IconPlus.tsx","webpack://GoLogin/./src/app/features/proxy/styles/icon-btns.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-selector/proxy-selector-buttons/index.tsx","webpack://GoLogin/./src/app/features/proxy/utils/find-proxy-in-list.ts","webpack://GoLogin/./src/app/features/proxy/proxy-selector/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/proxy.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/session-saving.tsx","webpack://GoLogin/./src/app/ui/closeable-input/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/start-url.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/timezone/select-items.ts","webpack://GoLogin/./src/app/features/profile-settings/content/settings/timezone/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/user-agent.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/webgl-metadata.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/webRTC-public.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/profile-name/profile-name.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/profile-name/cancel-rename-confirm.tsx","webpack://GoLogin/./src/app/features/profile-settings/api.ts","webpack://GoLogin/./src/app/features/profile-settings/content/settings/folder-list/styles.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/mixed/mixed.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/profile-name/mixed-profile-name.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/folder-list/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/webgl-image.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/bookmarks.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/extensions.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/mixed/mixed-bookmarks.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/mixed/mixed-extensions.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/settings/mixed/mixed-proxy.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/sections-group/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/sections-group/settings-param.tsx","webpack://GoLogin/./src/app/features/profile-settings/content/utils/get-profile.ts","webpack://GoLogin/./src/app/state/profile-settings-full-profile.atom.ts","webpack://GoLogin/./src/app/features/profile-settings/content/profile-settings-content.tsx","webpack://GoLogin/./src/app/features/profile-settings/profile-settings-header/styles.tsx","webpack://GoLogin/./src/app/features/profile-settings/profile-settings-header/index.tsx","webpack://GoLogin/./src/app/features/profile-settings/index.tsx","webpack://GoLogin/./src/app/features/drawer/components/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/profile-upload-history/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/profile-upload-history/api.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/update-profiles-ua/api.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/update-profiles-ua/update-profiles.tsx","webpack://GoLogin/./src/app/utils/is-firefox.ts","webpack://GoLogin/./src/app/features/tags/components/tags.tsx","webpack://GoLogin/./src/app/features/quickProfiles/column-header/styles.ts","webpack://GoLogin/./src/app/ui/gologin-table/sorter-col.tsx","webpack://GoLogin/./src/app/ui/icons/IconArrowBack.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/show-all-tags-btn.tsx","webpack://GoLogin/./src/app/ui/icons/IconPlusInCircle.tsx","webpack://GoLogin/./src/app/features/quickProfiles/quick-create-profile/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/column-header/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/custom-status-cell/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/date-cell/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-name/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-name/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-name-icons/styles.ts","webpack://GoLogin/./src/app/ui/icons/IconAppleM1.tsx","webpack://GoLogin/./src/app/ui/icons/IconLinuxProfileTable.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-name-icons/tooltip-os-icon/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-name-icons/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-settings-btn/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-settings-btn/tooltip/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-settings-btn/tooltip/index.tsx","webpack://GoLogin/./src/app/ui/icons/IconProfileSettingsBtnArrow.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-settings-btn/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/sharing-icon/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/sharing-icon/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/styles.ts","webpack://GoLogin/./src/app/ui/icons/IconNewProfile.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/name-cell-core.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-edit/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/profile-edit/index.tsx","webpack://GoLogin/./src/app/state/profiles-table-editing-profile-name.atom.ts","webpack://GoLogin/./src/app/features/quickProfiles/run-button-cell/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/run-button-cell/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/name-cell/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/no-profiles-placeholder/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/normalize-profiles-data.ts","webpack://GoLogin/./src/app/features/quickProfiles/notes-cell/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/orbita-version-cell/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/os-cell.tsx","webpack://GoLogin/./src/app/features/quickProfiles/proxy-cell/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/quick-create-profile/create-quick-profile.action.ts","webpack://GoLogin/./src/app/features/quickProfiles/sharing-cell/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/status-cell/styles.ts","webpack://GoLogin/./src/app/ui/icons/IconResyncProfile.tsx","webpack://GoLogin/./src/app/features/quickProfiles/status-cell/status-message.tsx","webpack://GoLogin/./src/app/features/quickProfiles/status-cell/status-type.ts","webpack://GoLogin/./src/app/features/quickProfiles/status-cell/index.tsx","webpack://GoLogin/./src/app/ui/gologin-table/all-rows-selection.tsx","webpack://GoLogin/./src/app/ui/gologin-table/gologin-table-header-column.tsx","webpack://GoLogin/./src/app/ui/gologin-table/gologin-table-header.tsx","webpack://GoLogin/./src/app/features/quickProfiles/table/profile-row.tsx","webpack://GoLogin/./src/app/features/quickProfiles/table/use-profile-sortable.ts","webpack://GoLogin/./src/app/ui/gologin-table/gologin-table-row.tsx","webpack://GoLogin/./src/app/ui/gologin-table/row-selection-cell.tsx","webpack://GoLogin/./src/app/ui/gologin-table/virtual-overscan-indices-getter.ts","webpack://GoLogin/./src/app/hooks/use-element-width.hook.ts","webpack://GoLogin/./src/app/ui/gologin-table/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/profiles-table.tsx","webpack://GoLogin/./src/common/constants/local-storage.ts","webpack://GoLogin/./src/app/utils/get-folder-selected-or-all.ts","webpack://GoLogin/./src/app/utils/insert-profile-to-list-by-index.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/folders-manager/folders/folder/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/folders-manager/folders/folder/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/folders-manager/folders/index.tsx","webpack://GoLogin/./src/app/ui/icons/IconFolder.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/folders-manager/folders/folder-create/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/folders-manager/folders/folder-create/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/folders-manager/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/api.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/button-add-link/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/button-add-link/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/share-links-list/share-link-item/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-actions-select/share-actions-dropdown/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-actions-select/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/utils/get-host-and-origin.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/share-links-list/share-link-item/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/share-links-list/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/share-links-list/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/styles.ts","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/share-links/index.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/user-row.tsx","webpack://GoLogin/./src/app/features/modalsComponents/components/multi-share-modal/index.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/styles/empty-list.ts","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/styles/proxy-list.ts","webpack://GoLogin/./src/app/ui/icons/IconPlusEmptyList.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/empty-list.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/styles/proxy-item-checkbox.ts","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/proxy-item-checkbox.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/proxy-item.tsx","webpack://GoLogin/./src/app/features/proxy/styles/proxy-profiles-count-block.ts","webpack://GoLogin/./src/app/features/proxy/components/proxy-profiles-count-block.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/proxy-list-item.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/proxy-row.tsx","webpack://GoLogin/./src/app/features/proxy/styles/context-menu.ts","webpack://GoLogin/./src/app/features/proxy/components/context-menu.tsx","webpack://GoLogin/./src/app/ui/icons/IconBasket.tsx","webpack://GoLogin/./src/app/ui/icons/IconProxyClose.tsx","webpack://GoLogin/./src/app/ui/icons/IconProxyCopy.tsx","webpack://GoLogin/./src/app/ui/icons/IconSelectAll.tsx","webpack://GoLogin/./src/app/features/proxy/styles/proxy-list-menu.ts","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-manager-edit-view/styles.ts","webpack://GoLogin/./src/app/features/proxy/components/proxy-list-menu.tsx","webpack://GoLogin/./src/app/features/proxy/styles/removing-confirm.ts","webpack://GoLogin/./src/app/features/proxy/components/removing-confirm.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-list/index.tsx","webpack://GoLogin/./src/app/ui/icons/IconBack.tsx","webpack://GoLogin/./src/app/ui/icons/IconClean.tsx","webpack://GoLogin/./src/app/ui/icons/IconCopyProxy.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-manager-edit-view/proxy-update-form-header.tsx","webpack://GoLogin/./src/app/utils/is-string.ts","webpack://GoLogin/./src/app/features/proxy/styles/radio-buttons.ts","webpack://GoLogin/./src/app/features/proxy/components/radio-buttons.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/proxy-manager-edit-view/index.tsx","webpack://GoLogin/./src/app/features/proxy/proxy-manager/styles.ts","webpack://GoLogin/./src/app/features/proxy/proxy-manager/index.tsx","webpack://GoLogin/./src/app/features/proxy/utils/sentry-utils.ts","webpack://GoLogin/./src/app/ui/icons/IconRename.tsx","webpack://GoLogin/./src/app/features/tags/components/title-tag.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/advanced-tab.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/styles.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/body-container.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/container-dashboard.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/geolocation-manager.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/geolocation-tab.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/timezone-tab.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/webrtc-tab.tsx","webpack://GoLogin/./src/app/features/updateProfile/components/update-profile-page.tsx","webpack://GoLogin/./src/app/features/quickProfiles/quick-pricing/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/dragging-profiles-overlay/styles.ts","webpack://GoLogin/./src/app/features/quickProfiles/dragging-profiles-overlay/index.tsx","webpack://GoLogin/./src/app/features/quickProfiles/components/profiles-list-page.tsx","webpack://GoLogin/./src/app/features/common/deep-links/handle-share-via-link-from-storage.ts","webpack://GoLogin/./src/app/features/quickProfiles/no-profiles-placeholder/styles.ts","webpack://GoLogin/./src/app/ui/icons/IconPerson.tsx"],"sourcesContent":["import { css } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { borderRadiusContainer } from '../../../ui/style-templates';\r\n\r\n\r\ndeclare interface IBodyContainer {}\r\n\r\nconst Container = styled('div')<{ newStyle: boolean }>`\r\n  height: 100%;\r\n\r\n  ${props => props.newStyle && css `\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n    height: initial;\r\n  `}\r\n  ${props => props.newStyle && borderRadiusContainer()}\r\n\r\n  background-color: var(--FFFFFF-profile-table-container);\r\n`;\r\n\r\nconst BodyContaine: FunctionComponent<IBodyContainer> = ({ children }) => (\r\n  <Container newStyle={!!NEW_FEATURES.header}>{children}</Container>\r\n);\r\n\r\nexport default BodyContaine;\r\n","import { css } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { borderRadiusContainer } from '../../../ui/style-templates';\r\n\r\ndeclare interface IContainerDashboard {\r\n  closeDrawer: () => void;\r\n}\r\n\r\nconst Container = styled('div')<{ newStyle: boolean }>`\r\n  ${props => props.newStyle && css `\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n    background: var(--FFFFFF-profile-table-container);\r\n  `}\r\n  ${props => props.newStyle && borderRadiusContainer()}\r\n  height: 100%;\r\n`;\r\n\r\nconst ContainerDashboard: FunctionComponent<IContainerDashboard> = (props) => (\r\n  <Container newStyle={!!NEW_FEATURES.header} onClick={props.closeDrawer}>\r\n    {props.children}\r\n  </Container>\r\n);\r\n\r\nexport default ContainerDashboard;\r\n","import { IProfile } from '../../../interfaces';\r\nimport { ITag } from '../../tags/interfaces/tag.interface';\r\n\r\ninterface IModifyTagResponse {\r\n  updateRequired: boolean;\r\n  newProfiles: IProfile[];\r\n}\r\n\r\nexport interface IAddTagToProfiles {\r\n  profiles: IProfile[];\r\n  tag: ITag;\r\n  targetProfileIds?: string[]|'all';\r\n  compareBy?: 'id'|'title';\r\n}\r\n\r\nexport const addTagToProfiles = ({\r\n  profiles,\r\n  tag,\r\n  targetProfileIds = 'all',\r\n  compareBy = 'id',\r\n}: IAddTagToProfiles): IModifyTagResponse => {\r\n  let updateRequired = false;\r\n  const newProfiles = profiles.map(profile => {\r\n    if (targetProfileIds !== 'all') {\r\n      const profileObject = targetProfileIds.find(profileId => profile.id === profileId);\r\n      if (!profileObject) {\r\n        return profile;\r\n      }\r\n    }\r\n\r\n    const profileTags = profile.tags || [];\r\n    const existedTag = profileTags.find(profileTag =>\r\n      profileTag[compareBy] === tag[compareBy] &&\r\n      profileTag.field === tag.field,\r\n    );\r\n\r\n    if (existedTag) {\r\n      return profile;\r\n    }\r\n\r\n    updateRequired = true;\r\n    const newProfileTags = [...profileTags, tag];\r\n\r\n    return {\r\n      ...profile,\r\n      tags: newProfileTags,\r\n    };\r\n  });\r\n\r\n  return { updateRequired, newProfiles };\r\n};\r\n\r\ninterface IUpdateTagInProfiles extends IAddTagToProfiles {\r\n  appendIfNotFound?: boolean;\r\n}\r\n\r\nexport const updateTagInProfiles = ({\r\n  profiles,\r\n  tag,\r\n  targetProfileIds = 'all',\r\n  compareBy = 'id',\r\n  appendIfNotFound = false,\r\n}: IUpdateTagInProfiles): IModifyTagResponse => {\r\n  let updateRequired = false;\r\n  const newProfiles = profiles.map(profile => {\r\n    if (targetProfileIds !== 'all') {\r\n      const profileObject = targetProfileIds.find(profileId => profile.id === profileId);\r\n      if (!profileObject) {\r\n        return profile;\r\n      }\r\n    }\r\n\r\n    let foundInProfile = false;\r\n    const profileTags = profile.tags || [];\r\n    let newProfileTags = profileTags.map(profileTag => {\r\n      const isSameTag = profileTag[compareBy] === tag[compareBy] && profileTag.field === tag.field;\r\n      if (!isSameTag) {\r\n        return profileTag;\r\n      }\r\n\r\n      foundInProfile = true;\r\n\r\n      return tag;\r\n    });\r\n\r\n    if (!foundInProfile && appendIfNotFound) {\r\n      newProfileTags = [...profileTags, tag];\r\n    }\r\n\r\n    updateRequired = true;\r\n\r\n    return {\r\n      ...profile,\r\n      tags: newProfileTags,\r\n    };\r\n  });\r\n\r\n  return { updateRequired, newProfiles };\r\n};\r\n\r\nexport const removeTagFromProfiles = (\r\n  profiles: IProfile[],\r\n  tagId: string,\r\n  targetProfileIds: IAddTagToProfiles['targetProfileIds'] = 'all',\r\n): IProfile[] => profiles.map(profile => {\r\n  if (targetProfileIds !== 'all') {\r\n    const profileObject = targetProfileIds.find(profileId => profile.id === profileId);\r\n    if (!profileObject) {\r\n      return profile;\r\n    }\r\n  }\r\n\r\n  const tags = profile.tags.filter(tag => (tag.id !== tagId));\r\n\r\n  return {\r\n    ...profile,\r\n    tags,\r\n  };\r\n});\r\n\r\nexport const removeCustomStatusesFromProfiles = (\r\n  profiles: IProfile[],\r\n  workspaceId: string,\r\n  targetProfileIds: IAddTagToProfiles['targetProfileIds'] = 'all',\r\n): IProfile[] => profiles.map(profile => {\r\n  if (targetProfileIds !== 'all') {\r\n    const profileObject = targetProfileIds.find(profileId => profile.id === profileId);\r\n    if (!profileObject) {\r\n      return profile;\r\n    }\r\n  }\r\n\r\n  const tags = profile.tags.filter(tag => tag.field !== 'custom-status');\r\n\r\n  return {\r\n    ...profile,\r\n    tags,\r\n  };\r\n});\r\n\r\nexport const findProfilesWithTag = (profiles: IProfile[], tagId: string): IProfile[] => profiles.filter(profile => {\r\n  const profileTags = profile.tags || [];\r\n  const tagInProfile = profileTags.find(profileTag => tagId === profileTag.id);\r\n\r\n  return !!tagInProfile;\r\n});\r\n","export const defaultColumnsSettings = {\r\n  name: {\r\n    visible: true,\r\n    width: 335,\r\n  },\r\n  status: {\r\n    visible: Boolean(localStorage.getItem('ColumnTableStatus')),\r\n    width: 114,\r\n  },\r\n  notes: {\r\n    visible: true,\r\n    width: 180,\r\n  },\r\n  tags: {\r\n    visible: false,\r\n    width: 185,\r\n  },\r\n  customStatus: {\r\n    visible: true,\r\n    width: 185,\r\n  },\r\n  lastUpdate: {\r\n    visible: Boolean(localStorage.getItem('ColumnTable')),\r\n    width: 120,\r\n  },\r\n  lastLaunch: {\r\n    visible: Boolean(localStorage.getItem('ColumnTableLastLaunch')),\r\n    width: 130,\r\n  },\r\n  createdAt: {\r\n    visible: Boolean(localStorage.getItem('ColumnTableCreatedAt')),\r\n    width: 100,\r\n  },\r\n  sharing: {\r\n    visible: Boolean(localStorage.getItem('ColumnTableSharing')),\r\n    width: 100,\r\n  },\r\n  proxyType: {\r\n    visible: Boolean(localStorage.getItem('ColumnProxyType')),\r\n    width: 120,\r\n  },\r\n  proxy: {\r\n    visible: Boolean(localStorage.getItem('ColumnProxy')),\r\n    width: 150,\r\n  },\r\n  proxyPort: {\r\n    visible: Boolean(localStorage.getItem('ColumnProxyPort')),\r\n    width: 100,\r\n  },\r\n  proxyUsername: {\r\n    visible: Boolean(localStorage.getItem('ColumnProxyUsername')),\r\n    width: 100,\r\n  },\r\n  proxyPassword: {\r\n    visible: Boolean(localStorage.getItem('ColumnProxyPassword')),\r\n    width: 100,\r\n  },\r\n  os: {\r\n    visible: Boolean(localStorage.getItem('ColumnOs')),\r\n    width: 100,\r\n  },\r\n  orbitaVersion: {\r\n    visible: Boolean(localStorage.getItem('ColumnOrbitaVersion')),\r\n    width: 100,\r\n  },\r\n};\r\n\r\nexport function getDefaultColumnsSettings(): any {\r\n  const columnsSettings = defaultColumnsSettings;\r\n  let showNotes = localStorage.getItem('ColumnNotes') === null;\r\n  if (localStorage.getItem('ColumnNotes')) {\r\n    showNotes = localStorage.getItem('ColumnNotes') === 'true';\r\n  }\r\n\r\n  columnsSettings.notes.visible = showNotes;\r\n  let showStatus = localStorage.getItem('ColumnTableStatus') === null;\r\n  if (localStorage.getItem('ColumnTableStatus')) {\r\n    showStatus = localStorage.getItem('ColumnTableStatus') === 'true';\r\n  }\r\n\r\n  columnsSettings.status.visible = showStatus;\r\n\r\n  let showProxy = localStorage.getItem('ColumnProxy') === null;\r\n  if (localStorage.getItem('ColumnProxy')) {\r\n    showProxy = localStorage.getItem('ColumnProxy') === 'true';\r\n  }\r\n\r\n  columnsSettings.proxy.visible = showProxy;\r\n\r\n  return columnsSettings;\r\n}\r\n","import { getDefaultStore, atom, useAtomValue } from 'jotai';\r\n\r\nconst isMoreProfilesAvailableAtom = atom<boolean>(false);\r\n\r\nexport const useIsMoreProfilesAvailable = (): boolean => useAtomValue(isMoreProfilesAvailableAtom);\r\n\r\nexport const setIsMoreProfilesAvailable = (isMoreProfilesAvailable: boolean): void =>\r\n  getDefaultStore().set(isMoreProfilesAvailableAtom, isMoreProfilesAvailable);\r\n\r\nexport const getIsMoreProfilesAvailable = (): boolean => getDefaultStore().get(isMoreProfilesAvailableAtom);\r\n","import React, { FC } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport { useIsMoreProfilesAvailable } from '../../../state/is-more-profiles-available.atom';\r\n\r\ninterface IInfiniteScrollProfilesTable {\r\n  dataLength: number;\r\n  next: () => void;\r\n  loader: JSX.Element|null;\r\n  initialScrollY?: number;\r\n}\r\n\r\nexport const InfiniteScrollProfilesTable: FC<IInfiniteScrollProfilesTable> = (props) => {\r\n  const { dataLength, initialScrollY, loader, next, children } = props;\r\n\r\n  const isMoreProfilesAvailable = useIsMoreProfilesAvailable();\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={dataLength}\r\n      next={next}\r\n      hasMore={isMoreProfilesAvailable}\r\n      loader={loader}\r\n      style={{ overflow: 'visible' }}\r\n      scrollableTarget='root'\r\n      initialScrollY={initialScrollY}\r\n    >\r\n      {children}\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n","export const TAG_FIELDS = ['tags', 'custom-status'] as const;\r\nexport type TagField = typeof TAG_FIELDS[number];\r\n\r\nexport interface ITagBase {\r\n  id: string;\r\n  color: string;\r\n  title: string;\r\n  field: TagField;\r\n}\r\n\r\nexport interface ITag extends ITagBase {\r\n  isNewAdded?: boolean;\r\n  inAllProfiles?: boolean;\r\n  profilesWithTag?: number;\r\n  hasLocalId?: boolean;\r\n}\r\n\r\nexport interface IPopularTag extends ITag {\r\n  count: number;\r\n}\r\n\r\nexport interface IAddTag {\r\n  profileIds: string[];\r\n  title: string;\r\n  color: string;\r\n  field: TagField;\r\n  tagId?: string;\r\n  isNewAdded?: boolean;\r\n  lastTempId?: string;\r\n}\r\n\r\nexport interface IAddTagMethod {\r\n  browserIds: string[];\r\n  title: string;\r\n  color: string;\r\n  field: TagField;\r\n  workspace?: string;\r\n}\r\n","import { API_BASE_URL } from '../../../common/constants/constants';\r\nimport { http } from '../../services';\r\nimport { IAddTagMethod, ITag, ITagBase, TAG_FIELDS, TagField } from './interfaces/tag.interface';\r\n\r\ninterface IUpsertTagResponse {\r\n  id: string;\r\n  success: boolean;\r\n  title: string;\r\n  color: string;\r\n  field: TagField;\r\n  isNewAdded: boolean;\r\n}\r\n\r\nexport const addTagRequest = async (params: IAddTagMethod): Promise<IUpsertTagResponse> => {\r\n  const data = await http(`${API_BASE_URL}/tags/addToProfiles`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(params),\r\n  });\r\n\r\n  return data.body;\r\n};\r\n\r\nexport const updateTagRequest = async (workspaceId: string, tag: ITagBase): Promise<void> => {\r\n  const toSend: { title: string; color: string; workspace?: string } = {\r\n    ...tag,\r\n  };\r\n\r\n  if (workspaceId) {\r\n    toSend.workspace = workspaceId;\r\n  }\r\n\r\n  const data = await http(`${API_BASE_URL}/tags/${tag.id}`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(toSend),\r\n  });\r\n\r\n  return data.body;\r\n};\r\n\r\nexport const deleteTag = async (tagId: string, workspace: string): Promise<void> => {\r\n  const query = workspace ? new URLSearchParams({\r\n    workspace,\r\n  }) : '';\r\n\r\n  const data = await http(`${API_BASE_URL}/tags/${tagId}?${query}`, {\r\n    method: 'DELETE',\r\n  });\r\n\r\n  return data.body;\r\n};\r\n\r\nexport const deleteProfilesTag = async (profileIds: string[], tagId: string, workspace: string): Promise<{ success: boolean }> => {\r\n  const query = workspace ? new URLSearchParams({\r\n    workspace,\r\n  }) : '';\r\n\r\n  const data = await http(`${API_BASE_URL}/tags/${tagId}/removeFromProfiles?${query}`, {\r\n    method: 'DELETE',\r\n    body: JSON.stringify({\r\n      browserIds: profileIds,\r\n    }),\r\n  });\r\n\r\n  return data.body;\r\n};\r\n\r\nexport const normalizeTags = (tags: any): ITag[] => tags.map((tag: any) => {\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  const tagId = tag._id || tag.id;\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  delete tag._id;\r\n\r\n  return {\r\n    field: TAG_FIELDS[0],\r\n    ...tag,\r\n    id: tagId,\r\n  };\r\n});\r\n\r\nexport const searchTags = async (text: string, workspace: string): Promise<{ success: boolean; tags: ITag[] }> => {\r\n  const params: { q: string; workspace?: string } = {\r\n    q: text,\r\n  };\r\n\r\n  if (workspace) {\r\n    params.workspace = workspace;\r\n  }\r\n\r\n  const query = new URLSearchParams(params);\r\n\r\n  const { body } = await http(`${API_BASE_URL}/tags/search?${query}`, {\r\n    method: 'GET',\r\n  });\r\n\r\n  return { ...body, tags: normalizeTags(body.tags) };\r\n};\r\n\r\nexport const getAllTags = async (workspace: string): Promise<{ success: boolean; tags: ITag[] }> => {\r\n  const { body } = await http(`${API_BASE_URL}/tags/all?workspace=${workspace}`, {\r\n    method: 'GET',\r\n  });\r\n\r\n  return { ...body, tags: normalizeTags(body.tags) };\r\n};\r\n","import React from 'react';\r\n\r\nconst IconCheck = () => (\r\n  <svg width=\"8\" height=\"6\" viewBox=\"0 0 8 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M0.5 2.5L3 5L7.5 0.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconCheck;\r\n","import React from 'react';\r\n\r\nconst IconDotsHorizontal = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M1.5 9.5C2.32843 9.5 3 8.82843 3 8C3 7.17157 2.32843 6.5 1.5 6.5C0.671573 6.5 0 7.17157 0 8C0 8.82843 0.671573 9.5 1.5 9.5Z\" fill=\"currentColor\"/>\r\n    <path d=\"M8 9.5C8.82843 9.5 9.5 8.82843 9.5 8C9.5 7.17157 8.82843 6.5 8 6.5C7.17157 6.5 6.5 7.17157 6.5 8C6.5 8.82843 7.17157 9.5 8 9.5Z\" fill=\"currentColor\"/>\r\n    <path d=\"M14.5 9.5C15.3284 9.5 16 8.82843 16 8C16 7.17157 15.3284 6.5 14.5 6.5C13.6716 6.5 13 7.17157 13 8C13 8.82843 13.6716 9.5 14.5 9.5Z\" fill=\"currentColor\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconDotsHorizontal;\r\n","import React from 'react';\r\n\r\nconst IconRemove = () => (\r\n  <svg style={{ marginRight: 8, marginTop: -1 }} width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M1.5 6.5V13.5C1.5 14.605 2.395 15.5 3.5 15.5H11.5C12.605 15.5 13.5 14.605 13.5 13.5V6.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M0.5 3.5H14.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M5.5 3.5V0.5H9.5V3.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M7.5 7.5V12.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M10.5 7.5V12.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M4.5 7.5V12.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconRemove;\r\n","const colors = {\r\n  pink: {\r\n    fontColor: 'var(--FFD6E1-tags-colors)',\r\n    borderColor: 'var(--FFD6E1-tags-colors)',\r\n  },\r\n  yellow: {\r\n    fontColor: 'var(--FFEFAF-tags-colors)',\r\n    borderColor: 'var(--FFEFAF-tags-colors)',\r\n  },\r\n  green: {\r\n    fontColor: 'var(--BEEBDE-tags-colors)',\r\n    borderColor: 'var(--BEEBDE-tags-colors)',\r\n  },\r\n  blue: {\r\n    fontColor: 'var(--C8E0FF-tags-colors)',\r\n    borderColor: 'var(--C8E0FF-tags-colors)',\r\n  },\r\n  lightgrey: {\r\n    fontColor: 'var(--EEEEF1-tags-colors)',\r\n    borderColor: 'var(--EEEEF1-tags-colors)',\r\n  },\r\n  peach: {\r\n    fontColor: 'var(--FFE1D5-tags-colors)',\r\n    borderColor: 'var(--FFE1D5-tags-colors)',\r\n  },\r\n  lime: {\r\n    fontColor: 'var(--DFF6DA-tags-colors)',\r\n    borderColor: 'var(--DFF6DA-tags-colors)',\r\n  },\r\n  turquoise: {\r\n    fontColor: 'var(--D1F5F9-tags-colors)',\r\n    borderColor: 'var(--D1F5F9-tags-colors)',\r\n  },\r\n  lilac: {\r\n    fontColor: 'var(--E5D8F2-tags-colors)',\r\n    borderColor: 'var(--E5D8F2-tags-colors)',\r\n  },\r\n  grey: {\r\n    fontColor: 'var(--E1E1E1-tags-colors)',\r\n    borderColor: 'var(--E1E1E1-tags-colors)',\r\n  },\r\n};\r\n\r\nexport default colors;\r\n","import css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { useCurrentTheme } from '../../../state/theme.atom';\r\nimport IconRemove from '../../../ui/icons/IconRemove';\r\nimport getSelectedThemeColor from '../../../utils/get-selected-theme-color';\r\nimport { ITag, ITagBase } from '../interfaces/tag.interface';\r\nimport colors from './colors';\r\n\r\nconst ColorContainer = styled('div')<{ allowRemove: boolean; isDarkTheme: boolean }>`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  width: 168px;\r\n  background-color: var(--FFFFFF-tags-change-colors);\r\n  border-radius: 4px;\r\n  position: absolute;\r\n  z-index: 150;\r\n  padding: 9px 8px 3px 8px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n\r\n  ${(props): any => css`\r\n    top: ${(!props.allowRemove) ? '3px' : '31px;'};\r\n    left: ${(!props.allowRemove) ? '0' : '41px'};\r\n    ${(!props.allowRemove) ? 'margin-left: 0' : ''};\r\n    ${props.isDarkTheme ?\r\n    'box-shadow: -2px 0 8px var(--00000026-antd)' :\r\n    'box-shadow: 0 1px 4px var(--00000003-tags-change-colors), 0 4px 8px var(--00000005-tags-change-colors), 0 1px 12px var(--0000001F-tags-change-colors)'\r\n    };\r\n  `}\r\n`;\r\n\r\nconst ColorWrapper = styled('div')<{ allowRemove: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 8px;\r\n  flex-wrap: wrap;\r\n\r\n  ${(props): any => css`\r\n    padding-bottom: ${(props.allowRemove) ? '0' : '5px'};\r\n  `}\r\n`;\r\n\r\nconst ColorBlock = styled('div')<{ color: string }>`\r\n  width: 24px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  /*transition: box-shadow 0.25s ease-out;*/\r\n  box-shadow: 0px 0px 0px 1px var(--0000001A-tags-change-colors) inset;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 0px 0px 1px var(--0000004D-tags-change-colors) inset;\r\n  }\r\n\r\n  &:nth-of-type(5n) {\r\n    margin-right: 0;\r\n  }\r\n  ${(props): any => css`\r\n    background-color: ${props.color};\r\n  `}\r\n`;\r\n\r\nconst RemoveColorBtn = styled('div')`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  color: var(--000000-tags-change-colors);\r\n  letter-spacing: 0.25px;\r\n  cursor: pointer;\r\n\r\n  & svg {\r\n    color: var(--CDCDCD-tags-change-colors);\r\n  }\r\n\r\n  :hover {\r\n    color: var(--F5222D-tags-change-colors);\r\n\r\n    & svg {\r\n      color: var(--F5222D-tags-change-colors);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Checkmark = styled('div')`\r\n  left: 8px;\r\n  top: 3px;\r\n  width: 7px;\r\n  height: 15px;\r\n  border: solid var(--222222-tags-change-colors);\r\n  border-width: 0 1px 1px 0;\r\n  transform: rotate(45deg);\r\n  position: absolute;\r\n`;\r\n\r\nconst TitleForm = styled('form')`\r\n  border-bottom: 1px solid var(--EBEBEB-tags-change-colors);\r\n  margin-bottom: 16px;\r\n  margin-top: -4px;\r\n  display: block;\r\n`;\r\n\r\nconst TitleInput = styled('input')`\r\n  color: var(--222222-tags-change-colors);\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  width: 100%;\r\n  height: 28px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  letter-spacing: 0.25px;\r\n  padding: 2px 0px;\r\n\r\n  :focus {\r\n    outline: none !important;\r\n    box-shadow: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: var(--CDCDCD-tags-change-colors);\r\n  }\r\n`;\r\n\r\ndeclare interface IProps {\r\n  tag: ITag;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  removeTag?: () => Promise<void>;\r\n  close?: () => void;\r\n  allowRemove: boolean;\r\n  allowChangeTitle?: boolean;\r\n}\r\n\r\nconst TagsColors: FC<IProps> = (props) => {\r\n  const { tag, allowRemove, removeTag, close, updateTag, allowChangeTitle } = props;\r\n  const { color } = tag;\r\n  const [title, setTitle] = React.useState<string>(tag.title);\r\n  const theme = useCurrentTheme();\r\n\r\n  const { t: translation } = useTranslation();\r\n  const isDarkTheme = getSelectedThemeColor(theme) === 'dark';\r\n\r\n  const handleClick = (newColor: string): void => {\r\n    if (newColor === color) {\r\n      return close && close();\r\n    }\r\n\r\n    setTagColor(newColor);\r\n  };\r\n\r\n  const setTagColor = async (newColor: string): Promise<void> => {\r\n    await updateTag({ ...tag, color: newColor });\r\n  };\r\n\r\n  const handleInputChange = async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event: React.SyntheticEvent): Promise<void> => {\r\n    event.preventDefault();\r\n    if (title && title.trim()) {\r\n      await updateTag({ ...tag, title });\r\n    } else {\r\n      setTitle(tag.title);\r\n    }\r\n\r\n    close && close();\r\n  };\r\n\r\n  const handleBlur = async (event: React.SyntheticEvent): Promise<void> => {\r\n    event.preventDefault();\r\n    if (title && title.trim()) {\r\n      await updateTag({ ...tag, title });\r\n\r\n      return;\r\n    }\r\n\r\n    setTitle(tag.title);\r\n  };\r\n\r\n  const tagMaxLength = 200;\r\n\r\n  return (\r\n    <ColorContainer allowRemove={allowRemove} className=\"tags-colors\" isDarkTheme={isDarkTheme}>\r\n      {(allowChangeTitle) ? (\r\n        <TitleForm onSubmit={handleSubmit}>\r\n          <TitleInput\r\n            value={title}\r\n            maxLength={tagMaxLength}\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n          />\r\n        </TitleForm>\r\n      ) : null}\r\n      <ColorWrapper allowRemove={allowRemove}>\r\n        {Object.entries(colors).map(([key, colorObject]) => (\r\n          <ColorBlock key={key} color={colorObject.fontColor} onClick={(): void => handleClick(key)}>\r\n            {(color === key) ? <Checkmark /> : null}\r\n          </ColorBlock>\r\n        ))}\r\n      </ColorWrapper>\r\n      {(allowRemove) ? (\r\n        <div style={{ marginTop: 16, marginLeft: 1 }}>\r\n          <RemoveColorBtn onClick={removeTag}>\r\n            <IconRemove />\r\n            {translation('tags.delete')}\r\n          </RemoveColorBtn>\r\n        </div>\r\n      ) : null}\r\n    </ColorContainer>\r\n  );\r\n};\r\n\r\nexport default TagsColors;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport React, { FC } from 'react';\r\n\r\nimport colors from './colors';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { blackMain } from '../../../ui/style-templates/colors';\r\nimport { ITag } from '../interfaces/tag.interface';\r\n\r\nconst TagItemBody = styled('div')<{\r\n  fontColor: string;\r\n  borderColor: string;\r\n  isAddMode?: boolean;\r\n  inAllProfiles?: boolean;\r\n  newStyle: boolean;\r\n}>`\r\n  border: 1px solid;\r\n  font-weight: 400;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 100%;\r\n  text-overflow: ellipsis;\r\n  vertical-align: top;\r\n  cursor: pointer;\r\n  position: relative;\r\n  letter-spacing: 0.2px;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    background-color: ${props.borderColor};\r\n    border-color: ${props.borderColor};\r\n\r\n    ${(props.isAddMode) ? `\r\n      padding: 1px 23px 0px 6px;\r\n      border-radius: 12px;\r\n      font-size: 14px;\r\n      letter-spacing: 0.25px;\r\n      line-height: 21px;\r\n      height: 24px;\r\n    ` : `\r\n      padding: 0 8px;\r\n      border-radius: 10px;\r\n      font-size: 12px;\r\n    `}\r\n  `}\r\n\r\n  ${(props): SerializedStyles => props.newStyle ? css`\r\n    color: var(--2B2B31-tags-list);\r\n    opacity: ${props.inAllProfiles ? 1 : 0.35};\r\n  ` : css`\r\n    color: var(--222222-tags-list);\r\n    opacity: ${props.inAllProfiles ? 0.7 : 0.35};\r\n  `}\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst TagItemContainer = styled('article')<{ newStyle: boolean }>`\r\n  overflow: hidden;\r\n  max-width: 100%;\r\n  display: inline-block;\r\n  position: relative;\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? null : css`\r\n    margin-bottom: 4px;\r\n    margin-right: 4px;\r\n  `}\r\n`;\r\n\r\nconst RemoveBtn = styled('div')<{  borderColor: string; fontColor: string; inAllProfiles?: boolean }>`\r\n  position: absolute;\r\n  width: 17px;\r\n  height: 100%;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n\r\n  &:before {\r\n    transform: rotate(45deg);\r\n  }\r\n  &:after {\r\n    transform: rotate(-45deg);\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    left: 5px;\r\n    top: 7px;\r\n    content: ' ';\r\n    height: 10px;\r\n    width: 1px;\r\n    /*transition: background-color 0.2s ease-out;*/\r\n\r\n    ${(props): any => css`\r\n      background-color: ${(props.inAllProfiles === false) ? 'var(--22222259-tags-list);' : 'var(--222222B3-tags-list);'}\r\n    `}\r\n  }\r\n  &:hover::before,\r\n  &:hover::after {\r\n    background-color: var(--222222-tags-list);\r\n  }\r\n`;\r\n\r\nconst DEFAULT_TAG_COLOR = 'lightgrey';\r\n\r\ninterface ITagListItemProps {\r\n  tag: ITag;\r\n  handleClick: (e: any) => void;\r\n  handleMouseEnter?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\r\n  handleMouseLeave?: () => void;\r\n  isAddMode?: boolean;\r\n  removeTag?: () => Promise<void>;\r\n  innerRef?: any;\r\n}\r\n\r\nconst TagListItem: FC<ITagListItemProps> = (props) => {\r\n  const {\r\n    tag,\r\n    handleClick,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    isAddMode,\r\n    removeTag,\r\n    innerRef,\r\n  } = props;\r\n\r\n  const { title, color, inAllProfiles = true } = tag;\r\n\r\n  const tagColors = colors[color] || colors[DEFAULT_TAG_COLOR];\r\n\r\n  return (\r\n    <TagItemContainer newStyle={!!NEW_FEATURES.header}>\r\n      <TagItemBody\r\n        newStyle={!!NEW_FEATURES.header}\r\n        fontColor={tagColors.fontColor}\r\n        borderColor={tagColors.borderColor}\r\n        inAllProfiles={inAllProfiles}\r\n        onClick={handleClick}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n        isAddMode={isAddMode}\r\n        ref={innerRef}\r\n      >\r\n        {title}\r\n      </TagItemBody>\r\n      {(isAddMode) ? <RemoveBtn\r\n        onClick={(e): any => {\r\n          e.stopPropagation();\r\n          removeTag && removeTag();\r\n        }}\r\n        borderColor={tagColors.borderColor}\r\n        fontColor={tagColors.fontColor}\r\n        inAllProfiles={inAllProfiles}\r\n      /> : null}\r\n    </TagItemContainer>\r\n  );\r\n};\r\n\r\nexport default TagListItem;\r\n","import css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport React, { FC } from 'react';\r\n\r\nimport { tagsContext } from '../../../state';\r\nimport IconCheck from '../../../ui/icons/IconCheck';\r\nimport IconDotsHorizontal from '../../../ui/icons/IconDotsHorizontal';\r\nimport { IAddTag, ITag, ITagBase, TagField } from '../interfaces/tag.interface';\r\nimport TagsColors from './tag-colors';\r\nimport TagListItem from './tag-list-item';\r\nimport { workspaceContext } from '../../../state';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\n\r\nconst TagSuggest = styled('div')`\r\n  cursor: pointer;\r\n  display: flex;\r\n\r\n  &:hover {\r\n    background: var(--F9F9F9-tags-add-tag);\r\n\r\n    button {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TagSuggestItemLeft = styled('div')`\r\n  padding: 2px 8px;\r\n  height: 24px;\r\n  flex-grow: 1;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n\r\n  & article {\r\n    max-width: 140px;\r\n  }\r\n`;\r\n\r\nconst EditTagBtn = styled('button')<{ isOpen: boolean }>`\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  height: 24px;\r\n  width: 36px;\r\n  padding: 4px 14px 4px 6px;\r\n  color: var(--767676-tags-add-tag);\r\n  cursor: pointer;\r\n\r\n  ${(props): any => css`\r\n    ${(props.isOpen) ? `\r\n      opacity: 1;\r\n    ` : `\r\n      opacity: 0;\r\n    `}\r\n  `}\r\n\r\n  &:hover {\r\n    outline: none;\r\n    color: var(--00A987-tags-add-tag);\r\n  }\r\n`;\r\n\r\nconst CheckIconBlock = styled('div')`\r\n  color: var(--8E8E8E-tags-add-tag);\r\n  cursor: pointer;\r\n  padding: 0 4px;\r\n  margin-left: 3px;\r\n  display: inline-block;\r\n  height: 20px;\r\n  position: relative;\r\n  width: 20px;\r\n  vertical-align: top;\r\n  top: -3px;\r\n`;\r\n\r\nconst TagsColorContainer = styled('div')`\r\n  position: relative;\r\n  left: -111px;\r\n  top: -31px;\r\n`;\r\n\r\ndeclare interface IProps {\r\n  tag: ITag;\r\n  profileIds: string[];\r\n  addTag: (params: IAddTag) => void;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  setTitle: (title: string) => void;\r\n  alreadyAdded: boolean;\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n  removeTag: () => Promise<void>;\r\n  field: TagField;\r\n  closeTagsPopup: () => void;\r\n}\r\n\r\nconst TagSuggestItem: FC<IProps> = (props) => {\r\n  const {\r\n    tag,\r\n    setTitle,\r\n    alreadyAdded,\r\n    removeProfileTag,\r\n    removeTag,\r\n    addTag,\r\n    updateTag,\r\n    profileIds,\r\n    field,\r\n    closeTagsPopup,\r\n  } = props;\r\n\r\n  const { setTagEditorVisible } = React.useContext(tagsContext);\r\n\r\n  const {\r\n    permissions,\r\n  } = React.useContext(workspaceContext);\r\n\r\n  let allowRemove = true;\r\n  let allowEditTags = true;\r\n\r\n  if (NEW_FEATURES.workspaces) {\r\n    allowRemove = permissions.removeTags;\r\n    allowEditTags = permissions.editTags;\r\n  }\r\n\r\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const editorOpen = Boolean(anchorEl);\r\n\r\n  const handleClick = async (e: React.MouseEvent<HTMLElement, MouseEvent>): Promise<void> => {\r\n    setTagEditorVisible(!anchorEl);\r\n    setAnchorEl((anchorEl) ? null : e.currentTarget);\r\n  };\r\n\r\n  const handleClickOutside = (e: Event): void => {\r\n    if (\r\n      wrapperRef.current &&\r\n      !wrapperRef.current.contains(e.target as Node)\r\n    ) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      setTagEditorVisible(false);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (anchorEl) {\r\n      document.addEventListener('click', handleClickOutside, true);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, [anchorEl]);\r\n\r\n  const onSuggestClick = async (): Promise<void> => {\r\n    setTitle('');\r\n    if (field === 'custom-status') {\r\n      closeTagsPopup();\r\n    }\r\n\r\n    if (alreadyAdded) {\r\n      await removeProfileTag(profileIds, tag.id);\r\n\r\n      return;\r\n    }\r\n\r\n    addTag({\r\n      profileIds,\r\n      tagId: tag.id,\r\n      title: tag.title,\r\n      color: tag.color,\r\n      field,\r\n    });\r\n  };\r\n\r\n  const onTagRemove = (): Promise<void> => {\r\n    setAnchorEl(null);\r\n    setTagEditorVisible(false);\r\n\r\n    return removeTag();\r\n  };\r\n\r\n  return (\r\n    <TagSuggest>\r\n      <TagSuggestItemLeft onClick={onSuggestClick}>\r\n        <TagListItem\r\n          tag={tag}\r\n          handleClick={() => { return; }}\r\n        />\r\n        {(alreadyAdded) ? (\r\n          <CheckIconBlock>\r\n            <IconCheck />\r\n          </CheckIconBlock>\r\n        ) : null}\r\n      </TagSuggestItemLeft>\r\n\r\n      {(allowEditTags) ? (\r\n        <>\r\n          <EditTagBtn onClick={handleClick} isOpen={editorOpen}>\r\n            <IconDotsHorizontal />\r\n          </EditTagBtn>\r\n          <Popper\r\n            open={editorOpen}\r\n            anchorEl={anchorEl}\r\n            style={{ zIndex: 1060 }}\r\n            placement='bottom-start'\r\n          >\r\n            <TagsColorContainer ref={wrapperRef}>\r\n              <TagsColors\r\n                tag={tag}\r\n                updateTag={updateTag}\r\n                close={(): void => {\r\n                  setAnchorEl(null);\r\n                  setTagEditorVisible(false);\r\n                }}\r\n                removeTag={onTagRemove}\r\n                allowChangeTitle={true}\r\n                allowRemove={allowRemove}\r\n              />\r\n            </TagsColorContainer>\r\n          </Popper>\r\n        </>\r\n      ) : null}\r\n    </TagSuggest>\r\n  );\r\n};\r\n\r\nexport default TagSuggestItem;\r\n","import css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { Icon } from 'antd';\r\nimport React, { FC, KeyboardEvent, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { tagsContext, workspaceContext } from '../../../state';\r\nimport { useCurrentTheme } from '../../../state/theme.atom';\r\nimport getSelectedThemeColor from '../../../utils/get-selected-theme-color';\r\nimport { searchTags } from '../api';\r\nimport { IAddTag, IPopularTag, ITag, ITagBase, TagField } from '../interfaces/tag.interface';\r\nimport TagSuggestItem from './tag-suggest-item';\r\n\r\nconst AddNewTagBtn = styled('button')<{ tagsSuggestsLength: number, isBulkMode?: boolean }>`\r\n  color: var(--767676-tags-add-tag);\r\n  cursor: pointer;\r\n  vertical-align: top;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  height: 36px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  padding: 8px 20px 8px 7px;\r\n  border: none;\r\n  outline: none;\r\n  background: none;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    color: var(--00A987-tags-add-tag);\r\n\r\n    & i {\r\n      color: var(--00A987-tags-add-tag);\r\n    }\r\n  }\r\n\r\n  & i {\r\n    /*transition: color 0.25s ease-out;*/\r\n    color: var(--CDCDCD-tags-add-tag);\r\n  }\r\n\r\n  ${(props): any => css`\r\n    ${(props.isBulkMode) ? `\r\n      margin-top: -5px;\r\n    ` : `\r\n      margin-top: ${(props.tagsSuggestsLength) ? '-8px' : '0'};\r\n    `}\r\n  `}\r\n`;\r\n\r\nconst TagInput = styled('input')`\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  padding: 3px 9px 4px 5px;\r\n  vertical-align: top;\r\n  height: 28px;\r\n  font-size: 14px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  letter-spacing: 0.25px;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none !important;\r\n    box-shadow: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: var(--CDCDCD-tags-add-tag);\r\n  }\r\n`;\r\n\r\nconst SuggestContainer = styled('div')<{ tagsSuggestsLength: number; isBulkMode?: boolean; isDarkTheme: boolean }>`\r\n  background-color: var(--FFFFFF-tags-add-tag);\r\n  border-radius: 4px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  max-height: 152px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  top: 1px;\r\n  position: relative;\r\n\r\n  div[x-placement=\"top-start\"] & {\r\n    top: -1px;\r\n  }\r\n\r\n  ${(props): any => css`\r\n    ${(props.tagsSuggestsLength) ? `\r\n      padding: 0;\r\n    ` : `\r\n      padding: 6px 0 4px;\r\n    `}\r\n    ${(props.isBulkMode) ? `\r\n      width: 292px;\r\n      border-radius: 4px;\r\n      margin-left: -11px;\r\n      margin-top: 12px;\r\n    ` : `\r\n      width: 240px;\r\n    `}\r\n    ${(props.isDarkTheme) ? `\r\n    box-shadow: -2px 0 8px var(--00000026-antd);\r\n    ` : `\r\n    box-shadow: 0px 1px 4px var(--00000003-tags-add-tag), 0px 4px 8px var(--00000005-tags-add-tag), 0px 1px 12px var(--0000001F-tags-add-tag);\r\n    `}\r\n  `}\r\n`;\r\n\r\nconst NewTagTitle = styled('div')<{ isBulkMode?: boolean }>`\r\n  /*display: inline-block;*/\r\n  vertical-align: top;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n\r\n  ${(props): any => css`\r\n    ${(props.isBulkMode) ? `\r\n      max-width: 58px;\r\n    ` : `\r\n      max-width: 72px;\r\n    `}\r\n  `}\r\n`;\r\n\r\nconst AllProfilesSuggestTitle = styled('div')<{ tagsSuggestsLength: number; isBulkMode?: boolean }>`\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  letter-spacing: 0.2px;\r\n  color: var(--767676-tags-add-tag);\r\n  margin-left: 0px;\r\n\r\n  width: 100%;\r\n  ${(props): any => css`\r\n    ${(props.tagsSuggestsLength) ? `\r\n      margin-top: 8px;\r\n    ` : `\r\n      margin-top: 0px;\r\n      margin-bottom: 10px;\r\n    `}\r\n    ${(props.isBulkMode) ? `\r\n      padding: 0 8px;\r\n    ` : `\r\n\r\n    `}\r\n  `}\r\n`;\r\n\r\nconst TagsContainer = styled('div')`\r\n  margin-top: 6px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\n// TODO fix overflow\r\nconst Form = styled('form')`\r\n  height: 28px;\r\n  overflow: hidden;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst TagsSizingContainer = styled('div')`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n`;\r\n\r\nconst DEFAULT_TAG_COLOR = 'lightgrey';\r\nconst TAGS_SEARCH_DEBOUNCE_MS = 100;\r\n\r\ninterface IProps {\r\n  profileIds: string[];\r\n  addTag: (params: IAddTag) => void;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  isAddMode: boolean;\r\n  isBulkOperation?: boolean;\r\n  currentTags: ITag[];\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n  isBulkMode?: boolean;\r\n  field: TagField;\r\n}\r\n\r\nconst AddTag: FC<IProps> = (props: IProps) => {\r\n  const {\r\n    profileIds,\r\n    addTag,\r\n    updateTag,\r\n    isAddMode,\r\n    isBulkOperation,\r\n    currentTags,\r\n    removeProfileTag,\r\n    removeTag,\r\n    isBulkMode,\r\n    field,\r\n  } = props;\r\n\r\n  const {\r\n    tags: allGlobalTags,\r\n    newAddedTag,\r\n    setNewAddedTag,\r\n    setProfileInEditTagsMode,\r\n  } = React.useContext(tagsContext);\r\n\r\n  const tags = useMemo(() => allGlobalTags.filter(tag => tag.field === field), [field, allGlobalTags]);\r\n\r\n  const {\r\n    id: workspace,\r\n  } = React.useContext(workspaceContext);\r\n\r\n  const theme = useCurrentTheme();\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const input = React.useRef<HTMLInputElement>(null);\r\n  const containerElement = React.useRef<HTMLDivElement>(null);\r\n  const [title, setTitle] = React.useState<string>('');\r\n  const [color, setColor] = React.useState<string>(DEFAULT_TAG_COLOR);\r\n  const [removeTagMode, setRemoveTagMode] = React.useState<boolean>(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(containerElement.current);\r\n  const [tagsSuggests, setTagsSuggests] = React.useState<IPopularTag[] | ITag[]>(tags);\r\n  const [timerId, setTimerId] = React.useState<any>();\r\n  const open = Boolean(anchorEl && (title || tags.length));\r\n  const isDarkTheme = getSelectedThemeColor(theme) === 'dark';\r\n\r\n  const callAddTag = (): void => {\r\n    const newTagTitle = title;\r\n    resetState();\r\n    addTag({\r\n      profileIds,\r\n      title: newTagTitle,\r\n      color,\r\n      field,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event: React.SyntheticEvent): void => {\r\n    event.preventDefault();\r\n    if (!title) {\r\n      return;\r\n    }\r\n\r\n    callAddTag();\r\n  };\r\n\r\n  const resetState = (): void => {\r\n    setTitle('');\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const closeTagsPopup = (): void => {\r\n    setProfileInEditTagsMode(null);\r\n    resetState();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (input?.current) {\r\n      setTitle('');\r\n      input.current.focus();\r\n    }\r\n  }, [isAddMode]);\r\n\r\n  React.useEffect(() => {\r\n    if (!title) {\r\n      setTagsSuggests(tags);\r\n    }\r\n  }, [title, tags, tagsSuggests]);\r\n\r\n  React.useEffect(() => {\r\n    if (!title) {\r\n      return;\r\n    }\r\n\r\n    setTagsSuggests((currentTagsSuggests: ITag[] | IPopularTag[]) => currentTagsSuggests.map((tag) => {\r\n      const existedTag = tags.find(globalTag => globalTag.id === tag.id);\r\n\r\n      return existedTag || tag;\r\n    }));\r\n  }, [tags]);\r\n\r\n  const handleInputChange = async (e: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\r\n    if (timerId) {\r\n      clearTimeout(timerId);\r\n    }\r\n\r\n    setTitle(e.target.value);\r\n    if (newAddedTag) {\r\n      setNewAddedTag(null);\r\n    }\r\n\r\n    const val = e.target.value;\r\n    if (!val) {\r\n      return;\r\n    }\r\n\r\n    setTimerId(setTimeout(async () => {\r\n      const suggestions = await searchTags(val, workspace || '');\r\n      if (!suggestions?.tags) {\r\n        return;\r\n      }\r\n\r\n      const foundTags = suggestions.tags.filter(suggestedTag => suggestedTag.field === field);\r\n      setTagsSuggests((currentTagsList: ITag[]) => {\r\n        if (!val) {\r\n          return currentTagsList;\r\n        }\r\n\r\n        const tagsStartsWith: ITag[] = [];\r\n        const otherTags: ITag[] = [];\r\n        const preparedVal = val.toLocaleLowerCase();\r\n        for (const el of foundTags) {\r\n          if (el.title.toLocaleLowerCase().startsWith(preparedVal)) {\r\n            tagsStartsWith.push(el);\r\n          } else {\r\n            otherTags.push(el);\r\n          }\r\n        }\r\n\r\n        return [\r\n          ...tagsStartsWith,\r\n          ...otherTags,\r\n        ];\r\n      });\r\n    }, TAGS_SEARCH_DEBOUNCE_MS));\r\n    if (!anchorEl) {\r\n      setAnchorEl(containerElement.current);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = async (event: KeyboardEvent): Promise<void> => {\r\n    if (event.key === 'Backspace' && !title && currentTags.length) {\r\n      setRemoveTagMode(true);\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = async (event: KeyboardEvent): Promise<void> => {\r\n    const shouldRemoveTag = event.key === 'Backspace' && !title && removeTagMode;\r\n    if (shouldRemoveTag && currentTags.length) {\r\n      const [lastTag] = currentTags.slice(-1);\r\n      await removeProfileTag(profileIds, lastTag.id);\r\n\r\n      setRemoveTagMode(false);\r\n    }\r\n  };\r\n\r\n  const tagsSuggestsList = (): JSX.Element | null => {\r\n    if (!tagsSuggests.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <TagsContainer>\r\n        {tagsSuggests.map((tag: ITag) => {\r\n          const alreadyAdded = !!currentTags.find((el: ITag) => el.title === tag.title);\r\n\r\n          return (\r\n            <TagSuggestItem\r\n              key={tag.id}\r\n              tag={tag}\r\n              setTitle={setTitle}\r\n              alreadyAdded={alreadyAdded}\r\n              removeProfileTag={removeProfileTag}\r\n              removeTag={async (): Promise<void> => {\r\n                await removeTag(tag.id, true);\r\n                setTagsSuggests(tagsSuggests.filter(tagSuggest => tagSuggest.id !== tag.id));\r\n              }}\r\n              addTag={addTag}\r\n              updateTag={updateTag}\r\n              profileIds={profileIds}\r\n              field={field}\r\n              closeTagsPopup={closeTagsPopup}\r\n            />\r\n          );\r\n        })}\r\n      </TagsContainer>\r\n    );\r\n  };\r\n\r\n  const newTagBlock = (): JSX.Element | null => {\r\n    const addNewTextKey = field === 'custom-status' ? 'tags.addNewStatus' : 'tags.addNewTag';\r\n    if (!title) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <AddNewTagBtn\r\n          tagsSuggestsLength={tagsSuggests.length}\r\n          isBulkMode={isBulkMode}\r\n          onClick={callAddTag}\r\n        >\r\n          <Icon style={{ marginRight: 8, marginTop: -1 }} type='plus' />\r\n          {translation(addNewTextKey)}\r\n          {' '}\r\n          “\r\n          <NewTagTitle isBulkMode={isBulkMode}>\r\n            {title}\r\n          </NewTagTitle>\r\n          ”\r\n          {' '}\r\n          {(isBulkOperation) ? translation('tags.toAllProfiles') : null}\r\n        </AddNewTagBtn>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const tagMaxLength = 200;\r\n  const addPlaceholderKey = field === 'custom-status' ? 'tags.addStatusPlaceholder' : 'tags.addTagPlaceholder';\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <TagsSizingContainer ref={containerElement} className=\"tags-sizing-container\" onClick={(): void => resetState()} />\r\n      {(isAddMode) ? (\r\n        <Form onSubmit={onSubmit} className=\"tags-form\">\r\n          <TagInput\r\n            ref={input}\r\n            value={title}\r\n            maxLength={tagMaxLength}\r\n            onChange={handleInputChange}\r\n            placeholder={translation(addPlaceholderKey)}\r\n            onFocus={(): void => setAnchorEl(containerElement.current)}\r\n            onClick={(event: React.MouseEvent): void => {\r\n              event.stopPropagation();\r\n            }}\r\n            onKeyDown={handleKeyDown}\r\n            onKeyUp={handleKeyUp}\r\n          />\r\n        </Form>\r\n      ) : null}\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        style={{ zIndex: 1060 }}\r\n        disablePortal={!!isBulkMode}\r\n        placement='bottom-start'\r\n        modifiers={{\r\n          preventOverflow: {\r\n            enabled: false,\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"tags-popper\">\r\n          {(tagsSuggests.length || title) ? (\r\n            <SuggestContainer tagsSuggestsLength={tagsSuggests.length} isBulkMode={isBulkMode} isDarkTheme={isDarkTheme}>\r\n              {(isBulkOperation) ? (\r\n                <AllProfilesSuggestTitle tagsSuggestsLength={tagsSuggests.length} isBulkMode={isBulkMode}>\r\n                  {translation('tags.addToAllProfiles')}\r\n                </AllProfilesSuggestTitle>\r\n              ) : null}\r\n              {tagsSuggestsList()}\r\n              {newTagBlock()}\r\n            </SuggestContainer>\r\n          ) : null}\r\n        </div>\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTag;\r\n","import styled from '@emotion/styled';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { tagsContext } from '../../../state';\r\nimport { ITag, ITagBase } from '../interfaces/tag.interface';\r\nimport TagsColors from './tag-colors';\r\nimport TagListItem from './tag-list-item';\r\n\r\nconst TagInfoContainer = styled('div')`\r\n  border-radius: 4px;\r\n  position: absolute;\r\n  z-index: 145;\r\n  bottom: 8px;\r\n  width: 250px;\r\n  height: 32px;\r\n  justify-content: center;\r\n  display: flex;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  letter-spacing: 0.25px;\r\n  margin-left: -125px;\r\n`;\r\n\r\nconst TagInfoBlock = styled('div')`\r\n  background-color: var(--FFFFFF-tags-info);\r\n  box-shadow: var(--box-shadow-tags-info);\r\n  border-radius: 4px;\r\n  position: absolute;\r\n  padding: 8px 12px 7px;\r\n`;\r\n\r\nconst TagInfo = styled('div')`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  color: var(--767676-tags-info);\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\ninterface IProps {\r\n  tag: ITag;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  removeTag: () => Promise<void>;\r\n  isAddMode: boolean;\r\n  isLastTag: boolean;\r\n  profilesList?: any[];\r\n}\r\n\r\nconst Tag: FC<IProps> = (props) => {\r\n  const {\r\n    tag,\r\n    updateTag,\r\n    removeTag,\r\n    isAddMode,\r\n    profilesList,\r\n  } = props;\r\n\r\n  const { title, profilesWithTag } = tag;\r\n  const { setSelectedTag, newAddedTag, setNewAddedTag, setProfileInEditTagsMode } = React.useContext(tagsContext);\r\n  const { t: translation } = useTranslation();\r\n  const [anchorColorEl, setAnchorColorEl] = React.useState<null | HTMLElement>(null);\r\n  const [anchorInfoEl, setAnchorInfoEl] = React.useState<null | HTMLElement>(null);\r\n  const [tagUsage, setTagUsage] = React.useState<null | number>(profilesWithTag || null);\r\n\r\n  let colorOpen = Boolean(anchorColorEl);\r\n  const infoOpen = Boolean(anchorInfoEl);\r\n  const tagBlock = React.useRef(null);\r\n\r\n  const handleClick = (): void => {\r\n    setSelectedTag(tag);\r\n    setProfileInEditTagsMode(null);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (newAddedTag && newAddedTag.id === tag.id) {\r\n      setAnchorColorEl(tagBlock.current);\r\n      colorOpen = true;\r\n    } else {\r\n      setAnchorColorEl(null);\r\n    }\r\n  }, [tag, newAddedTag]);\r\n\r\n  const handleClickAway = (): void => {\r\n    setAnchorColorEl(null);\r\n    setNewAddedTag(null);\r\n  };\r\n\r\n  const handleMouseEnter = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\r\n    setAnchorInfoEl(e.currentTarget);\r\n  };\r\n\r\n  const handleMouseLeave = (): void => {\r\n    setAnchorInfoEl(null);\r\n  };\r\n\r\n  let tagInfoText = (tagUsage === 1) ? translation('tags.viewProfile', {\r\n    tagTitle: title,\r\n  }) : translation('tags.viewAllProfiles', {\r\n    tagTitle: title,\r\n  });\r\n\r\n  const isBulk = !!profilesList;\r\n  if (isBulk) {\r\n    tagInfoText = (profilesWithTag === (profilesList || []).length)\r\n      ? translation('tags.allProfilesSelected', {\r\n        profilesCount: (profilesList || []).length,\r\n      })\r\n      : translation('tags.allOfProfilesSelected', {\r\n        profilesWithTag,\r\n        profilesCount: (profilesList || []).length,\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TagListItem\r\n        tag={tag}\r\n        handleClick={handleClick}\r\n        handleMouseEnter={handleMouseEnter}\r\n        handleMouseLeave={handleMouseLeave}\r\n        isAddMode={isAddMode}\r\n        removeTag={removeTag}\r\n        innerRef={tagBlock}\r\n      />\r\n      <Popper\r\n        open={colorOpen ? isAddMode : false}\r\n        anchorEl={anchorColorEl}\r\n        style={{ zIndex: 1060 }}\r\n        placement='bottom-start'\r\n      >\r\n        <ClickAwayListener onClickAway={handleClickAway}>\r\n          <div>\r\n            <TagsColors\r\n              allowRemove={false}\r\n              tag={tag}\r\n              updateTag={updateTag}\r\n              close={handleClickAway}\r\n            />\r\n          </div>\r\n        </ClickAwayListener>\r\n      </Popper>\r\n\r\n      <Popper\r\n        open={infoOpen}\r\n        anchorEl={anchorInfoEl}\r\n        style={{ zIndex: 11000 }}\r\n        placement='top'\r\n      >\r\n        <TagInfoContainer>\r\n          <TagInfoBlock>\r\n            <TagInfo>\r\n              {tagInfoText}\r\n            </TagInfo>\r\n          </TagInfoBlock>\r\n        </TagInfoContainer>\r\n      </Popper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport React, { FC } from 'react';\r\n\r\nimport AddTag from './add-tag';\r\nimport Tag from './tag';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IAddTag, ITag, ITagBase, TagField } from '../interfaces/tag.interface';\r\n\r\nconst EditModeTagsWrapper = styled('div')<{ isBulkMode?: boolean; newStyle: boolean }>`\r\n  width: 100%;\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  align-content: flex-start;\r\n  background: var(--FFFFFF-tags-edit);\r\n  border-radius: 4px;\r\n  min-width: 110px;\r\n\r\n  ${(props): SerializedStyles|null => css`\r\n    ${(props.isBulkMode) ? `\r\n      z-index: 100;\r\n      position: relative;\r\n    ` : `\r\n      padding: 16px 8px 14px;\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      box-shadow: 0 0 0 1px var(--88D1C3-tags-edit);\r\n      z-index: 145;\r\n    `}\r\n    \r\n    ${props.newStyle ? `\r\n      gap: 4px;\r\n    ` : null}\r\n  `}\r\n`;\r\n\r\ninterface IProps {\r\n  profileIds: string[];\r\n  tags: ITag[];\r\n  addTag: (params: IAddTag) => Promise<void>;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n  profilesList?: any[];\r\n  isBulkMode?: boolean;\r\n  isAddMode: boolean;\r\n  field: TagField;\r\n}\r\n\r\nconst EditModeTags: FC<IProps> = (props: IProps) => {\r\n  const {\r\n    tags,\r\n    profileIds,\r\n    addTag,\r\n    updateTag,\r\n    removeProfileTag,\r\n    removeTag,\r\n    profilesList,\r\n    isBulkMode,\r\n    isAddMode,\r\n    field,\r\n  } = props;\r\n\r\n  return (\r\n    <EditModeTagsWrapper isBulkMode={isBulkMode} newStyle={!!NEW_FEATURES.header}>\r\n      {tags.map((tag, index) => (\r\n        <Tag\r\n          key={tag.id}\r\n          tag={tag}\r\n          updateTag={updateTag}\r\n          isAddMode={isAddMode}\r\n          removeTag={async (): Promise<void> => {\r\n            await removeProfileTag(profileIds, tag.id);\r\n          }}\r\n          profilesList={profilesList}\r\n          isLastTag={index + 1 === tags.length}\r\n        />\r\n      ))}\r\n      <AddTag\r\n        profileIds={profileIds}\r\n        currentTags={tags}\r\n        addTag={addTag}\r\n        updateTag={updateTag}\r\n        isAddMode={isAddMode}\r\n        isBulkOperation={!!profilesList?.length}\r\n        removeProfileTag={removeProfileTag}\r\n        removeTag={removeTag}\r\n        isBulkMode={isBulkMode}\r\n        field={field}\r\n      />\r\n    </EditModeTagsWrapper>\r\n  );\r\n};\r\n\r\nexport default EditModeTags;\r\n","import styled from '@emotion/styled';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IProfile } from '../../../interfaces';\r\nimport { IAddTag, ITag, ITagBase, TagField } from '../interfaces/tag.interface';\r\nimport EditModeTags from './edit-mode-tags';\r\n\r\nconst TagsContainer = styled('div')`\r\n  background: var(--FFFFFF-tags-multiple);\r\n  box-shadow: 0px 1px 4px var(--00000003-tags-multiple), 0px 4px 8px var(--00000005-tags-multiple), 0px 1px 12px var(--0000001F-tags-multiple);\r\n  border-radius: 8px;\r\n  padding: 16px 16px 12px;\r\n  width: 301px;\r\n  position: absolute;\r\n  top: 4px;\r\n  left: -50px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n`;\r\n\r\nconst TitleEditTags = styled('div')`\r\n  color: var(--767676-tags-multiple);\r\n  width: 100%;\r\n  margin-bottom: 8px;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  letter-spacing: 0.2px;\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n`;\r\n\r\ninterface IProps {\r\n  profileList: any[];\r\n  selectedRows: string[];\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  addTag: (params: IAddTag) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n  field: TagField;\r\n}\r\n\r\nconst MultipleTagsPopper: FC<IProps> = (props: IProps) => {\r\n  const {\r\n    profileList,\r\n    selectedRows,\r\n    updateTag,\r\n    addTag,\r\n    removeTag,\r\n    removeProfileTag,\r\n    field,\r\n  } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const { filteredProfiles, tags } = React.useMemo(() => {\r\n    const filteredProfilesArr = selectedRows.reduce<IProfile[]>((acc, id) => {\r\n      const profileFromList = profileList.find(profile => profile.id === id);\r\n      if (profileFromList) {\r\n        acc.push(profileFromList);\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    const tagsArr: ITag[] = filteredProfilesArr.reduce<ITag[]>(\r\n      (acc, profile) => acc.concat(profile.tags.filter(tag => tag.field === field) || []),\r\n      [],\r\n    );\r\n\r\n    const { inAllProfilesTags, otherTags } = tagsArr.reduce<{ inAllProfilesTags: ITag[]; otherTags: ITag[] }>((acc, tag) => {\r\n      const allTags = [...acc.inAllProfilesTags, ...acc.otherTags];\r\n      const tagInRes = allTags.find(resTag => resTag.id === tag.id);\r\n      if (tagInRes) {\r\n        return acc;\r\n      }\r\n\r\n      const tagItem = { ...tag };\r\n      tagItem.inAllProfiles = true;\r\n      tagItem.profilesWithTag = filteredProfilesArr.reduce((profilesWithTag, profile) => {\r\n        const profileTags = profile.tags || [];\r\n        const tagInProfile = profileTags.find(profileTag => profileTag.id === tag.id);\r\n        if (tagInProfile) {\r\n          return profilesWithTag + 1;\r\n        }\r\n\r\n        tagItem.inAllProfiles = false;\r\n\r\n        return profilesWithTag;\r\n      }, 0);\r\n\r\n      const arrName = tagItem.inAllProfiles ? 'inAllProfilesTags' : 'otherTags';\r\n      acc[arrName] = [...acc[arrName], tagItem];\r\n\r\n      return acc;\r\n    }, { inAllProfilesTags: [], otherTags: [] });\r\n\r\n    return {\r\n      filteredProfiles: filteredProfilesArr,\r\n      tags: [\r\n        ...inAllProfilesTags,\r\n        ...otherTags,\r\n      ],\r\n    };\r\n  }, [profileList, selectedRows]);\r\n\r\n  return (\r\n    <TagsContainer>\r\n      <TitleEditTags>\r\n        {translation('tags.mixedProfileTags')}\r\n      </TitleEditTags>\r\n      <EditModeTags\r\n        tags={tags}\r\n        profileIds={selectedRows}\r\n        addTag={addTag}\r\n        updateTag={updateTag}\r\n        removeTag={removeTag}\r\n        removeProfileTag={(removeProfileTag)}\r\n        isAddMode={true}\r\n        profilesList={filteredProfiles}\r\n        isBulkMode={true}\r\n        field={field}\r\n      />\r\n    </TagsContainer>\r\n  );\r\n};\r\n\r\nexport default MultipleTagsPopper;\r\n","import ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport React, { FC, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { useProfilesList } from '../../../state/profiles-list.atom';\r\nimport MultipleTagsPopper from '../../tags/components/multiple-tags-popper';\r\nimport { IAddTag, ITagBase } from '../../tags/interfaces/tag.interface';\r\n\r\ninterface IEditTagsMenuBtn {\r\n  ButtonLine: React.ElementType;\r\n  Row: React.ElementType;\r\n  MultipleOperationBtnText: React.ElementType;\r\n  selectedRows: string[];\r\n  isProcessing: boolean;\r\n  addTag: (params: IAddTag) => Promise<void>;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n}\r\n\r\nconst EditTagsMenuBtn: FC<IEditTagsMenuBtn> = (props: IEditTagsMenuBtn) => {\r\n  const {\r\n    selectedRows,\r\n    addTag,\r\n    updateTag,\r\n    removeTag,\r\n    removeProfileTag,\r\n    isProcessing,\r\n    ButtonLine,\r\n    Row,\r\n    MultipleOperationBtnText,\r\n  } = props;\r\n\r\n  const profilesList = useProfilesList();\r\n\r\n  const [anchorEditTagsEl, setAnchorEditTagsEl] = useState<null | HTMLElement>(null);\r\n  const { t: translation } = useTranslation();\r\n\r\n  const isPopperOpen = !!(anchorEditTagsEl && selectedRows.length);\r\n\r\n  const handleEditTagsClick = (event: React.MouseEvent<HTMLElement, MouseEvent>): void => {\r\n    setAnchorEditTagsEl(anchorEditTagsEl ? null : event.currentTarget);\r\n  };\r\n\r\n  const hideEditTags = (): void => {\r\n    setAnchorEditTagsEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ButtonLine\r\n        onClick={handleEditTagsClick}\r\n        disabled={isProcessing}\r\n      >\r\n        <Row>\r\n          <MultipleOperationBtnText>\r\n            {translation('tags.editTagsBtnText')}\r\n          </MultipleOperationBtnText>\r\n        </Row>\r\n      </ButtonLine>\r\n\r\n      <Popper\r\n        open={isPopperOpen}\r\n        anchorEl={anchorEditTagsEl}\r\n        style={{ zIndex: 152 }}\r\n      >\r\n        <ClickAwayListener onClickAway={hideEditTags}>\r\n          <div>\r\n            <MultipleTagsPopper\r\n              profileList={profilesList}\r\n              selectedRows={selectedRows}\r\n              updateTag={updateTag}\r\n              addTag={addTag}\r\n              removeTag={removeTag}\r\n              removeProfileTag={removeProfileTag}\r\n              field='tags'\r\n            />\r\n          </div>\r\n        </ClickAwayListener>\r\n      </Popper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTagsMenuBtn;\r\n","import { atom, getDefaultStore, useAtomValue } from 'jotai';\r\n\r\nimport { openProxyManagerListView } from './proxy-manager-modal-status.atom';\r\nimport { resetSelectedProxies } from './selected-proxies.atom';\r\n\r\nconst editModeProfileIdAtom = atom<string | null>(null);\r\nconst proxyElementLocationAtom = atom<string | null>(null);\r\n\r\nconst setEditModeProfileId = (value: string | null): void => getDefaultStore().set(editModeProfileIdAtom, value);\r\nconst setProxyElementLocation = (value: string | null): void => getDefaultStore().set(proxyElementLocationAtom, value);\r\n\r\nexport const useEditModeProfileId = (): string | null => useAtomValue(editModeProfileIdAtom);\r\nexport const useProxyElementLocation = (): string | null => useAtomValue(proxyElementLocationAtom);\r\n\r\nexport const updateEditModeProfileId = (id: string | null): void => {\r\n  setEditModeProfileId(id);\r\n\r\n  if (id) {\r\n    return;\r\n  }\r\n\r\n  setProxyElementLocation(null);\r\n  openProxyManagerListView();\r\n  resetSelectedProxies();\r\n};\r\n\r\nexport const updateProxyElementLocation = (id: string | null): void => {\r\n  setProxyElementLocation(id);\r\n};\r\n","import { updateMigrationData } from './api';\r\nimport { IMigrationData } from '../../../electron/interfaces/check-competitors.interfaces';\r\n\r\nexport const checkCompetitorsForMigration = async (migrationData: IMigrationData, ipcRenderer: any): Promise<void> => {\r\n  const checkResult = await ipcRenderer.invoke('check-competitors-apps-for-migration', {\r\n    migrationData,\r\n  }).catch(() => null);\r\n\r\n  if (!checkResult) {\r\n    return;\r\n  }\r\n\r\n  const { isDolphinChecked = false } = checkResult;\r\n  const requestBody: any = {};\r\n  if (isDolphinChecked) {\r\n    requestBody.isDolphinChecked = true;\r\n  }\r\n\r\n  updateMigrationData(requestBody).catch(() => void 0);\r\n};\r\n","import React from 'react';\r\n\r\nconst IconAddFolder = () => (\r\n    <svg width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M7.35533 4.25725V4.35725H7.45533H8.183H8.54611H12.5447C12.8711 4.35725 13.1723 4.69564 13.1723 5.16123V7.41849V7.51849H13.2723H14H14.1V7.41849V4.71014C14.1 3.92864 13.5854 3.25507 12.9092 3.25507H8.27729C8.23563 2.51698 7.73651 1.9 7.08933 1.9H3.09078C2.41465 1.9 1.9 2.57168 1.9 3.35507V4.71014V6.06521V14.6449C1.9 15.4264 2.41457 16.1 3.09078 16.1H10.3617H10.4617V16V15.096V14.996H10.3617H3.45389C3.12756 14.996 2.82767 14.6578 2.82767 14.1938V9.22644V7.33581V6.06341V5.15943V3.80616C2.82767 3.34208 3.12767 3.00218 3.45533 3.00218H6.72767C7.05411 3.00218 7.35533 3.34057 7.35533 3.80616V4.25725Z\" fill=\"var(--359D73)\" stroke=\"var(--359D73)\" strokeWidth=\"0.2\"/>\r\n    <path d=\"M18.1 12.5024C18.1022 12.1699 17.8341 11.9023 17.5024 11.9023H15.1006V9.49972C15.1006 9.16778 14.8329 8.9 14.501 8.9C14.1688 8.9 13.9014 9.17003 13.9014 9.49972V11.9003H11.4996C11.1674 11.9003 10.9 12.1703 10.9 12.5C10.9 12.8319 11.1677 13.0997 11.4996 13.0997H13.9014V15.5003C13.9014 15.8322 14.1691 16.1 14.501 16.1C14.8329 16.1 15.1006 15.8322 15.1006 15.5003V13.1017H17.5004C17.8322 13.1017 18.0998 12.8341 18.1 12.5024ZM18.1 12.5024C18.1 12.5025 18.1 12.5026 18.1 12.5027L18 12.502H18.1C18.1 12.5021 18.1 12.5023 18.1 12.5024ZM15.0006 13.0017H15.1006L15.0006 13.1017V13.0017ZM14.0014 12.9997V13.0997L13.9014 12.9997H14.0014ZM15.1006 12.0023H15.0006V11.9023L15.1006 12.0023Z\" fill=\"var(--359D73)\" stroke=\"var(--359D73)\" strokeWidth=\"0.2\"/>\r\n    </svg>\r\n\r\n);\r\n\r\nexport default IconAddFolder;\r\n","import React from 'react';\r\n\r\nconst IconAddMembers = () => (\r\n    <svg width=\"18\" height=\"18\" viewBox=\"0 0 22 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <circle cx=\"15\" cy=\"5\" r=\"3.5\" fill=\"var(--FFFFFF)\" stroke=\"var(--359D73)\"/>\r\n    <circle cx=\"7\" cy=\"5\" r=\"3.5\" fill=\"var(--FFFFFF)\" stroke=\"var(--359D73)\"/>\r\n    <path d=\"M4.5 8.5H9.5C11.1569 8.5 12.5 9.84315 12.5 11.5V14C12.5 14.2761 12.2761 14.5 12 14.5H2C1.72386 14.5 1.5 14.2761 1.5 14V11.5C1.5 9.84315 2.84315 8.5 4.5 8.5Z\" fill=\"var(--FFFFFF)\" stroke=\"var(--359D73)\"/>\r\n    <path d=\"M12.5 8.5H17.5C19.1569 8.5 20.5 9.84315 20.5 11.5V14C20.5 14.2761 20.2761 14.5 20 14.5H10C9.72386 14.5 9.5 14.2761 9.5 14V11.5C9.5 9.84315 10.8431 8.5 12.5 8.5Z\" fill=\"var(--FFFFFF)\" stroke=\"var(--359D73)\"/>\r\n    <path d=\"M8.5 10.5H13.5C15.1569 10.5 16.5 11.8431 16.5 13.5V16C16.5 16.2761 16.2761 16.5 16 16.5H6C5.72386 16.5 5.5 16.2761 5.5 16V13.5C5.5 11.8431 6.84315 10.5 8.5 10.5Z\" fill=\"var(--FFFFFF)\" stroke=\"var(--359D73)\"/>\r\n    <circle cx=\"11\" cy=\"7\" r=\"3.5\" fill=\"var(--FFFFFF)\" stroke=\"var(--359D73)\"/>\r\n    </svg>\r\n);\r\n\r\nexport default IconAddMembers;\r\n","import React from 'react';\r\nexport interface IIconAddFolder {\r\n    style?: React.CSSProperties;\r\n  }\r\n\r\nconst IconAddFolder = () => (\r\n\r\n    <svg width=\"13\" height=\"18\" viewBox=\"0 0 13 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M4.49792 5.29375H4.44792V5.34375V12.3393V12.3893H4.49792H5.37237H5.42237V12.3393V5.34375V5.29375H5.37237H4.49792Z\" fill=\"var(--A14747)\" stroke=\"var(--A14747)\" strokeWidth=\"0.1\"/>\r\n<path d=\"M6.24683 5.29375H6.19683V5.34375V12.3393V12.3893H6.24683H7.12127H7.17127V12.3393V5.34375V5.29375H7.12127H6.24683Z\" fill=\"var(--A14747)\" stroke=\"var(--A14747)\" strokeWidth=\"0.1\"/>\r\n<path d=\"M7.99548 5.29375H7.94548V5.34375V12.3393V12.3893H7.99548H8.86993H8.91993V12.3393V5.34375V5.29375H8.86993H7.99548Z\" fill=\"var(--A14747)\" stroke=\"var(--A14747)\" strokeWidth=\"0.1\"/>\r\n<path d=\"M1 2.66875H0.95V2.71875V3.59319V3.64319H1H12.3678H12.4178V3.59319V2.71875V2.66875H12.3678H1Z\" fill=\"var(--A14747)\" stroke=\"var(--A14747)\" strokeWidth=\"0.1\"/>\r\n<path d=\"M8.84114 3.20696H8.89114V3.15696V2.28252C8.89114 1.55535 8.28579 0.95 7.55862 0.95H5.80974C5.08257 0.95 4.47722 1.55535 4.47722 2.28252V3.15696V3.20696H4.52722H5.34337H5.39337V3.15696V2.28252C5.39337 2.0478 5.57502 1.86615 5.80974 1.86615H7.55862C7.79334 1.86615 7.975 2.0478 7.975 2.28252V3.15696V3.20696H8.025H8.84114Z\" fill=\"var(--A14747)\" stroke=\"var(--A14747)\" strokeWidth=\"0.1\"/>\r\n<path d=\"M2.64081 13.6824L2.64083 13.6827C2.7012 14.4072 3.33405 15.0111 4.06062 15.0111H9.30728C10.0331 15.0111 10.6667 14.4371 10.7271 13.6826L10.7271 13.6824L11.5432 3.18913L11.5472 3.13872L11.4967 3.13536L10.6223 3.07706L10.5729 3.07377L10.5691 3.12308L9.75295 13.6164L9.7528 13.6164V13.6203C9.7528 13.7205 9.70227 13.8247 9.61879 13.9048C9.53556 13.9847 9.42366 14.0366 9.30728 14.0366H4.06062C3.85436 14.0366 3.64174 13.8534 3.61489 13.6156L2.7988 3.12308L2.79497 3.07377L2.74563 3.07706L1.87119 3.13536L1.82074 3.13872L1.82466 3.18913L2.64081 13.6824Z\" fill=\"var(--A14747)\" stroke=\"var(--A14747)\" strokeWidth=\"0.1\"/>\r\n</svg>\r\n\r\n\r\n);\r\n\r\nexport default IconAddFolder;\r\n","import React from 'react';\r\n\r\nconst IconFinger = () => (\r\n    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n          width=\"16px\" height=\"18px\" viewBox=\"0 0 317.768 317.768\">\r\n    <g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M262.54,125.114c-1.376,0-2.762-0.418-3.959-1.282c-4.836-3.491-8.196-14.103-10.198-22.617\r\n                    c-0.298-0.835-0.571-1.921-1.017-3.694c-1.725-6.844-6.297-25.031-16.584-42.503c-1.899-3.227-0.821-7.383,2.406-9.283\r\n                    c3.23-1.899,7.382-0.825,9.281,2.404c11.275,19.151,16.193,38.711,18.045,46.075c0.215,0.869,0.462,1.832,0.588,2.271\r\n                    c0.154,0.364,0.277,0.739,0.366,1.124c1.496,6.48,4.015,13.729,5.349,15.458c2.775,2.25,3.341,6.3,1.226,9.229\r\n                    C266.714,124.137,264.641,125.114,262.54,125.114z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M222.086,38.831c-1.793,0-3.587-0.707-4.918-2.113c-13.216-13.925-29.543-21.685-48.526-23.069\r\n                    c-6.013-0.301-12.058,0.141-17.962,1.311c-3.666,0.726-7.24-1.656-7.969-5.33c-0.729-3.672,1.658-7.243,5.33-7.969\r\n                    c7.022-1.391,14.212-1.913,21.365-1.548c0.044,0.003,0.096,0.007,0.144,0.01c22.487,1.622,41.818,10.797,57.455,27.266\r\n                    c2.58,2.717,2.467,7.008-0.247,9.585C225.44,38.215,223.76,38.831,222.086,38.831z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M55.465,89.496c-0.541,0-1.034-0.08-1.535-0.193c-2.584-0.566-4.605-2.585-5.176-5.167\r\n                    c-0.568-2.583,0.462-5.31,2.568-6.908c0.512-0.388,1.062-0.693,1.629-0.919c1.679-0.98,6.557-4.38,10.682-9.835l1.59-2.11\r\n                    c2.447-3.252,5.489-7.299,9.067-11.726c11.717-14.489,23.29-25.63,35.372-34.057c3.069-2.143,7.299-1.388,9.44,1.682\r\n                    c2.146,3.073,1.388,7.299-1.682,9.439c-11.024,7.688-21.681,17.98-32.582,31.465c-3.428,4.24-6.388,8.179-8.771,11.346\r\n                    l-1.612,2.143c-3.679,4.862-7.664,8.35-10.355,10.422C59.46,88.637,57.217,89.496,55.465,89.496z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M55.164,159.173c-2.982,0-5.717-1.984-6.54-5.001c-0.984-3.612,1.15-7.342,4.758-8.323\r\n                    c12.515-3.406,24.67-9.075,32.665-13.231c3.321-1.725,7.414-0.435,9.142,2.887c1.729,3.323,0.435,7.416-2.888,9.147\r\n                    c-8.581,4.46-21.681,10.561-35.354,14.282C56.351,159.094,55.752,159.173,55.164,159.173z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M105,135.945c-2.165,0-4.296-1.037-5.605-2.957c-2.113-3.095-1.314-7.313,1.776-9.423\r\n                    c24.225-16.534,45.285-38.751,45.472-38.961c18.006-20.625,37.662-29.636,53.877-24.67c16.484,5.05,22.942,15.83,25.457,23.984\r\n                    c1.105,3.578-0.903,7.373-4.479,8.477c-3.583,1.104-7.375-0.905-8.477-4.481c-2.255-7.305-7.796-12.357-16.471-15.013\r\n                    c-12.614-3.862-28.794,8.143-39.728,20.671c-2.271,2.601-24.137,24.905-48.001,41.189\r\n                    C107.647,135.563,106.314,135.945,105,135.945z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M67.863,229.921c-2.632,0-5.138-1.543-6.239-4.12c-1.472-3.439,0.127-7.43,3.571-8.901\r\n                    c28.672-12.258,69.27-37.603,85.396-47.931c32.149-20.589,53.661-41.437,60.57-58.698c1.393-3.477,5.342-5.166,8.812-3.778\r\n                    c3.477,1.391,5.171,5.337,3.777,8.817c-10.19,25.462-41.432,49.439-65.847,65.076c-16.411,10.513-57.771,36.326-87.38,48.984\r\n                    C69.653,229.743,68.75,229.921,67.863,229.921z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <g>\r\n                    <path d=\"M131.136,67.052c6.406-6.136,12.582-11.067,20.216-15.602c7.637-4.531,16.394-7.982,24.822-8.861\r\n                        c3.679-0.384,6.783-2.794,6.783-6.781c0-3.407-3.098-7.163-6.783-6.781c-21.195,2.214-39.516,13.964-54.629,28.433\r\n                        C115.219,63.522,124.822,73.096,131.136,67.052L131.136,67.052z\" fill=\"var(--359D73)\"/>\r\n                </g>\r\n            </g>\r\n            <g>\r\n                <g>\r\n                    <path d=\"M59.525,123.081c9.259-2.782,17.316-8.209,25.817-12.643c8.961-4.671,16.853-11.94,23.911-19.07\r\n                        c6.153-6.22-3.431-15.815-9.592-9.592c-6.356,6.423-13.186,12.609-21.166,16.955c-7.37,4.016-14.767,8.928-22.574,11.276\r\n                        c-3.535,1.062-5.732,4.714-4.738,8.34C52.145,121.844,55.987,124.147,59.525,123.081L59.525,123.081z\" fill=\"var(--359D73)\"/>\r\n                </g>\r\n            </g>\r\n            <g>\r\n                <path d=\"M158.182,138.318c-1.885,0-3.761-0.782-5.099-2.313c-2.471-2.813-2.19-7.096,0.628-9.566\r\n                    c11.68-10.243,21.683-21.163,29.742-32.456c2.177-3.049,6.41-3.757,9.459-1.584c3.049,2.176,3.754,6.409,1.581,9.457\r\n                    c-8.669,12.146-19.38,23.847-31.844,34.777C161.364,137.761,159.77,138.318,158.182,138.318z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M59.228,195.012c-2.736,0-5.312-1.667-6.343-4.381c-1.324-3.501,0.438-7.412,3.939-8.739\r\n                    c0.067-0.028,0.253-0.093,0.558-0.199c6.665-2.286,24.513-8.895,46.247-20.764c7.327-4.006,14.45-8.261,21.164-12.659\r\n                    c3.137-2.05,7.339-1.17,9.389,1.962c2.05,3.137,1.17,7.339-1.962,9.389c-7.016,4.588-14.448,9.033-22.094,13.212\r\n                    C87.479,185.2,68.773,192.12,61.786,194.519l-0.238,0.082C60.781,194.882,59.999,195.012,59.228,195.012z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M244.142,248.1c-0.712,0-1.438-0.113-2.146-0.353c-11.32-3.774-23.661-12.562-35.598-21.063\r\n                    c-11.32-8.062-25.402-18.104-31.169-17.11c-5.619,0.972-22.697,12.008-28.31,15.632c-3.148,2.033-7.342,1.133-9.375-2.016\r\n                    c-2.033-3.145-1.128-7.344,2.016-9.373c18-11.632,27.354-16.57,33.359-17.604c11.323-1.947,25.238,7.953,41.343,19.428\r\n                    c11.118,7.919,22.62,16.108,32.021,19.246c3.549,1.184,5.469,5.023,4.284,8.572C249.625,246.303,246.979,248.1,244.142,248.1z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M83.349,262.059c-2.993,0-5.73-1.995-6.543-5.023c-0.974-3.617,1.167-7.334,4.784-8.312\r\n                    c8.343-2.245,27.918-15.146,43.65-25.516c3.128-2.067,7.333-1.198,9.394,1.93c2.06,3.125,1.196,7.33-1.93,9.391\r\n                    c-21.741,14.328-37.881,24.677-47.588,27.292C84.526,261.979,83.93,262.059,83.349,262.059z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M227.01,281.261c-0.77,0-1.546-0.131-2.306-0.407c-5.534-1.995-12.632-6.14-19.486-10.312\r\n                    c-3.199-1.95-4.209-6.122-2.259-9.318c1.947-3.2,6.119-4.213,9.319-2.262c5.944,3.624,12.62,7.542,17.035,9.141\r\n                    c3.521,1.272,5.346,5.156,4.072,8.678C232.383,279.542,229.783,281.261,227.01,281.261z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M107.865,292.506c-2.128,0-4.223-1-5.544-2.864c-2.163-3.06-1.434-7.289,1.625-9.452\r\n                    c2.167-1.533,5.291-3.812,8.908-6.451c29.559-21.58,47.164-33.547,55.552-34.995c5.793-1.002,13.236,1.76,27.459,10.188\r\n                    c3.221,1.906,4.291,6.064,2.382,9.288c-1.909,3.221-6.067,4.288-9.288,2.382c-13.318-7.888-17.254-8.562-18.318-8.48\r\n                    c-6.776,1.171-38.025,23.986-49.788,32.572c-3.665,2.673-6.825,4.983-9.079,6.574\r\n                    C110.583,292.099,109.213,292.506,107.865,292.506z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M134.893,317.768c-1.701,0-3.4-0.633-4.717-1.909c-2.692-2.604-2.758-6.896-0.154-9.589\r\n                    c3.666-3.788,22.561-22.785,34.422-24.831c10.533-1.824,20.149,5.037,31.271,12.974c3.385,2.412,6.885,4.91,10.697,7.398\r\n                    c3.139,2.046,4.018,6.249,1.975,9.384c-2.046,3.138-6.249,4.021-9.384,1.975c-4.048-2.643-7.826-5.343-11.163-7.721\r\n                    c-8.65-6.174-16.125-11.502-21.084-10.65c-5.006,0.866-17.906,11.526-26.988,20.906\r\n                    C138.432,317.073,136.663,317.768,134.893,317.768z\" fill=\"var(--359D73)\"/>\r\n            </g>\r\n            <g>\r\n                <g>\r\n                    <path d=\"M227.917,139.913c2.898,17.588,15.845,27.108,31.313,33.642c3.408,1.438,7.234,1.061,9.277-2.43\r\n                        c1.684-2.878,0.972-7.837-2.434-9.277c-5.653-2.387-11.561-4.897-16.32-8.854c-5.236-4.356-7.669-10.078-8.761-16.685\r\n                        C239.577,127.692,226.507,131.363,227.917,139.913L227.917,139.913z\" fill=\"var(--359D73)\"/>\r\n                </g>\r\n            </g>\r\n            <g>\r\n                <g>\r\n                    <path d=\"M202.249,169.021c8.079,19.927,26.631,34.988,47.061,41.281c8.385,2.58,11.938-10.513,3.607-13.076\r\n                        c-5.092-1.567-8.956-3.556-14.346-6.741c-9.866-5.828-18.87-14.277-23.243-25.067c-1.39-3.422-4.463-5.803-8.343-4.738\r\n                        C203.733,161.57,200.855,165.588,202.249,169.021L202.249,169.021z\" fill=\"var(--359D73)\"/>\r\n                </g>\r\n            </g>\r\n        </g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    <g>\r\n    </g>\r\n    </svg>\r\n\r\n\r\n\r\n);\r\n\r\nexport default IconFinger;\r\n","import styled from '@emotion/styled';\r\nimport React, { FC, memo } from 'react';\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid var(--E8E8E8);\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 4px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  transition: border 0.3s ease;\r\n\r\n  :hover {\r\n    border: 1px solid var(--00B86D);\r\n\r\n  }\r\n`;\r\n\r\nconst Item = styled.span`\r\n  max-width: 200px;\r\n  min-width: 200px;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst CloseBtnContainer = styled.span`\r\n  color: var(--E8E8E8);\r\n  padding: 4px;\r\n  cursor: pointer;\r\n  margin-left: 16px;\r\n  margin-right: 4px;\r\n\r\n  transition: color 0.3s ease;\r\n\r\n  :hover {\r\n    color: var(--000000A6);\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  profileName: string;\r\n  proxy: string;\r\n  onDelete: () => any;\r\n}\r\n\r\nconst profileProxyComponent: FC<IProps> = (props) => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Item>{props.profileName}</Item>\r\n        <Item>{props.proxy}</Item>\r\n        <CloseBtnContainer onClick={props.onDelete}>X</CloseBtnContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(profileProxyComponent);\r\n","import moment from 'moment';\r\n\r\nimport { IProxy } from './components/interfaces/IProxy';\r\nimport { IProxyCredentialsNew } from './components/interfaces/proxy-credentials-new.interface';\r\nimport { IProxyDataToSave } from './interfaces/proxy-data-to-save.interface';\r\nimport { getProxyStatusParams } from './proxy-helpers';\r\nimport { handleProxiesLimitError } from './utils/handle-proxies-limit-error';\r\nimport { API_BASE_URL } from '../../../common/constants/constants';\r\nimport { http } from '../../services';\r\nimport { setProxyStatuses } from '../../state/proxies.context/api';\r\nimport { updateProxyItem, upsertOneProxy } from '../../state/proxy-list.atom';\r\nimport { getWorkspaceIdFromStorage } from '../../utils/get-workspace-id-from-storage';\r\n\r\nexport const createProxyRequest = async (proxy: IProxyCredentialsNew) => {\r\n  const workspaceId = getWorkspaceIdFromStorage();\r\n  const url = new URL(`${API_BASE_URL}/proxy`);\r\n  if (workspaceId) {\r\n    url.searchParams.append('workspaceId', workspaceId);\r\n  }\r\n\r\n  const body = JSON.stringify(proxy);\r\n  const response = await http(url.toString(), { method: 'POST', body });\r\n\r\n  return response.body;\r\n};\r\n\r\nexport const createProxiesRequest = async (proxies: IProxyCredentialsNew[]) => {\r\n  const workspaceId = getWorkspaceIdFromStorage();\r\n  const url = new URL(`${API_BASE_URL}/proxy/add_proxies`);\r\n  if (workspaceId) {\r\n    url.searchParams.append('workspaceId', workspaceId);\r\n  }\r\n\r\n  const body = JSON.stringify({ proxies });\r\n  const response = await http(url.toString(), { method: 'POST', body });\r\n\r\n  return response.body;\r\n};\r\n\r\nexport const updateProxyRequest = async (id: string, proxy: IProxyCredentialsNew, profileId = ''): Promise<IProxy> => {\r\n  const url = new URL(`${API_BASE_URL}/proxy/${id}`);\r\n  url.searchParams.append('profileId', profileId);\r\n  const body = JSON.stringify(proxy);\r\n\r\n  const response = await http(url.toString(), {\r\n    method: 'PUT',\r\n    body,\r\n  });\r\n\r\n  return response.body;\r\n};\r\n\r\nexport const deleteProxyRequest = async (id: string): Promise<any> => http(`${API_BASE_URL}/proxy/${id}`, {\r\n  method: 'DELETE',\r\n});\r\n\r\nexport const deleteProxiesRequest = async (proxies: string[]): Promise<IProxy> => {\r\n  const body = JSON.stringify({ proxies });\r\n\r\n  const response = await http(`${API_BASE_URL}/proxy/delete_proxies`, {\r\n    method: 'POST',\r\n    body,\r\n  });\r\n\r\n  return response.body;\r\n};\r\n\r\nexport const getProxyRequest = async (id: string): Promise<IProxy> => {\r\n  const response = await http(`${API_BASE_URL}/proxy/${id}`, {\r\n    method: 'GET',\r\n  });\r\n\r\n  return response.body;\r\n};\r\n\r\nexport const saveProxy = async (params: IProxyDataToSave, profileId = ''): Promise<IProxy> => {\r\n  const { proxyId, proxyItem, checkProxy } = params;\r\n  let newProxy: IProxy;\r\n  if (proxyId) {\r\n    newProxy = await updateProxyRequest(proxyId, proxyItem, profileId);\r\n  } else {\r\n    newProxy = await createProxyRequest(proxyItem).catch(error => handleProxiesLimitError(error));\r\n  }\r\n\r\n  upsertOneProxy(newProxy);\r\n  if (!checkProxy) {\r\n    return newProxy;\r\n  }\r\n\r\n  setTimeout(async (): Promise<void> => {\r\n    const statusParams = await getProxyStatusParams(newProxy);\r\n\r\n    updateProxyItem({\r\n      _id: newProxy._id,\r\n      ...statusParams,\r\n      checkDate: moment().toDate(),\r\n      checkInProgress: false,\r\n    });\r\n\r\n    await setProxyStatuses([{\r\n      _id: newProxy._id,\r\n      status: statusParams.status,\r\n      country: statusParams.country || newProxy.country,\r\n      city: statusParams.city || newProxy.city,\r\n      error: statusParams.error || null,\r\n      checkDate: moment().unix(),\r\n      lastIp: statusParams.origin,\r\n    }]).catch(() => null);\r\n  }, 0);\r\n\r\n  return newProxy;\r\n};\r\n","import moment from 'moment';\r\n\r\nimport { createProxiesRequest } from './api';\r\nimport { IProxy } from './components/interfaces/IProxy';\r\nimport { getProxyStatusParams } from './proxy-helpers';\r\nimport { handleProxiesLimitError } from './utils/handle-proxies-limit-error';\r\nimport { setProxyStatuses } from '../../state/proxies.context/api';\r\nimport { updateProxyItem, updateProxyList } from '../../state/proxy-list.atom';\r\n\r\ninterface IParams {\r\n  proxyList: IProxy[];\r\n  proxies: IProxy[];\r\n}\r\n\r\nexport const addMultipleProxies = async (params: IParams): Promise<IProxy[] | undefined> => {\r\n  const { proxyList, proxies } = params;\r\n\r\n  if (!proxies?.length) {\r\n    return;\r\n  }\r\n\r\n  const addedProxies: IProxy[] = [];\r\n  const newProxies: IProxy[] = [];\r\n  const pasteProxyLimit = 50;\r\n\r\n  const upsertedProxies: IProxy[] = await createProxiesRequest(proxies.slice(0, pasteProxyLimit))\r\n    .catch(error => {\r\n      handleProxiesLimitError(error);\r\n\r\n      return [];\r\n    });\r\n\r\n  for (const proxy of upsertedProxies) {\r\n    try {\r\n      const existingProxy = proxyList.find((el) => (\r\n        el._id === proxy._id\r\n      )) as IProxy;\r\n\r\n      if (existingProxy) {\r\n        addedProxies.push(existingProxy);\r\n        continue;\r\n      }\r\n\r\n      addedProxies.push(proxy);\r\n      newProxies.push(proxy);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  let updatedProxies: any[] = proxyList;\r\n\r\n  const showInfo = (newProxies.length === 1);\r\n\r\n  for (const newProxy of newProxies) {\r\n    let proxyWasChanged = false;\r\n    updatedProxies = updatedProxies.map(proxy => {\r\n      if (proxy._id !== newProxy._id) {\r\n        return proxy;\r\n      }\r\n\r\n      // Mark that proxy already in list and was changed\r\n      proxyWasChanged = true;\r\n\r\n      return {\r\n        ...newProxy,\r\n        checkInProgress: true,\r\n        showInfoAfterCheck: showInfo,\r\n      };\r\n    });\r\n\r\n    // If proxy doesn't exists - add proxy as first array element\r\n    if (!proxyWasChanged) {\r\n      updatedProxies.unshift({\r\n        ...newProxy,\r\n        checkInProgress: true,\r\n        showInfoAfterCheck: showInfo,\r\n      });\r\n    }\r\n  }\r\n\r\n  updateProxyList(updatedProxies);\r\n\r\n  for (const newProxy of addedProxies) {\r\n    // TODO reduce requests count\r\n    setTimeout(async (): Promise<void> => {\r\n      const statusParams = await getProxyStatusParams({\r\n        ...newProxy,\r\n        showInfoAfterCheck: showInfo,\r\n      });\r\n\r\n      updateProxyItem({\r\n        _id: newProxy._id,\r\n        ...statusParams,\r\n        checkDate: moment().toDate(),\r\n        checkInProgress: false,\r\n      });\r\n\r\n      if (!statusParams) {\r\n        return;\r\n      }\r\n\r\n      await setProxyStatuses([{\r\n        _id: newProxy._id,\r\n        status: statusParams.status,\r\n        country: statusParams.country || newProxy.country,\r\n        city: statusParams.city || newProxy.city,\r\n        error: statusParams.error || null,\r\n        checkDate: moment().unix(),\r\n        lastIp: statusParams.origin,\r\n      }]).catch(() => null);\r\n    }, 0);\r\n  }\r\n\r\n  return addedProxies;\r\n};\r\n","import { API_BASE_URL } from '../../../../../common/constants/constants';\r\nimport { http } from '../../../../services';\r\nimport { IProxy } from '../../../proxy/components/interfaces/IProxy';\r\n\r\nexport const updateManyProxy = async (profilesIds: string[], proxy: any) => {\r\n  const url = `${API_BASE_URL}/browser/proxy/many`;\r\n\r\n  const data = await http(url, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({\r\n      profilesIds,\r\n      proxy: {\r\n        mode: proxy.mode,\r\n        username: proxy.username,\r\n        host: proxy.host,\r\n        password: proxy.password,\r\n        port: proxy.port,\r\n        autoProxyRegion: proxy.autoProxyRegion,\r\n        torProxyRegion: proxy.torProxyRegion,\r\n      }\r\n    }),\r\n  });\r\n\r\n  return data.body;\r\n}\r\n\r\nexport interface IProfileProxy {\r\n  profileId: string;\r\n  proxy: IProxy;\r\n}\r\nexport const updateProxies = async (profilesProxies: IProfileProxy[]) => {\r\n  const url = `${API_BASE_URL}/browser/proxy/many/v2`;\r\n\r\n  const body = JSON.stringify({\r\n    proxies: profilesProxies,\r\n  });\r\n\r\n  const data = await http(url, {\r\n    method: 'PATCH',\r\n    body,\r\n  });\r\n\r\n  return data.body;\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { Button, Divider, Input, message } from 'antd';\r\nimport React, { ChangeEvent, FC, memo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport ProfileProxy from './profile-proxy';\r\nimport { history } from '../../../../../services';\r\nimport { useProxyList } from '../../../../../state/proxy-list.atom';\r\nimport { proxyFromText } from '../../../../../utils/proxy-string';\r\nimport { addMultipleProxies } from '../../../../proxy/add-multiple-proxies';\r\nimport { IProxy } from '../../../../proxy/components/interfaces/IProxy';\r\nimport { IProfileProxy, updateProxies } from '../api';\r\n\r\nconst ProfilesContainer = styled.div`\r\n  height: 290px;\r\n  overflow: auto;\r\n  border-radius: 4px;\r\n  border: 1px solid var(--C6C6C6);\r\n  padding: 8px 4px;\r\n\r\n  div:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n\r\n  div {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst SubmitBtn = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst TextArea = styled(Input.TextArea)`\r\n  margin-top: 24px;\r\n`;\r\n\r\ninterface IAutoProxyForm {\r\n  selectedProfiles: any[];\r\n  setSelectedProfilesIds: (ids: string[]) => any;\r\n  closeModal: () => any;\r\n}\r\nconst AutoProxyForm: FC<IAutoProxyForm> = (props) => {\r\n  const { selectedProfiles, setSelectedProfilesIds, closeModal } = props;\r\n\r\n  const [proxyList, setProxyList] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const proxyListData = useProxyList();\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const onProxyListChange = (event: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { value } = event.target;\r\n    if (!value) {\r\n      setProxyList([]);\r\n\r\n      return;\r\n    }\r\n\r\n    const formattedValue = value\r\n      .replace(/[^a-z0-9.\\-_/@:[\\] ]/ig, '\\n')\r\n      .replace(/\\n{2,}/g, '\\n');\r\n\r\n    if (formattedValue === '\\n') {\r\n      setProxyList([]);\r\n\r\n      return;\r\n    }\r\n\r\n    const proxyArray = formattedValue.split('\\n');\r\n    setProxyList(proxyArray);\r\n  };\r\n\r\n  const renderBaseProxy = (index: number): string => {\r\n    const profile = selectedProfiles[index];\r\n    const { proxy } = profile;\r\n\r\n    const proxyMode = proxy.mode;\r\n\r\n    if (proxyMode === 'none') {\r\n      return '-';\r\n    }\r\n\r\n    if (['http', 'socks4', 'socks5'].includes(proxyMode)) {\r\n      if (proxy.username && !proxy.password) {\r\n        return `${proxyMode}://${proxy.username}@${proxy.host}:${proxy.port}`;\r\n      }\r\n\r\n      if (proxy.username && proxy.password) {\r\n        return `${proxyMode}://${proxy.username}:${proxy.password}@${proxy.host}:${proxy.port}`;\r\n      }\r\n\r\n      return `${proxyMode}://${proxy.host}:${proxy.port}`;\r\n    }\r\n\r\n    if (proxyMode === 'gologin') {\r\n      const arr = ['GoLogin'];\r\n\r\n      if (profile.proxyRegion) {\r\n        arr.push(profile.proxyRegion.toUpperCase());\r\n      }\r\n\r\n      return arr.join(' • ');\r\n    }\r\n\r\n    if (proxyMode === 'tor') {\r\n      const arr = ['TOR'];\r\n\r\n      if (profile.proxyRegion) {\r\n        arr.push(profile.proxyRegion.toUpperCase());\r\n      }\r\n\r\n      return arr.join(' • ');\r\n    }\r\n\r\n    return 'error';\r\n  };\r\n\r\n  const renderInsertedProxy = (proxy: string): string => {\r\n    if (!proxy.includes('://')) {\r\n      return `http://${proxy}`;\r\n    }\r\n\r\n    return proxy;\r\n  };\r\n\r\n  const proxyRenderer = (index: number): string => {\r\n    if (proxyList.length === 1) {\r\n      return renderInsertedProxy(proxyList[0]);\r\n    }\r\n\r\n    if (!proxyList[index]) {\r\n      return renderBaseProxy(index);\r\n    }\r\n\r\n    return renderInsertedProxy(proxyList[index]);\r\n  };\r\n\r\n  const handleSubmit = async (): Promise<void> => {\r\n    normalizeProxyInTextarea();\r\n    // Textarea proxy parsing\r\n    const parsedProxies = proxyList.map(proxy => proxyFromText(proxy));\r\n\r\n    const savedProxies = await addMultipleProxies({\r\n      proxyList: proxyListData,\r\n      proxies: parsedProxies.filter(Boolean),\r\n    }) || [];\r\n\r\n    const proxies = parsedProxies.map((el) => {\r\n      if (!el) {\r\n        return el;\r\n      }\r\n\r\n      return savedProxies.find((proxy) => (\r\n        el.mode === proxy.mode &&\r\n        el.host.toLowerCase() === proxy.host &&\r\n        el.port === proxy.port &&\r\n        el.username === proxy.username &&\r\n        el.password === proxy.password\r\n      ));\r\n    });\r\n\r\n    if (!proxies) {\r\n      return;\r\n    }\r\n\r\n    // Если прокси введен только один - он применяется на все профили\r\n    if (proxies.length === 1) {\r\n      const [proxy] = proxies;\r\n      if (!proxy) {\r\n        message.error(tNotification('multipleProxyManagerModal.invalidFormat'));\r\n\r\n        return;\r\n      }\r\n\r\n      const profilesForUpdate: IProfileProxy[] = selectedProfiles.map(profile => ({\r\n        profileId: profile.id,\r\n        proxy,\r\n      }));\r\n\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        await updateProxies(profilesForUpdate);\r\n        closeModal();\r\n      } finally {\r\n        setIsLoading(false);\r\n        history.replace('/');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // valid profile to update & deleting from list\r\n    const validProfilesProxy: IProfileProxy[] =\r\n      proxies\r\n        .filter((proxy) => !!proxy)\r\n        .map((proxy, index): IProfileProxy => ({\r\n          profileId: selectedProfiles[index]?.id,\r\n          proxy: proxy as IProxy,\r\n        }))\r\n        .filter(profilesIdsWithoutProxy => !!profilesIdsWithoutProxy.profileId);\r\n\r\n    const invalidProfilesIds: string[] = [];\r\n    proxies.forEach((proxy, index) => {\r\n      if (!proxy) {\r\n        invalidProfilesIds.push(selectedProfiles[index].id);\r\n      }\r\n    });\r\n\r\n    const profilesIdsWithoutProxy = selectedProfiles.slice(proxies.length - 1).map(p => p.id);\r\n\r\n    // profiles for setting\r\n    const profilesForSetting = invalidProfilesIds.concat(profilesIdsWithoutProxy);\r\n    setSelectedProfilesIds(profilesForSetting);\r\n\r\n    // deleting valid proxies from textarea\r\n    setProxyList(proxyList.filter((_, index) => !proxies[index]));\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      await updateProxies(validProfilesProxy);\r\n      closeModal();\r\n    } finally {\r\n      setIsLoading(false);\r\n      history.replace('/');\r\n    }\r\n\r\n  };\r\n\r\n  const normalizeProxyInTextarea = (): string|void => {\r\n    const normalizedProxyList = proxyList\r\n      .filter(proxy => proxy !== '')\r\n      .map(proxy => {\r\n        if (!proxy.includes('://')) {\r\n          return `http://${proxy}`;\r\n        }\r\n\r\n        return proxy;\r\n      });\r\n\r\n    setProxyList(normalizedProxyList);\r\n  };\r\n\r\n  const onProfileDelete = (index: number): void => {\r\n    const selectedProfilesAfterDelete = selectedProfiles\r\n      .filter((_, i) => i !== index)\r\n      .map(profile => profile.id);\r\n\r\n    setSelectedProfilesIds(selectedProfilesAfterDelete);\r\n\r\n    if (proxyList[index]) {\r\n      const proxyListAfterProfileDelete = proxyList.filter((_, i) => i !== index);\r\n      setProxyList(proxyListAfterProfileDelete);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProfilesContainer>\r\n        {selectedProfiles.map((profile, index) => (\r\n          <>\r\n            <ProfileProxy\r\n              onDelete={(): void => onProfileDelete(index)}\r\n              key={profile.id}\r\n              profileName={profile.name}\r\n              proxy={proxyRenderer(index)}\r\n            />\r\n          </>\r\n        ))}\r\n      </ProfilesContainer>\r\n\r\n      <TextArea\r\n        onBlur={normalizeProxyInTextarea}\r\n        placeholder={translation('multipleProxyManagerModal.textField.placeholder')}\r\n        value={proxyList.join('\\n')}\r\n        rows={4}\r\n        onChange={onProxyListChange}\r\n      />\r\n\r\n      <Divider />\r\n\r\n      <SubmitBtn type='primary' loading={isLoading} onClick={handleSubmit}>\r\n        {translation('multipleProxyManagerModal.submitBtn.label')}\r\n      </SubmitBtn>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AutoProxyForm);\r\n","import { Modal } from 'antd';\r\nimport React, { FC, memo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport AutoProxyForm from './components/auto-form';\r\nimport { updateProfilesTableSelectedIds, useProfilesTableSelectedIds } from '../../../../state/profiles-table-selected-ids.atom';\r\nimport { useProfilesList } from '../../../../state/profiles-list.atom';\r\n\r\ninterface IProxyManager {\r\n  visible: boolean;\r\n  onClose: () => any;\r\n}\r\n\r\nconst MultipleProxyManager: FC<IProxyManager> = (props) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const selectedProfileIds = useProfilesTableSelectedIds();\r\n  const profilesList = useProfilesList();\r\n  const selectedProfiles = profilesList.filter(profile => selectedProfileIds.includes(profile.id));\r\n\r\n  const { visible, onClose } = props;\r\n\r\n  return (\r\n    <Modal\r\n      title={translation('multipleProxyManagerModal.title')}\r\n      footer={false}\r\n      visible={visible}\r\n      onCancel={onClose}\r\n    >\r\n      <AutoProxyForm\r\n        closeModal={onClose}\r\n        selectedProfiles={selectedProfiles}\r\n        setSelectedProfilesIds={updateProfilesTableSelectedIds}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default memo(MultipleProxyManager);\r\n","import styled from '@emotion/styled';\r\nimport { Button } from 'antd';\r\n\r\nconst DEFAULT_BORDER_COLOR = 'var(--D9D9D9)';\r\n\r\nexport const TextArea = styled('textarea')`\r\n  width: 100%;\r\n  height: 100px;\r\n  resize: none;\r\n  padding: 5px 10px;\r\n  border: 1px solid ${DEFAULT_BORDER_COLOR};\r\n  border-radius: 3px;\r\n  &:focus {\r\n    outline: none !important;\r\n  }\r\n  &::placeholder {\r\n    opacity: 0.5;\r\n    font-color: ${DEFAULT_BORDER_COLOR};\r\n  }\r\n`;\r\n\r\nexport const SaveButton = styled(Button)`\r\n  display: block;\r\n  padding: 6px 16px;\r\n\r\n  font: normal 14px 'Roboto';\r\n  color: var(--FFFFFF);\r\n  background: var(--00B86D);\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CancelButton = styled(Button)`\r\n  display: block;\r\n  padding: 6px 16px;\r\n\r\n  font: normal 14px 'Roboto';\r\n  color: var(--767676);\r\n  border-color: var(--CDCDCD);\r\n  background: inherit;\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  :focus {\r\n    color: var(--767676);\r\n    border-color: var(--CDCDCD);\r\n    background-color: inherit;\r\n  }\r\n`;\r\n","import React, { ChangeEvent, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { CancelButton, SaveButton } from './styles';\r\nimport { editProfilesListFields } from '../../../../state/profiles-list.atom';\r\nimport { updateProfilesTableSelectedIds } from '../../../../state/profiles-table-selected-ids.atom';\r\nimport {  ModernModal } from '../../../../ui/modern-modal';\r\nimport { parseBookmarksTxtToObj } from '../../../../utils/bookmarks-utils';\r\nimport { BookmarksTextArea } from '../../../common/tabs/bookmarks/styles';\r\nimport { updateBookmarksMultipleProfiles } from '../../../quickProfiles/api';\r\n\r\ninterface IProfileBookmarksModal {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  profilesIds: string[];\r\n}\r\n\r\nconst ProfileBookmarksModal: React.FC<IProfileBookmarksModal> = (props) => {\r\n  const { visible, profilesIds, onClose } = props;\r\n  const [profileBookmarks, setProfileBookmarks] = useState('');\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleOnBookmarksTextChange = (event: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    setProfileBookmarks(event.target.value);\r\n  };\r\n\r\n  const getTextArea = (): JSX.Element => (\r\n    <BookmarksTextArea\r\n      value={profileBookmarks}\r\n      onChange={handleOnBookmarksTextChange}\r\n      placeholder={translation('profileSettings.bookmarks.placeholder') || ''}\r\n      style={{ marginTop: 20 }}\r\n    />\r\n  );\r\n\r\n  const saveBookmarks = async (): Promise<void> => {\r\n    const newBookmarks = parseBookmarksTxtToObj({}, profileBookmarks);\r\n    editProfilesListFields(profilesIds, { bookmarks: newBookmarks });\r\n    await updateBookmarksMultipleProfiles(profilesIds, newBookmarks);\r\n    setProfileBookmarks('');\r\n    updateProfilesTableSelectedIds(profilesIds);\r\n    onClose();\r\n  };\r\n\r\n  const onClickSaveBookmarks = (): void => {\r\n    saveBookmarks();\r\n  };\r\n\r\n  return (\r\n    <ModernModal\r\n      visible={visible}\r\n      onCancel={onClose}\r\n      width={546}\r\n      title={translation('profilesTable.multipleOperations.bookmarks')}\r\n      footer={null}\r\n    >\r\n      {getTextArea()}\r\n      <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 32 }}>\r\n        <CancelButton\r\n          style={{ marginRight: 12 }}\r\n          onClick={onClose}\r\n        >\r\n          {translation('base.cancel')}\r\n        </CancelButton>\r\n        <SaveButton\r\n          disabled={!profileBookmarks}\r\n          onClick={onClickSaveBookmarks}\r\n        >\r\n          {translation('base.save')}\r\n        </SaveButton>\r\n      </div>\r\n    </ModernModal>\r\n  );\r\n};\r\n\r\nexport default ProfileBookmarksModal;\r\n","import styled from '@emotion/styled';\r\nimport { Button, Dropdown, Icon, Input, Menu, message, Modal, Tooltip } from 'antd';\r\nimport React, { FC, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { userContext } from '../../../state';\r\nimport { updateProfilesTableSelectedIds } from '../../../state/profiles-table-selected-ids.atom';\r\nimport {\r\n  removeProfileInvite,\r\n  requestProfileInvites,\r\n  shareMultipleProfilesToOneUser,\r\n  shareProfile,\r\n  updateInviteRole,\r\n} from '../../quickProfiles/api';\r\n\r\nconst Col = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 150px;\r\n`;\r\n\r\nconst Row = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconSharing = styled (Icon)`\r\n  font-size: 9px;\r\n  margin-top: 2px;\r\n  opacity: 0.6; \r\n  color: var(--000000);\r\n  margin-left: 3px;\r\n`;\r\n\r\nconst IconUser = styled (Icon)`\r\n  font-size: 20px;\r\n  opacity: 0.6; \r\n  color: var(--000000);\r\n`;\r\n\r\nconst TextSharing = styled('span')`\r\n  font-family: Roboto;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000);\r\n  opacity: 0.6;\r\n  white-space: nowrap;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst RowSpaceBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst UserIconContainer = styled('div')`\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst CloseIconContainer = styled('div')`\r\n  margin-left: 5px;\r\n  cursor: pointer;\r\n  min-width: 19px;\r\n`;\r\n\r\nconst UserContainer = styled('div')`\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst ButtonSharing = styled(Button)`\r\n  font-family: Roboto;\r\n  font-size: 11px;\r\n  line-height: 13px;\r\n  color: var(--00B86D);\r\n  border-color: var(--00B86D);\r\n  width: 85px;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover{\r\n    opacity: 0.7\r\n  }\r\n`;\r\n\r\nconst TextEmail = styled('div')`\r\n  font-size: 12px;\r\n  margin-left: 10px;\r\n`;\r\n\r\ndeclare interface IUser {\r\n  email: string;\r\n  role: string;\r\n  inviteId: string;\r\n}\r\n\r\ndeclare interface IShareModal {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  profile?: any;\r\n  inviteId?: string;\r\n  profilesIds?: string[];\r\n  shareMultipleProfiles?: boolean;\r\n  afterClose?: () => void;\r\n}\r\n\r\nconst ShareModal: FC<IShareModal> = (shareProps) => {\r\n  const [loadingInvites, changeInvitesLoading] = useState(true);\r\n  const [invites, setInvites] = useState<any[]>([]);\r\n  const [selectedRole, changeSelectedRole] = useState<'guest'|'redactor'|'administrator'|'owner'>('guest');\r\n\r\n  const { hasTrial, plan } = useContext(userContext);\r\n\r\n  // Куда он inserted? я могу его вписать в десяток мест\r\n  const [insertedEmail, changeInsertedEmail] = useState<string>('');\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const getInvites = async () => {\r\n    if (shareProps.shareMultipleProfiles) {\r\n      changeInvitesLoading(false);\r\n\r\n      return;\r\n    }\r\n\r\n    const profiles = await requestProfileInvites(shareProps.profile.id);\r\n    setInvites(profiles);\r\n    changeInvitesLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInvites();\r\n  }, [shareProps.profile]);\r\n\r\n  const removeInvite = async (id: string) => {\r\n    changeInvitesLoading(true);\r\n    await removeProfileInvite(id)\r\n      .then(() => updateProfilesTableSelectedIds([shareProps.profile.id]))\r\n      .finally(() => changeInvitesLoading(false));\r\n    getInvites();\r\n  };\r\n\r\n  const changeUserRole = async (id: string, role: 'administrator'|'redactor'|'guest') => {\r\n    await updateInviteRole(id, role)\r\n      .finally(() => changeInvitesLoading(false));\r\n  };\r\n\r\n  const sendInvite = async () => {\r\n    if (!insertedEmail) {\r\n      message.error(translation('errorMessages.insertUserEmail'));\r\n\r\n      return;\r\n    }\r\n\r\n    changeInvitesLoading(true);\r\n\r\n    await new Promise((resolve) => {\r\n      if (shareProps.shareMultipleProfiles) {\r\n        resolve(shareMultipleProfilesToOneUser(shareProps.profilesIds, selectedRole, insertedEmail));\r\n\r\n        return;\r\n      }\r\n\r\n      resolve(shareProfile(shareProps.profile.id, selectedRole, insertedEmail));\r\n    })\r\n      .then(() => {\r\n        if (shareProps.shareMultipleProfiles) {\r\n          shareProps.onClose();\r\n        }\r\n\r\n        changeInsertedEmail('');\r\n      })\r\n      .finally(() => {\r\n        changeInvitesLoading(false);\r\n      });\r\n\r\n    if (!shareProps.shareMultipleProfiles) {\r\n      getInvites();\r\n    }\r\n  };\r\n\r\n  const User: FC<IUser> = (props) => {\r\n    const [GetRole, changeGetRole] = useState(props.role);\r\n\r\n    const { email } = useContext(userContext);\r\n\r\n    const showIcon = () => {\r\n      if (props.role === 'owner') {\r\n\r\n      } else {\r\n        return (\r\n          <IconSharing type='down' style={{ paddingTop:2 }} />\r\n        );\r\n      }\r\n    };\r\n\r\n    const changeInviteText = () => {\r\n      if (GetRole === 'guest') {\r\n        return translation('roles.profile.guest.subtitle');\r\n      }\r\n\r\n      if (GetRole === 'owner') {\r\n        return translation('roles.profile.owner.subtitle');\r\n      }\r\n\r\n      if (GetRole === 'redactor') {\r\n        return translation('roles.profile.editor.subtitle');\r\n      }\r\n\r\n      return translation('roles.profile.administrator.subtitle');\r\n    };\r\n\r\n    const menuChangeRole = (\r\n      <Menu>\r\n        <Menu.Item\r\n          onClick={(e: any) => {\r\n            changeGetRole(e.key);\r\n            changeUserRole(props.inviteId, e.key);\r\n            getInvites();\r\n          }}\r\n          key='guest'\r\n        >\r\n          {translation('roles.profile.guest.title')}\r\n        </Menu.Item >\r\n        <Menu.Item\r\n          onClick={(e: any) => {\r\n            changeGetRole(e.key);\r\n            changeUserRole(props.inviteId, e.key);\r\n            getInvites();\r\n          }}\r\n          key='redactor'\r\n        >\r\n          {translation('roles.profile.editor.title')}\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          onClick={(e: any) => {\r\n            changeGetRole(e.key);\r\n            changeUserRole(props.inviteId, e.key);\r\n            getInvites();\r\n          }}\r\n          key='administrator'\r\n        >\r\n          {translation('roles.profile.administrator.title')}\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n\r\n    return (\r\n      <UserContainer>\r\n        <RowSpaceBetween>\r\n          <Row>\r\n            <UserIconContainer>\r\n              <IconUser type='user' />\r\n            </UserIconContainer>\r\n            <TextEmail>\r\n              {props.email}\r\n            </TextEmail>\r\n          </Row>\r\n          <Dropdown overlay={menuChangeRole} trigger={['click']} disabled={props.role === 'owner' || props.email === email}>\r\n            <span style={{ cursor: 'pointer', display: 'flex' }}>\r\n              <TextSharing style={{ marginLeft: 15, marginTop: 2 }}>\r\n                {changeInviteText()}\r\n              </TextSharing>\r\n              {showIcon()}\r\n            </span>\r\n          </Dropdown>\r\n          <CloseIconContainer>\r\n            {(props.role !== 'owner' && props.email !== email) && <Icon type='delete' onClick={() => removeInvite(props.inviteId)} />}\r\n          </CloseIconContainer>\r\n        </RowSpaceBetween>\r\n      </UserContainer>\r\n    );\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item onClick={(e: any) => changeSelectedRole(e.key)} key='guest'>\r\n        {translation('roles.profile.guest.title')}\r\n      </Menu.Item >\r\n      <Menu.Item onClick={(e: any) => changeSelectedRole(e.key)} key='redactor'>\r\n        {translation('roles.profile.editor.title')}\r\n      </Menu.Item>\r\n      <Menu.Item onClick={(e: any) => changeSelectedRole(e.key)} key='administrator'>\r\n        {translation('roles.profile.administrator.title')}\r\n      </Menu.Item>\r\n      {(!shareProps.shareMultipleProfiles && !hasTrial && plan?.priceForMonth) ? <Menu.Item onClick={(e: any) => changeSelectedRole(e.key)} key='owner'>\r\n        <Tooltip title={translation('roles.profile.owner.help')}>\r\n          {translation('roles.profile.owner.title')}\r\n        </Tooltip>\r\n      </Menu.Item> : null}\r\n    </Menu>\r\n  );\r\n\r\n  const renderInviteText = () => {\r\n    if (selectedRole === 'guest') {\r\n      return translation('roles.profile.guest.title');\r\n    }\r\n\r\n    if (selectedRole === 'redactor') {\r\n      return translation('roles.profile.editor.title');\r\n    }\r\n\r\n    if (selectedRole === 'owner') {\r\n      return translation('roles.profile.owner.title');\r\n    }\r\n\r\n    return translation('roles.profile.administrator.title');\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      destroyOnClose={true}\r\n      visible={shareProps.visible}\r\n      onCancel={() => shareProps.onClose()}\r\n      afterClose={shareProps.afterClose}\r\n      title={translation('shareModal.title')}\r\n      footer={null}\r\n    >\r\n      <Col>\r\n        <RowSpaceBetween style={{ marginBottom: 16 }}>\r\n          <Input\r\n            style={{\r\n              height: 30,\r\n            }}\r\n            type='email'\r\n            placeholder={translation('shareModal.form.emailInput.placeholder')}\r\n            value={insertedEmail}\r\n            onChange={(e: any) => changeInsertedEmail(e.target.value)}\r\n          />\r\n          <Dropdown overlay={menu} trigger={['click']}>\r\n            <span style={{ cursor: 'pointer', display: 'flex' }}>\r\n              <TextSharing style={{ marginLeft: 15, marginTop: 2 }}>\r\n                {renderInviteText()}\r\n              </TextSharing>\r\n              <div style={{ marginTop: -3 }}>\r\n                <IconSharing type='down' />\r\n              </div>\r\n            </span>\r\n          </Dropdown>\r\n          <ButtonSharing style={{ marginLeft: 10 }} onClick={sendInvite}>\r\n            {translation('shareModal.form.submitBtnText')}\r\n          </ButtonSharing>\r\n        </RowSpaceBetween>\r\n        {loadingInvites ? <div style={{ width: '100%', fontSize: 24, textAlign: 'center' }}>\r\n          <Icon type='loading' />\r\n        </div> : null}\r\n        {invites.map(i => (\r\n          <>\r\n            <User\r\n              email={i.to.email}\r\n              role={i.role}\r\n              inviteId={i.id}\r\n              key={i.id}\r\n            />\r\n          </>\r\n        ))}\r\n      </Col>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShareModal;\r\n","import styled from '@emotion/styled';\r\nimport { Input, Radio } from 'antd';\r\n\r\nimport { ModernModal } from '../../../../ui/modern-modal';\r\nimport { ButtonProps } from 'antd/lib/button';\r\n\r\nexport const RadioGroup = styled(Radio.Group)`\r\n  width: 324px;\r\n  margin: 20px 0;\r\n  display: flex;\r\n`;\r\n\r\nexport const RadioButton = styled(Radio.Button)`\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  letter-spacing: 0.25px;\r\n  width: min-content;\r\n  flex: 1;\r\n  white-space: nowrap;\r\n  padding: 0 8px;\r\n`;\r\n\r\nexport const ErrorText = styled('span')`\r\n  color: var(--FF5F5F-modals-transfer-profile);\r\n  font: 400 10px/16px 'Roboto';\r\n`;\r\n\r\nexport const InputEmail = styled(Input)`\r\n  width: 324px;\r\n  margin-top: 4px;\r\n  padding-left: 7px;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const TransferModal = styled(ModernModal)`\r\n  .ant-modal-close{\r\n    top: 5px;\r\n    right: 12px;\r\n  }\r\n\r\n  .ant-modal-close-x{\r\n    font-size: 14px;\r\n  }\r\n\r\n  .ant-modal-title {\r\n    font: normal 20px 'Roboto';\r\n    line-height: 24px;\r\n    letter-spacing: 0.15px;\r\n    color: var(--222222-modals-transfer-profile);\r\n  }\r\n\r\n  .ant-modal-header {\r\n    padding: 20px 28px 0;\r\n\r\n    border-radius: 16px;\r\n    border: none;\r\n  }\r\n\r\n  .ant-modal-body {\r\n    padding: 0 28px 28px;\r\n  }\r\n\r\n  .ant-modal-content {\r\n    border-radius: 16px;\r\n  }\r\n`;\r\n\r\nexport const ConfirmTitleText = styled('p')`\r\n  font-family: 'Roboto';\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  margin-left: 1px;\r\n  margin-bottom: 0;\r\n\r\n  color: var(--222222-modals-transfer-profile);\r\n`;\r\n\r\nexport const ConfirmContentText = styled('p')`\r\n  font-family: 'Roboto';\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n\r\n  color: var(--767676-modals-transfer-profile);\r\n`;\r\n\r\nexport const ConfirmBlock = styled('div')`\r\n  line-height: 1.4;\r\n  margin-left: 4px;\r\n  margin-top: -4px;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nexport const transferOkButtonProps: ButtonProps = {\r\n  type: 'primary',\r\n  style: { padding: '0 13px', position: 'absolute', bottom: 23, right: 29 },\r\n};\r\n\r\nexport const transferCancelButtonProps: ButtonProps = {\r\n  type: 'default',\r\n  style: { padding: '0px 11px 0 14px', position: 'absolute', bottom: 23, right: 110 },\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ErrorText, InputEmail, RadioButton, RadioGroup, TransferModal } from './styles';\r\nimport { transferConfirm } from './transfer-confirm';\r\nimport { userContext, workspaceContext } from '../../../../state';\r\nimport LabeledElement from '../../../../ui/LabeledElement';\r\nimport { GreenSubmitButton } from '../../../../ui/modern-modal';\r\nimport { SelectWorkspace } from '../../../../ui/workspaceSelect';\r\nimport { isEmailValid } from '../../../../utils/email-validator';\r\nimport { sendActionAnalytics } from '../../../common/api';\r\nimport { ITransferParams } from '../../../quickProfiles/components/interfaces/transfer-params.interface';\r\n\r\ninterface ITransferProfileModal {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  onTransfer: (transferParams: Omit<ITransferParams, 'profilesIds'>) => void;\r\n  profilesIds: string[];\r\n}\r\n\r\nconst TransferProfileModal: React.FC<ITransferProfileModal> = (props) => {\r\n  const { visible, onClose, onTransfer, profilesIds } = props;\r\n\r\n  const workspaceCtx = useContext(workspaceContext);\r\n  const {\r\n    _id: userId,\r\n  } = useContext(userContext);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [targetEmail, setTargetEmail] = useState<string>('');\r\n  const [emailErrorText, setEmailErrorText] = useState<string>('');\r\n  const [transferType, setTransferType] = useState<'transfer' | 'transferToMyWorkspace'>('transfer');\r\n  const [selectedWorkspaceId, setSelectedWorkspaceId] = useState<string>(workspaceCtx.id);\r\n  const [selectedFolder, setSelectedFolder] = useState<string>('');\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    getFolders();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      sendActionAnalytics('visited transfer profile');\r\n    }\r\n  }, [visible]);\r\n\r\n  const getFolders = async (): Promise<void> => {\r\n    await workspaceCtx.updateAvailableWorkspacesFolders();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const sendTransfer = async (): Promise<void> => {\r\n    await onTransfer({\r\n      targetWorkspaceId: selectedWorkspaceId || '',\r\n      selectedFolder,\r\n      email: targetEmail,\r\n      transferType,\r\n      workspace: workspaceCtx,\r\n    });\r\n\r\n    setTargetEmail('');\r\n    setEmailErrorText('');\r\n    setTransferType('transfer');\r\n    setSelectedWorkspaceId('');\r\n    setSelectedFolder('');\r\n  };\r\n\r\n  const onClickTransfer = (): void => {\r\n    if (transferType !== 'transfer') {\r\n      sendTransfer();\r\n\r\n      return;\r\n    }\r\n\r\n    if (!isEmailValid(targetEmail)) {\r\n      setEmailErrorText(translation('errorMessages.enterValidEmail') || '');\r\n\r\n      return;\r\n    }\r\n\r\n    transferConfirm(profilesIds.length, sendTransfer, translation);\r\n  };\r\n\r\n  const renderForm = (): JSX.Element => {\r\n    if (transferType === 'transferToMyWorkspace') {\r\n      return (\r\n        <LabeledElement title={translation('transferModal.selectWorkspace')}>\r\n          <SelectWorkspace\r\n            userId={userId || ''}\r\n            selectedWorkspaceId={selectedWorkspaceId || workspaceCtx.id}\r\n            setSelectedWorkspaceId={setSelectedWorkspaceId}\r\n            selectedFolder={selectedFolder}\r\n            setSelectedFolder={setSelectedFolder}\r\n            isOwnerOnly={false}\r\n            placeholder={translation('transferModal.selectWorkspace')}\r\n            needFoldersList={true}\r\n            isLoading={isLoading}\r\n          />\r\n        </LabeledElement>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ErrorText>\r\n          {emailErrorText || (\r\n            <>\r\n              &nbsp;\r\n            </>\r\n          )}\r\n        </ErrorText>\r\n        <InputEmail\r\n          placeholder={translation('transferModal.emailInputPlaceholder') || ''}\r\n          value={targetEmail}\r\n          onChange={(event): void => setTargetEmail(event.target.value.trim())}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderModalTitle = (): string => {\r\n    const profilesCount = profilesIds.length;\r\n    if (profilesCount > 1) {\r\n      return translation('transferModals.titleFirstModal.text', { count: profilesCount });\r\n    }\r\n\r\n    return translation('transferModal.titleSingle');\r\n  };\r\n\r\n  return (\r\n    <TransferModal\r\n      visible={visible}\r\n      onCancel={onClose}\r\n      width={380}\r\n      title={renderModalTitle()}\r\n      footer={null}\r\n      bodyStyle={{ paddingBottom: 28 }}\r\n    >\r\n      <RadioGroup\r\n        value={transferType}\r\n        size='default'\r\n        defaultValue='transfer'\r\n        onChange={(event): void => setTransferType(event.target.value)}\r\n      >\r\n        <RadioButton value='transfer'>\r\n          {translation('transferModal.newOwner')}\r\n        </RadioButton>\r\n        <RadioButton value='transferToMyWorkspace'>\r\n          {translation('transferModal.myWorkspace')}\r\n        </RadioButton>\r\n      </RadioGroup>\r\n      {renderForm()}\r\n      <GreenSubmitButton\r\n        style={{ margin: '36px auto 0' }}\r\n        onClick={onClickTransfer}\r\n      >\r\n        {translation('transferModal.transferButton')}\r\n      </GreenSubmitButton>\r\n    </TransferModal>\r\n  );\r\n};\r\n\r\nexport default TransferProfileModal;\r\n","import { Icon, Modal } from 'antd';\r\nimport { TFunction } from 'i18next';\r\nimport React from 'react';\r\n\r\nimport {\r\n  ConfirmBlock,\r\n  ConfirmContentText,\r\n  ConfirmTitleText,\r\n  transferCancelButtonProps,\r\n  transferOkButtonProps,\r\n} from './styles';\r\n\r\nexport const transferConfirm = (\r\n  profilesCount: number,\r\n  sendTransfer: () => void,\r\n  translation: (key: string, options?: any) => TFunction<any>,\r\n): void => {\r\n  const content = (): JSX.Element => (\r\n    <ConfirmBlock>\r\n      <ConfirmContentText>\r\n        {translation('transferModal.suttitle.firstText', { count: profilesCount })}\r\n      </ConfirmContentText>\r\n      <ConfirmContentText style={{ marginTop: 16 }}>\r\n        {translation('transferModal.subtitle.secondText')}\r\n      </ConfirmContentText>\r\n    </ConfirmBlock>\r\n  );\r\n\r\n  const confirmText = translation('transferModal.title.text', { count: profilesCount });\r\n  const modal = Modal.confirm({\r\n    title: (\r\n      <ConfirmTitleText>\r\n        {confirmText}\r\n      </ConfirmTitleText>\r\n    ),\r\n    icon: <Icon type='question-circle' />,\r\n    content: content(),\r\n    okText: `${translation('modals.automationParameters.cancel')}`,\r\n    cancelText: `${translation('transferModal.button.transfer')}`,\r\n    okButtonProps: transferOkButtonProps,\r\n    cancelButtonProps: transferCancelButtonProps,\r\n    onCancel: () => {\r\n      modal.destroy();\r\n      sendTransfer();\r\n    },\r\n    keyboard: false,\r\n    maskClosable: false,\r\n    width: 416,\r\n  });\r\n};\r\n","let ipcRenderer: Electron.IpcRenderer;\r\nconst isElectron = !!window.require;\r\nif (isElectron) {\r\n  ipcRenderer = window.require('electron').ipcRenderer;\r\n}\r\n\r\nexport const stopProfileOrbita = (profileId: string): void => {\r\n  ipcRenderer && ipcRenderer.invoke('stop-profile', profileId);\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { API_BASE_URL } from '../../../common/constants/constants';\r\nimport { IProfile } from '../../interfaces';\r\nimport { http } from '../../services';\r\nimport { getWorkspaceIdFromStorage } from '../../utils/get-workspace-id-from-storage';\r\nimport { handleProxiesLimitError } from '../proxy/utils/handle-proxies-limit-error';\r\n\r\nexport const checkProxyRequest = async (options: any) => {\r\n  try {\r\n    const data = await http(`${API_BASE_URL}/browser/check_proxy`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(options)\r\n    });\r\n\r\n    return data.body;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const requestProfileInfo = async (profileId: string) => {\r\n  try {\r\n    const data = await http(`${API_BASE_URL}/browser/${profileId}`, {\r\n      method: 'GET'\r\n    });\r\n\r\n    return data.body;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\ninterface IUpdateProfileOptions {\r\n  profileId: string;\r\n  profileData: IProfile;\r\n  updateNoises?: boolean;\r\n}\r\n\r\nexport const updateProfile = async ({ profileId, profileData, updateNoises = false }: IUpdateProfileOptions): Promise<IProfile|null> => {\r\n  const workspaceId = getWorkspaceIdFromStorage();\r\n  const url = new URL(`${API_BASE_URL}/browser/${profileId}`);\r\n  url.searchParams.append('updateNoises', updateNoises ? 'true' : 'false');\r\n  if (workspaceId) {\r\n    url.searchParams.append('workspaceId', workspaceId);\r\n  }\r\n\r\n  return http(url.toString(), { method: 'PUT', body: JSON.stringify(profileData) })\r\n    .then(({ body }: { body: IProfile }) => body)\r\n    .catch((error: { body: { message: string; currentCount: number; maxCount: number } }) => handleProxiesLimitError(error));\r\n};\r\n\r\nexport const sendAnalytics = (profileId: string, updatedFields: any) => {\r\n  const body = Object.keys(updatedFields).map((key: string) => ({\r\n    field: key,\r\n    count: updatedFields['key'],\r\n    profile: profileId,\r\n    type: 'fingerprint-update',\r\n    status: 'success',\r\n    deduplicationKey: uuidv4(),\r\n  }));\r\n\r\n  return http(`${API_BASE_URL}/analytics/many`, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      analytics: body,\r\n    }),\r\n  }).catch(() => Promise.resolve());\r\n};\r\n\r\ninterface IUpdateFingerPrints {\r\n  resolution: string;\r\n  instanceIds: string[];\r\n  template: string | null;\r\n}\r\n\r\nexport const updateMultipleFingerprints = async (updateData: IUpdateFingerPrints): Promise<IProfile[]> => {\r\n  const data = await http(`${API_BASE_URL}/browser/fingerprint/multi`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(updateData),\r\n  });\r\n\r\n  return data.body;\r\n};\r\n","import { IProfile } from '../../../interfaces';\r\nimport { upsertProfileRunStatuses } from '../../../state/profile-run-statuses.atom';\r\nimport { sendUserEventToServer } from '../../../utils/send-analytics-to-server';\r\nimport { sendActionAnalytics, startContainer } from '../../common/api';\r\n\r\nconst isElectron = !!window.require;\r\n\r\ninterface ILaunchProfileWebProfile {\r\n  id: IProfile['id'];\r\n}\r\n\r\nexport const launchProfileWeb = async (rowInfo: ILaunchProfileWebProfile): Promise<void> => {\r\n  sendUserEventToServer('openedBrowser');\r\n  if (isElectron) {\r\n    sendActionAnalytics('launched profile in cloud from app');\r\n  }\r\n\r\n  const { id: profileId } = rowInfo;\r\n  upsertProfileRunStatuses([{ id: profileId, status: 'profileStatuses.downloadingProfile' }]);\r\n  const localWorkspace = localStorage.getItem('workspace');\r\n  let localWorkspaceId = '';\r\n  if (localWorkspace) {\r\n    try {\r\n      localWorkspaceId = JSON.parse(localWorkspace).id;\r\n    } catch (error) {\r\n      localWorkspaceId = '';\r\n    }\r\n  }\r\n\r\n  const { remoteOrbitaUrl, status, statusMessage = '' } = await startContainer(profileId, localWorkspaceId);\r\n  upsertProfileRunStatuses([{\r\n    id: profileId,\r\n    status,\r\n    statusMessage,\r\n    isWeb: true,\r\n    remoteOrbitaUrl,\r\n  }]);\r\n};\r\n","/* eslint-disable max-lines */\r\nimport css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport * as Sentry from '@sentry/react';\r\nimport { Button, Icon, message, Popconfirm, Tooltip } from 'antd';\r\nimport { useAtomValue } from 'jotai';\r\nimport moment from 'moment';\r\nimport React, { FC, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport EditTagsMenuBtn from './edit-tags-menu-btn';\r\nimport { ILaunchProfileOrbita } from './interfaces/launch-profile-orbita.interface';\r\nimport { ITransferParams } from './interfaces/transfer-params.interface';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { DEFAULT_MANY_PROFILE_NAME } from '../../../hooks';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { importFilesContext, templatesContext, userContext, workspaceContext } from '../../../state';\r\nimport { useEditModeProfileId } from '../../../state/edit-mode-profile-id.atom';\r\nimport { getProfileRunStatus, runningProfilesCountAtom } from '../../../state/profile-run-statuses.atom';\r\nimport {\r\n  filterProfilesByPermission, getProfilesList,\r\n} from '../../../state/profiles-list.atom';\r\nimport {\r\n  closeProfilesSettings,\r\n  getProfilesSettingsState,\r\n  openProfilesSettingsOfSelectedIds,\r\n  useIsProfilesSettingsOpen,\r\n} from '../../../state/profiles-settings-atom';\r\nimport { closeProfileTableModal, openProfileTableModal, SHARE_MODAL_NAME } from '../../../state/profiles-table-modal.atom';\r\nimport {\r\n  getProfilesTableSelectedIds,\r\n  getProfilesTableSelectedProfilesActions,\r\n  getSelectedProfilesByAction,\r\n  resetProfilesTableSelectedIds,\r\n  useProfilesTableSelectedIds,\r\n} from '../../../state/profiles-table-selected-ids.atom';\r\nimport { checkCompetitorsForMigration } from '../../../ui/Footer/utils';\r\nimport IconAddFolder from '../../../ui/icons/IconAddFolder';\r\nimport IconAddMembersGreen from '../../../ui/icons/IconAddMembersGreen';\r\nimport IconDeleteProfile from '../../../ui/icons/IconDeleteProfile';\r\nimport IconFinger from '../../../ui/icons/IconFinger';\r\nimport { openWebsitePricing } from '../../../utils/open-site';\r\nimport { generateBrowserIconsMassOpsPromise } from '../../browser-system-icons';\r\nimport { sendActionAnalytics } from '../../common/api';\r\nimport { getBrowserVersionCurrent } from '../../common/orbita-browser';\r\nimport { ExtensionsModal } from '../../modalsComponents/components/extensions-modal/extensions-modal';\r\nimport ImportDolphinProfilesModal from '../../modalsComponents/components/import-dolphin-profiles';\r\nimport MultipleProxyManager from '../../modalsComponents/components/multiple-proxy-manager';\r\nimport ProfileBookmarksModal from '../../modalsComponents/components/profile-bookmarks';\r\nimport { exportWorkspaceProfiles, profilesExport } from '../../modalsComponents/components/profiles-import-manager/api';\r\nimport ShareModal from '../../modalsComponents/components/share-modal';\r\nimport TransferProfileModal from '../../modalsComponents/components/transfer-profile';\r\nimport { IAddTag } from '../../tags/interfaces/tag.interface';\r\nimport { updateMultipleFingerprints } from '../../updateProfile/api';\r\nimport { stopProfileOrbita, stopProfileWeb } from '../actions';\r\nimport {\r\n  cloneProfileMulti,\r\n  cloneWorkspaceProfiles,\r\n  deleteProfiles,\r\n  deleteWorkspaceProfiles,\r\n  removeMultipleInvites,\r\n} from '../api';\r\n\r\nlet ipcRenderer: Electron.IpcRenderer;\r\nconst isElectron = !!window.require;\r\nif (isElectron) {\r\n  ({ ipcRenderer } = window.require('electron'));\r\n}\r\n\r\nconst ButtonLine = styled(Button)`\r\n  color: var(--359D73-profile-table-profiles-menu);\r\n  border-color: var(--359D73-profile-table-profiles-menu);\r\n  font-size: 12px;\r\n  margin-left: 12px;\r\n  border-radius: 2px;\r\n  height: 27px;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\n// @ts-ignore: https://github.com/ant-design/ant-design/issues/9581\r\nButtonLine.__ANT_BUTTON = true;\r\n\r\nconst BlockLine = styled('div')<{ isVisible?: boolean; isProxyManagerVisible?: boolean }>`\r\n  width: 100%;\r\n  background: var(--F6F7F9-profile-table-profiles-menu);\r\n  display: ${(props): string => props.isVisible ? 'flex' : 'none'};\r\n  flex-direction: row;\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    z-index: ${(props.isProxyManagerVisible) ? '140' : '151'}\r\n  `}\r\n`;\r\n\r\nconst ButtonLineRed= styled(Button)`\r\n  color: var(--A24747-profile-table-profiles-menu);\r\n  border-color: var(--A24747-profile-table-profiles-menu);\r\n  margin-left: 12px;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  border-radius: 2px;\r\n  height: 27px;\r\n  font-size: 12px;\r\n\r\n  :hover {\r\n    color: var(--A24747-profile-table-profiles-menu);\r\n    border-color: var(--A24747-profile-table-profiles-menu);\r\n    opacity: 0.7;\r\n  }\r\n  \r\n  :focus {\r\n    color: var(--A24747-profile-table-profiles-menu);\r\n    border-color: var(--A24747-profile-table-profiles-menu);\r\n  }\r\n`;\r\n\r\nconst MultipleOperationBtnText = styled('span')`\r\n  padding-left: 6px;\r\n`;\r\n\r\nconst MarginBlock = styled('div')<{ isOpenProfileSSettings: boolean }>`\r\n  margin: 13px 14px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    width: ${props.isOpenProfileSSettings ? 'calc(100% - 505px)' : '100%'};\r\n    min-width: ${props.isOpenProfileSSettings ? '650px' : 'auto'};\r\n  `}\r\n`;\r\n\r\nconst BlockEnd = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 1;\r\n  margin: 0 16px;\r\n`;\r\n\r\nconst Row = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst LoaderDiv = styled('div')`\r\n  display: inline-block;\r\n  margin-left: 10px;\r\n`;\r\n\r\ndeclare interface IProfilesMenu {\r\n  openFoldersModal: (profileIds: string[]) => void;\r\n  launchProfileOrbita: (opts: ILaunchProfileOrbita) => Promise<any>;\r\n  updateProfilesList: () => void;\r\n  refreshPageByTimeout: (time: number, cb: () => void) => void;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  addTag: (params: IAddTag) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n  onTransfer: (transferParams: ITransferParams) => void;\r\n  changeProfilesData: (profileIds: string[], newData: Partial<IProfile>) => void;\r\n  updateProfileFingerprints: (profilesData: IProfile[]) => void;\r\n  isBrowserUpdating: boolean;\r\n  versionLoadingNow: string | undefined;\r\n  isNewShareProfileModal: boolean;\r\n}\r\n\r\nconst ProfilesMenu: FC<IProfilesMenu> = (props) => {\r\n  const isProfilesSettingsOpen = useIsProfilesSettingsOpen();\r\n  const selectedProfilesIds = useProfilesTableSelectedIds();\r\n  const selectedProfilesActions = getProfilesTableSelectedProfilesActions();\r\n  const runningProfilesCount = useAtomValue(runningProfilesCountAtom);\r\n\r\n  const [showSharingModal, changeShowSharingModal] = useState<boolean>(false);\r\n  const [showTransferModal, changeShowTransferModal] = useState<boolean>(false);\r\n  const [isProcessing, changeProcessing] = useState<boolean>(false);\r\n  const [showExportPayPopUp, setShowExportPayPopUp] = useState<boolean>(false);\r\n  const [isShowProxyManager, setIsShowProxyManager] = useState<boolean>(false);\r\n  const [disableSharing, changeDisableSharing] = useState<boolean>(false);\r\n  const [extensionsModalVisible, setExtensionsModalVisible] = useState<boolean>(false);\r\n  const [isShowBookmarksManager, setIsShowBookmarksManager] = useState<boolean>(false);\r\n  const [isShowImportDolphinModal, setIsShowImportDolphinModal] = useState<boolean>(false);\r\n  const [multipleLaunched, setMultipleLaunched] = useState<boolean>(false);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const {\r\n    launchProfileOrbita,\r\n    updateTag,\r\n    addTag,\r\n    removeProfileTag,\r\n    removeTag,\r\n    refreshPageByTimeout,\r\n    isNewShareProfileModal,\r\n  } = props;\r\n\r\n  const {\r\n    migrationData = {},\r\n    hasTrial,\r\n    hasSuccessPayment,\r\n    isQuickSettingsEnabled,\r\n  } = useContext(userContext);\r\n\r\n  const editModeProfileId = useEditModeProfileId();\r\n\r\n  const { selectedTemplate } = useContext(templatesContext);\r\n  const {\r\n    id: workspaceId,\r\n    isUnpaid: workspaceIsUnpaid,\r\n    paymentIsTrial: workspaceIsTrial,\r\n  } = useContext(workspaceContext);\r\n\r\n  const { setManyProfilesName, setNeedOpenSpintaxPopup } = useContext(importFilesContext);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', EscapePressListener);\r\n  }, []);\r\n\r\n  useEffect(() => () => window.removeEventListener('keydown', EscapePressListener), []);\r\n\r\n  useEffect((): (() => void) | void => {\r\n    if (!isElectron) {\r\n      return;\r\n    }\r\n\r\n    checkCompetitorsForMigration(migrationData, ipcRenderer).catch(() => void 0);\r\n    ipcRenderer.on('dolphin-anty-detected', () => {\r\n      setIsShowImportDolphinModal(true);\r\n    });\r\n\r\n    return () => ipcRenderer.removeAllListeners('dolphin-anty-detected');\r\n  }, []);\r\n\r\n  const EscapePressListener = (event: KeyboardEvent): void => {\r\n    if (event.key !== 'Escape') {\r\n      return;\r\n    }\r\n\r\n    setShowExportPayPopUp(prev => {\r\n      if (!prev) {\r\n        resetProfilesTableSelectedIds();\r\n        closeProfilesSettings();\r\n      }\r\n\r\n      return false;\r\n    });\r\n  };\r\n\r\n  const deleteOrLeaveMultipleProfiles = async () => {\r\n    changeProcessing(true);\r\n    const promises = [];\r\n    const profilesForDelete = getSelectedProfilesByAction('delete');\r\n    const profileIdsToDelete = profilesForDelete.map((profile) => profile.id);\r\n    if (profileIdsToDelete.length) {\r\n      if (NEW_FEATURES.workspaces) {\r\n        promises.push(deleteWorkspaceProfiles(workspaceId, profileIdsToDelete));\r\n      } else {\r\n        promises.push(deleteProfiles(profileIdsToDelete));\r\n      }\r\n\r\n      if (ipcRenderer) {\r\n        ipcRenderer.invoke('stop-multiple-profiles', profileIdsToDelete);\r\n        ipcRenderer.invoke('del-profiles-ext-folder', profileIdsToDelete);\r\n      }\r\n    }\r\n\r\n    const profilesForLeave = getSelectedProfilesByAction('leave');\r\n    if (profilesForLeave.length) {\r\n      promises.push(await removeMultipleInvites(profilesForLeave.map((profile: any) => profile.shareId)));\r\n    }\r\n\r\n    const removedProfileIds = [...profileIdsToDelete, ...profilesForLeave.map(profile => profile.id)];\r\n    const profileSettingsState = getProfilesSettingsState();\r\n    if (removedProfileIds.find(removedProfileId => profileSettingsState.profileIds.includes(removedProfileId))) {\r\n      closeProfilesSettings();\r\n    }\r\n\r\n    await Promise.all(promises).finally(() => changeProcessing(false));\r\n    if (profileIdsToDelete.length) {\r\n      message.success(translation('tableProfiles.notification.profilesDeleted', { count: profileIdsToDelete.length }));\r\n    }\r\n\r\n    resetProfilesTableSelectedIds();\r\n    await props.updateProfilesList();\r\n  };\r\n\r\n  const cloneProfile = async () => {\r\n    sendActionAnalytics('clicked clone profile via mass operations');\r\n\r\n    let second = 2000;\r\n    const profile = selectedProfilesIds.length;\r\n    const selectedFolder = (!NEW_FEATURES.header && props.selectedFolder === 'all') ? '' : props.selectedFolder;\r\n    if (NEW_FEATURES.workspaces) {\r\n      await cloneWorkspaceProfiles(workspaceId, selectedProfilesIds);\r\n    } else {\r\n      await cloneProfileMulti(selectedProfilesIds, selectedFolder);\r\n    }\r\n\r\n    switch (true) {\r\n      case (profile > 4 && profile < 11):\r\n        second = 4000;\r\n        break;\r\n      case (profile > 11):\r\n        second = 5000;\r\n        break;\r\n      default:\r\n    }\r\n\r\n    message.success(translation('notifications.success.profileCloned'));\r\n  };\r\n\r\n  const getLoader = () => {\r\n    if (!isProcessing) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <LoaderDiv>\r\n        <Icon type='loading' />\r\n      </LoaderDiv>\r\n    );\r\n  };\r\n\r\n  const exportProfile = async () => {\r\n    if (NEW_FEATURES.workspaces) {\r\n      const selectedProfileIds = getProfilesTableSelectedIds();\r\n      const canExportProfiles = filterProfilesByPermission(selectedProfileIds, 'exportProfile');\r\n      if (!canExportProfiles && (workspaceIsUnpaid || workspaceIsTrial)) {\r\n        setShowExportPayPopUp(true);\r\n\r\n        return;\r\n      } else if (!canExportProfiles) {\r\n        message.error(translation('notifications.error.permissionWorkspace'));\r\n\r\n        return;\r\n      }\r\n    } else if (!hasSuccessPayment || hasTrial) {\r\n      setShowExportPayPopUp(true);\r\n\r\n      return;\r\n    }\r\n\r\n    changeProcessing(true);\r\n\r\n    let response;\r\n    if (NEW_FEATURES.workspaces) {\r\n      response = await exportWorkspaceProfiles(workspaceId, selectedProfilesIds).catch(() => null);\r\n    } else {\r\n      response = await profilesExport(selectedProfilesIds).catch(() => null);\r\n    }\r\n\r\n    if (!response) {\r\n      changeProcessing(false);\r\n\r\n      return;\r\n    }\r\n\r\n    const saveFileElement = document.createElement('a');\r\n    const outputFile = new Blob(['\\ufeff', response], { type: 'text/plain' });\r\n    const date = moment().utc().format('YYYYMMDD');\r\n\r\n    saveFileElement.href = URL.createObjectURL(outputFile);\r\n    saveFileElement.download = `gologin_profiles_export_${date}.csv`;\r\n\r\n    saveFileElement.click();\r\n\r\n    changeProcessing(false);\r\n  };\r\n\r\n  const redirectToSite = async (): Promise<void> => {\r\n    setShowExportPayPopUp(false);\r\n    openWebsitePricing({\r\n      workspaceId,\r\n      isQuickSettingsEnabled,\r\n      isShowPaymentMethods: true,\r\n    });\r\n  };\r\n\r\n  const updateFingerprints = async () => {\r\n    changeProcessing(true);\r\n    const resolution = `${screen.width}x${screen.height}`;\r\n\r\n    const newProfilesData = await updateMultipleFingerprints({\r\n      resolution,\r\n      instanceIds: selectedProfilesIds,\r\n      template: selectedTemplate.id,\r\n    }).finally(() => changeProcessing(false));\r\n\r\n    props.updateProfileFingerprints(newProfilesData);\r\n    message.success(translation('notifications.success.fingerprintsUpdated'));\r\n  };\r\n\r\n  const toggleModalTransfer = (state: boolean) => {\r\n    const selectedProfileIds = getProfilesTableSelectedIds();\r\n    const canTransferProfiles = filterProfilesByPermission(selectedProfileIds, 'transferProfile');\r\n\r\n    if (!canTransferProfiles) {\r\n      message.error(translation('notifications.error.permissionWorkspace'));\r\n\r\n      return;\r\n    }\r\n\r\n    changeShowTransferModal(!!state);\r\n  };\r\n\r\n  const doTransferProfiles = async (transferParams: Omit<ITransferParams, 'profilesIds'>): Promise<void> => {\r\n    await props.onTransfer({\r\n      ...transferParams,\r\n      profilesIds: selectedProfilesIds,\r\n    });\r\n\r\n    changeShowTransferModal(false);\r\n  };\r\n\r\n  const onRenameProfiles = (): void => {\r\n    openProfilesSettingsOfSelectedIds();\r\n    setManyProfilesName(selectedTemplate.profileName.rename || DEFAULT_MANY_PROFILE_NAME);\r\n    if (isProfilesSettingsOpen) {\r\n      setNeedOpenSpintaxPopup(true);\r\n\r\n      return;\r\n    }\r\n\r\n    document.getElementById('pinned-name-param-profile-name')?.click();\r\n  };\r\n\r\n  const toggleModalSharing = (state: boolean|undefined = false): void => {\r\n    if (NEW_FEATURES.workspaces) {\r\n      const selectedProfileIds = getProfilesTableSelectedIds();\r\n      const canShareProfiles = !filterProfilesByPermission(selectedProfileIds, 'shareProfile');\r\n\r\n      changeDisableSharing(canShareProfiles);\r\n    }\r\n\r\n    if (!isNewShareProfileModal) {\r\n      return changeShowSharingModal(!!state);\r\n    }\r\n\r\n    if (state) {\r\n      openProfileTableModal(SHARE_MODAL_NAME, selectedProfilesIds);\r\n\r\n      return;\r\n    }\r\n\r\n    closeProfileTableModal();\r\n  };\r\n\r\n  const limitForLaunch = (multipleLaunched || runningProfilesCount >= 5) ? 5 : 10;\r\n  const isStartDisabled = selectedProfilesIds.length > limitForLaunch;\r\n\r\n  const getBrowserMajorVersionCurrent = (userAgent = ''): string => {\r\n    const version = getBrowserVersionCurrent(userAgent);\r\n    const [majorVersion] = version.split('.');\r\n\r\n    return majorVersion;\r\n  };\r\n\r\n  const filterOrbitasVersionsAvailable = async (majorVersions: number[]): Promise<number[]> =>\r\n    ipcRenderer.invoke('check-orbitas-available', majorVersions);\r\n\r\n  const isProfileVersionLoading = (profile: IProfile): boolean => {\r\n    const chromeVersionMatch = profile.navigator.userAgent.match(/[\\s\\S\\w]+Chrome\\/(\\d+)/) || [];\r\n    if (!chromeVersionMatch) {\r\n      return true;\r\n    }\r\n\r\n    const [_, version = ''] = chromeVersionMatch;\r\n\r\n    return Number(props.versionLoadingNow) === Number(version);\r\n  };\r\n\r\n  const isProfileAvailableToRun = (profile: IProfile): boolean => {\r\n    if (!selectedProfilesIds.includes(profile.id)) {\r\n      return false;\r\n    }\r\n\r\n    const profileRunStatus = getProfileRunStatus(profile.id);\r\n\r\n    return profile.canBeRunning &&\r\n      !(profileRunStatus.isWeb || profileRunStatus.status === 'profileStatuses.running' || isProfileVersionLoading(profile));\r\n  };\r\n\r\n  const getAvailableToRunProfiles = async (profiles: IProfile[], transaction?: Sentry.Transaction): Promise<IProfile[]> => {\r\n    const span = transaction?.startChild({ op: 'check-browser-version-before-launch-mass-run' });\r\n    let availableToRunProfiles = profiles.filter(isProfileAvailableToRun);\r\n    if (isElectron) {\r\n      const profilesMajorVersions = availableToRunProfiles.map((profile) => +getBrowserMajorVersionCurrent(profile.navigator.userAgent));\r\n      const profilesMajorVersionsUnique = [...new Set(profilesMajorVersions)];\r\n      const orbitasVersionsAvailable = await filterOrbitasVersionsAvailable(profilesMajorVersionsUnique);\r\n\r\n      availableToRunProfiles = availableToRunProfiles.filter((profile) => {\r\n        const majorVersion = +getBrowserMajorVersionCurrent(profile.navigator.userAgent);\r\n\r\n        return orbitasVersionsAvailable.includes(majorVersion);\r\n      });\r\n    }\r\n\r\n    span?.finish();\r\n\r\n    return availableToRunProfiles;\r\n  };\r\n\r\n  const startProfiles = async (): Promise<void> => {\r\n    const transaction = Sentry.startTransaction({ name: 'prepare-mass-run' });\r\n\r\n    const spanUpdateState = transaction.startChild({ op: 'update-state' });\r\n    setMultipleLaunched(true);\r\n    spanUpdateState.finish();\r\n    sendActionAnalytics('launched profile via mass operations');\r\n    const profilesList = getProfilesList();\r\n    const profilesSelected = profilesList.filter(({ id }) => selectedProfilesIds.includes(id));\r\n    const [availableToRunProfiles, iconsStartDataMassOps] = await Promise.all([\r\n      getAvailableToRunProfiles(profilesList, transaction),\r\n      generateBrowserIconsMassOpsPromise(profilesSelected, transaction),\r\n    ]);\r\n\r\n    transaction.finish();\r\n\r\n    availableToRunProfiles.forEach((profile) => launchProfileOrbita({\r\n      profile,\r\n      multipleLaunch: true,\r\n      updateStatusToSync: false,\r\n      skipOrbitaVersionCheck: true,\r\n      iconsStartData: iconsStartDataMassOps[profile.id],\r\n    }).catch(() => null));\r\n  };\r\n\r\n  const stopProfiles = () => {\r\n    getProfilesList().forEach((profile) => {\r\n      if (!selectedProfilesIds.includes(profile.id)) {\r\n        return;\r\n      }\r\n\r\n      const profileRunStatus = getProfileRunStatus(profile.id);\r\n      if (profileRunStatus.isWeb && profileRunStatus.status === 'profileStatuses.running') {\r\n        stopProfileWeb(profile.id, true);\r\n\r\n        return;\r\n      }\r\n\r\n      stopProfileOrbita(profile.id);\r\n    });\r\n  };\r\n\r\n  const getExtensionsModal = () => (\r\n    <ExtensionsModal\r\n      extensionsModalVisible={extensionsModalVisible}\r\n      setExtensionsModalVisible={setExtensionsModalVisible}\r\n      profileIds={selectedProfilesIds}\r\n      updateProfileInfo={(newProfilesData: Partial<IProfile>): void => props.changeProfilesData(selectedProfilesIds, newProfilesData)}\r\n    />\r\n  );\r\n\r\n  const openExtensionsModal = () => {\r\n    setExtensionsModalVisible(true);\r\n  };\r\n\r\n  const openBookmarksManager = (): void => {\r\n    setIsShowBookmarksManager(true);\r\n  };\r\n\r\n  const buttonMassRun = (disabled: boolean, onClickAction?: () => void): JSX.Element => (\r\n    <ButtonLine\r\n      onClick={onClickAction}\r\n      disabled={disabled}\r\n    >\r\n      <Row>\r\n        <MultipleOperationBtnText>\r\n          {translation('profiles.multipleOperations.run')}\r\n        </MultipleOperationBtnText>\r\n      </Row>\r\n    </ButtonLine>\r\n  );\r\n\r\n  const renderButtonMassRun = (disabled: boolean, onClickAction?: () => void): JSX.Element => {\r\n    if (disabled) {\r\n      return (\r\n        <Tooltip\r\n          title={translation('notifications.error.orbitaIsDownloading')}\r\n          placement='topLeft'\r\n        >\r\n          {buttonMassRun(disabled, onClickAction)}\r\n        </Tooltip>\r\n      );\r\n    }\r\n\r\n    return buttonMassRun(disabled, onClickAction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BlockLine\r\n        isVisible={!!selectedProfilesIds?.length}\r\n        isProxyManagerVisible={!!editModeProfileId}\r\n      >\r\n        <MarginBlock isOpenProfileSSettings={isProfilesSettingsOpen}>\r\n          <ButtonLine\r\n            disabled={isProcessing}\r\n            onClick={() => toggleModalSharing(true)}\r\n          >\r\n            <Row>\r\n              <IconAddMembersGreen />\r\n              <MultipleOperationBtnText>\r\n                {translation('profiles.multipleOperations.share')}\r\n              </MultipleOperationBtnText>\r\n            </Row>\r\n          </ButtonLine>\r\n          <ButtonLine\r\n            disabled={isProcessing}\r\n            onClick={(): void => props.openFoldersModal(selectedProfilesIds)}\r\n          >\r\n            <Row>\r\n              <IconAddFolder />\r\n              <MultipleOperationBtnText>\r\n                {translation('profiles.multipleOperations.addToFolder')}\r\n              </MultipleOperationBtnText>\r\n            </Row>\r\n          </ButtonLine>\r\n          <ButtonLine\r\n            disabled={isProcessing}\r\n            onClick={openBookmarksManager}\r\n          >\r\n            <Row>\r\n              <span>\r\n                {translation('profilesTable.multipleOperations.bookmarks')}\r\n              </span>\r\n            </Row>\r\n          </ButtonLine>\r\n          {NEW_FEATURES.workspaces ? (\r\n            <ButtonLine\r\n              disabled={isProcessing}\r\n              onClick={(): void => toggleModalTransfer(true)}\r\n            >\r\n              <Row>\r\n                <MultipleOperationBtnText>\r\n                  {translation('profiles.multipleOperations.transfer')}\r\n                </MultipleOperationBtnText>\r\n              </Row>\r\n            </ButtonLine>\r\n          ) : null}\r\n          <ButtonLine\r\n            disabled={isProcessing}\r\n            onClick={openExtensionsModal}\r\n          >\r\n            <Row>\r\n              <span>\r\n                {translation('profiles.multipleOperations.extensions')}\r\n              </span>\r\n            </Row>\r\n          </ButtonLine>\r\n          <ButtonLine\r\n            onClick={cloneProfile}\r\n            disabled={isProcessing}\r\n          >\r\n            <Row>\r\n              <Icon type='copy' style={{ fontSize: 18 }} />\r\n              <MultipleOperationBtnText>\r\n                {translation('profiles.menu.clone')}\r\n              </MultipleOperationBtnText>\r\n            </Row>\r\n          </ButtonLine>\r\n          <EditTagsMenuBtn\r\n            selectedRows={selectedProfilesIds}\r\n            updateTag={updateTag}\r\n            addTag={addTag}\r\n            removeProfileTag={removeProfileTag}\r\n            removeTag={removeTag}\r\n            isProcessing={isProcessing}\r\n            ButtonLine={ButtonLine}\r\n            Row={Row}\r\n            MultipleOperationBtnText={MultipleOperationBtnText}\r\n          />\r\n          <Popconfirm\r\n            placement='bottom'\r\n            title={translation('profiles.multipleOperations.confirms.newFingerprints')}\r\n            onConfirm={updateFingerprints}\r\n            okText={translation('base.yes')}\r\n            cancelText={translation('base.no')}\r\n            disabled={isProcessing}\r\n          >\r\n            <ButtonLine\r\n              disabled={isProcessing}\r\n            >\r\n              <Row>\r\n                <IconFinger />\r\n                <MultipleOperationBtnText>\r\n                  {translation('profiles.multipleOperations.updateFingerprint')}\r\n                </MultipleOperationBtnText>\r\n              </Row>\r\n            </ButtonLine>\r\n          </Popconfirm>\r\n          <Popconfirm\r\n            placement='bottom'\r\n            title={translation('profiles.multipleOperations.confirms.exportProfilesUpgradePlan')}\r\n            onConfirm={redirectToSite}\r\n            onCancel={(): void => setShowExportPayPopUp(false)}\r\n            cancelText={translation('base.cancel')}\r\n            okText={translation('personalArea.billing.changePlanSubmitBtnText')}\r\n            visible={showExportPayPopUp}\r\n          >\r\n            <ButtonLine\r\n              onClick={exportProfile}\r\n              disabled={isProcessing}\r\n            >\r\n              <Row>\r\n                <Icon type='export' style={{ fontSize: 18 }} />\r\n                <MultipleOperationBtnText>\r\n                  {translation('base.export')}\r\n                </MultipleOperationBtnText>\r\n                {getLoader()}\r\n              </Row>\r\n            </ButtonLine>\r\n          </Popconfirm>\r\n\r\n          <ButtonLine\r\n            onClick={() => setIsShowProxyManager(true)}\r\n            disabled={isProcessing}\r\n          >\r\n            <Row>\r\n              <span>\r\n                {translation('proxy.title')}\r\n              </span>\r\n            </Row>\r\n          </ButtonLine>\r\n\r\n          <Popconfirm\r\n            placement='bottom'\r\n            title={translation('profiles.multipleOperations.confirms.deleteProfiles')}\r\n            onConfirm={deleteOrLeaveMultipleProfiles}\r\n            okText={translation('base.yes')}\r\n            cancelText={translation('base.no')}\r\n            disabled={isProcessing}\r\n          >\r\n            <ButtonLineRed\r\n              disabled={isProcessing}\r\n            >\r\n              <Row>\r\n                <IconDeleteProfile />\r\n                <MultipleOperationBtnText>\r\n                  {selectedProfilesActions.length === 2 &&\r\n                  <>\r\n                    {`${translation('base.delete')} / ${translation('base.leave')}`}\r\n                  </>}\r\n                  {selectedProfilesActions.length === 1 &&\r\n                    <>\r\n                      {translation(`base.${selectedProfilesActions[0].toLowerCase()}`)}\r\n                    </>}\r\n                  {selectedProfilesActions.length === 0 &&\r\n                  <>\r\n                    {translation('base.delete')}\r\n                  </>}\r\n                </MultipleOperationBtnText>\r\n              </Row>\r\n            </ButtonLineRed>\r\n          </Popconfirm>\r\n\r\n          {isElectron ? (\r\n            <>\r\n              {!props.isBrowserUpdating && isStartDisabled\r\n                ? (\r\n                  <Popconfirm\r\n                    title={translation('profiles.multipleOperations.confirms.startProfilesFirstPart') + limitForLaunch + translation('profiles.multipleOperations.confirms.startProfilesSecondPart')}\r\n                    placement='bottom'\r\n                    onConfirm={startProfiles}\r\n                    okText={translation('base.yes')}\r\n                    cancelText={translation('base.no')}\r\n                  >\r\n                    {renderButtonMassRun(props.isBrowserUpdating)}\r\n                  </Popconfirm>\r\n                )\r\n                : renderButtonMassRun(props.isBrowserUpdating, startProfiles)}\r\n            </>\r\n          ) : null}\r\n\r\n          <ButtonLineRed\r\n            disabled={isProcessing}\r\n            onClick={stopProfiles}\r\n          >\r\n            <Row>\r\n              <Icon type='poweroff' style={{ fontSize: 18 }} />\r\n              <MultipleOperationBtnText>\r\n                {translation('profiles.multipleOperations.stop')}\r\n              </MultipleOperationBtnText>\r\n            </Row>\r\n          </ButtonLineRed>\r\n          {NEW_FEATURES.header ? (\r\n            <ButtonLine disabled={isProcessing} onClick={onRenameProfiles}>\r\n              <Row>\r\n                <MultipleOperationBtnText>\r\n                  {translation('profiles.multipleOperations.renameProfiles', { count: selectedProfilesIds.length })}\r\n                </MultipleOperationBtnText>\r\n              </Row>\r\n            </ButtonLine>\r\n          ) : null}\r\n          <BlockEnd>\r\n            <Icon\r\n              type='close'\r\n              style={{ cursor: 'pointer', color: 'var(--00000073-antd)' }}\r\n              onClick={(): void => resetProfilesTableSelectedIds()}\r\n            />\r\n          </BlockEnd>\r\n        </MarginBlock>\r\n        {!isNewShareProfileModal ? (\r\n          <ShareModal\r\n            visible={showSharingModal}\r\n            onClose={toggleModalSharing}\r\n            profilesIds={selectedProfilesIds}\r\n            shareMultipleProfiles={true}\r\n          />\r\n        ) : null}\r\n        {showTransferModal ? (\r\n          <TransferProfileModal\r\n            onTransfer={doTransferProfiles}\r\n            visible={showTransferModal}\r\n            onClose={() => toggleModalTransfer(false)}\r\n            profilesIds={selectedProfilesIds}\r\n          />\r\n        ) : null}\r\n        <MultipleProxyManager\r\n          onClose={() => setIsShowProxyManager(false)}\r\n          visible={isShowProxyManager}\r\n        />\r\n      </BlockLine>\r\n      {getExtensionsModal()}\r\n      <ProfileBookmarksModal\r\n        visible={isShowBookmarksManager}\r\n        onClose={() => setIsShowBookmarksManager(false)}\r\n        profilesIds={selectedProfilesIds}\r\n      />\r\n      <ImportDolphinProfilesModal\r\n        visible={isShowImportDolphinModal}\r\n        onClose={() => setIsShowImportDolphinModal(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilesMenu;\r\n","interface ICloudBrowserWindowReference {\r\n  profileId: string;\r\n  reference: Window|null;\r\n}\r\n\r\nconst WINDOW_REFERENCES: ICloudBrowserWindowReference[] = [];\r\n\r\nconst getWindowReference = (profileIdToFind: string): Window|null => {\r\n  const referenceObject = WINDOW_REFERENCES.find(({ profileId, reference }) => profileId === profileIdToFind && !reference?.closed);\r\n\r\n  return referenceObject?.reference || null;\r\n};\r\n\r\nconst addWindowReference = (profileId: string, reference: Window|null): number => WINDOW_REFERENCES.push({ profileId, reference });\r\n\r\nexport const openCloudBrowserUrlInSingleTab = (url: string, profileId: string): Window|null => {\r\n  let windowReference = getWindowReference(profileId);\r\n  if (windowReference) {\r\n    windowReference.focus();\r\n\r\n    return windowReference;\r\n  }\r\n\r\n  windowReference = window.open(url);\r\n  if (windowReference) {\r\n    addWindowReference(profileId, windowReference);\r\n  }\r\n\r\n  return windowReference;\r\n};\r\n\r\nexport const closeCloudBrowserUrlInSingleTab = (profileId: string): void => {\r\n  const windowReference = getWindowReference(profileId);\r\n  windowReference && windowReference.close();\r\n};\r\n","import { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { upsertProfileRunStatuses } from '../../../state/profile-run-statuses.atom';\r\nimport { getProfilesTableSelectedIds } from '../../../state/profiles-table-selected-ids.atom';\r\nimport { closeCloudBrowserUrlInSingleTab } from '../../../utils/cloud-browser';\r\nimport { stopContainer } from '../../common/api';\r\n\r\nexport const stopProfileWeb = async (profileId: string, isMultiple?: boolean): Promise<void> => {\r\n  if (isMultiple) {\r\n    const selectedProfileIds = getProfilesTableSelectedIds();\r\n    upsertProfileRunStatuses(selectedProfileIds.map(selectedProfileId => ({\r\n      id: selectedProfileId,\r\n      status: 'profileStatuses.syncing',\r\n      isWeb: false,\r\n    })));\r\n  } else {\r\n    upsertProfileRunStatuses([{\r\n      id: profileId,\r\n      status: 'profileStatuses.syncing',\r\n      isWeb: false,\r\n    }]);\r\n  }\r\n\r\n  closeCloudBrowserUrlInSingleTab(profileId);\r\n  await stopContainer(profileId, NEW_FEATURES.cloudBrowser);\r\n\r\n  upsertProfileRunStatuses([{\r\n    id: profileId,\r\n    status: 'profileStatuses.ready',\r\n  }]);\r\n};\r\n","import React, { FC } from 'react';\r\nimport type { ResizeCallbackData } from 'react-resizable';\r\nimport { Resizable } from 'react-resizable';\r\n\r\nconst ResizableTitle = (\r\n  props: React.HTMLAttributes<any> & {\r\n    onResize: (e: React.SyntheticEvent<Element>, data: ResizeCallbackData) => void;\r\n    width: number;\r\n    minWidth: number;\r\n    resizeStart: () => void;\r\n    resizeEnd: () => void;\r\n  },\r\n): JSX.Element => {\r\n  const { onResize, width, resizeStart, minWidth, resizeEnd, ...restProps } = props;\r\n\r\n  if (!width) {\r\n    return <th {...restProps} />;\r\n  }\r\n\r\n  return (\r\n    <Resizable\r\n      width={width}\r\n      height={0}\r\n      minConstraints={[minWidth, 0]}\r\n      handle={\r\n        <span\r\n          className=\"react-resizable-handle\"\r\n          onClick={(e): void => {\r\n            e.stopPropagation();\r\n          }}\r\n        />\r\n      }\r\n      className=\"noselect\"\r\n      onResize={onResize}\r\n      onResizeStart={(): void => {\r\n        resizeStart();\r\n      }}\r\n      onResizeStop={(): void => {\r\n        resizeEnd();\r\n      }}\r\n      draggableOpts={{ enableUserSelectHack: false }}\r\n    >\r\n      <th {...restProps} />\r\n    </Resizable>\r\n  );\r\n};\r\n\r\nexport default ResizableTitle;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { ModernModal } from '../../../ui/modern-modal';\r\n\r\nexport const IconMeatballsContainer = styled.div<{ isInDrawer: boolean }>`\r\n  cursor: pointer;\r\n  visibility: ${(props): string => props.isInDrawer ? 'visible' : 'hidden'};\r\n`;\r\n\r\nexport const DrawerDotsButton = styled('button')`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  height: 25px;\r\n  min-width: 31px;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: transparent;\r\n  color: var(--828282);\r\n  margin-left: 9px;\r\n  transform: rotate(-90deg);\r\n  margin-bottom: 1px;\r\n`;\r\n\r\nexport const PricingModal = styled(ModernModal)`\r\n  width: 1330px !important;\r\n  top: 16px;\r\n\r\n  .ant-modal-close{\r\n    top: 32px;\r\n    right: 32px;\r\n    width: 25px;\r\n  }\r\n\r\n  .ant-modal-close-x {\r\n    width: auto;\r\n    height: auto;\r\n  }\r\n\r\n  .ant-modal-content {\r\n    background: var(--FFFFFF-new-pricing);\r\n  }\r\n\r\n  @media screen and (max-width: 1440px) {\r\n    width: 1009px !important;\r\n    height: 3350px;\r\n  }\r\n\r\n  @media screen and (max-width: 1060px) {\r\n    width: 980px !important;\r\n    height: 3350px;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nconst IconSharing = () => (\r\n    <svg width=\"15\" height=\"9\" viewBox=\"0 0 15 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g opacity=\"0.6\">\r\n<circle cx=\"4.6331\" cy=\"2.16215\" r=\"2.16215\" fill=\"black\"/>\r\n<circle cx=\"9.7664\" cy=\"2.16215\" r=\"2.16215\" fill=\"black\"/>\r\n<path d=\"M0 8.95683C0 6.73917 1.79777 4.94141 4.01543 4.94141H5.55983C7.77748 4.94141 9.57525 6.73917 9.57525 8.95683V8.95683H0V8.95683Z\" fill=\"black\"/>\r\n<path d=\"M8.25854 4.99902L10.5019 4.97837C12.7135 4.95801 14.5172 6.74518 14.5172 8.95683V8.95683H10.2585C10.2585 7.33331 9.25854 5.99902 8.25854 4.99902Z\" fill=\"black\"/>\r\n</g>\r\n</svg>\r\n\r\n\r\n\r\n);\r\n\r\nexport default IconSharing;","import styled from '@emotion/styled';\r\nimport { Tabs } from 'antd';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport IconSharing from '../../../ui/icons/IconSharing';\r\nimport { closeProfilesSettings } from '../../../state/profiles-settings-atom';\r\n\r\nconst TabsFolder = styled(Tabs)`\r\n  .ant-tabs {\r\n    &-nav {\r\n      display: flex;\r\n      padding-bottom: 5px;\r\n      .ant-tabs-tab {\r\n        padding: 15px 46px;\r\n        text-align: center;\r\n        color: var(--000000-profile-table-old-folders);\r\n        opacity: 0.6;\r\n        font-weight: 500;\r\n      }\r\n      .ant-tabs-tab-active {\r\n        color: var(--00B078-profile-table-old-folders);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ITabFolder {\r\n  id: string;\r\n  name: string;\r\n  shared?: boolean;\r\n}\r\n\r\ndeclare interface ITabProfiles {\r\n  foldersList: any[];\r\n  defaultActiveTabKey: string;\r\n  changeSelectedFolder: (selectedFolder: string) => Promise<any>;\r\n}\r\n\r\nconst TabProfiles: FC<ITabProfiles> = (props) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const changeTab = async (key: string) => {\r\n    await props.changeSelectedFolder(key);\r\n    closeProfilesSettings();\r\n  };\r\n\r\n  const returnContent = () => {\r\n    if (!(props.foldersList && props.foldersList.length)) {\r\n      return (\r\n        <div></div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <TabsFolder\r\n        activeKey={props.defaultActiveTabKey}\r\n        size='small'\r\n        onChange={changeTab}\r\n      >\r\n        <Tabs.TabPane\r\n          key='all'\r\n          tab={translation('profiles.tabs.allProfilesTab')}\r\n        />\r\n        {props.foldersList.map(folderElem => (\r\n          <Tabs.TabPane\r\n            key={folderElem.name}\r\n            tab={folderElem.shared ? (\r\n              <>\r\n                <span style={{ marginRight: '5px' }}>\r\n                  <IconSharing />\r\n                </span>\r\n                {folderElem.name}\r\n              </>\r\n            ) : (\r\n              <span>\r\n                {folderElem.name}\r\n              </span>\r\n            )}\r\n          />\r\n        ))}\r\n      </TabsFolder>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {returnContent()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TabProfiles;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\nimport { Icon } from 'antd';\r\n\r\nimport { theme } from '../proxy-helpers';\r\n\r\nexport const CheckProxyBtnContainerEl = styled('div')<{\r\n  btnVisible: boolean;\r\n  hideDot?: boolean;\r\n  newStyle: boolean;\r\n  tooltipVisible: boolean;\r\n}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 0;\r\n  margin-right: 9px;\r\n  width: 16px;\r\n  height: 16px;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.hideDot) ? `\r\n      opacity: 0;\r\n\r\n      tr.row-visible-dot & {\r\n        opacity: 1;\r\n      }\r\n\r\n      .area-active &,\r\n      tr:not(.row-active):hover & {\r\n        opacity: 1;\r\n      }\r\n\r\n      .ant-drawer-body &,\r\n      tr.row-active .allow-hover & {\r\n        opacity: 1;\r\n      }\r\n    ` : ''}\r\n  `}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    position: absolute;\r\n    margin-left: -24px;\r\n    padding-left: 0;\r\n    background-color: inherit;\r\n    display: ${props.tooltipVisible || !props.hideDot ? 'flex' : 'none'};\r\n  ` : null}\r\n`;\r\n\r\nexport const ProxyStatusDot = styled('div')<{ status?: string }>`\r\n  width: 16px;\r\n  height: 16px;\r\n\r\n  &:after {\r\n    content: '';\r\n    width: 8px;\r\n    height: 8px;\r\n    margin: 4px;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: var(--D9D9D9-proxy-manager-check-proxy-button);\r\n\r\n    ${(props): SerializedStyles => css`\r\n      ${(props.status === 'success') ? `background: ${theme.colors.primary};` : ''}\r\n      ${(props.status === 'fail') ? 'background: var(--F5222D-proxy-manager-check-proxy-button);' : ''}\r\n    `}\r\n  }\r\n`;\r\n\r\nexport const FormIcon = styled(Icon)`\r\n  color: var(--767676-proxy-manager-check-proxy-button);\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const TooltipEl = styled('div')<{ isDarkTheme: boolean }>`\r\n  min-height: 32px;\r\n  padding: 6px 8px;\r\n  color: var(--000000-proxy-manager-check-proxy-button);\r\n  text-align: left;\r\n  text-decoration: none;\r\n  word-wrap: break-word;\r\n  background-color: var(--FFFFFF-proxy-manager-check-proxy-button);\r\n  border-radius: 4px;\r\n\r\n  ${(props) => props.isDarkTheme ? css`\r\n    box-shadow: -2px 0 8px var(--00000026-antd);\r\n  ` : css`\r\n    box-shadow: 0px 1px 4px var(--00000003-proxy-manager-check-proxy-button), 0px 4px 8px var(--00000005-proxy-manager-check-proxy-button), 0px 1px 12px var(--0000001F-proxy-manager-check-proxy-button);\r\n  `}\r\n  \r\n`;\r\n\r\nexport const TooltipWrapperEl = styled('div')`\r\n  padding: 8px 0;\r\n  width: 318px;\r\n`;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { CheckProxyBtnContainerEl } from '../../styles/check-proxy-btn';\r\n\r\nexport const ProxyFormContainerEl = styled('div')<{ addMaxWidth: boolean; newStyle: boolean; isEditProxy: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${(props): any => css`\r\n    ${(props.addMaxWidth) ? '' : `\r\n      max-width: 100%;\r\n    `};\r\n  `}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    background-color: inherit;\r\n\r\n    ${CheckProxyBtnContainerEl} {\r\n      display: ${props.isEditProxy && 'flex'};\r\n    }\r\n  ` : null}\r\n`;\r\n\r\nexport const ProxyFormEl = styled('form')`\r\n  position: relative;\r\n  height: 16px;\r\n  display: block;\r\n`;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { theme } from '../../proxy-helpers';\r\n\r\nexport const ProxyButtonsContainerEl = styled('div')<{ isVisible?: boolean; editProxyMode: boolean; newStyle: boolean }>`\r\n  margin-top: 6px;\r\n  white-space: nowrap;\r\n  margin-left: ${theme.spacing(4)}px;\r\n  visibility: hidden;\r\n  ${(props): SerializedStyles|null => props.isVisible ? css`\r\n    visibility: visible;\r\n  ` : null}\r\n\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.editProxyMode) ? 'display: block;' : ''}\r\n  `}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css `\r\n    margin-top: 0;\r\n    display: flex;\r\n  ` : null}\r\n`;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nexport const ProxySearchInputEl = styled('input')<{\r\n  width?: number;\r\n  truncate: boolean;\r\n  isTransparent: boolean;\r\n  newStyle: boolean;\r\n  isInDrawer: boolean;\r\n  newDrawer: boolean;\r\n}>`\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  max-width: 100%;\r\n  padding: 0;\r\n  height: 16px;\r\n  font-size: 14px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  letter-spacing: 0.25px;\r\n  line-height: 1;\r\n  color: var(--000000-proxy-manager-search-input);\r\n\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.width) ? `\r\n      width: ${props.width}px;\r\n      margin-left: ${props.newStyle ? props.newDrawer && props.isInDrawer ? '8px' : '16px' : '23px'};\r\n      margin-right: ${props.newStyle ? '7px' : '0'};\r\n      display: ${props.newStyle ? 'flex' : 'block'};\r\n    ` : `\r\n      width: 100%;\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n    `}\r\n\r\n    ${(props.truncate) ? `\r\n      text-overflow: ellipsis;\r\n    ` : ''}\r\n\r\n    opacity: ${(props.isTransparent) ? '0.5' : '1'};\r\n\r\n    tr:hover, .gologin-table-row:hover & {\r\n      opacity: 1;\r\n    }\r\n  `}\r\n\r\n  &:focus {\r\n    outline: none !important;\r\n    box-shadow: none;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: var(--CDCDCD-proxy-manager-search-input);\r\n  }\r\n`;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { ProxyFormContainerEl } from './proxy-form/styles';\r\nimport { ProxyButtonsContainerEl } from './proxy-selector-buttons/styles';\r\nimport { flagIcons } from '../../../../flag-icons';\r\nimport { theme } from '../proxy-helpers';\r\nimport { CheckProxyBtnContainerEl } from '../styles/check-proxy-btn';\r\nimport { ProxySearchInputEl } from '../styles/proxy-search-input';\r\n\r\nexport const ProxyWidthLimitterEl = styled('div')<{ editProxyMode: boolean; takeAllWidth?: boolean }>`\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.editProxyMode) ? `\r\n      max-width: none;\r\n    ` : `\r\n      max-width: 100%;\r\n    `}\r\n  `}\r\n\r\n  ${(props): SerializedStyles|'' => props.takeAllWidth ? css`\r\n    width: 100%;\r\n  ` : ''}\r\n`;\r\n\r\nexport const ProxyWrapperSectionEl = styled('section')<{ editProxyMode: boolean; isInDrawer: boolean; newStyle: boolean; newDrawer: boolean }>`\r\n  display: flex;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${(props): string => props.isInDrawer && props.newDrawer ? '-20px' : '0'};\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  ${flagIcons}\r\n\r\n  ${(props): SerializedStyles => css`\r\n    z-index: ${(props.editProxyMode) ? '150' : '130'};\r\n  `}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    z-index: ${(props.editProxyMode) ? '103' : '100'};\r\n  ` : null}\r\n\r\n  &:hover {\r\n    overflow: visible;\r\n    z-index: ${(props): string => props.newStyle ? '104' : '150'};\r\n\r\n    .current-proxy-block {\r\n      .proxy-flag-block,\r\n      .flag-item,\r\n      .proxy-title {\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    ${ProxyWidthLimitterEl} {\r\n      max-width: none;\r\n    }\r\n\r\n    ${(props): SerializedStyles => css`\r\n      ${ProxyWrapperEl} {\r\n        ${(props.editProxyMode) ? css`\r\n          overflow: visible;\r\n\r\n          > .proxy-title {\r\n            max-width: 250px;\r\n          }\r\n        ` : ''}\r\n\r\n        ${(!props.editProxyMode) ? css`\r\n          cursor: pointer;\r\n          min-width: unset;\r\n        ` : ''}\r\n      }\r\n    `}\r\n\r\n    ${ProxyButtonsContainerEl} {\r\n      visibility: visible;\r\n      display: ${(props): string => props.newStyle ? 'flex' : 'block'};\r\n    }\r\n\r\n    ${ProxyFormContainerEl} {\r\n      max-width: 100%;\r\n    }\r\n\r\n    ${ProxySearchInputEl} {\r\n      text-overflow: initial\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProxyWrapperEl = styled('div')<{\r\n  editProxyMode: boolean;\r\n  isNoProxy: boolean;\r\n  newStyle: boolean;\r\n  isInDrawer: boolean;\r\n  newDrawer: boolean;\r\n}>`\r\n  font-family: 'Roboto';\r\n  font-weight: 400;\r\n  font-style: normal;\r\n  font-size: 14px;\r\n  margin-left: -7px;\r\n  min-height: 58px;\r\n  height: 100%;\r\n\r\n  background: var(--FFFFFF-proxy-manager-selector);\r\n\r\n  .ant-table-row-selected & {\r\n    background: var(--FAFAFA-proxy-manager-selector);\r\n  }\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    display: flex;\r\n    min-height: 52px;\r\n\r\n    .ant-table-row-selected & {\r\n      background: inherit;\r\n    }\r\n\r\n    margin-left: ${!props.isInDrawer ? '8px' : props.newDrawer && props.isNoProxy ? '0' : '16px'};\r\n\r\n    ${ProxyHeightLimitterEl} {\r\n      height: ${props.isInDrawer && '59px'};\r\n    }\r\n\r\n    ${CheckProxyBtnContainerEl} {\r\n      display: ${props.isInDrawer && 'flex'};;\r\n    }\r\n  ` : null}\r\n\r\n  tr:hover &,\r\n  .row-active & {\r\n    background: var(--F9F9F9-proxy-manager-selector);\r\n  }\r\n\r\n  .ant-drawer-body & {\r\n    background: none;\r\n  }\r\n\r\n  .proxy-title {\r\n    min-width: calc(100% - 48px);\r\n  }\r\n`;\r\n\r\nexport const ProxyHeightLimitterEl = styled('div')<{ isNoProxy: boolean; newStyle: boolean; takeAllWidth?: boolean }>`\r\n  position: relative;\r\n  height: ${(props): string => props.newStyle ? '52px' : '59px'};\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  max-width: 100%;\r\n  background-color: ${(props): string|null => props.newStyle ? 'inherit' : null};\r\n\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.isNoProxy) ? `\r\n      padding: 0;\r\n      padding-right: ${theme.spacing(4)}px;\r\n    ` : `\r\n      padding: ${theme.spacing(4)}px;\r\n      padding-left: ${props.newStyle ? '16px' : '0'};\r\n    `}\r\n  `}\r\n\r\n  ${(props): SerializedStyles|'' => props.takeAllWidth ? css`\r\n    padding-right: 0;\r\n    width: 100%;\r\n  ` : ''}\r\n`;\r\n\r\nexport const ProxyAreaEl = styled('div')<{ newStyle: boolean; takeAllWidth?: boolean }>`\r\n  align-items: center;\r\n  flex-direction: row;\r\n  max-width: 100%;\r\n  display: flex;\r\n\r\n  background-color: ${(props): string|null => props.newStyle ? 'inherit' : null};\r\n\r\n  ${(props): SerializedStyles|'' => props.takeAllWidth ? css`\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  ` : ''}\r\n`;\r\n\r\nexport const CurrentProxyWrapperEl = styled('div')`\r\n  display: flex;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const TooltipEl = styled('div')`\r\n  color: var(--222222-proxy-manager-selector);\r\n  font-size: 12px;\r\n  padding: 7px 8px 6px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.2px;\r\n`;\r\n","import { css } from '@emotion/core';\r\nimport styled from '@emotion/styled/macro';\r\nimport { Table } from 'antd';\r\n\r\nimport { IconMeatballsContainer } from './styles';\r\nimport { borderRadiusContainer, textFont } from '../../../ui/style-templates';\r\nimport { blackMain, greenMain, greyDark, greyHovered, greyLight } from '../../../ui/style-templates/colors';\r\nimport { CheckProxyBtnContainerEl } from '../../proxy/styles/check-proxy-btn';\r\nimport { ProxyWrapperEl } from '../../proxy/proxy-selector/styles';\r\nimport { ProfileSettingsBtnWrapper } from '../name-cell/profile-settings-btn/styles';\r\n\r\nexport const TableProfile = styled(Table)<{ isMinWidth: boolean; newStyle: boolean }>`\r\n  scrollbar-width: ${props => props.newStyle && 'none'}; // for mozilla firefox\r\n  ${props => props.newStyle && borderRadiusContainer()};\r\n\r\n  .ant-table-placeholder {\r\n    border-bottom: 0;\r\n    display: ${props => props.newStyle && 'none'};\r\n  }\r\n\r\n  .ant-table-empty .ant-table-body {\r\n    &::-webkit-scrollbar {\r\n      display: ${props => props.newStyle && 'none'};\r\n    }\r\n    scrollbar-width: ${props => props.newStyle && 'none'}; // for mozilla firefox\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    display: ${props => props.newStyle && 'none'};\r\n  }\r\n\r\n  .ant-table-thead > tr, .ant-table-tbody > tr {\r\n    background-color: var(--FFFFFF-profile-table);\r\n  }\r\n\r\n  .ant-table-thead > tr > th.ant-table-column-has-actions.ant-table-column-has-sorters:hover {\r\n    background-color: ${props => props.newStyle ? 'inherit' : 'var(--F9F9F9-profile-table)'};\r\n  }\r\n\r\n  .ant-table-tbody > tr:hover:not(.ant-table-expanded-row):not(.ant-table-row-selected) > td {\r\n    background-color: var(--F9F9F9-profile-table);\r\n  }\r\n\r\n  .ant-table-tbody > tr > td.ant-table-column-sort {\r\n    background-color: var(--FFFFFF-profile-table);\r\n  }\r\n\r\n  .ant-table-thead > tr > th.ant-table-column-sort {\r\n    background-color: var(--FFFFFF-profile-table);\r\n  }\r\n\r\n  .ant-table-thead > tr > th .ant-table-header-column .ant-table-column-sorters:hover::before {\r\n    background-color: var(--F9F9F9-profile-table);\r\n  }\r\n\r\n  .ant-table-thead > tr > th {\r\n    background: inherit;\r\n  }\r\n\r\n  .thead > tr > th {\r\n    background-color: var(--FFFFFF-profile-table);\r\n    padding: 16px;\r\n  }\r\n\r\n  .ant-table-thead > tr > th .ant-table-header-column .ant-table-column-sorters {\r\n    display: flex;\r\n  };\r\n\r\n  .ant-table-thead > tr > th .ant-table-header-column .ant-table-column-sorters > .ant-table-column-title {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .ant-table-thead > tr > th:nth-child(2) .ant-table-header-column .ant-table-column-sorters > .ant-table-column-title {\r\n    overflow: visible;\r\n  }\r\n\r\n  ${props => props.newStyle && css `\r\n    .ant-table-thead > tr > th .ant-table-header-column .ant-table-column-sorters {\r\n      :hover {\r\n        ::before {\r\n          background-color: inherit;\r\n        }\r\n      }\r\n    };\r\n\r\n    .ant-table-tbody {\r\n      tr {\r\n        :hover {\r\n          ${IconMeatballsContainer} {\r\n            visibility: visible;\r\n          }\r\n\r\n          ${CheckProxyBtnContainerEl} {\r\n            display: flex;\r\n          }\r\n\r\n          ${ProxyWrapperEl} {\r\n            z-index: 102;\r\n          }\r\n        }\r\n\r\n        td {\r\n          border-bottom: 0.5px solid var(--E5E5E6-profile-table);\r\n          align-items: center;\r\n          vertical-align: top;\r\n          background-color: inherit;\r\n          position: relative;\r\n          height: 100%;\r\n          padding: 16px 8px;\r\n\r\n          ${textFont()};\r\n          white-space: nowrap;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n\r\n          color: var(--2B2B31-profile-table);\r\n        }\r\n\r\n        td:first-child  {\r\n          padding: 16px 6px 15px 12px;\r\n        }\r\n\r\n        td:nth-child(2) {\r\n          padding: 0;\r\n        }\r\n\r\n        :hover {\r\n          .ant-checkbox {\r\n            opacity: 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .ant-table-thead {\r\n      tr:first-child {\r\n        th:first-child {\r\n          padding: 12px 6px 12px 12px;\r\n\r\n          :hover {\r\n            .ant-checkbox {\r\n              opacity: 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        th:nth-child(2) {\r\n          padding: 12px 8px 12px 6px;\r\n        }\r\n\r\n        padding: 16px 8px;\r\n      }\r\n    }\r\n\r\n    .ant-table-tbody > tr.ant-table-row-selected td {\r\n      background-color: var(--F9F9F9-profile-table);\r\n    }\r\n\r\n    .ant-table-tbody > tr.ant-table-row {\r\n      content-visibility: auto;\r\n    }\r\n\r\n    .ant-table-thead > tr > th {\r\n      padding: 12px 8px;\r\n      border-bottom: 0.5px solid var(--E5E5E6-profile-table);\r\n      color: var(--98989F-profile-table);\r\n\r\n      :hover {\r\n        color: var(--2B2B31-profile-table);\r\n      }\r\n\r\n      .ant-table-column-sorter {\r\n        display: none;\r\n      }\r\n\r\n      &:last-child {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    &.profiles-table .react-resizable-handle::after {\r\n      background-color: var(--EAEAEB-profile-table);\r\n    }\r\n\r\n    &.profiles-table .react-resizable-handle:hover::after {\r\n      background-color: var(--767676-profile-table);\r\n    }\r\n  `}\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Icon } from 'antd';\r\n\r\nexport const Row = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 12px;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ProxyIcon = styled<{ disabled?: boolean }>(Icon)`\r\n  font-size: 14px;\r\n  color: var(--929292-profile-table-proxy);\r\n  transition: color 0.3s linear;\r\n  padding: 2px;\r\n  \r\n  opacity: ${props => props.disabled ? 0.5 : 'none'};\r\n\r\n  :hover {\r\n    color: ${props => props.disabled ? 'var(--929292-profile-table-proxy)' : 'var(--01A987-profile-table-proxy)'};\r\n  }\r\n`;\r\n\r\ninterface IProxyTxtSpan {\r\n  isError?: boolean;\r\n}\r\nexport const ProxyTxtSpan = styled<IProxyTxtSpan>('span')`\r\n  font-size: 14px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  margin-right: 8px;\r\n  color: ${props => props.isError ? 'var(--F5222D-profile-table-proxy)' : 'var(--000000-profile-table-proxy)'};\r\n`;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nexport const GologinTableContainer = styled('div')`\r\n  scrollbar-width: none;\r\n  overflow-x: auto;\r\n\r\n  font-family: Roboto;\r\n`;\r\n\r\nexport const GologinTableItemList = styled('div')`\r\n  padding-bottom: 65px;\r\n\r\n  // for some reason without it, z-index of tags manager is broken :(\r\n  .ReactVirtualized__Grid {\r\n    will-change: initial !important;\r\n  }\r\n\r\n  .ReactVirtualized__Grid,\r\n  .ReactVirtualized__Grid__innerScrollContainer {\r\n    overflow: visible !important;\r\n  }\r\n`;\r\n\r\nexport const GologinTableItemRow = styled('div')`\r\n`;\r\n\r\nexport const GologinTableItemCell = styled('div')`\r\n  position: relative;\r\n  align-items: center;\r\n  vertical-align: top;\r\n  background-color: inherit;\r\n  position: relative;\r\n  height: 100%;\r\n  padding: 16px 8px;\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: var(--2B2B31-profile-table);\r\n\r\n  vertical-align: top;\r\n  transition: none;\r\n  min-height: 52px;\r\n\r\n  &.notes-cell {\r\n    padding: 10px 8px;\r\n  }\r\n  &.new-notes-cell {\r\n    padding: 0;\r\n    overflow: visible;\r\n    white-space: normal;\r\n  }\r\n  &.new-status-cell {\r\n    overflow: visible;\r\n    padding-left: 12px;\r\n\r\n    :hover {\r\n      z-index: 104;\r\n    }\r\n  }\r\n  &.tags-cell {\r\n    padding: 0;\r\n    position: relative;\r\n  }\r\n  &.new-tags-cell {\r\n    padding: 0;\r\n    position: relative;\r\n    overflow: visible;\r\n  }\r\n  &.new-proxy-cell {\r\n    overflow: visible;\r\n    padding: 0;\r\n    position: relative;\r\n  }\r\n  &.proxy-cell,\r\n  &.name-cell,\r\n  &.new-name-cell {\r\n    padding: 0;\r\n    /*z-index: 20;*/\r\n    position: relative;\r\n  }\r\n\r\n  &.new-selection-cell {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const GologinTableSelectionCell = styled('div')<{ width?: string }>`\r\n  width: ${(props): string => props.width || 'min-content'}px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const GologinTableHeaderContainer = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  min-width: fit-content;\r\n  width: 100%;\r\n\r\n  border-bottom: 1px solid var(--E8E8E8-antd);\r\n  color: var(--98989F-profile-table);\r\n\r\n  border-radius: 8px 8px 0 0;\r\n\r\n  & > :first-child {\r\n    padding: 12px 6px 12px 12px;\r\n\r\n    :hover {\r\n      .ant-checkbox {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  & > :nth-child(2) {\r\n    padding: 12px 8px 12px 6px;\r\n  }\r\n\r\n  & > * {\r\n    padding: 12px 8px;\r\n  }\r\n`;\r\n\r\nexport const ResizableHandle = styled('span')<{ newStyle: boolean }>`\r\n  position: absolute;\r\n  right: -5px;\r\n  bottom: 0;\r\n  z-index: 1;\r\n  width: 10px;\r\n  height: 100%;\r\n  cursor: col-resize;\r\n\r\n  &:hover {\r\n    &::after {\r\n      background-color: var(--00A987);\r\n      right: 4px;\r\n      width: 3px;\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 5px;\r\n    width: 1px;\r\n    height: 32px;\r\n    background-color: var(--0000000F);\r\n    transform: translateY(-50%);\r\n    transition: background-color .3s;\r\n    content: \"\";\r\n    opacity: 0;\r\n  }\r\n\r\n  ${(props): SerializedStyles | '' => props.newStyle ? css`\r\n    &::after {\r\n      background-color: var(--EAEAEB-profile-table);\r\n    }\r\n\r\n    &:hover::after {\r\n      background-color: var(--767676-profile-table);\r\n    }\r\n  ` : ''}\r\n`;\r\n\r\nexport const GologinTableHeaderColumnContainer = styled('div')`\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  &:hover {\r\n    color: var(--2B2B31-profile-table);\r\n    cursor: pointer;\r\n\r\n    ${ResizableHandle}::after {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GologinTableHeaderColumnContent = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  & > span {\r\n    font-weight: 400;\r\n    letter-spacing: 0.25px;\r\n  }\r\n`;\r\n\r\nexport const CheckboxContainer = styled('div')<{ hasPadding?: boolean }>`\r\n  ${(props): SerializedStyles | '' => props.hasPadding ? css`\r\n    padding: 16px 6px 15px 12px;\r\n  ` : ''}\r\n\r\n  .ant-checkbox-input:focus + .ant-checkbox-inner {\r\n    border-color: var(--CDCDCD-profile-table);\r\n  }\r\n\r\n  .ant-checkbox-checked::after {\r\n    border: 1px solid var(--00A987-profile-table);\r\n  }\r\n\r\n  .ant-checkbox-wrapper .ant-checkbox-wrapper-checked {\r\n    :hover .ant-checkbox-inner {\r\n      border-color: var(--CDCDCD-profile-table);\r\n    }\r\n\r\n    :focus .ant-checkbox-inner {\r\n      border-color: var(--00A987-profile-table);\r\n    }\r\n  }\r\n\r\n  .ant-checkbox-wrapper {\r\n    :hover .ant-checkbox-inner {\r\n      border-color: var(--CDCDCD-profile-table);\r\n    }\r\n\r\n    :focus .ant-checkbox-inner {\r\n      border-color: var(--CDCDCD-profile-table);\r\n    }\r\n  }\r\n\r\n  .ant-checkbox {\r\n    opacity: 0;\r\n    background-color: inherit;\r\n    border-color: var(--CDCDCD-profile-table);\r\n  }\r\n\r\n  .ant-checkbox-indeterminate {\r\n    opacity: 1;\r\n    background-color: inherit;\r\n    border-color: var(--CDCDCD-profile-table);\r\n\r\n    .ant-checkbox-inner::after {\r\n      background-color: var(--CDCDCD-profile-table);\r\n    }\r\n  }\r\n\r\n  .ant-checkbox-inner {\r\n    width: 14px;\r\n    height: 14px;\r\n    border-radius: 3px;\r\n    background-color: inherit;\r\n    border-color: var(--CDCDCD-profile-table);\r\n  }\r\n\r\n  .ant-checkbox-checked::after {\r\n    border: 1px solid var(--00A987-profile-table);\r\n  }\r\n\r\n  .ant-checkbox-wrapper:focus .ant-checkbox-inner {\r\n    border-color: var(--00A987-profile-table);\r\n  }\r\n\r\n  .ant-checkbox-checked {\r\n    opacity: 1;\r\n    background-color: inherit;\r\n    border-color: var(--00A987-profile-table);\r\n\r\n    .ant-checkbox-inner {\r\n      border-color: var(--00A987-profile-table);\r\n    }\r\n\r\n    .ant-checkbox-inner::after {\r\n      border: 2px solid var(--00A987-profile-table);\r\n      border-top: 0;\r\n      border-left: 0;\r\n    }\r\n\r\n    .ant-checkbox-wrapper {\r\n      :hover .ant-checkbox-inner {\r\n        border-color: var(--00A987-profile-table);\r\n      }\r\n\r\n      :focus .ant-checkbox-inner {\r\n        border-color: var(--00A987-profile-table);\r\n      }\r\n    }\r\n\r\n    .ant-checkbox-input:focus + .ant-checkbox-inner {\r\n      border-color: var(--00A987-profile-table);\r\n    }\r\n  }\r\n\r\n  .ant-checkbox {\r\n    padding: 0;\r\n  }\r\n\r\n  .ant-checkbox {\r\n    .ant-table-thead > tr > th {\r\n      border-bottom: 0 solid var(--E8E8E7-profile-table);\r\n    }\r\n  }\r\n`;\r\n","import styled from '@emotion/styled/macro';\r\nimport { Icon } from 'antd';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { TagField } from '../interfaces/tag.interface';\r\n\r\nconst TagPlaceholder = styled('div')`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const AddTagTxt = styled('div')`\r\n  color: var(--767676-tags-add-tag-placeholder);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 2px 0;\r\n  opacity: 0;\r\n  font-size: 14px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  letter-spacing: 0.25px;\r\n\r\n  :hover {\r\n    color: var(--00A987-tags-add-tag-placeholder);\r\n\r\n    & i {\r\n      color: var(--00A987-tags-add-tag-placeholder);\r\n    }\r\n  }\r\n\r\n  & i {\r\n    color: var(--CDCDCD-tags-add-tag-placeholder);\r\n  }\r\n\r\n  td:hover & {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\ninterface IAddTagPlaceholder {\r\n  showPlaceholder: boolean;\r\n  setIsAddMode: () => void;\r\n  field: TagField;\r\n}\r\n\r\nconst AddTagPlaceholder: FC<IAddTagPlaceholder> = (props) => {\r\n  const {\r\n    showPlaceholder,\r\n    setIsAddMode,\r\n    field,\r\n  } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const addPlaceholderKey = field === 'custom-status' ? 'tags.addStatusPlaceholder' : 'tags.addTagPlaceholder';\r\n\r\n  return (\r\n    <>\r\n      {(showPlaceholder) ? (\r\n        <AddTagTxt>\r\n          <Icon style={{ marginRight: 7, marginTop: -1 }} type='plus' />\r\n          {translation(addPlaceholderKey)}\r\n        </AddTagTxt>\r\n      ) : <TagPlaceholder\r\n        onClick={(): void => {\r\n          setIsAddMode();\r\n        }}\r\n      />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTagPlaceholder;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nexport const NotesContainer = styled('div')<{ newStyle: boolean; newDrawer: boolean; isInDrawer: boolean }>`\r\n  position: relative;\r\n\r\n  ${(props): SerializedStyles | null => props.newStyle ? css`\r\n    align-items: center;\r\n    display: flex;\r\n    background: inherit;\r\n    padding: 15px 0;\r\n\r\n    .ql-editor {\r\n      padding: ${props.newDrawer && props.isInDrawer ? '0 6px' : '0 8px'};\r\n    }\r\n\r\n    background: none;\r\n\r\n    .ql-hide-rows.ql-editor > *:not(:first-child) {\r\n      visibility: hidden;\r\n    }\r\n\r\n    & > * {\r\n      width: 100%;\r\n    }\r\n  ` : css`\r\n    .ql-container {\r\n      min-height: 38px;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const AddNotesContainer = styled('div')<{ newStyle: boolean; newDrawer?: boolean }>`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  opacity: 0;\r\n  font-size: 14px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  letter-spacing: 0.25px;\r\n  font-weight: 400;\r\n  position: absolute;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10;\r\n\r\n  ${(props): SerializedStyles | null => props.newStyle ? css`\r\n    top: 0;\r\n    min-height: 52px;\r\n  ` : null}\r\n\r\n  .ql-drawer-container & {\r\n    left: 7px;\r\n    opacity: 1;\r\n  }\r\n\r\n  ${(props): SerializedStyles => props.newDrawer ? css`\r\n    color: var(--81818A-notes);\r\n    :hover {\r\n      color: var(--2B2B31-notes);\r\n\r\n      & i {\r\n        color: var(--2B2B31-notes);\r\n      }\r\n    }\r\n  ` : css`\r\n    color: var(--767676-notes);\r\n    :hover {\r\n      color: var(--00A987-notes);\r\n\r\n      & i {\r\n        color: var(--00A987-notes);\r\n      }\r\n    }\r\n  `}\r\n\r\n  & i {\r\n    color: var(--CDCDCD-notes);\r\n  }\r\n\r\n  td:hover & {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { IconWrapperWithDescription } from '../../../ui/gologin-header/icons/wrapper';\r\nimport { GologinTableItemCell } from '../../../ui/gologin-table/styles';\r\nimport { borderRadiusContainer, textFont } from '../../../ui/style-templates';\r\nimport { ProxyWrapperEl } from '../../proxy/proxy-selector/styles';\r\nimport { CheckProxyBtnContainerEl } from '../../proxy/styles/check-proxy-btn';\r\nimport { AddTagTxt } from '../../tags/components/add-tag-placeholder';\r\nimport { IconMeatballsContainer } from '../components/styles';\r\nimport { AddNotesContainer } from '../notes-cell/styles';\r\n\r\nexport const ContainerNameCol = styled('div')<{ isProxy?: boolean; newStyle?: boolean }>`\r\n  flex-direction: row;\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n\r\n  padding: ${(props): string => props.newStyle && props.isProxy ? '0 16px' : '0'};\r\n`;\r\n\r\nexport const ContainerSettings = styled('div')`\r\n  width: 60px;\r\n  height: 56px;\r\n  flex-direction: row;\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 100;\r\n  right: 0;\r\n  top: 0;\r\n  background: linear-gradient(270deg, var(--FFFFFF-profile-table) 60%, var(--00D4FF00) 100%);\r\n  ${borderRadiusContainer()};\r\n`;\r\n\r\nexport const SharedValueContainer = styled(IconWrapperWithDescription)`\r\n  ${textFont}\r\n`;\r\n\r\nexport const Row = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const RowNameFolder = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TextNameFolder = styled('div')`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000-profile-table);\r\n  opacity: 0.8;\r\n  position: absolute;\r\n`;\r\n\r\nexport const MarginIcon = styled('div')`\r\n  margin-left: 96%;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ColProxyTxt = styled('span')<{ fontColor: string }>`\r\n  font-size: 14px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  margin-right: 4px;\r\n  color: ${(props): string => props.fontColor};\r\n`;\r\n\r\nexport const ProfilesTabsContainer = styled('section')<{ newStyle: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${(props): string => props.newStyle ? 'end' : 'space-between'};\r\n`;\r\n\r\nexport const RawProfileRow = styled('div')<{ dropPosition?: 'top'|'bottom'|null; isDragging?: boolean }>`\r\n  display: flex;\r\n  position: relative;\r\n\r\n  width: max-content;\r\n\r\n  &:hover {\r\n    background: var(--F9F9F9);\r\n\r\n    .ant-checkbox {\r\n      opacity: 1;\r\n    }\r\n\r\n    ${IconMeatballsContainer} {\r\n      visibility: visible;\r\n    }\r\n\r\n    ${CheckProxyBtnContainerEl} {\r\n      display: flex;\r\n      opacity: 1;\r\n    }\r\n\r\n    ${ProxyWrapperEl} {\r\n      z-index: 102;\r\n      background: var(--F9F9F9-proxy-manager-selector);\r\n    }\r\n  }\r\n\r\n  &.row-selected {\r\n    background: var(--F9F9F9);\r\n\r\n    ${ProxyWrapperEl} {\r\n      background: var(--F9F9F9-proxy-manager-selector);\r\n    }\r\n  }\r\n\r\n  ${GologinTableItemCell}:hover {\r\n    ${AddTagTxt} {\r\n      opacity: 1;\r\n    }\r\n\r\n    ${AddNotesContainer} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  &::after, &::before {\r\n    position: absolute;\r\n    display: block;\r\n    left: 0px;\r\n    right: 0px;\r\n    height: 0px;\r\n    width: 100%;\r\n    transition: background-color 0.3s;\r\n    content: \"\";\r\n    z-index: 140;\r\n  }\r\n\r\n  &::after {\r\n    border-bottom: 0.5px solid var(--E5E5E6-profile-table);\r\n    bottom: 0px;\r\n\r\n    ${(props): SerializedStyles|'' => props.dropPosition === 'bottom' ? css`\r\n      border-bottom: 3px solid var(--535358);\r\n    ` : ''}\r\n  }\r\n\r\n  &::before {\r\n    top: 0px;\r\n    visibility: hidden;\r\n\r\n    ${(props): SerializedStyles|'' => props.dropPosition === 'top' ? css`\r\n      visibility: visible;\r\n      border-bottom: 3px solid var(--535358);\r\n    ` : ''}\r\n  }\r\n\r\n  ${(props): SerializedStyles|'' => props.isDragging ? css`\r\n    & > div, & > section, & > span {\r\n      opacity: 0.3;\r\n     }\r\n  `: ''}\r\n`;\r\n\r\nexport const TextCell = styled('div')`\r\n  text-overflow: ellipsis;\r\n  overflow-x: clip;\r\n`;\r\n","import { useAtomValue } from 'jotai';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { useProxyList } from '../../../../state/proxy-list.atom';\r\nimport { IProfileProxy } from '../../../proxy/components/interfaces/IProfileProxy';\r\nimport { ITableCell } from '../../interfaces';\r\nimport { TextCell } from '../../table/styles';\r\n\r\nconst getFormatProxyMode = (proxyMode: string, translation: any): string => {\r\n  if (!proxyMode || proxyMode === 'none') {\r\n    return '';\r\n  }\r\n\r\n  if (['http', 'socks4', 'socks5'].includes(proxyMode)) {\r\n    return proxyMode;\r\n  }\r\n\r\n  if (proxyMode === 'http') {\r\n    return translation('proxy.connection.http.title');\r\n  }\r\n\r\n  if (proxyMode === 'socks4' || proxyMode === 'socks5') {\r\n    return translation(`proxy.connection.${proxyMode}.title`);\r\n  }\r\n\r\n  if (proxyMode === 'gologin') {\r\n    return 'GoLogin';\r\n  }\r\n\r\n  if (proxyMode === 'tor') {\r\n    return translation('proxy.connection.tor.title');\r\n  }\r\n\r\n  return proxyMode[0]?.toUpperCase() + proxyMode?.slice(1);\r\n};\r\n\r\nconst renderProxy = (proxy: IProfileProxy, translation: any): string => {\r\n  const proxyMode = getFormatProxyMode(proxy.mode, translation);\r\n\r\n  if (!proxyMode) {\r\n    return '-';\r\n  }\r\n\r\n  if (!proxy.country) {\r\n    if (proxy.mode === 'tor') {\r\n      proxy.country = proxy.torProxyRegion;\r\n    } else if (proxy.mode === 'gologin') {\r\n      proxy.country = proxy.autoProxyRegion;\r\n    }\r\n  }\r\n\r\n  if (!proxy.country) {\r\n    return proxyMode;\r\n  }\r\n\r\n  return proxyMode + ' • ' + proxy.country.toUpperCase();\r\n};\r\n\r\nconst ProxyTypeColumn: FC<ITableCell> = (props) => {\r\n  const { profileAtom } = props;\r\n\r\n  let { proxy } = useAtomValue(profileAtom);\r\n  const proxyList = useProxyList();\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  let proxyRes = proxy;\r\n\r\n  const proxyId = proxyRes.id;\r\n  if (proxyId) {\r\n    proxyRes = proxyList.find((el) => el._id === proxyId);\r\n\r\n    if (!proxyRes) {\r\n      proxyRes = proxy;\r\n    }\r\n  }\r\n\r\n  proxy = proxyRes;\r\n\r\n  return (\r\n    <TextCell>\r\n      {renderProxy(proxy, translation)}\r\n    </TextCell>\r\n  );\r\n};\r\n\r\nexport default ProxyTypeColumn;\r\n","import { useAtomValue } from 'jotai';\r\nimport React, { FC } from 'react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { IProxy } from '../../../../interfaces';\r\nimport { IBasicTableProfile } from '../../../../state/profiles-list.atom';\r\nimport { useProxyList } from '../../../../state/proxy-list.atom';\r\nimport { TextCell } from '../../table/styles';\r\n\r\ninterface IProps {\r\n  profileAtom: IBasicTableProfile['atom'];\r\n  paramName: keyof IProxy;\r\n}\r\n\r\nconst ProxyParamCell: FC<IProps> = (props) => {\r\n  const {\r\n    profileAtom,\r\n    paramName,\r\n  } = props;\r\n\r\n  let { proxy } = useAtomValue(profileAtom);\r\n  const proxyList = useProxyList();\r\n\r\n  let proxyRes = proxy;\r\n\r\n  const proxyId = proxyRes.id;\r\n  if (proxyId) {\r\n    proxyRes = proxyList.find((el) => el._id === proxyId);\r\n\r\n    if (!proxyRes) {\r\n      proxyRes = proxy;\r\n    }\r\n  }\r\n\r\n  proxy = proxyRes;\r\n\r\n  if (!proxy || proxy.mode === 'none') {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (NEW_FEATURES.header) {\r\n    return (\r\n      <TextCell>\r\n        {proxy[paramName]}\r\n      </TextCell>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {proxy[paramName]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProxyParamCell;\r\n","export const PROFILE_RUN_DEEP_LINK_EVENT_NAME = 'run-profile-with-external-protocol';\r\nexport const PROFILE_SHARE_DEEP_LINK_EVENT_NAME = 'share-profile-with-external-protocol';\r\n","import { getDefaultStore } from 'jotai';\r\n\r\nimport { upsertProfileRunStatuses } from './profile-run-statuses.atom';\r\nimport { getBasicTableProfiles, getProfilesList } from './profiles-list.atom';\r\nimport { closeProfilesSettings, getProfilesSettingsState, openProfilesSettings } from './profiles-settings-atom';\r\nimport { updateProfilesTableSelectedIds } from './profiles-table-selected-ids.atom';\r\nimport { onProfileLaunched } from './quick-pricing.atom';\r\nimport { IUpdateProfileStatusEvent } from '../../electron/interfaces/profile.status.manager.interfaces';\r\nimport { IProfile } from '../interfaces';\r\nimport PerformanceObserverService from '../services/performance-observer/performance-observer.service';\r\nimport { ProfileStatusType } from '../types';\r\n\r\nexport const onProfilesTableRowClick = (rowIndex: number): void => {\r\n  const { isVisible, profileIds } = getProfilesSettingsState();\r\n  if (!isVisible) {\r\n    return;\r\n  }\r\n\r\n  const basicTableProfiles = getBasicTableProfiles();\r\n  const basicTableProfile = basicTableProfiles[rowIndex];\r\n  if (!basicTableProfile) {\r\n    return;\r\n  }\r\n\r\n  const rowProfileId = getDefaultStore().get(basicTableProfile.atom)?.id;\r\n  if (!rowProfileId) {\r\n    return;\r\n  }\r\n\r\n  const [currentProfileId] = profileIds;\r\n  if (currentProfileId === rowProfileId) {\r\n    closeProfilesSettings();\r\n\r\n    return;\r\n  }\r\n\r\n  const profilesList = getProfilesList();\r\n  const profileIdToOpen = rowProfileId || profilesList[rowIndex]?.id;\r\n  if (profileIdToOpen) {\r\n    openProfilesSettings([profileIdToOpen]);\r\n  }\r\n};\r\n\r\nexport const updateProfileStateAtLaunch = (profileToUpdate: IProfile, updateStatusToSync = false): void => {\r\n  const { id: profileId } = profileToUpdate;\r\n  if (updateStatusToSync) {\r\n    const statusToSet: ProfileStatusType = 'profileStatuses.downloadingProfile';\r\n    upsertProfileRunStatuses([{\r\n      id: profileId,\r\n      status: statusToSet,\r\n    }]);\r\n  }\r\n};\r\n\r\nexport const updateProfileStateAtFinish = (profileId: string, finalStatus: ProfileStatusType): void => {\r\n  upsertProfileRunStatuses([{\r\n    id: profileId,\r\n    status: finalStatus,\r\n  }]);\r\n\r\n  onProfileLaunched();\r\n};\r\n\r\nexport const updateProfileStatus = (newProfileStatus: IUpdateProfileStatusEvent): void => {\r\n  const {\r\n    status = 'profileStatuses.ready',\r\n    profileId,\r\n    message: statusMessage = '',\r\n  } = newProfileStatus;\r\n\r\n  upsertProfileRunStatuses([{\r\n    id: profileId,\r\n    status,\r\n    statusMessage,\r\n  }]);\r\n};\r\n\r\nexport const onUserChangeSelectedProfiles = (newSelectedRowKeys: number[]): void => {\r\n  const selectedProfilesCount = newSelectedRowKeys.length;\r\n  const performanceObserverService = PerformanceObserverService.getInstance();\r\n  performanceObserverService.handleUserAction({\r\n    userAction: 'change-selected-profiles',\r\n    selectedProfilesCount,\r\n  });\r\n\r\n  const basicTableProfiles = getBasicTableProfiles();\r\n  const newSelectedProfileIds = basicTableProfiles\r\n    .reduce<string[]>((acc, basicTableProfile, idx) => {\r\n      if (newSelectedRowKeys.includes(idx)) {\r\n        const profileId = getDefaultStore().get(basicTableProfile.atom).id;\r\n        if (profileId) {\r\n          acc.push(profileId);\r\n        }\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n  updateProfilesTableSelectedIds(newSelectedProfileIds);\r\n};\r\n","import React from 'react';\r\n\r\nconst IconDotsInButton = () => (\r\n    <svg style={{ marginBottom: '2px' }} width=\"15\" height=\"3\" viewBox=\"0 0 15 3\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"1.5\" cy=\"1.5\" r=\"1.5\" transform=\"rotate(-90 1.5 1.5)\" fill=\"var(--828282)\"/>\r\n        <circle cx=\"7.5\" cy=\"1.5\" r=\"1.5\" transform=\"rotate(-90 7.5 1.5)\" fill=\"var(--828282)\"/>\r\n        <circle cx=\"13.5\" cy=\"1.5\" r=\"1.5\" transform=\"rotate(-90 13.5 1.5)\" fill=\"var(--828282)\"/>\r\n    </svg>\r\n);\r\n\r\nexport default IconDotsInButton;\r\n","import { IProfile } from '../../../interfaces';\r\nimport { IProfilesResponse, IRequestProfiles } from '../../quickProfiles/api';\r\n\r\ninterface IProfileForLinkParams {\r\n  workspaceId: string;\r\n  profileIdOrName: string;\r\n  requestProfileFingerprint: (profileId: string) => Promise<any>;\r\n  requestProfiles: (params: IRequestProfiles) => Promise<IProfilesResponse>;\r\n}\r\n\r\nexport const getProfileForLink = async ({\r\n  workspaceId,\r\n  profileIdOrName,\r\n  requestProfileFingerprint,\r\n  requestProfiles,\r\n}: IProfileForLinkParams): Promise<IProfile|void> => {\r\n  const isPresumablyProfileObjectId = profileIdOrName.match(/^[0-9a-fA-F]{24}$/);\r\n  if (isPresumablyProfileObjectId) {\r\n    return requestProfileFingerprint(profileIdOrName).catch(() => null);\r\n  }\r\n\r\n  const { profiles } = await requestProfiles({ workspaceId, search: profileIdOrName, offset: 0 })\r\n    .catch(() => ({ profiles: [] }));\r\n\r\n  const profileWithExactName = profiles.find(({ name }) => name === decodeURIComponent(profileIdOrName));\r\n\r\n  return profileWithExactName;\r\n};\r\n","import * as Sentry from '@sentry/react';\r\n\r\nimport { PROFILE_SHARED_KEY_NAME } from '../../../../common/constants/constants';\r\nimport { PROFILE_LIST_PAGE } from '../../../../common/constants/routes';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { history } from '../../../services';\r\nimport { IUserCtx, IWorkspaceCtx } from '../../../state';\r\nimport { ReactError } from '../../../utils/sentry-parameters/custom-errors';\r\nimport switchWorkspace from '../switch-workspace';\r\n\r\nconst SHARE_LINK_PROFILE_STRINGIFY_ERROR = 'share-link-profile-stringify-error';\r\nconst SELECTED_FOLDER_KEY = 'SelectedFolder';\r\nconst DEFAULT_FOLDER_VALUE = 'all';\r\n\r\ninterface IHandleShareViaLinkParams {\r\n  profile: IProfile|null;\r\n  defaultWorkspace: string;\r\n  addProfileFirstToList: (profile: IProfile) => void;\r\n  updateSelectedFolder: (folder: string) => void;\r\n  userCtx: IUserCtx;\r\n  workspaceCtx: IWorkspaceCtx;\r\n  isUpdatePageRoute?: boolean;\r\n}\r\n\r\nexport const handleShareViaLinkFromEvent = async ({\r\n  profile,\r\n  defaultWorkspace,\r\n  addProfileFirstToList,\r\n  updateSelectedFolder,\r\n  userCtx,\r\n  workspaceCtx,\r\n  isUpdatePageRoute = false,\r\n}: IHandleShareViaLinkParams): Promise<void> => {\r\n  if (!profile) {\r\n    return;\r\n  }\r\n\r\n  if (isUpdatePageRoute) {\r\n    sessionStorage.setItem(PROFILE_SHARED_KEY_NAME, JSON.stringify(profile));\r\n\r\n    return history.replace(PROFILE_LIST_PAGE);\r\n  }\r\n\r\n  let workspaceIdInStorage = '';\r\n  try {\r\n    const workspaceInfoJson = localStorage.getItem('workspace') || '';\r\n    const workspaceInfo = JSON.parse(workspaceInfoJson);\r\n    workspaceIdInStorage = workspaceInfo.id;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n\r\n  const selectedFolder = localStorage.getItem(SELECTED_FOLDER_KEY) || DEFAULT_FOLDER_VALUE;\r\n  if (defaultWorkspace === workspaceIdInStorage && selectedFolder === DEFAULT_FOLDER_VALUE) {\r\n    addProfileFirstToList(profile);\r\n    require('scroll-into-view')(document.querySelector('#main-header'));\r\n\r\n    return;\r\n  }\r\n\r\n  if (!(defaultWorkspace && workspaceIdInStorage)) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    localStorage.setItem(SELECTED_FOLDER_KEY, DEFAULT_FOLDER_VALUE);\r\n    sessionStorage.setItem(PROFILE_SHARED_KEY_NAME, JSON.stringify(profile));\r\n  } catch (error) {\r\n    Sentry.captureException(new ReactError(SHARE_LINK_PROFILE_STRINGIFY_ERROR.replaceAll('-', ' ')), (scope) => {\r\n      scope.setLevel('error');\r\n      scope.setTransactionName(SHARE_LINK_PROFILE_STRINGIFY_ERROR);\r\n      scope.setFingerprint([SHARE_LINK_PROFILE_STRINGIFY_ERROR]);\r\n\r\n      return scope;\r\n    });\r\n  }\r\n\r\n  if (defaultWorkspace === workspaceIdInStorage && selectedFolder !== DEFAULT_FOLDER_VALUE) {\r\n    return updateSelectedFolder(DEFAULT_FOLDER_VALUE);\r\n  }\r\n\r\n  await switchWorkspace(defaultWorkspace, { ...workspaceCtx, id: workspaceIdInStorage }, userCtx);\r\n};\r\n","import { PROFILE_SHARED_KEY_NAME } from '../../../../common/constants/constants';\r\nimport { IProfile } from '../../../interfaces';\r\n\r\nexport const getProfileFromStorage = (profileJson: string): IProfile|null => {\r\n  let profileSharedViaLink: IProfile|null;\r\n  try {\r\n    profileSharedViaLink = JSON.parse(profileJson);\r\n  } catch (error) {\r\n    profileSharedViaLink = null;\r\n  } finally {\r\n    sessionStorage.removeItem(PROFILE_SHARED_KEY_NAME);\r\n  }\r\n\r\n  return profileSharedViaLink;\r\n};\r\n","export const DEEP_LINKS_REDIRECT_ORIGIN = 'https://g.camp';\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { API_BASE_URL } from '../../../common/constants/constants';\r\nimport { http } from '../../services';\r\n\r\nexport const checkProxyRequest = async (options: any) => {\r\n  try {\r\n    const data = await http(`${API_BASE_URL}/browser/check_proxy`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(options),\r\n    });\r\n\r\n    return data.body;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateProfile = async (profileId: string, profileData: any) => {\r\n  try {\r\n    const data = await http(`${API_BASE_URL}/browser/${profileId}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(profileData),\r\n    });\r\n\r\n    return data.body;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const sendAnalytics = (profileId: string, updatedFields: any) => {\r\n  const body = Object.keys(updatedFields).map((key: string) => ({\r\n    field: key,\r\n    count: updatedFields.key,\r\n    profile: profileId,\r\n    type: 'fingerprint-update',\r\n    status: 'success',\r\n    deduplicationKey: uuidv4(),\r\n  }));\r\n\r\n  return http(`${API_BASE_URL}/analytics/many`, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      analytics: body,\r\n    }),\r\n  }).catch(() => Promise.resolve());\r\n};\r\n\r\nexport const updateMultipleFingerprints = async (profileData: any): Promise<void> => {\r\n  await http(`${API_BASE_URL}/browser/fingerprint/multi`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(profileData),\r\n  });\r\n};\r\n\r\ninterface IUpdateProfileName {\r\n  name: string;\r\n  id: string;\r\n}\r\nexport const updateProfileName = async (info: IUpdateProfileName) => {\r\n  const request = await http(`${API_BASE_URL}/browser/${info.id}/name`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({\r\n      name: info.name,\r\n    }),\r\n  });\r\n\r\n  return request.body;\r\n};\r\n\r\ninterface IUpdateProfileNotes {\r\n  notes: string;\r\n  id: string;\r\n}\r\nexport const updateProfileNotes = async (info: IUpdateProfileNotes) => {\r\n  const request = await http(`${API_BASE_URL}/browser/${info.id}/notes`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({\r\n      notes: info.notes,\r\n    }),\r\n  });\r\n\r\n  return request.body;\r\n};\r\n\r\ninterface IProxy {\r\n  id: string;\r\n  mode: string;\r\n  username: string;\r\n  password: string;\r\n  host: string;\r\n  changeIpUrl: string;\r\n  port: number;\r\n  autoProxyRegion: string;\r\n  torProxyRegion: string;\r\n}\r\nexport const updateProfileProxy = async (proxy: IProxy) => {\r\n  const request = await http(`${API_BASE_URL}/browser/${proxy.id}/proxy`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify(proxy),\r\n  });\r\n\r\n  return request.body;\r\n};\r\n\r\nexport const updateProfileGeolocation = async (profileId: string, geolocation: any) => {\r\n  const request = await http(`${API_BASE_URL}/browser/${profileId}/geolocation`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify(geolocation),\r\n  });\r\n\r\n  return request.body;\r\n};\r\n\r\ninterface ITimezone {\r\n  fillBasedOnIp: boolean;\r\n  timezone: string;\r\n}\r\nexport const updateProfileTimezone = async (profileId: string, timezone: ITimezone) => {\r\n  const request = await http(`${API_BASE_URL}/browser/${profileId}/timezone`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify(timezone),\r\n  });\r\n\r\n  return request.body;\r\n};\r\n\r\nexport const refreshFingerprintRequest = async (profileId: string, template: string | null) => {\r\n  const request = await http(`${API_BASE_URL}/browser/fingerprints`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({\r\n      browsersIds: [profileId],\r\n      template,\r\n    }),\r\n  });\r\n\r\n  return request.body;\r\n};\r\n\r\nexport const restoreOldProfileVersion = async (profileId: string) => http(`${API_BASE_URL}/browser/${profileId}/restore`);\r\n\r\nexport const deleteProfiles = async (profilesToDelete: string[]) => {\r\n  try {\r\n    await http(`${API_BASE_URL}/browser`, {\r\n      method: 'DELETE',\r\n      body: JSON.stringify({\r\n        profilesToDelete,\r\n      }),\r\n    });\r\n\r\n    return null;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const cloneProfileMulti = async (profileIds: string[], folderName = '') => {\r\n  try {\r\n    await http(`${API_BASE_URL}/browser/clone_multi`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        browsersIds: profileIds,\r\n        folderName,\r\n      }),\r\n    });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const removeMultipleInvites = async (invites: string[]): Promise<void> => {\r\n  try {\r\n    const requestBody = JSON.stringify({\r\n      invitesForDelete: invites,\r\n    });\r\n\r\n    await http(`${API_BASE_URL}/share`, {\r\n      method: 'DELETE',\r\n      body: requestBody,\r\n    });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchPatchProfileLanguage = async (profileId: string, language: string, autoLang: boolean) => {\r\n  const fetchBody = JSON.stringify({\r\n    language,\r\n    autoLang,\r\n  });\r\n\r\n  return http(`${API_BASE_URL}/browser/${profileId}/language`, {\r\n    method: 'PATCH',\r\n    body: fetchBody,\r\n  });\r\n};\r\n\r\nexport const updateProfileResolution = async (profileId: string, resolution: string) => {\r\n  const fetchBody = JSON.stringify({\r\n    resolution,\r\n  });\r\n\r\n  return http(`${API_BASE_URL}/browser/${profileId}/resolution`, {\r\n    method: 'PATCH',\r\n    body: fetchBody,\r\n  });\r\n};\r\n","import { css } from '@emotion/core';\r\nimport { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { textFont } from '../../../ui/style-templates';\r\n\r\nexport const DrawerProfileHeaderButtons = styled('div')<{ newStyle: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    justify-content: space-between;\r\n    padding-right: 25px;\r\n  ` : null}\r\n`;\r\n\r\nexport const NewStyleText = styled('span')`\r\n  ${textFont};\r\n  margin-left: 8px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const DrawerTrustworthy = styled('div')`\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  font-weight: 500;\r\n  color: var(--00B86D);\r\n  margin-top: 2px;\r\n  `;\r\n\r\nexport const DrawerBackdropContainer = styled('div')`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n`;\r\n","import React, { FC, useContext } from 'react';\r\n\r\nimport { DrawerBackdropContainer } from './styles';\r\nimport { tagsContext } from '../../../state';\r\nimport { closeProxyManager, useProxyManagerState } from '../../../state/proxy-manager-modal-status.atom';\r\n\r\nconst DrawerBackdrop: FC = () => {\r\n  const { currentProfileId } = useProxyManagerState();\r\n\r\n  const {\r\n    setProfileInEditTagsMode,\r\n    profileInEditTagsMode,\r\n  } = useContext(tagsContext);\r\n\r\n  if (!(currentProfileId || profileInEditTagsMode)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DrawerBackdropContainer onClick={(): void => {\r\n      closeProxyManager();\r\n      setProfileInEditTagsMode(null);\r\n    }} />\r\n  );\r\n};\r\n\r\nexport default DrawerBackdrop;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst IconContainer = styled('svg')`\r\n  animation: spin;\r\n  animation-duration: 1000ms;\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n\r\n  @keyframes spin {\r\n    from {\r\n      transform:rotate(0deg);\r\n    }\r\n    to {\r\n      transform:rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst IconSpinnerAutosave = () => (\r\n  <IconContainer width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M2 12C2 6.5 6.5 2 12 2C15.9 2 19.3 4.2 20.9 7.5\" stroke=\"var(--767676)\" strokeMiterlimit=\"10\"/>\r\n    <path d=\"M22.0001 12C22.0001 17.5 17.5001 22 12.0001 22C8.1001 22 4.7001 19.8 3.1001 16.5\" stroke=\"var(--767676)\" strokeMiterlimit=\"10\"/>\r\n    <path d=\"M21.8 1.69995L21 7.59995L15 6.79995\" stroke=\"var(--767676)\" strokeMiterlimit=\"10\" strokeLinecap=\"square\"/>\r\n    <path d=\"M2.19995 22.2999L2.99995 16.3999L8.99995 17.1999\" stroke=\"var(--767676)\" strokeMiterlimit=\"10\" strokeLinecap=\"square\"/>\r\n  </IconContainer>\r\n);\r\n\r\nexport default IconSpinnerAutosave;\r\n","import React from 'react';\r\n\r\nconst IconSuccessAutosave = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M19 19C21.2 19 23 17.2 23 15C23 12.8 21.2 11 19 11C18.7 7.1 15.5 4 11.5 4C7.5 4 4.2 7.2 4 11.1C2.3 11.5 1 13.1 1 15C1 17.2 2.8 19 5 19H19Z\" stroke=\"var(--767676)\" strokeMiterlimit=\"10\" strokeLinecap=\"square\"/>\r\n    <path d=\"M8 12L10.5 14.5L15 10\" stroke=\"var(--767676)\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconSuccessAutosave;\r\n","import styled from '@emotion/styled';\r\nimport React, { FC, memo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport IconSpinnerAutosave from '../../../ui/icons/IconSpinnerAutosave';\r\nimport IconSuccessAutosave from '../../../ui/icons/IconSuccessAutosave';\r\n\r\nconst LoaderContainer = styled.div`\r\n  color: var(--767676);\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  margin-left: 23px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoaderLabel = styled.span`\r\n  font-family: Roboto;\r\n  font-weight: 400;\r\n  margin-left: 15px;\r\n`;\r\n\r\nexport type TLoaderStatus = 'processing'|'done'|'default';\r\n\r\ninterface ILoader {\r\n  state: TLoaderStatus;\r\n}\r\nconst Loader: FC<ILoader> = (props) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  // NOTE: Components\r\n  const renderIcon = () => {\r\n    if (props.state === 'processing') {\r\n      return (\r\n        <IconSpinnerAutosave />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <IconSuccessAutosave />\r\n    );\r\n  };\r\n\r\n  // NOTE: Logic\r\n  if (props.state === 'default') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <LoaderContainer>\r\n      {renderIcon()}\r\n      <LoaderLabel>{props.state === 'processing' ? translation('base.saving') : translation('base.savedInProfile')}</LoaderLabel>\r\n    </LoaderContainer>\r\n  );\r\n\r\n};\r\n\r\nexport default memo(Loader);\r\n","import styled from '@emotion/styled';\r\nimport { Col, Icon, Input, Radio, Row, Slider, Switch, Tooltip } from 'antd';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { updateProfileGeolocation } from '../api';\r\nimport Loader, { TLoaderStatus } from './Loader';\r\n\r\nconst ArrowDrawer = styled('div')`\r\n  border: solid var(--01AD7F);\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  padding: 3px;\r\n  transform: rotate(135deg);\r\n  opacity: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst RadioButton = styled(Radio.Button)`\r\n  height: 30px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  line-height: 29px;\r\n`;\r\n\r\nconst InputDiv = styled('div')`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst IpInput = styled(Input)`\r\n  width: 30%;\r\n`;\r\n\r\nconst SliderDiv = styled('div')`\r\n  display: inline-block;\r\n  width: 30%;\r\n`;\r\n\r\nconst SubTitle = styled('span')`\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst ElementContainer = styled('div')`\r\n  font-family: 'Roboto';\r\n  margin-top: 39px;\r\n  margin-left: 24px;\r\n`;\r\n\r\nconst TitleContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: 32px;\r\n  margin-bottom: 22px;\r\n  margin-left: 36px;\r\n`;\r\n\r\nconst TittleSetting = styled('div')`\r\n  font-weight: 500;\r\n  font-family: 'Roboto';\r\n  font-size: 20px;\r\n  color: var(--000000);\r\n  margin-left: 12px;\r\n  margin-top: -2px;\r\n`;\r\n\r\nconst Subtitle = styled('span')`\r\n  font-size: 12px;\r\n  color: var(--000000);\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst GEOLOCATION_SETTINGS = {\r\n  mode: '',\r\n  latitude: '',\r\n  longitude: '',\r\n  accuracy: '',\r\n  fillBasedOnIp: false,\r\n};\r\n\r\nlet hasBeenUpdated = false;\r\nlet timeout: any;\r\nlet loaderStatusTimeout: any;\r\n\r\ndeclare interface IProfileDrawerGeolocation {\r\n  profileInfo?: any;\r\n  changeVisibility: () => void;\r\n  updateProfileGeolocation: (id: string, geolocation: typeof GEOLOCATION_SETTINGS) => any;\r\n}\r\n\r\nexport const DrawerGeolocation: FC<IProfileDrawerGeolocation> = (props) => {\r\n  const [loaderStatus, setLoaderStatus] = useState<TLoaderStatus>('default');\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    GEOLOCATION_SETTINGS.mode = props.profileInfo?.geolocation?.mode || '';\r\n    GEOLOCATION_SETTINGS.latitude = props.profileInfo?.geolocation?.latitude || '';\r\n    GEOLOCATION_SETTINGS.longitude = props.profileInfo?.geolocation?.longitude || '';\r\n    GEOLOCATION_SETTINGS.accuracy = props.profileInfo?.geolocation?.accuracy || '';\r\n    GEOLOCATION_SETTINGS.fillBasedOnIp = !!props.profileInfo?.geolocation?.fillBasedOnIp;\r\n  }, []);\r\n\r\n  const save = async () => {\r\n    clearTimeout(loaderStatusTimeout);\r\n    setLoaderStatus('processing');\r\n\r\n    loaderStatusTimeout = setTimeout(() => {\r\n      setLoaderStatus('done');\r\n      loaderStatusTimeout = setTimeout(() => setLoaderStatus('default'), 0.5 * 1000);\r\n    }, 0.5 * 1000);\r\n\r\n    props.updateProfileGeolocation(props?.profileInfo?.id, {\r\n      mode: GEOLOCATION_SETTINGS.mode || 'allow',\r\n      latitude: GEOLOCATION_SETTINGS.latitude || '',\r\n      longitude: GEOLOCATION_SETTINGS.longitude || '',\r\n      accuracy: GEOLOCATION_SETTINGS.accuracy || '',\r\n      fillBasedOnIp: GEOLOCATION_SETTINGS.fillBasedOnIp,\r\n    });\r\n\r\n    await updateProfileGeolocation(props?.profileInfo?.id, {\r\n      mode: GEOLOCATION_SETTINGS.mode || 'allow',\r\n      latitude: GEOLOCATION_SETTINGS.latitude || undefined,\r\n      longitude: GEOLOCATION_SETTINGS.longitude || undefined,\r\n      accuracy: GEOLOCATION_SETTINGS.accuracy || undefined,\r\n      fillBasedOnIp: GEOLOCATION_SETTINGS.fillBasedOnIp,\r\n    });\r\n  }\r\n\r\n  const updateTimeout = () => {\r\n    if (timeout !== undefined) {\r\n      clearTimeout(timeout)\r\n    }\r\n\r\n    timeout = setTimeout(() => save(), 500);\r\n  }\r\n\r\n  const onModeChange = (mode: 'allow'|'block'|'prompt') => {\r\n    if (GEOLOCATION_SETTINGS.mode === 'block') {\r\n      GEOLOCATION_SETTINGS.mode = 'prompt';\r\n    } else {\r\n      GEOLOCATION_SETTINGS.mode = mode;\r\n    }\r\n    hasBeenUpdated = true;\r\n    save();\r\n  }\r\n\r\n  const onLatitudeChange = (e: any) => {\r\n    GEOLOCATION_SETTINGS.latitude = e.target.value;\r\n    hasBeenUpdated = true;\r\n    updateTimeout();\r\n  }\r\n\r\n  const onLongitudeChange = (e: any) => {\r\n    GEOLOCATION_SETTINGS.longitude = e.target.value;\r\n    hasBeenUpdated = true;\r\n    updateTimeout();\r\n  }\r\n\r\n  const onAccuracyChange = (accuracy: number) => {\r\n    GEOLOCATION_SETTINGS.accuracy = '' + accuracy;\r\n    hasBeenUpdated = true;\r\n    updateTimeout();\r\n  }\r\n\r\n  const onFillBasedOnIpChange = (fillBasedOnIp: boolean) => {\r\n    GEOLOCATION_SETTINGS.fillBasedOnIp = fillBasedOnIp;\r\n    hasBeenUpdated = true;\r\n    save();\r\n  }\r\n\r\nconst getWebgeolocation = () => {\r\n\r\n    return (\r\n      <>\r\n        <Tooltip\r\n          title={(\r\n            <span style={{ fontSize: 12, color: 'var(--000000-antd-tooltip-opacity)' }}>\r\n              {\r\n                props?.profileInfo?.geolocation?.mode === 'block' ? translation('geolocation.block.help') : translation('geolocation.allow.help')\r\n              }\r\n            </span>\r\n          )}\r\n          overlayStyle={{backgroundColor: 'var(--FFFFFF)', color: 'var(--000000)'}}\r\n          placement='rightBottom'\r\n          arrowPointAtCenter={true}\r\n        >\r\n          <Icon\r\n            style={{\r\n              marginTop: 7,\r\n              marginLeft: 18,\r\n              marginBottom: 7,\r\n              opacity: 0.4\r\n            }}\r\n            type='info-circle'\r\n          />\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };\r\n\r\nconst geoOptionContainer = () => (\r\n    <ElementContainer style={{ marginLeft: 0, marginTop: 20 }}>\r\n      <Col>\r\n        {['allow', 'prompt'].includes(props?.profileInfo?.geolocation?.mode) && (\r\n          <>\r\n            <Row>\r\n              <Switch\r\n                defaultChecked={props?.profileInfo?.geolocation?.mode === 'prompt'}\r\n                onChange={checked => onModeChange(checked ? 'prompt' : 'allow')}\r\n              />\r\n              <Subtitle style={{ fontWeight: 500 }}>{translation('quickSettings.geolocation.help.sitesAsk')}</Subtitle>\r\n            </Row>\r\n          </>\r\n        )}\r\n        {['allow', 'prompt'].includes(props?.profileInfo?.geolocation?.mode) && (\r\n          <>\r\n            <Row style={{ marginTop: 20 }}>\r\n              <Switch\r\n                defaultChecked={!!props?.profileInfo?.geolocation?.fillBasedOnIp}\r\n                onChange={checked => onFillBasedOnIpChange(checked)}\r\n              />\r\n              <Subtitle>{translation('geolocation.fillBasedOnIpText')}</Subtitle>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Col>\r\n    </ElementContainer>\r\n  );\r\n\r\n\r\n\r\n  const showContent = () => {\r\n    return (\r\n      <>\r\n        <TitleContainer>\r\n          <ArrowDrawer onClick={props.changeVisibility} />\r\n\r\n          <TittleSetting>\r\n            {translation('geolocation.title')}\r\n          </TittleSetting>\r\n\r\n          <Loader\r\n            state={loaderStatus}\r\n          />\r\n        </TitleContainer>\r\n        <ElementContainer style={{ marginTop: 37 }}>\r\n          <Row>\r\n            <Radio.Group\r\n              defaultValue={['allow', 'prompt'].includes(props?.profileInfo?.geolocation?.mode) ? 'allow' : 'block'}\r\n              onChange={e => onModeChange(e.target.value)}\r\n            >\r\n              <Tooltip\r\n                title={(\r\n                  <span style={{ fontSize: 12, color: 'var(--000000-antd-tooltip-opacity)' }}>\r\n                    {translation('geolocation.allow.help')}\r\n                  </span>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF)', color: 'var(--000000)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='allow'>{translation('base.allow')}</RadioButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={(\r\n                  <span style={{ fontSize: 12, color: 'var(--000000-antd-tooltip-opacity)' }}>\r\n                    {translation('geolocation.block.help')}\r\n                  </span>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF)', color: 'var(--000000)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='block'>{translation('base.block')}</RadioButton>\r\n              </Tooltip>\r\n            </Radio.Group>\r\n            {getWebgeolocation()}\r\n          </Row>\r\n          <>{geoOptionContainer()}</>\r\n          {(!props?.profileInfo?.geolocation?.fillBasedOnIp\r\n            && ['prompt', 'allow'].includes(props?.profileInfo?.geolocation?.mode))\r\n          && (\r\n            <>\r\n              <InputDiv>\r\n                <SubTitle>{translation('base.latitude')}</SubTitle>\r\n                <IpInput\r\n                  size='small'\r\n                  onChange={onLatitudeChange}\r\n                  defaultValue={props?.profileInfo?.geolocation?.latitude}\r\n                />\r\n              </InputDiv>\r\n              <InputDiv>\r\n                <SubTitle>{translation('base.longitude')}</SubTitle>\r\n                <IpInput\r\n                  size='small'\r\n                  onChange={onLongitudeChange}\r\n                  defaultValue={props?.profileInfo?.geolocation?.longitude}\r\n                />\r\n              </InputDiv>\r\n              <InputDiv>\r\n                <SubTitle\r\n                  style={{ paddingBottom: 0 }}\r\n                >\r\n                  {translation('base.accuracy')} ({translation('base.meters').toLowerCase()}) {props?.profileInfo?.geolocation?.accuracy || 0}\r\n                </SubTitle>\r\n                <SliderDiv>\r\n                  <Slider\r\n                    step={10}\r\n                    min={10}\r\n                    defaultValue={props?.profileInfo?.geolocation?.accuracy || 0}\r\n                    dots={true}\r\n                    tooltipVisible={false}\r\n                    onChange={(v) => onAccuracyChange(v as number)}\r\n                  />\r\n                </SliderDiv>\r\n              </InputDiv>\r\n            </>\r\n          )}\r\n        </ElementContainer>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {showContent()}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst IconTrustworthy = () => (\r\n  <svg style={{ marginRight: 5, marginLeft: 25 }} width=\"14\" height=\"16\" viewBox=\"0 0 14 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M13.165 1.01399L7.165 0.0139894C7.05574 -0.00401209 6.94426 -0.00401209 6.835 0.0139894L0.835 1.01399C0.601682 1.05302 0.389756 1.1735 0.236878 1.35403C0.0839997 1.53455 6.9448e-05 1.76343 0 1.99999V8.99999C0 14 7 16 7 16C7 16 14 14 14 8.99999V1.99999C13.9999 1.76343 13.916 1.53455 13.7631 1.35403C13.6102 1.1735 13.3983 1.05302 13.165 1.01399ZM6.065 11.481L2.293 7.70699L3.707 6.29299L5.933 8.51899L10.233 3.35899L11.769 4.64099L6.065 11.481Z\" fill=\"var(--00B86D)\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconTrustworthy;\r\n","import { css } from '@emotion/core';\r\nimport { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\nimport { Button } from 'antd';\r\n\r\nexport const ProfileButton = styled(Button)<{ newStyle: boolean }>`\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  padding: ${(props): string => props.newStyle ? '8px' : '5px'};\r\n  text-align: center;\r\n  min-height: ${(props): string => props.newStyle ? '24px' : '26px'};\r\n  outline: none;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  transition: 0.2s;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ButtonStop = styled(ProfileButton)<{ newStyle: boolean; width?: number }>`\r\n    line-height: ${(props): string => props.newStyle ? '16px' : '14px'};\r\n    letter-spacing: ${(props): string => props.newStyle ? '0.2px' : ''};\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    border-color: ${(props): string => props.newStyle ? 'var(--FFA8A8-profile-table)' : 'var(--E83E5E-profile-table)'};\r\n    color: ${(props): string => props.newStyle ? 'var(--F5222D-profile-table)' : 'var(--E83E5E-profile-table)'};\r\n    min-width: ${(props): string => props.newStyle ? '50px' : '56px'};\r\n    white-space: nowrap;\r\n    transition: 0.2s;\r\n    font-weight: ${(props): string => props.newStyle ? '400' : '500'};\r\n    margin-left: ${(props): string => props.newStyle ? '0' : '16px'};\r\n\r\n    width: ${(props): string => props.width ? `${props.width}px` : 'auto'};\r\n\r\n    :hover {\r\n        ${(props): SerializedStyles => props.newStyle ? css`\r\n      border-color: var(--FF0000-profile-table);\r\n      background-color: var(--FF0000-profile-table);\r\n      color: var(--FFFFFF-profile-table);\r\n    ` : css`\r\n      border-color: var(--E83E5EE6);\r\n      background-color: var(--E83E5EE6);\r\n      color: var(--FFFFFF-profile-table);\r\n    `}\r\n    }\r\n`;\r\n\r\nexport const ButtonRun = styled(ProfileButton)<{\r\n  width?: number;\r\n  isInDrawer?: boolean;\r\n  newStyle: boolean;\r\n  isLoading?: boolean;\r\n}>`\r\n    cursor: pointer;\r\n    background: var(--FFFFFF-profile-table);\r\n    z-index: 100;\r\n    min-width: 58px;\r\n    transition: width 0s;\r\n\r\n    ${(props): SerializedStyles => css`\r\n      width: ${(props.width) ? `${props.width}px` : 'auto'};\r\n      min-width: ${(props.width) ? `${props.width}px` : 'auto'};\r\n  `}\r\n    :focus {\r\n        color: var(--00997A-profile-table);\r\n        border-color: var(--88D1C3-profile-table);\r\n\r\n        :hover {\r\n            color: var(--FFFFFF-profile-table);\r\n        }\r\n    }\r\n\r\n    :hover {\r\n        background-color: ${(props): string => props.newStyle ? 'var(--00A987-profile-table)' : 'var(--00B86D-profile-table)'};\r\n        color: var(--FFFFFF-profile-table);\r\n    }\r\n\r\n    ${(props): SerializedStyles => props.newStyle ? css`\r\n    background: inherit;\r\n    color: var(--00997A-profile-table);\r\n    border: 1px solid ${props.isLoading ? 'var(--00A987-profile-table)' : 'var(--88D1C3-profile-table)'};\r\n    line-height: 16px;\r\n    letter-spacing: 0.2px;\r\n    font-weight: 400;\r\n\r\n    :hover {\r\n      background-color: var(--00A987-profile-table);\r\n      border-color: var(--00A987-profile-table);\r\n    }\r\n\r\n    svg {\r\n      fill: var(--00A987-profile-table);\r\n    }\r\n\r\n    &.ant-btn.ant-btn-loading::before {\r\n      opacity: 1;\r\n      background: inherit;\r\n    }\r\n  ` : css`\r\n    border: 1px solid var(--00B86D-profile-table);\r\n    color: var(--00B86D-profile-table);\r\n  `}\r\n`;\r\n\r\nexport const DrawerButtonRun = styled(Button)`\r\n  background: transparent;\r\n  border: 1px solid var(--00B86D);\r\n  border-radius: 4px;\r\n  padding: 5px 11px 4px 11px;\r\n  min-height: 26px;\r\n  color: var(--00B86D);\r\n  outline: none;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    background-color: var(--00B86D);\r\n    color: var(--FFFFFF);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nexport const DrawerButtonStop = styled('button')`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n  height: 25px;\r\n  border-radius: 4px;\r\n  border-color: transparent;\r\n  background-color: var(--E9515C);\r\n  color: var(--FFFFFF);\r\n  min-width: 54px;\r\n  outline: none;\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ButtonRun } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { onProfileLaunched } from '../../../state/quick-pricing.atom';\r\nimport { openCloudBrowserUrlInSingleTab } from '../../../utils/cloud-browser';\r\nimport { sendUserEventToServer } from '../../../utils/send-analytics-to-server';\r\nimport { sendActionAnalytics } from '../../common/api';\r\n\r\nconst isElectron = !!window.require;\r\nlet ipcRenderer: Electron.IpcRenderer;\r\nif (isElectron) {\r\n  ({ ipcRenderer } = window.require('electron'));\r\n}\r\n\r\ninterface IViewProfileButton {\r\n  profileId: string;\r\n  remoteOrbitaUrl?: string;\r\n  isInDrawer?: boolean;\r\n}\r\n\r\nconst ViewProfileButton: FC<IViewProfileButton> = (props): JSX.Element => {\r\n  const { profileId, remoteOrbitaUrl = '', isInDrawer = false } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const browserUrl = NEW_FEATURES.cloudBrowser ? remoteOrbitaUrl : `https://${profileId}.orbita.gologin.com`;\r\n\r\n  const focusOrbita = async (): Promise<void> => {\r\n    sendActionAnalytics('opened orbita via View from app', { profile: profileId, appVersion: window?.gologinAppVersion });\r\n    if (browserUrl) {\r\n      window.require('electron').shell.openExternal(browserUrl);\r\n\r\n      return;\r\n    }\r\n\r\n    ipcRenderer && ipcRenderer.invoke('focus-orbita-window', { profileId });\r\n  };\r\n\r\n  const sendStats = async (): Promise<void> => {\r\n    if (isElectron) {\r\n      return;\r\n    }\r\n\r\n    await sendUserEventToServer('openedBrowser');\r\n\r\n    onProfileLaunched();\r\n  };\r\n\r\n  if (isElectron) {\r\n    return (\r\n      <ButtonRun\r\n        isInDrawer={isInDrawer}\r\n        newStyle={!!NEW_FEATURES.header}\r\n        size='small'\r\n        onClick={focusOrbita}\r\n      >\r\n        {translation('base.view')}\r\n      </ButtonRun>\r\n    );\r\n  }\r\n\r\n  const handleClickWeb: React.MouseEventHandler<HTMLAnchorElement> = (event) => {\r\n    event.preventDefault();\r\n    openCloudBrowserUrlInSingleTab(browserUrl, profileId);\r\n    sendStats();\r\n  };\r\n\r\n  return (\r\n    <ButtonRun\r\n      isInDrawer={isInDrawer}\r\n      newStyle={!!NEW_FEATURES.header}\r\n      size='small'\r\n    >\r\n      <a onClick={handleClickWeb}>\r\n        {translation('base.view')}\r\n      </a>\r\n    </ButtonRun>\r\n  );\r\n};\r\n\r\nexport default ViewProfileButton;\r\n","import { css } from '@emotion/core';\r\nimport { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport { Button } from 'antd';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { textFont } from '../../../ui/style-templates';\r\n\r\nconst ButtonRunProfile = styled(Button)<{ newStyle: boolean; isLoading: boolean; width?: number }>`\r\n  background: transparent;\r\n  padding: 5px;\r\n  text-align: center;\r\n  outline: none;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  display: flex;\r\n  min-height: 26px;\r\n  min-width: 56px;\r\n  border-radius: 4px;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  ${(props): SerializedStyles =>\r\n    css`\r\n      width: ${(props.width) ? `${props.width}px` : 'auto'};\r\n  `}\r\n\r\n  :hover {\r\n    background-color: var(--00B86D-profile-table-button-run);\r\n    color: var(--FFFFFF-profile-table-button-run);\r\n  }\r\n  \r\n  ${(props): SerializedStyles => props.newStyle ? css`\r\n    min-height: 24px;\r\n    min-width: 46px;\r\n    border: 1px solid;\r\n    color: var(--00997A-profile-table-button-run);\r\n    border-color: ${props.isLoading ? 'var(--00A987-profile-table-button-run)' : 'var(--88D1C3-profile-table-button-run)'};\r\n    ${textFont()};\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    letter-spacing: 0.2px;\r\n\r\n    :hover {\r\n      background-color: var(--00A987-profile-table-button-run);\r\n      border-color: var(--00A987-profile-table-button-run);\r\n    }\r\n\r\n    svg {\r\n      fill: var(--00A987-profile-table-button-run);\r\n    }\r\n\r\n    &.ant-btn.ant-btn-loading::before {\r\n      opacity: 1;\r\n      background: inherit;\r\n    }\r\n  ` : css`\r\n    border: 1px solid var(--00B86D-profile-table-button-run);\r\n    color: var(--00B86D-profile-table-button-run);\r\n  `}\r\n`;\r\n\r\ninterface IProps {\r\n  isLoading: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst BtnRunProfile: FC<IProps> = (props) => {\r\n  const { isLoading, onClick } = props;\r\n  const { t: translation } = useTranslation();\r\n\r\n  return (\r\n    <ButtonRunProfile\r\n      newStyle={!!NEW_FEATURES.header}\r\n      size='small'\r\n      onClick={async (): Promise<void> => {\r\n        onClick();\r\n      }}\r\n      loading={isLoading}\r\n      isLoading={isLoading}\r\n    >\r\n      {translation('base.run')}\r\n    </ButtonRunProfile>\r\n  );\r\n};\r\n\r\nexport default BtnRunProfile;\r\n","import { Button, Tooltip } from 'antd';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ButtonRun, ButtonStop, DrawerButtonRun, DrawerButtonStop } from './styles';\r\nimport ViewProfileButton from './view-button';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IAutomation, IProfile } from '../../../interfaces';\r\nimport { useProfileRunStatus } from '../../../state/profile-run-statuses.atom';\r\nimport { sendActionAnalytics } from '../../common/api';\r\nimport { stopProfileWeb, launchProfileWeb, stopProfileOrbita } from '../actions';\r\nimport BtnRunProfile from '../components/button-run-profile';\r\nimport { ILaunchProfileOrbita } from '../components/interfaces/launch-profile-orbita.interface';\r\n\r\nconst isElectron = !!window.require;\r\n\r\ntype IProfileRunOnly = Pick<IProfile, 'id'|'isWeb'|'navigator'|'canBeRunning'>;\r\n\r\ninterface IRunProfileButton {\r\n  profile: IProfileRunOnly;\r\n  automation?: IAutomation;\r\n  browserUpdating?: boolean;\r\n  versionLoadingNow?: string;\r\n  isInDrawer?: boolean;\r\n  launchProfileOrbita: (opts: ILaunchProfileOrbita) => void;\r\n}\r\n\r\nconst RunProfileButton: FC<IRunProfileButton> = (props): JSX.Element|null => {\r\n  const {\r\n    profile,\r\n    automation,\r\n    browserUpdating,\r\n    versionLoadingNow,\r\n    isInDrawer,\r\n    launchProfileOrbita,\r\n  } = props;\r\n\r\n  const isOldDrawer = isInDrawer && !NEW_FEATURES.drawer;\r\n\r\n  const { status, isWeb, remoteOrbitaUrl } = useProfileRunStatus(profile.id);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const onRunClick = (): void => {\r\n    sendActionAnalytics('clicked run profile');\r\n    if (isElectron) {\r\n      launchProfileOrbita({ profile, automation });\r\n\r\n      return;\r\n    }\r\n\r\n    launchProfileWeb(profile);\r\n  };\r\n\r\n  if (automation && status !== 'profileStatuses.ready') {\r\n    return null;\r\n  }\r\n\r\n  if (status === 'profileStatuses.running') {\r\n    if (profile.isWeb || isWeb) {\r\n      return (\r\n        <>\r\n          <ViewProfileButton profileId={profile.id} remoteOrbitaUrl={remoteOrbitaUrl} />\r\n          {isOldDrawer ? (\r\n            <DrawerButtonStop\r\n              style={{ marginLeft: 10 }}\r\n              onClick={(): void => {\r\n                stopProfileWeb(profile.id);\r\n                sendActionAnalytics('clicked stop profile');\r\n              }}\r\n            >\r\n              {translation('quickSettings.stopBtnTxt')}\r\n            </DrawerButtonStop>\r\n          ) : (\r\n            <ButtonStop\r\n              newStyle={!!NEW_FEATURES.header}\r\n              size='small'\r\n              onClick={(): void => {\r\n                stopProfileWeb(profile.id);\r\n                sendActionAnalytics('clicked stop profile');\r\n              }}\r\n            >\r\n              {translation('base.stop')}\r\n            </ButtonStop>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {isElectron ? (\r\n          <ViewProfileButton profileId={profile.id} remoteOrbitaUrl={remoteOrbitaUrl} />\r\n        ) : null}\r\n        {isOldDrawer ? (\r\n          <DrawerButtonStop\r\n            style={{ marginLeft: 10 }}\r\n            onClick={(): void => {\r\n              stopProfileOrbita(profile.id);\r\n              sendActionAnalytics('clicked stop profile');\r\n            }}\r\n          >\r\n            {translation('quickSettings.stopBtnTxt')}\r\n          </DrawerButtonStop>\r\n        ) : (\r\n          <ButtonStop\r\n            newStyle={!!NEW_FEATURES.header}\r\n            size='small'\r\n            onClick={(): void => {\r\n              stopProfileOrbita(profile.id);\r\n              sendActionAnalytics('clicked stop profile');\r\n            }}\r\n          >\r\n            {translation('base.stop')}\r\n          </ButtonStop>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const disabled = !profile.canBeRunning;\r\n  const chromeVersionMatch = profile?.navigator?.userAgent && profile.navigator.userAgent.match(/[\\s\\S\\w]+Chrome\\/(\\d+)/) || [];\r\n  if (!chromeVersionMatch) {\r\n    return null;\r\n  }\r\n\r\n  const [_, version = ''] = chromeVersionMatch;\r\n  const isBrowserUpdating =\r\n    browserUpdating\r\n    && (Number(version) === Number(versionLoadingNow) || versionLoadingNow === '');\r\n\r\n  const loading = !['profileStatuses.ready', 'profileStatuses.error', 'profileStatuses.running'].includes(status || '');\r\n  if (loading && !isOldDrawer) {\r\n    return (\r\n      <ButtonRun\r\n        newStyle={!!NEW_FEATURES.header}\r\n        size='small'\r\n        loading={true}\r\n        isLoading={true}\r\n        width={NEW_FEATURES.header ? 46 : 56}\r\n        style={{ background: 'transparent' }}\r\n      >\r\n      </ButtonRun>\r\n    );\r\n  }\r\n\r\n  if (loading && isOldDrawer) {\r\n    return (\r\n      <DrawerButtonRun\r\n        size='small'\r\n        loading={true}\r\n      >\r\n        {translation('quickSettings.syncingTxt')}\r\n      </DrawerButtonRun>\r\n    );\r\n  }\r\n\r\n  // Данный маневр обойдется нам в 50 лет...\r\n  // Часть автобиографии Егора или как писался GoLogin\r\n  // Весь следующий блок `if` - сплошной костыль и казалось бы для чего он?\r\n  // А все просто: ant.design чтобы сделать тултип - добавляет в рантайме еще один `span` который и является тултипом\r\n  // Emotion через которую мы стили накидываем - блокирует добавление этого спана если у кнопки disabled=true\r\n  // При этом emotion не блокирует добавление тултипа в ост случаях\r\n  // В итоге мне как настоящему королю говнокода пришлось создать доп кнопку с дисаблом и дать ей стили инлайново\r\n  // 👏👏👏👏👏👏👏👏👏👏\r\n  if (disabled || isBrowserUpdating) {\r\n    return (\r\n      <Tooltip\r\n        title={isBrowserUpdating ? translation('notifications.error.orbitaIsDownloading') : translation('notifications.error.runByAnotherUser')}\r\n        placement='topLeft'\r\n      >\r\n        <Button\r\n          disabled={true}\r\n          size='small'\r\n          style={{\r\n            borderRadius: 4,\r\n            minHeight: NEW_FEATURES.header ? 24 : 26,\r\n            minWidth: NEW_FEATURES.header ? 46 : 56,\r\n            fontWeight: NEW_FEATURES.header ? 400 : 500,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            padding: isOldDrawer ? '5px 11px 4px 11px' : '',\r\n          }}\r\n        >\r\n          {isOldDrawer ? translation('quickSettings.runBtnTxt') : translation('base.run')}\r\n        </Button>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  if (isOldDrawer) {\r\n    return (\r\n      <DrawerButtonRun\r\n        size='small'\r\n        onClick={onRunClick}\r\n        loading={loading}\r\n      >\r\n        {translation('quickSettings.runBtnTxt')}\r\n      </DrawerButtonRun>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <BtnRunProfile\r\n      isLoading={loading}\r\n      onClick={onRunClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RunProfileButton;\r\n","import { Popover } from 'antd';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { DrawerProfileHeaderButtons, DrawerTrustworthy, NewStyleText } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { history } from '../../../services';\r\nimport { useProfileRunStatus } from '../../../state/profile-run-statuses.atom';\r\nimport { IProfileRunStatus } from '../../../state/profiles-list.atom';\r\nimport { IconSettings2, IconShield } from '../../../ui/gologin-header/icons';\r\nimport { IconWrapperWithDescription } from '../../../ui/gologin-header/icons/wrapper';\r\nimport IconTrustworthy from '../../../ui/icons/IconTrustworthy';\r\nimport { ILaunchProfileOrbita } from '../../quickProfiles/components/interfaces/launch-profile-orbita.interface';\r\nimport RunProfileButton from '../../quickProfiles/run-button';\r\n\r\ninterface IDrawerHeaderButtons {\r\n  profile: IProfile;\r\n  renderDropDownMenu: (rowInfo: IProfile & IProfileRunStatus, isInDrawer?: boolean) => JSX.Element;\r\n  launchProfileOrbita: (opts: ILaunchProfileOrbita) => void;\r\n}\r\n\r\nconst DrawerHeaderButtons: FC<IDrawerHeaderButtons> = (props) => {\r\n  const {\r\n    profile,\r\n    renderDropDownMenu,\r\n    launchProfileOrbita,\r\n  } = props;\r\n\r\n  const profileRunStatus = useProfileRunStatus(profile?.id);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const renderAdvanced = (): JSX.Element|null => {\r\n    if (!NEW_FEATURES.header) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <IconWrapperWithDescription\r\n        onClick={() => history.push(`/update/${profile?.id}`)}\r\n        style={{ marginLeft: 24 }}\r\n        colorIconType='activeGray'\r\n        iconColor='var(--767676)'\r\n        iconHoveredColor='var(--2B2B31)'\r\n        textColor='var(--767676)'\r\n        textHoveredColor='var(--2B2B31)'\r\n        iconType='stroke'\r\n      >\r\n        <IconSettings2 padding={0} />\r\n        <NewStyleText>\r\n          {translation('profiles.menu.editProfile')}\r\n        </NewStyleText>\r\n      </IconWrapperWithDescription>\r\n    );\r\n  };\r\n\r\n  const trustworthyPopover = (\r\n    <div style={{ width: 250, fontFamily: 'Roboto', fontSize: 12, color: '666666' }}>\r\n      <div style={{ fontWeight: 700 }}>\r\n        {translation('profiles.tutorial.trustworthy.title')}\r\n      </div>\r\n      <div style={{ width: 216 }}>\r\n        {translation('profiles.tutorial.trustworthy.contentTxt')}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderTrustworthy = (): JSX.Element => {\r\n    if (!NEW_FEATURES.header) {\r\n      return (\r\n        <>\r\n          <IconTrustworthy />\r\n          <Popover\r\n            content={trustworthyPopover}\r\n            placement={'top'}\r\n          >\r\n            <DrawerTrustworthy>\r\n              {translation('quickSettings.trustworthyTxt')}\r\n            </DrawerTrustworthy>\r\n          </Popover>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Popover\r\n        content={trustworthyPopover}\r\n        placement={'top'}\r\n      >\r\n        <div style={{ marginLeft: 16, display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n          <IconShield\r\n            styleType='green'\r\n            padding={0}\r\n            iconColor='var(--00A987)'\r\n          />\r\n          <NewStyleText>\r\n            {translation('quickSettings.trustworthyTxt')}\r\n          </NewStyleText>\r\n        </div>\r\n      </Popover>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DrawerProfileHeaderButtons newStyle={!!NEW_FEATURES.header}>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <RunProfileButton\r\n          profile={profile || {}}\r\n          isInDrawer={true}\r\n          launchProfileOrbita={launchProfileOrbita}\r\n        />\r\n        {renderAdvanced()}\r\n        {renderDropDownMenu({ ...profile, ...profileRunStatus }, true)}\r\n      </div>\r\n      {renderTrustworthy()}\r\n    </DrawerProfileHeaderButtons>\r\n  );\r\n};\r\n\r\nexport default DrawerHeaderButtons;\r\n","import styled from '@emotion/styled';\r\nimport { Icon, Table } from 'antd';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ArrowDrawer = styled('div')`\r\n  border: solid var(--01AD7F);\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  padding: 3px;\r\n  transform: rotate(135deg);\r\n  opacity: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ElementContainer = styled('div')`\r\n  font-family: 'Roboto';\r\n  margin: 0 25px 0 25px;\r\n`;\r\n\r\nconst TitleContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: 32px;\r\n  margin-bottom: 41px;\r\n  margin-left: 36px;\r\n`;\r\n\r\nconst TittleSetting = styled('div')`\r\n  font-weight: 500;\r\n  font-family: 'Roboto';\r\n  font-size: 20px;\r\n  color: var(--000000);\r\n  margin-left: 12px;\r\n  margin-top: -2px;\r\n`;\r\n\r\nconst TittleSettingSave = styled('div')`\r\n  font-weight: 400;\r\n  font-family: 'Roboto';\r\n  font-size: 14px;\r\n  margin-left: 20px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst TableLanguage = styled(Table)`\r\n  background-color: var(--008000);\r\n  thead > tr > th {\r\n    background-color: var(--FFFFFF);\r\n  }\r\n\r\n  .ant-checkbox {\r\n    padding: 0;\r\n   }\r\n  .ant-checkbox {\r\n  .ant-table-thead > tr > th {\r\n    border-bottom: 0px solid var(--E8E8E7);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContainerNameCol = styled('div')`\r\n  flex-direction: row;\r\n  display: flex;\r\n  align-items: baseline;\r\n  color: var(--ACACAC);\r\n`;\r\n\r\ndeclare interface IProfileDrawerLanguage {\r\n  languages?: string;\r\n  localesDrawerVisible?: boolean;\r\n  profileInfo?: any;\r\n  changeVisibility: () => void;\r\n}\r\n\r\nexport const DrawerLanguage: FC<IProfileDrawerLanguage> = (props) => {\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const sortAlphabet = (a:any, b:any) => a > b ? 1 : a < b ? -1 : 0;\r\n\r\n  const dataSource = [];\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n  };\r\n\r\n  const showContent = () => {\r\n    return (\r\n      <>\r\n        <TitleContainer>\r\n          <ArrowDrawer onClick={props.changeVisibility} />\r\n          <TittleSetting>\r\n            {translation('language.title')}\r\n          </TittleSetting>\r\n          <TittleSettingSave>\r\n            {translation('quickSettings.loader.saving')}\r\n          </TittleSettingSave>\r\n          <TittleSettingSave style={{ marginLeft: 22 }}>\r\n            {translation('quickSettings.loader.saved')}\r\n          </TittleSettingSave>\r\n        </TitleContainer>\r\n        <ElementContainer>\r\n          <TableLanguage\r\n            rowKey='key'\r\n            pagination={false}\r\n            scroll={{ y: 500 }}\r\n            dataSource={dataSource}\r\n            rowSelection={rowSelection}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            <Table.Column\r\n              title={(\r\n                <ContainerNameCol>\r\n                  <span>{translation('language.title')}</span>\r\n                </ContainerNameCol>\r\n              )}\r\n              dataIndex='language'\r\n              key='language'\r\n              sorter={(a: any, b: any) => sortAlphabet(a.language, b.language)}\r\n            />\r\n            <Table.Column\r\n              title={() => <Icon type=\"search\" style={{ color: 'var(--ACACAC)' }}/>}\r\n              width={30}\r\n            />\r\n          </TableLanguage>\r\n        </ElementContainer>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showContent()}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst IconCopyProxyInDrawerStyle = styled('svg')`\r\n  stroke: var(--ACACAC);\r\n  :hover {\r\n    stroke: var(--00A987);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst IconCopyProxyInDrawer = () => (\r\n    <IconCopyProxyInDrawerStyle width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M3.5 6.5L8 11.5L12.5 6.5H9.5V0.5H6.5V6.5H3.5Z\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        <path d=\"M15.5 10.5V14.5C15.5 15.052 15.052 15.5 14.5 15.5H1.5C0.948 15.5 0.5 15.052 0.5 14.5V10.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    </IconCopyProxyInDrawerStyle>\r\n);\r\n\r\nexport default IconCopyProxyInDrawer;\r\n","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst IconCopyProxyInDrawerStyle = styled('svg')`\r\n  stroke: var(--ACACAC);\r\n  :hover {\r\n    stroke: var(--00A987);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst IconSelectProxyInDrawer = () => (\r\n    <IconCopyProxyInDrawerStyle width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M2 3.5C2.82843 3.5 3.5 2.82843 3.5 2C3.5 1.17157 2.82843 0.5 2 0.5C1.17157 0.5 0.5 1.17157 0.5 2C0.5 2.82843 1.17157 3.5 2 3.5Z\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        <path d=\"M2 9.5C2.82843 9.5 3.5 8.82843 3.5 8C3.5 7.17157 2.82843 6.5 2 6.5C1.17157 6.5 0.5 7.17157 0.5 8C0.5 8.82843 1.17157 9.5 2 9.5Z\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        <path d=\"M2 15.5C2.82843 15.5 3.5 14.8284 3.5 14C3.5 13.1716 2.82843 12.5 2 12.5C1.17157 12.5 0.5 13.1716 0.5 14C0.5 14.8284 1.17157 15.5 2 15.5Z\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        <path d=\"M15.5 0.5H6.5V3.5H15.5V0.5Z\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        <path d=\"M15.5 6.5H6.5V9.5H15.5V6.5Z\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        <path d=\"M15.5 12.5H6.5V15.5H15.5V12.5Z\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    </IconCopyProxyInDrawerStyle>\r\n);\r\n\r\nexport default IconSelectProxyInDrawer;\r\n","/* eslint-disable max-lines */\r\nimport css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport { Button, Icon, Input, Select, Tooltip } from 'antd';\r\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\r\nimport React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Loader, { TLoaderStatus } from './Loader';\r\nimport IconCopyProxyInDrawer from '../../../ui/icons/IconCopyProxyInDrawer';\r\nimport IconSelectProxyInDrawer from '../../../ui/icons/IconSelectProxyInDrawer';\r\nimport { getCheckProxy } from '../../../utils/check-proxy';\r\nimport { updateProfileProxy } from '../api';\r\n\r\nlet ipcRenderer: Electron.IpcRenderer;\r\nconst isElectron = !!window.require;\r\nif (isElectron) {\r\n  ipcRenderer = window.require('electron').ipcRenderer;\r\n}\r\n\r\nconst LoaderDiv = styled('div')`\r\n  display: inline-block;\r\n  margin-left: 10px;\r\n  margin-top: 6px;\r\n`;\r\n\r\nconst ProxyCheckResultDiv = styled('div')<{ fontColor: string }>`\r\n  margin-left: 10px;\r\n  margin-top: 6px;\r\n  ${props => css`color: ${props.fontColor};`}\r\n`;\r\n\r\nconst CountryFlagContainer = styled('div')`\r\n  margin-left: 10px;\r\n  display: inline;\r\n  cursor: alias;\r\n`;\r\n\r\nconst ArrowDrawer = styled('div')`\r\n  border: solid var(--01AD7F);\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  padding: 3px;\r\n  transform: rotate(135deg);\r\n  opacity: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst IconClearForm = styled(Icon)`\r\n  color: var(--ACACAC);\r\n  :hover {\r\n    color: var(--00A987);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ElementContainer = styled('div')`\r\n  font-family: 'Roboto';\r\n  margin-top: 10px;\r\n  margin-bottom: 22px;\r\n  margin-left: 12px;\r\n`;\r\n\r\nconst TitleTooltipIcon = styled('span')`\r\n  font-size: 12px;\r\n  color: var(--666666);\r\n  font-family: 'Roboto';\r\n  font-weight: 700;\r\n`;\r\n\r\nconst TitleTooltipIconClear = styled('span')`\r\n  font-size: 12px;\r\n  opacity: 0.6;\r\n`;\r\n\r\nconst ContainerTooltipIconClear = styled('span')`\r\n  padding-top: 6px;\r\n  padding-left: 14px;\r\n`;\r\n\r\nconst TitleContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: 32px;\r\n  margin-bottom: 22px;\r\n  margin-left: 36px;\r\n`;\r\n\r\nconst TittleSetting = styled('div')`\r\n  font-weight: 500;\r\n  font-family: 'Roboto';\r\n  font-size: 20px;\r\n  color: var(--000000);\r\n  margin-left: 12px;\r\n  margin-top: -2px;\r\n`;\r\n\r\nconst TittleInput = styled('div')`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  color: var(--000000);\r\n  margin-left: 12px;\r\n  padding-top: 6px;\r\n`;\r\n\r\nconst ContainerIcon = styled('div')`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst PROXY_CHECKED_INIT = {\r\n  status: '',\r\n  origin: '',\r\n  country: '',\r\n  timezone: '',\r\n  error: '',\r\n};\r\n\r\ndeclare interface IProxyChecked {\r\n  status: string;\r\n  origin: string;\r\n  country: string;\r\n  timezone: string;\r\n  error: string;\r\n}\r\n\r\nconst PROXY_SETTINGS = {\r\n  mode: '',\r\n  host: '',\r\n  port: 80,\r\n  username: '',\r\n  password: '',\r\n  changeIpUrl: '',\r\n  autoProxyRegion: '',\r\n  torProxyRegion: '',\r\n  wasSaved: false,\r\n};\r\n\r\nlet saveTimeout: any;\r\nlet proxyUpdateCounter = 0;\r\nlet loaderStatusTimeout: any;\r\n\r\ndeclare interface IProfileDrawerProxy {\r\n  profileInfo?: any;\r\n  changeVisibility: () => void;\r\n  updateProfileInfoProxy: (id: string, proxy: any) => any;\r\n  setPasteProxy: () => any;\r\n  showProxyManager: () => any;\r\n}\r\n\r\nexport const DrawerProxy: FC<IProfileDrawerProxy> = (props) => {\r\n  const [loaderStatus, setLoaderStatus] = useState<TLoaderStatus>('default');\r\n  const [isLoading, changeLoading] = useState<boolean>(false);\r\n  const [checkButtonDisabled, setCheckButtonDisabled] = useState<boolean>(false);\r\n  const [proxyChecked, setProxyChecked] = useState<IProxyChecked>(PROXY_CHECKED_INIT);\r\n  const [modeState, setModeState] = useState<string>(PROXY_SETTINGS.mode);\r\n  const [username, setUsername] = useState<string>(PROXY_SETTINGS.username);\r\n  const [password, setPassword] = useState<string>(PROXY_SETTINGS.password);\r\n  const [changeIpUrl, setChangeIpUrl] = useState<string>(PROXY_SETTINGS.changeIpUrl);\r\n  const [host, setHost] = useState<string>(PROXY_SETTINGS.host);\r\n  const [port, setPort] = useState<number>(PROXY_SETTINGS.port);\r\n  const [isProxyCheckInterrupted, setIsProxyCheckInterrupted] = useState<boolean>(false);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (isProxyCheckInterrupted) {\r\n      changeLoading(false);\r\n      setCheckButtonDisabled(false);\r\n    }\r\n  }, [isProxyCheckInterrupted]);\r\n\r\n  const checkProxy = async () => {\r\n    changeLoading(true);\r\n    setCheckButtonDisabled(true);\r\n    setIsProxyCheckInterrupted(false);\r\n    setProxyChecked(PROXY_CHECKED_INIT);\r\n\r\n    const result = await getCheckProxy(props.profileInfo);\r\n\r\n    setProxyChecked(result);\r\n    changeLoading(false);\r\n    setCheckButtonDisabled(false);\r\n  };\r\n\r\n  const getLoader = () => {\r\n    if (isLoading) {\r\n      return (\r\n        <LoaderDiv>\r\n          <Icon type='loading' />\r\n        </LoaderDiv>\r\n      );\r\n    }\r\n\r\n    if (proxyChecked?.status && !isProxyCheckInterrupted) {\r\n      const proxyCheckedStatus = proxyChecked.status;\r\n      if (proxyCheckedStatus === 'success') {\r\n        return (\r\n          <ProxyCheckResultDiv fontColor='green'>\r\n            Success\r\n            <Tooltip title={`IP: ${proxyChecked.origin}. ${translation('base.country')}: ${proxyChecked.country}. ${translation('base.timezone')}: ${proxyChecked.timezone}`}>\r\n              <CountryFlagContainer>\r\n                {getUnicodeFlagIcon(proxyChecked.country)}\r\n              </CountryFlagContainer>\r\n            </Tooltip>\r\n          </ProxyCheckResultDiv>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <ProxyCheckResultDiv fontColor='red'>\r\n          {proxyChecked.error}\r\n        </ProxyCheckResultDiv>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const clearProxy = () => {\r\n    PROXY_SETTINGS.username = '';\r\n    PROXY_SETTINGS.password = '';\r\n    PROXY_SETTINGS.host = '';\r\n    PROXY_SETTINGS.port = 80;\r\n    PROXY_SETTINGS.changeIpUrl = '';\r\n    PROXY_SETTINGS.autoProxyRegion = 'us';\r\n    PROXY_SETTINGS.torProxyRegion = 'us';\r\n    PROXY_SETTINGS.wasSaved = true;\r\n\r\n    setUsername(PROXY_SETTINGS.username);\r\n    setPassword(PROXY_SETTINGS.password);\r\n    setChangeIpUrl(PROXY_SETTINGS.changeIpUrl);\r\n    setPort(PROXY_SETTINGS.port);\r\n    setHost(PROXY_SETTINGS.host);\r\n\r\n    saveProxy();\r\n  };\r\n\r\n  const setPasteProxy = async () => {\r\n    setIsProxyCheckInterrupted(true);\r\n    const dataProxy = await props.setPasteProxy();\r\n    PROXY_SETTINGS.username = dataProxy.username || '';\r\n    PROXY_SETTINGS.password = dataProxy.password || '';\r\n    PROXY_SETTINGS.mode = dataProxy.mode || '';\r\n    PROXY_SETTINGS.host = dataProxy.host || '';\r\n    PROXY_SETTINGS.port = dataProxy.port || '80';\r\n    PROXY_SETTINGS.wasSaved = true;\r\n\r\n    setModeState(dataProxy.mode || '');\r\n    setUsername(PROXY_SETTINGS.username);\r\n    setPassword(PROXY_SETTINGS.password);\r\n    setPort(PROXY_SETTINGS.port);\r\n    setHost(PROXY_SETTINGS.host);\r\n  };\r\n\r\n  const saveProxy = async () => {\r\n    if (PROXY_SETTINGS.host.replace(/[' ']/g, '') || ['none', 'gologin', 'tor'].includes(PROXY_SETTINGS.mode)) {\r\n      clearTimeout(loaderStatusTimeout);\r\n      setLoaderStatus('processing');\r\n\r\n      loaderStatusTimeout = setTimeout(() => {\r\n        setLoaderStatus('done');\r\n        loaderStatusTimeout = setTimeout(() => setLoaderStatus('default'), 0.5 * 1000);\r\n      }, 0.5 * 1000);\r\n\r\n      props.updateProfileInfoProxy(props.profileInfo.id, {\r\n        mode: PROXY_SETTINGS.mode,\r\n        password: PROXY_SETTINGS.password || '',\r\n        username: PROXY_SETTINGS.username || '',\r\n        host: PROXY_SETTINGS.host || '',\r\n        changeIpUrl: PROXY_SETTINGS.changeIpUrl || '',\r\n        port: +PROXY_SETTINGS.port || 80,\r\n        autoProxyRegion: PROXY_SETTINGS.autoProxyRegion,\r\n        torProxyRegion: PROXY_SETTINGS.torProxyRegion,\r\n      });\r\n\r\n      await updateProfileProxy({\r\n        id: props.profileInfo.id,\r\n        mode: (PROXY_SETTINGS.mode as any),\r\n        password: PROXY_SETTINGS.password || '',\r\n        username: PROXY_SETTINGS.username || '',\r\n        changeIpUrl: PROXY_SETTINGS.changeIpUrl || '',\r\n        host: PROXY_SETTINGS.host || '',\r\n        port: +PROXY_SETTINGS.port || 80,\r\n        autoProxyRegion: PROXY_SETTINGS.autoProxyRegion,\r\n        torProxyRegion: PROXY_SETTINGS.torProxyRegion,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateSaveTimeout = () => {\r\n    if (saveTimeout !== undefined) {\r\n      clearTimeout(saveTimeout);\r\n    }\r\n\r\n    saveTimeout = setTimeout(() => {\r\n      saveProxy();\r\n    }, 500);\r\n  };\r\n\r\n  const onModeChanged = (mode: string) => {\r\n    PROXY_SETTINGS.mode = mode;\r\n    PROXY_SETTINGS.wasSaved = true;\r\n    setModeState(mode);\r\n    saveProxy();\r\n  };\r\n\r\n  const onHostChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n    PROXY_SETTINGS.host = e.target.value || '';\r\n    PROXY_SETTINGS.wasSaved = true;\r\n    setHost(e.target.value);\r\n    updateSaveTimeout();\r\n  };\r\n\r\n  const onPortChanged = (e: any) => {\r\n    PROXY_SETTINGS.port = e.target.value || '';\r\n    PROXY_SETTINGS.wasSaved = true;\r\n    setPort(e.target.value);\r\n    updateSaveTimeout();\r\n  };\r\n\r\n  const onUsernameChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n    PROXY_SETTINGS.username = e.target.value || '';\r\n    PROXY_SETTINGS.wasSaved = true;\r\n    setUsername(e.target.value);\r\n    updateSaveTimeout();\r\n  };\r\n\r\n  const onPasswordChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n    PROXY_SETTINGS.password = e.target.value || '';\r\n    PROXY_SETTINGS.wasSaved = true;\r\n    setPassword(e.target.value);\r\n    updateSaveTimeout();\r\n  };\r\n\r\n  const onChangeIpUrlChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n    PROXY_SETTINGS.changeIpUrl = e.target.value || '';\r\n    PROXY_SETTINGS.wasSaved = true;\r\n    setChangeIpUrl(e.target.value);\r\n    updateSaveTimeout();\r\n  };\r\n\r\n  const onAutoProxyRegionChanged = (selectedRegionGologin: string) => {\r\n    PROXY_SETTINGS.autoProxyRegion = selectedRegionGologin;\r\n    PROXY_SETTINGS.wasSaved = true;\r\n    saveProxy();\r\n  };\r\n\r\n  const onTorProxyRegionChanged = (selectedRegionTor: string) => {\r\n    PROXY_SETTINGS.torProxyRegion = selectedRegionTor;\r\n    PROXY_SETTINGS.wasSaved = true;\r\n    saveProxy();\r\n  };\r\n\r\n  const setIconPasteProxy = () => (\r\n    <Tooltip title={<TitleTooltipIcon>\r\n      {translation('editProfile.proxy.paste.title')}\r\n      <br />\r\n      <TitleTooltipIcon style={{ fontWeight: 400 }}>\r\n        {translation('editProfile.proxy.paste.contentText')}\r\n        <br />\r\n        <br />\r\n        {translation('editProfile.proxy.paste.help')}\r\n      </TitleTooltipIcon>\r\n                    </TitleTooltipIcon>}>\r\n      <div\r\n        onClick={setPasteProxy}\r\n        style={{ marginLeft: 14 }}\r\n      >\r\n        <IconCopyProxyInDrawer />\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n\r\n  const setIconExistingProxy = () => (\r\n    <Tooltip title={<TitleTooltipIcon >\r\n      {translation('proxyManager.title')}\r\n      <br />\r\n      <TitleTooltipIcon style={{ fontWeight: 400 }}>\r\n        {translation('proxyManager.help')}\r\n      </TitleTooltipIcon>\r\n                    </TitleTooltipIcon>}>\r\n      <div\r\n        style={{ marginLeft: 13 }}\r\n        onClick={() => props.showProxyManager()}\r\n      >\r\n        <IconSelectProxyInDrawer />\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n\r\n  useEffect(() => {\r\n    PROXY_SETTINGS.username = props?.profileInfo?.proxy?.username || '';\r\n    PROXY_SETTINGS.password = props?.profileInfo?.proxy?.password || '';\r\n    PROXY_SETTINGS.mode = props?.profileInfo?.proxy?.mode || '';\r\n    PROXY_SETTINGS.host = props?.profileInfo?.proxy?.host || '';\r\n    PROXY_SETTINGS.changeIpUrl = props?.profileInfo?.proxy?.changeIpUrl || '';\r\n    PROXY_SETTINGS.port = props?.profileInfo?.proxy?.port || '80';\r\n    PROXY_SETTINGS.autoProxyRegion = props?.profileInfo?.proxy?.autoProxyRegion || 'us';\r\n    PROXY_SETTINGS.torProxyRegion = props?.profileInfo?.proxy?.torProxyRegion || 'us';\r\n    PROXY_SETTINGS.wasSaved = !!proxyUpdateCounter;\r\n    setModeState(props?.profileInfo?.proxy?.mode || '');\r\n    setUsername(PROXY_SETTINGS.username);\r\n    setPassword(PROXY_SETTINGS.password);\r\n    setHost(PROXY_SETTINGS.host);\r\n    setPort(PROXY_SETTINGS.port);\r\n    setChangeIpUrl(PROXY_SETTINGS.changeIpUrl);\r\n\r\n    // Re-render input fields on proxy change\r\n    if (\r\n      ['http', 'socks4', 'socks5', 'geolocation'].includes(modeState)\r\n        && username\r\n        && password\r\n        && port\r\n        && host\r\n    ) {\r\n      setUsername(PROXY_SETTINGS.username);\r\n      setPassword(PROXY_SETTINGS.password);\r\n      setPort(PROXY_SETTINGS.port);\r\n      setHost(PROXY_SETTINGS.host);\r\n      setChangeIpUrl(PROXY_SETTINGS.changeIpUrl);\r\n    }\r\n\r\n    proxyUpdateCounter++;\r\n  }, [props.profileInfo]);\r\n\r\n  const renderProxyCredentials = () => (\r\n    <>\r\n      <TittleInput>\r\n        {translation('editProfile.proxy.hostAndPortLabel')}\r\n      </TittleInput>\r\n      <ElementContainer style={{ paddingBottom: 2 }}>\r\n        <Input.Group compact={true} style={{ width: 326 }}>\r\n          <Input\r\n            value={host.replace(/[' ']/g, '')}\r\n            placeholder={translation('editProfile.proxy.hostInputPlaceholder')}\r\n            style={{ width: 190 }}\r\n            defaultValue={props?.profileInfo?.proxy?.host}\r\n            onChange={onHostChanged}\r\n          />\r\n          <Input\r\n            style={{\r\n              width: 10,\r\n              padding: 3,\r\n              borderLeft: 0,\r\n              pointerEvents: 'none',\r\n              backgroundColor: 'var(--FFFFFF)',\r\n            }}\r\n            placeholder=':'\r\n            disabled={true}\r\n          />\r\n          <Input\r\n            value={port}\r\n            placeholder={translation('editProfile.proxy.portInputPlaceholder')}\r\n            style={{ width: 78, borderLeft: 0 }}\r\n            defaultValue={props?.profileInfo?.proxy?.port}\r\n            onChange={onPortChanged}\r\n          />\r\n          <ContainerTooltipIconClear>\r\n            <Tooltip title={<TitleTooltipIconClear>\r\n              {translation('base.cleanForm')}\r\n                            </TitleTooltipIconClear>}>\r\n              <IconClearForm type='delete' style={{ fontSize: 18, cursor: 'pointer' }} onClick={clearProxy} />\r\n            </Tooltip>\r\n          </ContainerTooltipIconClear>\r\n        </Input.Group>\r\n      </ElementContainer>\r\n      <TittleInput>\r\n        {translation('base.login')}\r\n      </TittleInput>\r\n      <ElementContainer>\r\n        <Input\r\n          value={username}\r\n          placeholder={translation('editProfile.proxy.loginInputPlaceholder')}\r\n          style={{ width: 278 }}\r\n          defaultValue={props?.profileInfo?.proxy?.username}\r\n          onChange={onUsernameChanged}\r\n        />\r\n      </ElementContainer>\r\n      <TittleInput>\r\n        {translation('base.password')}\r\n      </TittleInput>\r\n      <ElementContainer>\r\n        <Input\r\n          value={password}\r\n          placeholder={translation('editProfile.proxy.passwordInputPlaceholder')}\r\n          style={{ width: 278 }}\r\n          defaultValue={props?.profileInfo?.proxy?.password}\r\n          onChange={onPasswordChanged}\r\n        />\r\n      </ElementContainer>\r\n\r\n      <TittleInput>\r\n        {translation('proxyForm.changeIPURL')}\r\n      </TittleInput>\r\n      <ElementContainer style={{ marginBottom: 20 }}>\r\n        <Input\r\n          value={changeIpUrl}\r\n          placeholder={translation('proxyForm.changeIP')}\r\n          style={{ width: 278 }}\r\n          defaultValue={props?.profileInfo?.proxy?.changeIpUrl}\r\n          onChange={onChangeIpUrlChanged}\r\n        />\r\n      </ElementContainer>\r\n    </>\r\n  );\r\n\r\n  const renderAutoProxyRegion = () => (\r\n    <ElementContainer>\r\n      <Select\r\n        onSelect={onAutoProxyRegionChanged}\r\n        defaultValue={props?.profileInfo?.proxy?.autoProxyRegion || 'any'}\r\n        style={{ width: 278 }}\r\n      >\r\n        <Select.Option value='us'>\r\n          US\r\n        </Select.Option>\r\n        <Select.Option value='ca'>\r\n          CA\r\n        </Select.Option>\r\n        <Select.Option value='uk'>\r\n          UK\r\n        </Select.Option>\r\n        <Select.Option value='de'>\r\n          DE\r\n        </Select.Option>\r\n        <Select.Option value='in'>\r\n          IN\r\n        </Select.Option>\r\n      </Select>\r\n    </ElementContainer>\r\n  );\r\n\r\n  const renderTorProxyRegion = () => (\r\n    <ElementContainer>\r\n      <Select\r\n        onSelect={onTorProxyRegionChanged}\r\n        defaultValue={props?.profileInfo?.proxy?.torProxyRegion || 'any'}\r\n        style={{ width: 278 }}\r\n      >\r\n        <Select.Option value='us'>\r\n          US\r\n        </Select.Option>\r\n        <Select.Option value='uk'>\r\n          UK\r\n        </Select.Option>\r\n        <Select.Option value='de'>\r\n          DE\r\n        </Select.Option>\r\n        <Select.Option value='fr'>\r\n          FR\r\n        </Select.Option>\r\n        <Select.Option value='eu'>\r\n          EU\r\n        </Select.Option>\r\n      </Select>\r\n    </ElementContainer>\r\n  );\r\n\r\n  const showContent = () => (\r\n    <>\r\n      <TitleContainer>\r\n        <ArrowDrawer onClick={props.changeVisibility} />\r\n        <TittleSetting>\r\n          {translation('base.proxyType')}\r\n        </TittleSetting>\r\n        <Loader\r\n          state={loaderStatus}\r\n        />\r\n      </TitleContainer>\r\n      <ElementContainer style={{ marginLeft: 12, paddingTop: 6 }}>\r\n        <TittleInput>\r\n          {translation('proxy.connection.title')}\r\n        </TittleInput>\r\n        <ElementContainer style={{ paddingBottom: 2, display: 'flex', flexDirection: 'row' }}>\r\n          <Select\r\n            style={{ width: 278 }}\r\n            value={modeState}\r\n            onChange={onModeChanged}\r\n          >\r\n            <Select.Option value='none'>\r\n              {translation('proxy.connection.none.title')}\r\n            </Select.Option>\r\n            <Select.Option value='gologin'>\r\n              {translation('proxy.connection.gologin.title')}\r\n            </Select.Option>\r\n            <Select.Option value='tor'>\r\n              {translation('proxy.connection.tor.title')}\r\n            </Select.Option>\r\n            <Select.Option value='http'>\r\n              {translation('proxy.connection.http.title')}\r\n            </Select.Option>\r\n            <Select.Option value='socks4'>\r\n              {translation('proxy.connection.socks4.title')}\r\n            </Select.Option>\r\n            <Select.Option value='socks5'>\r\n              {translation('proxy.connection.socks5.title')}\r\n            </Select.Option>\r\n          </Select>\r\n          <ContainerIcon>\r\n            {setIconPasteProxy()}\r\n            {setIconExistingProxy()}\r\n          </ContainerIcon>\r\n        </ElementContainer>\r\n\r\n        {['http', 'socks4', 'socks5', 'geolocation'].includes(modeState) && renderProxyCredentials()}\r\n        {modeState === 'gologin' && renderAutoProxyRegion()}\r\n        {modeState === 'tor' && renderTorProxyRegion()}\r\n\r\n        {['http', 'socks4', 'socks5', 'geolocation'].includes(props?.profileInfo?.proxy?.mode) && (\r\n          <>\r\n            <ElementContainer style={{ display: 'flex', flexDirection: 'row' }}>\r\n              <Button\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  fontSize: 12 ,\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n                type='primary'\r\n                disabled={checkButtonDisabled}\r\n                onClick={checkProxy}\r\n              >\r\n                {translation('editProfile.proxy.checkProxyBtnText')}\r\n              </Button>\r\n              {getLoader()}\r\n            </ElementContainer>\r\n          </>\r\n        )}\r\n      </ElementContainer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {showContent()}\r\n      {/* {props.showProxyManager()}*/}\r\n    </>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { Select } from 'antd';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport TIMEZONES from '../../common/timezones';\r\nimport { updateProfileTimezone } from '../api';\r\nimport Loader, { TLoaderStatus } from './Loader';\r\n\r\nconst { Option } = Select;\r\n\r\nconst ArrowDrawer = styled('div')`\r\n  border: solid var(--01AD7F);\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  padding: 3px;\r\n  transform: rotate(135deg);\r\n  opacity: 1;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ElementContainer = styled('div')`\r\n  font-family: 'Roboto';\r\n  margin-top: 38px;\r\n  margin-left: 26px;\r\n`;\r\n\r\nconst TitleContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: 32px;\r\n  margin-bottom: 22px;\r\n  margin-left: 36px;\r\n`;\r\n\r\nconst TittleSetting = styled('div')`\r\n  font-weight: 500;\r\n  font-family: 'Roboto';\r\n  font-size: 20px;\r\n  color: var(--000000);\r\n  margin-left: 12px;\r\n  margin-top: -2px;\r\n`;\r\n\r\nconst Subtitle = styled('div')`\r\n  font-family: Roboto;\r\n  width: 320px;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  margin-left: -1px;\r\n  color: var(--7E7E7E);\r\n`;\r\n\r\nconst TIMEZONE_SETTINGS = {\r\n  fillBasedOnIp: true,\r\n  timezone: '',\r\n}\r\n\r\nlet hasBeenUpdated = false;\r\nlet loaderStatusTimeout: any;\r\n\r\ndeclare interface IProfileDrawerTimezone {\r\n  profileInfo?: any;\r\n  changeVisibility: () => void;\r\n  updateProfileTimezone: (id: string, timezone: any) => any;\r\n}\r\n\r\nexport const DrawerTimezone: FC<IProfileDrawerTimezone> = (props) => {\r\n  const [loaderStatus, setLoaderStatus] = useState<TLoaderStatus>('default');\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const save = async () => {\r\n    clearTimeout(loaderStatusTimeout);\r\n    setLoaderStatus('processing');\r\n\r\n    loaderStatusTimeout = setTimeout(() => {\r\n      setLoaderStatus('done');\r\n      loaderStatusTimeout = setTimeout(() => setLoaderStatus('default'), 0.5 * 1000);\r\n    }, 0.5 * 1000);\r\n\r\n    props.updateProfileTimezone(props?.profileInfo?.id, TIMEZONE_SETTINGS);\r\n    await updateProfileTimezone(props?.profileInfo?.id, TIMEZONE_SETTINGS);\r\n  }\r\n\r\n  const onTimezoneChange = (tz: string) => {\r\n    TIMEZONE_SETTINGS.fillBasedOnIp = tz === 'fill_based_on_ip';\r\n    TIMEZONE_SETTINGS.timezone = tz !== 'fill_based_on_ip' ? tz : '';\r\n    hasBeenUpdated = true;\r\n    save();\r\n  }\r\n\r\n  useEffect(() => {\r\n    TIMEZONE_SETTINGS.fillBasedOnIp = !!props?.profileInfo?.timezone?.fillBasedOnIp;\r\n    TIMEZONE_SETTINGS.timezone = props?.profileInfo?.timezone?.timezone;\r\n  }, []);\r\n\r\n  const getTimezoneContent = () => {\r\n    return (\r\n      <>\r\n        <Select\r\n          showSearch={true}\r\n          optionFilterProp='children'\r\n          onSelect={onTimezoneChange}\r\n          defaultValue={\r\n            props?.profileInfo?.timezone?.fillBasedOnIp\r\n              ? 'fill_based_on_ip'\r\n              : (props?.profileInfo?.timezone?.timezone || 'fill_based_on_ip')\r\n          }\r\n          style={{ width: 320, paddingBottom: 16 }}\r\n        >\r\n          <Option value='fill_based_on_ip'>\r\n            {translation('base.fillBasedOnIp')}\r\n          </Option>\r\n          {TIMEZONES.sort((a, b) => a.name.localeCompare(b.name)).map(\r\n            elem => {\r\n              const timezoneName = elem.name;\r\n              const offset = elem.offset;\r\n              return (\r\n                <Option key={timezoneName} value={timezoneName}>\r\n                  {timezoneName} ({offset})\r\n                </Option>\r\n              );\r\n            }\r\n          )}\r\n        </Select>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleContainer>\r\n        <ArrowDrawer onClick={props.changeVisibility} />\r\n\r\n        <TittleSetting>\r\n          {translation('base.timezone')}\r\n        </TittleSetting>\r\n\r\n        <Loader\r\n          state={loaderStatus}\r\n        />\r\n      </TitleContainer>\r\n      <ElementContainer>\r\n        {getTimezoneContent()}\r\n        {props?.profileInfo?.timezone?.fillBasedOnIp && (\r\n          <Subtitle>\r\n            {translation('timezone.help')}.\r\n          </Subtitle>\r\n        )}\r\n      </ElementContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst IconClose = () => (\r\n  <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g>\r\n      <path d=\"M19 5L5 19\" stroke=\"var(--828282)\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"square\" />\r\n      <path d=\"M19 19L5 5\" stroke=\"var(--828282)\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"square\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default IconClose;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst IconRemoveFolderFromRowStyle = styled('svg')`\r\n  stroke: var(--BDBDBD);\r\n  :hover {\r\n    stroke: var(--F5222D);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst IconRemoveFolderFromRow = () => (\r\n  <IconRemoveFolderFromRowStyle width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M10 2L2 10\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"square\"/>\r\n    <path d=\"M10 10L2 2\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"square\"/>\r\n  </IconRemoveFolderFromRowStyle>\r\n);\r\n\r\nexport default IconRemoveFolderFromRow;\r\n","import { message } from 'antd';\r\nimport React, { FC, useState, MouseEvent, DragEvent, ChangeEvent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport {\r\n  DEFAULT_COOKIES_BORDER_COLOR,\r\n  JsonTitleTxt,\r\n  DrugAndDropCookiesContainer,\r\n  CookiesTextArea,\r\n} from './styles/styles';\r\nimport IconCookiesDrop from '../../../../ui/icons/IconCookiesDrop';\r\nimport { getFormattedCookies } from '../../../../utils/cookies-parser';\r\nimport { sendActionAnalytics } from '../../../common/api';\r\nimport { ICookiesListModal } from '../../../common/interfaces/cookies-list-modal.interface';\r\nimport { updateProfileCookies } from '../../../quickProfiles/api';\r\nimport CookiesManagerModal from '../../components/cookies-manager-modal';\r\n\r\ndeclare interface ICookiesManager {\r\n  id: string;\r\n  name: string;\r\n  cookiesModalVisible: boolean;\r\n  toggleCookiesManagerModal: (arg: boolean) => void;\r\n  toggleCookiesListModal: (options: ICookiesListModal) => void;\r\n}\r\n\r\nconst CookiesManager: FC<ICookiesManager> = (props) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const [cookiesTxt, setCookiesTxt] = useState<string>('');\r\n  const [cookiesBorderColor, setCookiesBorderColor] = useState<string>(DEFAULT_COOKIES_BORDER_COLOR);\r\n  const [placeholder, setPlaceholder] = useState<string>(translation('cookieManagerModal.pastCookiesTextField.placeholder.default') || '');\r\n  const [cookiesButtonDisabled, setCookiesButtonDisabled] = useState<boolean>(true);\r\n\r\n  const { id, name, cookiesModalVisible, toggleCookiesManagerModal, toggleCookiesListModal } = props;\r\n\r\n  const onDragOver = (event: MouseEvent): void => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (event: DragEvent): void => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const { files } = event.dataTransfer;\r\n    parseFileList(files);\r\n  };\r\n\r\n  const parseFileList = (files: FileList): void => {\r\n    for (const file of files) {\r\n      parseFile(file);\r\n    }\r\n  };\r\n\r\n  const parseFile = (file: File): void => {\r\n    const allowedFileType = file.type === 'application/json' || file.type.match(/^text*/);\r\n    if (!allowedFileType) {\r\n      message.error(translation('cookies.importFile.error'));\r\n\r\n      return;\r\n    }\r\n\r\n    const reader: FileReader = new FileReader();\r\n    reader.readAsText(file);\r\n\r\n    reader.onload = (): undefined => {\r\n      let cookiesButtonDisabledToggle = true;\r\n      let cookiesBorderColorToggle = 'var(--FF0000)';\r\n      try {\r\n        getFormattedCookies(reader.result as string);\r\n        cookiesButtonDisabledToggle = false;\r\n        cookiesBorderColorToggle = DEFAULT_COOKIES_BORDER_COLOR;\r\n      } catch (err) {\r\n        return;\r\n      }\r\n\r\n      setCookiesTxt(reader.result as string);\r\n      setCookiesButtonDisabled(cookiesButtonDisabledToggle);\r\n      setCookiesBorderColor(cookiesBorderColorToggle);\r\n    };\r\n\r\n    reader.onerror = (): void => {\r\n      message.error(reader.error);\r\n    };\r\n  };\r\n\r\n  const closeCookiesModal = (): void => {\r\n    setCookiesTxt('');\r\n    setCookiesBorderColor(DEFAULT_COOKIES_BORDER_COLOR);\r\n    setCookiesButtonDisabled(true);\r\n    toggleCookiesManagerModal(false);\r\n  };\r\n\r\n  const saveProfileCookies = async (): Promise<void> => {\r\n    setCookiesButtonDisabled(true);\r\n    sendActionAnalytics('imported cookies');\r\n    let cookiesJson = [];\r\n    try {\r\n      cookiesJson = getFormattedCookies(cookiesTxt);\r\n    } catch (err) {\r\n      setCookiesBorderColor('var(--FF0000)');\r\n\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await updateProfileCookies(id, cookiesJson);\r\n      const cookiesLength = cookiesJson.length;\r\n      let text = `${cookiesLength} ${translation('cookies.updating.success')}`;\r\n\r\n      if (cookiesLength === 1) {\r\n        text = `${cookiesLength} ${translation('cookies.updating.success')}`;\r\n      }\r\n\r\n      const successMessageDuration = 5;\r\n\r\n      message.success(text, successMessageDuration);\r\n      closeCookiesModal();\r\n      toggleCookiesListModal({ visible: true, id, name });\r\n    } catch (error) {\r\n      message.error(translation('cookies.updating.error'));\r\n      setCookiesButtonDisabled(false);\r\n    }\r\n  };\r\n\r\n  const changeCookiesTxt = (event: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const txt = event.target.value;\r\n    let cookiesButtonDisabledToggle = true;\r\n    let cookiesBorderColorToggle = 'var(--FF0000)';\r\n\r\n    try {\r\n      getFormattedCookies(txt);\r\n      cookiesButtonDisabledToggle = false;\r\n      cookiesBorderColorToggle = DEFAULT_COOKIES_BORDER_COLOR;\r\n    } catch (err) {}\r\n\r\n    setCookiesTxt(event.target.value);\r\n    setCookiesButtonDisabled(cookiesButtonDisabledToggle);\r\n    setCookiesBorderColor(cookiesBorderColorToggle);\r\n  };\r\n\r\n  const hiddenFileInput = React.useRef<HTMLInputElement>(null);\r\n\r\n  const handleUploadClick = (): void => {\r\n    if (hiddenFileInput.current) {\r\n      hiddenFileInput.current.value = '';\r\n    }\r\n\r\n    hiddenFileInput && hiddenFileInput.current?.click();\r\n  };\r\n\r\n  const handleUploadChange = (event: any): void => {\r\n    const filesUploaded = event.target.files;\r\n    parseFileList(filesUploaded);\r\n  };\r\n\r\n  const cookiesSettings = (): JSX.Element => (\r\n    <div>\r\n      <h2 style={{ marginBottom: '20px', marginTop: '-15px' }}>\r\n        {name}\r\n      </h2>\r\n      <p>\r\n        {translation('cookieManagerModal.subtitle')}\r\n        &nbsp;\r\n        <JsonTitleTxt\r\n          onMouseEnter={(): void => setPlaceholder(translation('cookieManagerModal.pastCookiesTextField.placeholder.json') || '')}\r\n          onMouseLeave={(): void => setPlaceholder(translation('cookieManagerModal.pastCookiesTextField.placeholder.default') || '')}\r\n        >\r\n          {translation('base.json')}\r\n        </JsonTitleTxt>\r\n        &nbsp;\r\n        {translation('base.and')}\r\n        &nbsp;\r\n        <JsonTitleTxt\r\n          onMouseEnter={(): void => setPlaceholder(translation('cookieManagerModal.pastCookiesTextField.placeholder.netscape') || '')}\r\n          onMouseLeave={(): void => setPlaceholder(translation('cookieManagerModal.pastCookiesTextField.placeholder.default') || '')}\r\n        >\r\n          {translation('base.netscape')}\r\n        </JsonTitleTxt>\r\n        &nbsp;\r\n        {translation('base.format')}\r\n      </p>\r\n      <DrugAndDropCookiesContainer\r\n        onDrop={handleDrop}\r\n        onDragOver={onDragOver}\r\n        onClick={handleUploadClick}\r\n      >\r\n        <input\r\n          type='file'\r\n          ref={hiddenFileInput}\r\n          onChange={handleUploadChange}\r\n          style={{ display:'none' }}\r\n        />\r\n        <IconCookiesDrop />\r\n      </DrugAndDropCookiesContainer>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h3 style={{ color: DEFAULT_COOKIES_BORDER_COLOR }}>\r\n          {translation('base.or').toUpperCase()}\r\n        </h3>\r\n      </div>\r\n      <CookiesTextArea\r\n        value={cookiesTxt}\r\n        onChange={(event): void => changeCookiesTxt(event)}\r\n        style={{ borderColor: cookiesBorderColor }}\r\n        placeholder={placeholder}\r\n        onDrop={handleDrop}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CookiesManagerModal\r\n      visible={cookiesModalVisible}\r\n      cookiesButtonDisabled={cookiesButtonDisabled}\r\n      saveCookies={saveProfileCookies}\r\n      closeCookiesModal={closeCookiesModal}\r\n      cookiesSettings={cookiesSettings}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CookiesManager;\r\n","import { Button, Icon, Modal, Popconfirm, Table, Tooltip } from 'antd';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport CookiesManager from './cookies-manager';\r\nimport { ICookie } from './interfaces/interfaces';\r\nimport { ButtonImport, TableProfile, ContainerNameCol, Row } from './styles/styles';\r\nimport { sendActionAnalytics } from '../../../common/api';\r\nimport { ICookiesListModal } from '../../../common/interfaces/cookies-list-modal.interface';\r\nimport { cleanCookies, getProfileCookies } from '../../../quickProfiles/api';\r\n\r\nconst MAX_COOKIE_NAME_LENGTH = 32;\r\n\r\ndeclare interface ICookiesList {\r\n  id: string;\r\n  name: string;\r\n  afterClose?: () => void;\r\n  cookiesListModalVisible: boolean;\r\n  toggleCookiesListModal: (options: ICookiesListModal) => void;\r\n  onCookiesRequest?: (arg: unknown[]) => void;\r\n}\r\n\r\nconst CookiesList: FC<ICookiesList> = (props) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [cookiesList, setCookiesList] = useState<unknown[]>([]);\r\n  const [cookiesManagerModalVisible, setCookiesManagerModalVisible] = useState<boolean>(false);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const { id, name, afterClose, cookiesListModalVisible, toggleCookiesListModal, onCookiesRequest } = props;\r\n\r\n  const getCookiesList = async (): Promise<void> => {\r\n    if (!id || cookiesManagerModalVisible) {\r\n      setCookiesList([]);\r\n      setIsLoading(true);\r\n\r\n      return;\r\n    }\r\n\r\n    let getCookiesListRequest: ICookie[] = await getProfileCookies(id);\r\n    onCookiesRequest && onCookiesRequest(getCookiesListRequest);\r\n    getCookiesListRequest = getCookiesListRequest.map((elem: ICookie, index: number) => ({ ...elem, key: index + 1 }));\r\n    setCookiesList(getCookiesListRequest);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCookiesList().catch(() => null);\r\n  }, [id, name, cookiesManagerModalVisible]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const sortAlphabet = (left: string, right: string): number => {\r\n    if (left > right) {\r\n      return 1;\r\n    }\r\n\r\n    if (left < right) {\r\n      return -1;\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const modalOpenImport = (): void => {\r\n    toggleCookiesListModal({ visible: false, id, name });\r\n    toggleCookiesManagerModal(true);\r\n  };\r\n\r\n  const removeCookies = async (): Promise<void> => {\r\n    await cleanCookies(id);\r\n    onCookiesRequest && onCookiesRequest([]);\r\n    setCookiesList([]);\r\n  };\r\n\r\n  const showButtonClear = (): JSX.Element|null => {\r\n    if (!cookiesList.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        type='danger'\r\n        ghost={true}\r\n        style={{\r\n          backgroundColor: 'var(--B70000)',\r\n          color: 'var(--B70000)',\r\n          borderColor: 'var(--B70000)',\r\n          height: 30,\r\n          marginLeft: 20,\r\n          fontSize: 12,\r\n          borderRadius: 2,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {translation('base.clear')}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const showButtonImport = (): JSX.Element|null => {\r\n    if (!cookiesList.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ButtonImport\r\n        onClick={(): void => modalOpenImport()}\r\n        style={{\r\n          width: 70,\r\n          height: 30,\r\n          paddingLeft: 13,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {translation('base.import')}\r\n      </ButtonImport>\r\n    );\r\n  };\r\n\r\n  const showTable = (): JSX.Element => (\r\n    <Button onClick={(): void => modalOpenImport()} type='primary'>\r\n      {translation('cookieManagerModal.importCookiesBtn.label')}\r\n    </Button>\r\n  );\r\n\r\n  const toggleCookiesManagerModal = (state: boolean): void => setCookiesManagerModalVisible(state);\r\n\r\n  const getCookiesManager = (): JSX.Element => (\r\n    <CookiesManager\r\n      id={id}\r\n      name={name}\r\n      cookiesModalVisible={cookiesManagerModalVisible}\r\n      toggleCookiesManagerModal={toggleCookiesManagerModal}\r\n      toggleCookiesListModal={toggleCookiesListModal}\r\n    />\r\n  );\r\n\r\n  const exportCookies = async (): Promise<void> => {\r\n    sendActionAnalytics('exported cookies');\r\n    const fullCookies = await getProfileCookies(id, false);\r\n    const saveFileElement = document.createElement('a');\r\n    const outputFile = new Blob(['\\ufeff', JSON.stringify(fullCookies)], { type: 'text/plain' });\r\n\r\n    saveFileElement.href = URL.createObjectURL(outputFile);\r\n    saveFileElement.download = `Cookies_${name}.json`;\r\n\r\n    saveFileElement.click();\r\n  };\r\n\r\n  const showButtonExport = (): JSX.Element|null => {\r\n    if (!cookiesList.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ButtonImport\r\n        onClick={(): Promise<void> => exportCookies()}\r\n        style={{\r\n          width: 70,\r\n          height: 30,\r\n          paddingLeft: 13,\r\n          marginLeft: 20,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {translation('base.export')}\r\n      </ButtonImport>\r\n    );\r\n  };\r\n\r\n  const renderTitle = (value: string): JSX.Element|string => {\r\n    if (value.length > MAX_COOKIE_NAME_LENGTH) {\r\n      return (\r\n        <Tooltip title={value}>\r\n          {value.slice(0, MAX_COOKIE_NAME_LENGTH)}\r\n          ...\r\n        </Tooltip>\r\n      );\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  const getContent = (): JSX.Element => (\r\n    <div>\r\n      <Row>\r\n        {showButtonImport()}\r\n        {showButtonExport()}\r\n        <Popconfirm\r\n          placement='top'\r\n          title={translation('cookieManagerModal.clearCookiesBtn.confirmDialog.text')}\r\n          onConfirm={removeCookies}\r\n          okText={translation('base.yes')}\r\n          cancelText={translation('base.no')}\r\n        >\r\n          {showButtonClear()}\r\n        </Popconfirm>\r\n      </Row>\r\n      <TableProfile\r\n        pagination={false}\r\n        rowKey='key'\r\n        dataSource={cookiesList}\r\n        scroll={{ y: 500 }}\r\n        locale={{ emptyText: showTable }}\r\n      >\r\n        <Table.Column\r\n          title={(\r\n            <ContainerNameCol style={{ opacity: 0.5 }}>\r\n              <span>\r\n                {translation('cookieManagerModal.cookiesTable.columns.name')}\r\n              </span>\r\n            </ContainerNameCol>\r\n          )}\r\n          dataIndex='name'\r\n          key='name'\r\n          sorter={(left: ICookie, right: ICookie): number => sortAlphabet(left.name, right.name)}\r\n          render={renderTitle}\r\n        />\r\n        <Table.Column\r\n          title={(\r\n            <ContainerNameCol style={{ opacity: 0.5 }}>\r\n              <span>\r\n                URL\r\n              </span>\r\n            </ContainerNameCol>\r\n          )}\r\n          dataIndex='url'\r\n          key='url'\r\n          sorter={(left: ICookie, right: ICookie): number => sortAlphabet(left.url, right.url)}\r\n        />\r\n        <Table.Column\r\n          title={(\r\n            <ContainerNameCol style={{ opacity: 0.5 }}>\r\n              <span>\r\n                {translation('cookieManagerModal.cookiesTable.columns.value')}\r\n              </span>\r\n            </ContainerNameCol>\r\n          )}\r\n          dataIndex='value'\r\n          key='value'\r\n          sorter={(left: ICookie, right: ICookie): number => sortAlphabet(left.value, right.value)}\r\n          render={renderTitle}\r\n        />\r\n        <Table.Column\r\n          title={(\r\n            <ContainerNameCol style={{ opacity: 0.5 }}>\r\n              <span>\r\n                {translation('cookieManagerModal.cookiesTable.columns.expiresAt')}\r\n              </span>\r\n            </ContainerNameCol>\r\n          )}\r\n          dataIndex='expirationDate'\r\n          key='expirationDate'\r\n          sorter={(left: ICookie, right: ICookie): number => left.expirationDate - right.expirationDate}\r\n        />\r\n      </TableProfile>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        visible={cookiesListModalVisible}\r\n        onCancel={(): void => toggleCookiesListModal({ visible: false })}\r\n        wrapClassName='cookies-list-modal'\r\n        width={780}\r\n        title={translation('cookieManagerModal.title')}\r\n        afterClose={afterClose}\r\n        footer={null}\r\n      >\r\n        {isLoading ?\r\n          <div style={{ fontSize: 32 }}>\r\n            <Icon type='loading' />\r\n          </div> :\r\n          getContent()}\r\n      </Modal>\r\n      {getCookiesManager()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CookiesList;\r\n","import { css } from '@emotion/core';\r\nimport { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\nimport { Drawer } from 'antd';\r\n\r\nimport { IconWrapperWithDescription } from '../../ui/gologin-header/icons/wrapper';\r\nimport { SelectArrowContainer } from '../../ui/modern-select/styles';\r\nimport { textFont } from '../../ui/style-templates';\r\n\r\nexport const ProfileSettingsDrawer = styled(Drawer)<{ isDarkTheme: boolean }>`\r\n  z-index: 200;\r\n  &.ant-drawer-right.ant-drawer-open .ant-drawer-content-wrapper {\r\n    ${(props): SerializedStyles|null => !props.isDarkTheme ? css`\r\n      box-shadow: 0 16px 32px var(--0000001F-profile-new-settings);\r\n    ` : null}\r\n  }\r\n`;\r\n\r\nexport const ContentContainer = styled('div')`\r\n  padding: 0 16px;\r\n  background-color: var(--F9F9F9-profile-new-settings);\r\n`;\r\n\r\nexport const SettingsSectionsContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 130px;\r\n`;\r\n\r\nexport const ActionSpan = styled('span')<{ defaultColor?: string }>`\r\n  ${textFont};\r\n  cursor: pointer;\r\n  color: ${(props): string => props.defaultColor ? props.defaultColor : 'var(--CDCDCD-profile-new-settings)'};\r\n\r\n  :hover {\r\n    color: var(--2B2B31-profile-new-settings);\r\n  }\r\n`;\r\n\r\nexport const GreyDarkTextContainer = styled('div')<{ hasCursorPointer?: boolean }>`\r\n  ${textFont};\r\n  display: flex;\r\n  color: var(--767676-profile-new-settings);\r\n  cursor: ${(props): string => props.hasCursorPointer ? 'pointer' : 'auto'};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const PublicIpContainer = styled('div')`\r\n  display: flex;\r\n`;\r\n\r\nexport const ContainerParams = styled('div')<{ hasCursorPointer?: boolean }>`\r\n  position: relative;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: var(--2B2B31-profile-new-settings);\r\n  width: 100%;\r\n  cursor: ${(props): string => props.hasCursorPointer ? 'pointer' : 'auto'};\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const ContainerParamsColumn = styled(ContainerParams)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: normal;\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const ContainerSpaceBetween = styled('div')`\r\n  display: flex;\r\n  gap: 16px;\r\n  align-items: baseline;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  :hover {\r\n    ${SelectArrowContainer} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SeparatedContainer = styled('div')`\r\n  ${textFont};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  max-width: 190px;\r\n  color: var(--2B2B31-profile-new-settings);\r\n  cursor: pointer;\r\n  min-height: 20px;\r\n\r\n  * + * {\r\n    margin-left: 16px;\r\n  }\r\n`;\r\n\r\nexport const ContainerParamsNote = styled('div')`\r\n  align-items: normal;\r\n  display: flex;\r\n  flex-direction: row;\r\n  \r\n  & .ql-drawer-container {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const AreaNoteBorder = styled('div')<{ nameAreaActive?: boolean; parentHeight?: string }>`\r\n  width: 273px;\r\n  line-height: 0;\r\n  \r\n  ${(props): SerializedStyles => css`\r\n    height: ${props.parentHeight};\r\n  `}\r\n`;\r\n\r\nexport const DrawerNameParams = styled('span')`\r\n  ${textFont};\r\n  width: 104px;\r\n  align-items: center;\r\n  color: var(--767676-profile-new-settings);\r\n  position: relative;\r\n  z-index: 10;\r\n  min-height: 20px;\r\n`;\r\n\r\nexport const DrawerNameParamsContainer = styled('div')`\r\n  min-width: 138px;\r\n  max-width: 138px;\r\n  padding-right: 16px;\r\n  user-select: none;\r\n`;\r\n\r\nexport const DrawerParams = styled('span')<{ hasCursorPointer?: boolean }>`\r\n  font-size: 14px;\r\n  display: flex;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  cursor: ${(props): string => props.hasCursorPointer ? 'pointer' : 'auto'};\r\n  width: 100%;\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const ContainerWebGLData = styled(DrawerParams)`\r\n  display: flex;\r\n  cursor: inherit;\r\n  color: var(--81818A-profile-new-settings);\r\n  justify-content: end;\r\n  ${textFont()};\r\n`;\r\n\r\nexport const SubContainerWebGL = styled('div')`\r\n  display: block;\r\n  justify-content: flex-start;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  max-width: 150px;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const ContainerUserAgentData = styled('div')`\r\n  ${textFont()}\r\n  visibility: hidden;\r\n  width: 100%;\r\n  padding: 0;\r\n  height: 0;\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nexport const FingerprintResultContainer = styled(IconWrapperWithDescription)<{\r\n  isFingerprintRefreshing: boolean;\r\n}>`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FontsSpan = styled('div')`\r\n  color: var(--767676-profile-new-settings);\r\n  margin-left: 16px;\r\n`;\r\n\r\nexport const SettingsInput = styled('input')<{ width?: string }>`\r\n  ${textFont()};\r\n  outline: none;\r\n  padding: 6px 0;\r\n  border: none;\r\n\r\n  width: 100%;\r\n\r\n  :focus {\r\n    box-shadow: inset 0px -1px 0px var(--CDCDCD-profile-new-settings);\r\n  }\r\n\r\n  ::placeholder {\r\n    color: var(--D2D2D5-profile-new-settings);\r\n  }\r\n`;\r\n\r\nexport const ContainerIcon = styled(IconWrapperWithDescription)`\r\n  ${textFont()};\r\n`;\r\n\r\nexport const ProfileNameContainer = styled('div')`\r\n  visibility: hidden;\r\n  width: 100%;\r\n  height: 0;\r\n  ${textFont()}\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  font-weight: 400;\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nexport const TextArea = styled('textarea')<{ minHeight?: number; shouldWrapText?: boolean }>`\r\n  width: 100%;\r\n  outline: none;\r\n  border: none;\r\n  resize: none;\r\n  ${textFont()}\r\n  color: var(--2B2B31-profile-new-settings);\r\n  white-space: pre-wrap;\r\n  overflow-y: hidden;\r\n  padding: 0;\r\n  background-color: inherit;\r\n\r\n  :empty:before {\r\n    content: attr(data-placeholder);\r\n    color: var(--808080-profile-new-settings);\r\n  }\r\n  \r\n  ::placeholder{\r\n    color: var(--CDCDCD-profile-new-settings);\r\n  }\r\n\r\n  ${(props): SerializedStyles =>\r\n    css`\r\n      min-height: ${props.minHeight ? props.minHeight : 20}px;\r\n    `}\r\n  \r\n  ${(props): SerializedStyles|null => props.shouldWrapText ? css`\r\n    overflow-y: auto;\r\n    white-space: nowrap;\r\n    resize: none;\r\n  ` : null}\r\n`;\r\n\r\nexport const SortableItemWrapper = styled('div')<{ noPadding?: boolean }>`\r\n  display: flex;\r\n  align-items: start;\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const EditRow = styled('div')`\r\n  width: 100%;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  align-items: start;\r\n  justify-content: space-between;\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const ContainerSubRow = styled('div')<{ hasMarginTop?: boolean; hasGap?: boolean }>`\r\n  display: ${(props): string => props.hasGap ? 'grid' : 'block'};;\r\n  grid-template-columns: min-content 1fr;\r\n  grid-template-rows: min-content min-content min-content;\r\n  align-items: center;\r\n  grid-gap: ${(props): string => props.hasGap ? '0 16px' : '0'};\r\n  margin-top: ${(props): string => props.hasMarginTop ? '8px' : '0'};\r\n  background-color: inherit;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  min-height: 52px;\r\n  letter-spacing: 0.25px;\r\n  align-items: normal;\r\n  left: auto;\r\n  line-height: 20px;\r\n  padding: 16px;\r\n  background-color: inherit;\r\n`;\r\n\r\n","import { css } from '@emotion/core';\r\nimport { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { IconWrapperWithDescription } from '../../../../ui/gologin-header/icons/wrapper';\r\nimport { textFont } from '../../../../ui/style-templates';\r\nimport { Item } from '../../styles';\r\n\r\nexport const SectionName = styled(IconWrapperWithDescription)`\r\n  display: flex;\r\n  padding: 20px 0 0 16px;\r\n  width: 100%;\r\n  color: var(--2B2B31-profile-new-settings-sections-group);\r\n  align-items: center;\r\n  cursor: auto;\r\n  flex-direction: inherit;\r\n  ${textFont};\r\n`;\r\n\r\nexport const ArrowContainer = styled('div')<{ isOpen?: boolean }>`\r\n  margin-left: 10px;\r\n\r\n  ${(props): SerializedStyles => css`\r\n      transform: ${props.isOpen ? 'rotate(90deg)' : 'rotate(0deg)'};\r\n    `}\r\n`;\r\n\r\nexport const CollapseContainer = styled.div<{ isOpen: boolean; animation?: string | null }>`\r\n    overflow: hidden;\r\n    max-height: ${(props): string => (props.isOpen ? 'inherit' : '0')};\r\n    transition: ${(props): string => (props.animation ? props.animation : 'inherit')};\r\n\r\n    ${(props): SerializedStyles => props.isOpen ? css`\r\n        outline: 0.5px solid var(--E5E5E6-profile-new-settings);\r\n        border-radius: 8px;\r\n        background: var(--FFFFFF-profile-new-settings);\r\n        margin-top: 12px;\r\n\r\n        ${Item}:not(:last-child) {\r\n            border-bottom: 0.5px solid var(--E5E5E6-profile-new-settings);\r\n        }\r\n    ` : css`\r\n    border-bottom: 0.5px solid var(--E5E5E6-profile-new-settings);\r\n    margin-top: 20px;\r\n  `}\r\n`;\r\n","import React, { useRef, FC, useState, useEffect } from 'react';\r\n\r\nimport { CollapseContainer } from './styles';\r\n\r\ninterface ICollapse {\r\n  isOpen: boolean;\r\n  isAlwaysOpen: boolean;\r\n}\r\n\r\nconst Collapse: FC<ICollapse> = (props) => {\r\n  const { isOpen, isAlwaysOpen, children } = props;\r\n\r\n  const [shouldMount, setShouldMount] = useState<boolean>(isOpen || isAlwaysOpen);\r\n\r\n  const ref = useRef<HTMLDivElement|null>(null);\r\n\r\n  useEffect(() => {\r\n    if (shouldMount) {\r\n      return;\r\n    }\r\n\r\n    window.requestIdleCallback(\r\n      () => setShouldMount(true),\r\n      { timeout: 200 },\r\n    );\r\n  }, [shouldMount]);\r\n\r\n  if (isAlwaysOpen) {\r\n    return (\r\n      <CollapseContainer isOpen={true}>\r\n        {children}\r\n      </CollapseContainer>\r\n    );\r\n  }\r\n\r\n  if (!shouldMount) {\r\n    return <CollapseContainer isOpen={false} />;\r\n  }\r\n\r\n  return (\r\n    <CollapseContainer\r\n      ref={ref}\r\n      isOpen={isOpen}\r\n    >\r\n      {children}\r\n    </CollapseContainer>\r\n  );\r\n};\r\n\r\nexport default Collapse;\r\n","export const PINNED_SETTINGS = [\r\n  'name',\r\n  'notes',\r\n  'folders',\r\n  'proxy',\r\n  'language',\r\n  'timezone',\r\n  'geolocation',\r\n  'resolution',\r\n  'cookies',\r\n  'fingerprint',\r\n] as const;\r\n\r\nexport const OVERVIEW_SETTINGS = [\r\n  'name',\r\n  'notes',\r\n  'folders',\r\n] as const;\r\n\r\nexport const PROXY_SETTINGS = [\r\n  'proxy',\r\n  'timezone',\r\n  'geolocation',\r\n  'webRTCPublic',\r\n  'customDns',\r\n] as const;\r\n\r\nexport const BROWSER_SETTINGS = [\r\n  'useragent',\r\n  'cookies',\r\n  'bookmarks',\r\n  'startUrl',\r\n  'language',\r\n  'extensions',\r\n  'fonts',\r\n] as const;\r\n\r\nexport const STORAGE_SETTINGS = [\r\n  'activeSessionLock',\r\n  'sessionSaving',\r\n  'browserHistorySaving',\r\n  'browserBookmarkSaving',\r\n  'googleServices',\r\n  'passwordSaving',\r\n  'localStorageAndIndexedDB',\r\n  'browserPlugins',\r\n  'extensionStorage',\r\n  'externalExtensions',\r\n] as const;\r\n\r\nexport const HARDWARE_SETTINGS = [\r\n  'resolution',\r\n  'deviceMemory',\r\n  'hardwareConcurrency',\r\n  'mediaDevices',\r\n  'canvas',\r\n  'webglImage',\r\n  'webglMetadata',\r\n  'audioContext',\r\n] as const;\r\n\r\nexport const ANDROID_HARDWARE_SETTINGS = [\r\n  ...HARDWARE_SETTINGS,\r\n] as const;\r\n","import {\r\n  ANDROID_HARDWARE_SETTINGS,\r\n  BROWSER_SETTINGS,\r\n  HARDWARE_SETTINGS,\r\n  OVERVIEW_SETTINGS,\r\n  PINNED_SETTINGS,\r\n  PROXY_SETTINGS,\r\n  STORAGE_SETTINGS,\r\n} from './content/sections-group/settings-lists';\r\nimport { IFullProfile, INavigator, IProfile, IWebRTC } from '../../interfaces';\r\nimport { INewNameProfile } from '../../utils/parse-name-formatting/interfaces';\r\nimport { IFolder } from '../newProfile/components/folders-select/folder.interface';\r\n\r\nexport const SETTINGS_PARAM = [\r\n  ...typeof ANDROID_HARDWARE_SETTINGS,\r\n  ...typeof OVERVIEW_SETTINGS,\r\n  ...typeof BROWSER_SETTINGS,\r\n  ...typeof HARDWARE_SETTINGS,\r\n  ...typeof PINNED_SETTINGS,\r\n  ...typeof PROXY_SETTINGS,\r\n  ...typeof STORAGE_SETTINGS,\r\n] as const;\r\n\r\nexport const SECTIONS_TITLE = [\r\n  'favorites',\r\n  'profileOverview',\r\n  'proxyLocation',\r\n  'browser',\r\n  'storage',\r\n  'hardware',\r\n] as const;\r\n\r\nexport interface ISection {\r\n  name: typeof SECTIONS_TITLE[number];\r\n  items: Partial<typeof SETTINGS_PARAM>;\r\n  isOpen: boolean;\r\n}\r\n\r\nexport interface ISections {\r\n  [key: string]: ISection;\r\n}\r\n\r\nexport interface IChangeSetting {\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport interface ISetting extends IChangeSetting {\r\n  fullProfile: IFullProfile;\r\n}\r\n\r\nexport interface ISettingsParam extends IChangeSetting {\r\n  fullProfile: IFullProfile;\r\n  saveProfileNotes: (profileId: string, notes: string) => void;\r\n  manageProfileFoldersList: (profilesIds: string[], folderName: string, action: string) => void;\r\n  foldersList: IFolder[];\r\n  openFoldersModal: (profileIds: string[]) => void;\r\n  cookiesLoading: boolean;\r\n  showModalCookies: () => void;\r\n  updateStateProfile: (profileData: Partial<IFullProfile>) => void;\r\n  selectedProfilesIds?: string[];\r\n  profilesList: IProfile[];\r\n  updateProfileFingerprints: (profilesData: IProfile[]) => void;\r\n  changeProfilesData: (newProfilesData: INewNameProfile[]) => void;\r\n  changeProfilesDataMany: (profileIds: string[], newProfilesData: Partial<IProfile>) => void;\r\n}\r\n\r\nexport interface ISettingsParamOpts extends ISettingsParam {\r\n  isMultiProfilesSettings: boolean;\r\n}\r\n\r\nexport interface ISettingParam {\r\n  [key: typeof SETTINGS_PARAM[number]]: JSX.Element;\r\n}\r\n\r\nexport interface IWebRTCComponent extends IChangeSetting {\r\n  webRTC: IWebRTC;\r\n}\r\n\r\nexport interface INavigatorComponent extends IChangeSetting {\r\n  navigator: INavigator;\r\n}\r\n","import {\r\n  BROWSER_SETTINGS,\r\n  HARDWARE_SETTINGS,\r\n  OVERVIEW_SETTINGS,\r\n  PINNED_SETTINGS,\r\n  PROXY_SETTINGS,\r\n  STORAGE_SETTINGS,\r\n} from './settings-lists';\r\nimport { ISections, SECTIONS_TITLE } from '../../interfaces';\r\n\r\nexport const DEFAULT_SECTIONS: ISections = {\r\n  pinned: {\r\n    name: SECTIONS_TITLE[0],\r\n    items: PINNED_SETTINGS,\r\n    isOpen: true,\r\n  },\r\n  overview: {\r\n    name: SECTIONS_TITLE[1],\r\n    items: OVERVIEW_SETTINGS,\r\n    isOpen: false,\r\n  },\r\n  proxy: {\r\n    name: SECTIONS_TITLE[2],\r\n    items: PROXY_SETTINGS,\r\n    isOpen: false,\r\n  },\r\n  browser: {\r\n    name: SECTIONS_TITLE[3],\r\n    items: BROWSER_SETTINGS,\r\n    isOpen: false,\r\n  },\r\n  storage: {\r\n    name: SECTIONS_TITLE[4],\r\n    items: STORAGE_SETTINGS,\r\n    isOpen: false,\r\n  },\r\n  hardware: {\r\n    name: SECTIONS_TITLE[5],\r\n    items: HARDWARE_SETTINGS,\r\n    isOpen: false,\r\n  },\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ArrowContainer, SectionName } from './styles';\r\nimport { IconArrow } from '../../../../ui/gologin-header/icons';\r\nimport { ISection } from '../../interfaces';\r\n\r\ninterface ISectionHeader {\r\n  sectionId: string;\r\n  section: ISection;\r\n  toggleSection: (sectionId: string) => void;\r\n}\r\n\r\nconst SectionHeader: FC<ISectionHeader> = (props): JSX.Element|null => {\r\n  const { sectionId, section, toggleSection } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  if (section.name === 'favorites') {\r\n    return (\r\n      <SectionName style={{ paddingTop: 0 }}>\r\n        {translation('quickSettings.' + section.name + '.title')}\r\n      </SectionName>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SectionName\r\n      onClick={(): void => toggleSection(sectionId)}\r\n      iconType='stroke'\r\n      iconColor='var(--98989F-profile-new-settings-sections-group)'\r\n      iconHoveredColor='var(--2B2B31-profile-new-settings-sections-group)'\r\n      style={{ cursor: 'pointer' }}\r\n    >\r\n      {translation('quickSettings.' + section.name + '.title')}\r\n      <ArrowContainer isOpen={section.isOpen}>\r\n        <IconArrow padding={0} />\r\n      </ArrowContainer>\r\n    </SectionName>\r\n  );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React, { FC } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { useProfilesSettingsState } from '../../../../state/profiles-settings-atom';\r\nimport { ISettingParam, SETTINGS_PARAM } from '../../interfaces';\r\nimport { DrawerNameParams, DrawerNameParamsContainer, Item, SortableItemWrapper } from '../../styles';\r\n\r\ninterface ISettingRow {\r\n  settings: ISettingParam;\r\n  setting: typeof SETTINGS_PARAM[number];\r\n  sectionId: string;\r\n  index: number;\r\n}\r\n\r\nconst SettingRow: FC<ISettingRow> = (props) => {\r\n  const { settings, setting, sectionId, index } = props;\r\n\r\n  const { profileIds } = useProfilesSettingsState();\r\n  const isMultiProfileSettings = profileIds.length > 1;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const settingKey = `${sectionId}-${setting}`;\r\n  const item = {\r\n    ...settings[setting],\r\n    props: {\r\n      ...settings[setting].props,\r\n      localSettingId: settingKey,\r\n      localProxySelectorLocation: settingKey,\r\n    },\r\n  };\r\n\r\n  const localisationKeys: Record<typeof SETTINGS_PARAM[number], string> = {\r\n    name: 'overview.name',\r\n    notes: 'overview.note',\r\n    folders: 'overview.folder',\r\n    proxy: 'overview.proxy',\r\n    language: 'overview.language',\r\n    timezone: 'overview.timezone',\r\n    geolocation: 'overview.geolocation',\r\n    resolution: 'overview.resolution',\r\n    cookies: 'overview.cookie',\r\n    fingerprint: 'overview.fingerprint',\r\n    webRTCPublic: 'webrtc.quickSettingsTitle',\r\n    customDns: 'proxyLocations.customDns',\r\n    useragent: 'browser.userAgent',\r\n    startUrl: 'browser.startUrl',\r\n    extensions: 'browser.extensions',\r\n    fonts: 'browser.fonts',\r\n    bookmarks: 'browser.bookmarks',\r\n    activeSessionLock: 'storage.activeSessionLock',\r\n    sessionSaving: 'storage.sessionSaving',\r\n    browserHistorySaving: 'storage.history',\r\n    browserBookmarkSaving: 'storage.bookmark',\r\n    googleServices: 'storage.google',\r\n    passwordSaving: 'storage.password',\r\n    localStorageAndIndexedDB: 'storage.localStorage',\r\n    browserPlugins: 'storage.plugins',\r\n    extensionStorage: 'storage.extension',\r\n    externalExtensions: 'storage.externalExtensions',\r\n    deviceMemory: 'hardware.device',\r\n    hardwareConcurrency: 'hardware.hardware',\r\n    mediaDevices: 'hardware.mediaDevices',\r\n    canvas: 'hardware.canvas',\r\n    webglImage: 'hardware.webglImage',\r\n    webglMetadata: 'hardware.webglMetadata',\r\n    audioContext: 'hardware.audioContext',\r\n    maxTouchPoints: 'hardware.maxTouchPoints',\r\n  };\r\n\r\n  // Костыль из-за position: absolute у заметок и прокси, быстро решить не смог\r\n  const getMarginSection = (): number => {\r\n    if (isMultiProfileSettings) {\r\n      return 0;\r\n    }\r\n\r\n    if (setting === 'notes') {\r\n      return -7;\r\n    }\r\n\r\n    if (setting === 'proxy') {\r\n      return -8;\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  return (\r\n    <Draggable\r\n      key={settingKey}\r\n      draggableId={settingKey}\r\n      index={index}\r\n    >\r\n      {(provide): JSX.Element => (\r\n        <Item ref={provide.innerRef} id={settingKey}>\r\n          <div {...provide.dragHandleProps} />\r\n          <DrawerNameParamsContainer>\r\n            <DrawerNameParams>\r\n              {translation('quickSettings.' + localisationKeys[setting])}\r\n            </DrawerNameParams>\r\n          </DrawerNameParamsContainer>\r\n          <SortableItemWrapper\r\n            style={{ marginLeft: getMarginSection() }}\r\n            className={(setting === 'notes' && !isMultiProfileSettings) ? 'ql-drawer-container' : ''}\r\n          >\r\n            {item}\r\n          </SortableItemWrapper>\r\n        </Item>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default SettingRow;\r\n","import { Icon } from 'antd';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { AddNotesContainer } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IconPlusFill } from '../../../ui/gologin-header/icons';\r\nimport { IconWrapperWithDescription } from '../../../ui/gologin-header/icons/wrapper';\r\nimport { textFont } from '../../../ui/style-templates';\r\n\r\ninterface IAddNotesPlaceholder {\r\n  isInDrawer?: boolean;\r\n  onOpen: () => void;\r\n}\r\n\r\nconst AddNotesPlaceholder: FC<IAddNotesPlaceholder> = (props) => {\r\n  const { isInDrawer, onOpen } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  if (!(NEW_FEATURES.drawer && isInDrawer)) {\r\n    return (\r\n      <AddNotesContainer\r\n        newStyle={!!NEW_FEATURES.header}\r\n        onClick={onOpen}\r\n      >\r\n        <Icon style={{ marginRight: 7, marginTop: -1 }} type='plus' />\r\n        {translation('notes.addNotesPlaceholder')}\r\n      </AddNotesContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <IconWrapperWithDescription\r\n      iconColor='var(--B5B5BA-notes)'\r\n      iconHoveredColor='var(--2B2B31-notes)'\r\n      textColor='var(--81818A-notes)'\r\n      textHoveredColor='var(--2B2B31-notes)'\r\n      iconType='stroke'\r\n      style={{ ...textFont }}\r\n    >\r\n      <AddNotesContainer\r\n        newStyle={!!NEW_FEATURES.header}\r\n        newDrawer={!!NEW_FEATURES.drawer}\r\n        onClick={onOpen}\r\n      >\r\n        <IconPlusFill padding={0} margin='0 8px 0 0' />\r\n        {translation('notes.addNotesPlaceholder')}\r\n      </AddNotesContainer>\r\n    </IconWrapperWithDescription>\r\n  );\r\n};\r\n\r\nexport default AddNotesPlaceholder;\r\n","import { useCallback, useContext } from 'react';\r\n\r\nimport { userContext } from '../../../state';\r\nimport getSelectedThemeColor from '../../../utils/get-selected-theme-color';\r\n\r\nconst NOTES_COLORS = [\r\n  { lightNote: 'rgba(255, 213, 225, 0.7)', darkNote: 'rgb(163, 71, 71)' },\r\n  { lightNote: 'rgba(255, 240, 175, 0.7)', darkNote: 'rgba(182, 182, 41, 0.7)' },\r\n  { lightNote: 'rgb(191, 235, 222, 0.7)', darkNote: 'rgb(38, 127, 105)' },\r\n  { lightNote: 'rgba(191, 235, 222, 0.7)', darkNote: 'rgb(38, 127, 105)' },\r\n  { lightNote: 'rgba(201, 225, 255, 0.7)', darkNote: 'rgb(30, 75, 150)' },\r\n  { lightNote: 'rgba(228, 216, 242, 0.7)', darkNote: 'rgb(184, 95, 191, 0.7)' },\r\n];\r\n\r\ninterface IUseNotesColorReplace {\r\n  replaceNotesColors: (notes: string) => string;\r\n}\r\n\r\nconst useNotesColorReplace = (): IUseNotesColorReplace => {\r\n  const { theme } = useContext(userContext);\r\n  const isDarkTheme = getSelectedThemeColor(theme) === 'dark';\r\n\r\n  const replaceNotesColors = useCallback((notes: string) => {\r\n    if (!notes) {\r\n      return notes;\r\n    }\r\n\r\n    NOTES_COLORS.forEach(({ lightNote, darkNote }) => {\r\n      const beforeColor = isDarkTheme ? lightNote : darkNote;\r\n      const afterColor = isDarkTheme ? darkNote : lightNote;\r\n      notes = notes.replace(beforeColor, afterColor);\r\n    });\r\n\r\n    return notes;\r\n  }, [isDarkTheme]);\r\n\r\n  return { replaceNotesColors };\r\n};\r\n\r\nexport default useNotesColorReplace;\r\n","import { Quill } from 'quill';\r\nimport React, { FC, Ref } from 'react';\r\nimport ReactQuill from 'react-quill';\r\n\r\nconst formats = [\r\n  'bold',\r\n  'italic',\r\n  'strike',\r\n  'underline',\r\n  'color',\r\n  'background',\r\n];\r\n\r\nconst toolbarOptions = [\r\n  'bold',\r\n  'italic',\r\n  'strike',\r\n  {\r\n    background: [\r\n      'var(--FFD5E1B3-notes)',\r\n      'var(--FFF0AFB3-notes)',\r\n      'var(--BFEBDEB3-notes)',\r\n      'var(--C9E1FFB3-notes)',\r\n      'var(--E4D8F2B3-notes)',\r\n    ],\r\n  },\r\n  'underline',\r\n  'clean',\r\n];\r\n\r\nfunction handleLinebreak (this: { quill: Quill }): void {\r\n  const selection = this.quill.getSelection();\r\n  if (!selection) {\r\n    return;\r\n  }\r\n\r\n  const { index } = selection;\r\n  this.quill.insertText(index, '\\n');\r\n  this.quill.setSelection({ index: index + 1, length: 0 });\r\n}\r\n\r\nconst modules = {\r\n  toolbar: {\r\n    container: toolbarOptions,\r\n    handlers: {},\r\n  },\r\n  keyboard: {\r\n    bindings: {\r\n      linebreak1: {\r\n        key: 'enter',\r\n        shortKey: true,\r\n        handler: handleLinebreak,\r\n      },\r\n      linebreak2: {\r\n        key: 'enter',\r\n        shiftKey: true,\r\n        handler: handleLinebreak,\r\n      },\r\n      enter: {\r\n        key: 'enter',\r\n        handler (this: { quill: Quill }): void {\r\n          this.quill.blur();\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\ninterface IQuillNotes {\r\n  notes: string;\r\n  isEditing: boolean;\r\n  onChange: (text: string) => void;\r\n  onFocus: () => void;\r\n  isInDrawer?: boolean;\r\n  quillRef: Ref<ReactQuill>;\r\n}\r\n\r\nconst QuillNotes: FC<IQuillNotes> = (props) => {\r\n  const { notes, isEditing, onChange, onFocus, isInDrawer, quillRef } = props;\r\n\r\n  return (\r\n    <ReactQuill\r\n      theme='bubble'\r\n      className={isEditing ? 'ql-focus' : ''}\r\n      value={notes}\r\n      onChange={onChange}\r\n      onFocus={onFocus}\r\n      modules={modules}\r\n      formats={formats}\r\n      style={{\r\n        padding: 0,\r\n        width: '100%',\r\n        color: isInDrawer ? 'var(--222222-notes-cell)' : '',\r\n      }}\r\n      placeholder=''\r\n      ref={quillRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default QuillNotes;\r\n","import DOMPurify from 'dompurify';\r\nimport React, { FC } from 'react';\r\n\r\nconst defaultOptions: DOMPurify.Config = {\r\n  ALLOWED_TAGS: ['s', 'u', 'span', 'p', 'em', 'strong'],\r\n  ALLOWED_ATTR: ['style'],\r\n};\r\n\r\ninterface ISanitizeHTML {\r\n  html: string;\r\n  options?: DOMPurify.Config;\r\n  divProps?: React.HTMLAttributes<HTMLDivElement>;\r\n}\r\n\r\nconst SanitizeHTML: FC<ISanitizeHTML> = ({ html, options, divProps }) => (\r\n  <div\r\n    {...divProps}\r\n    dangerouslySetInnerHTML={{\r\n      __html: DOMPurify.sanitize(\r\n        html,\r\n        { ...defaultOptions, ...options },\r\n      ) as string,\r\n    }}\r\n  />\r\n);\r\n\r\nexport default SanitizeHTML;\r\n","import React, { FC } from 'react';\r\n\r\nimport SanitizeHTML from './sanitize-html';\r\n\r\nconst NOTES_PROPS = { className: 'ql-editor' };\r\n\r\ninterface IStaticNotes {\r\n  notes: string;\r\n}\r\n\r\nconst StaticNotes: FC<IStaticNotes> = (props) => {\r\n  const { notes } = props;\r\n\r\n  return (\r\n    <div className='ql-container'>\r\n      <SanitizeHTML\r\n        html={notes}\r\n        divProps={NOTES_PROPS}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaticNotes;\r\n","export const stripTags = (str?: string): string => {\r\n  if (!str) {\r\n    return '';\r\n  }\r\n\r\n  return str.replace(/(<([^>]+)>)/gi, '');\r\n};\r\n","import { RefObject, useEffect, useState } from 'react';\r\n\r\nconst useElementHeight = (elementRef: RefObject<HTMLElement>): number => {\r\n  const [height, setHeight] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    const handleResize = (entries: any): void => {\r\n      for (const entry of entries) {\r\n        if (entry.contentRect) {\r\n          setHeight(entry.contentRect.height);\r\n        }\r\n      }\r\n    };\r\n\r\n    const resizeObserver = new ResizeObserver(handleResize);\r\n\r\n    if (elementRef.current) {\r\n      resizeObserver.observe(elementRef.current);\r\n    }\r\n\r\n    return (): void => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return height;\r\n};\r\n\r\nexport default useElementHeight;\r\n","import React, { FC, FocusEventHandler, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ReactQuill from 'react-quill';\r\n\r\nimport AddNotesPlaceholder from './add-notes-placeholder';\r\nimport useNotesColorReplace from './notes-color-replace.hook';\r\nimport QuillNotes from './quill-notes';\r\nimport StaticNotes from './static-notes';\r\nimport { NotesContainer } from './styles';\r\nimport { stripTags } from './utils';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport PerformanceObserverService from '../../../services/performance-observer/performance-observer.service';\r\nimport useElementHeight from '../../../hooks/use-element-height.hook';\r\n\r\ninterface INotesProps {\r\n  profileId: string;\r\n  notes: string;\r\n  saveProfileNotes: (profileId: string, notes: string) => void;\r\n  location: 'old-drawer' | 'profile-settings' | 'profiles-table';\r\n  isDefaultNotes: boolean;\r\n  onHeightPossibleChange?: () => void;\r\n}\r\n\r\nconst Notes: FC<INotesProps> = (props) => {\r\n  const {\r\n    profileId,\r\n    notes: profileNotes = '',\r\n    saveProfileNotes,\r\n    location,\r\n    isDefaultNotes,\r\n    onHeightPossibleChange,\r\n  } = props;\r\n\r\n  const isInDrawer = location === 'profile-settings';\r\n  const defaultState = isInDrawer ? 'hovered' : 'static';\r\n\r\n  const [notes, setNotes] = useState<string>(profileNotes);\r\n  const [notesStatus, setNotesStatus] = useState<'editing'|'hovered'|'static'>(defaultState);\r\n\r\n  const quillRef = useRef<ReactQuill>(null);\r\n  const notesContainerRef = useRef(null);\r\n  const notesContainerHeight = useElementHeight(notesContainerRef);\r\n\r\n  const { t: translation } = useTranslation();\r\n  const { replaceNotesColors } = useNotesColorReplace();\r\n\r\n  const areNotesPresent = isDefaultNotes || stripTags(notes).trim();\r\n  const showPlaceholder = !(notesStatus === 'editing' || areNotesPresent);\r\n\r\n  useEffect(() => {\r\n    const defaultNotes = isDefaultNotes ? translation('profiles.firstProfileNotes') : '';\r\n    const currentNotes = defaultNotes || profileNotes || '';\r\n    setNotes(replaceNotesColors(currentNotes));\r\n  }, [profileId, profileNotes, isDefaultNotes]);\r\n\r\n  useEffect(() => {\r\n    quillRef.current?.editor?.root.setAttribute('spellcheck', 'false');\r\n  }, [quillRef.current]);\r\n\r\n  useEffect(() => {\r\n    onHeightPossibleChange && onHeightPossibleChange();\r\n  }, [notesStatus]);\r\n\r\n  useLayoutEffect(() => {\r\n    quillRef.current?.editor?.root.classList.remove('ql-hide-rows');\r\n  }, [notesContainerHeight]);\r\n\r\n  const handleChange = (text: string): void => {\r\n    setNotes(text);\r\n    onHeightPossibleChange && onHeightPossibleChange();\r\n  };\r\n\r\n  const onNotesStartEditing = (): void => {\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    performanceObserverService.handleUserAction({ userAction: 'start-notes-column-edit' });\r\n\r\n    quillRef.current?.editor?.root.classList.add('ql-hide-rows');\r\n  };\r\n\r\n  const handleFocus = (): void => {\r\n    setNotesStatus(prevNotesStatus => {\r\n      if (prevNotesStatus !== 'editing' && location === 'profiles-table') {\r\n        onNotesStartEditing();\r\n      }\r\n\r\n      return 'editing';\r\n    });\r\n  };\r\n\r\n  const handleDivBlur: FocusEventHandler<HTMLDivElement> = async (event) => {\r\n    if (event.currentTarget.contains(event.relatedTarget)) {\r\n      return;\r\n    }\r\n\r\n    setNotesStatus(defaultState);\r\n\r\n    const strippedString = stripTags(notes);\r\n    const resValue = (!strippedString) ? strippedString : notes;\r\n    if (resValue !== profileNotes) {\r\n      await saveProfileNotes(profileId, resValue);\r\n    }\r\n  };\r\n\r\n  const focusQuill = (): void => {\r\n    quillRef.current && quillRef.current.getEditor().focus();\r\n  };\r\n\r\n  const onNotesOpen = (): void => {\r\n    handleFocus();\r\n    focusQuill();\r\n  };\r\n\r\n  const toggleHover = (event: 'enter'|'leave') => (): void => {\r\n    setTimeout(() => {\r\n      setNotesStatus(prevStatus => {\r\n        if (event === 'enter' && prevStatus === 'static') {\r\n          return 'hovered';\r\n        }\r\n\r\n        if (event === 'leave' && prevStatus === 'hovered') {\r\n          return defaultState;\r\n        }\r\n\r\n        return prevStatus;\r\n      });\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <NotesContainer\r\n      ref={notesContainerRef}\r\n      onBlur={handleDivBlur}\r\n      onFocus={handleFocus}\r\n      onMouseOver={toggleHover('enter')}\r\n      onMouseLeave={toggleHover('leave')}\r\n      newStyle={!!NEW_FEATURES.header}\r\n      newDrawer={!!NEW_FEATURES.drawer}\r\n      isInDrawer={!!isInDrawer}\r\n    >\r\n      {showPlaceholder ? (\r\n        <AddNotesPlaceholder isInDrawer={isInDrawer} onOpen={onNotesOpen} />\r\n      ) : null}\r\n      {notesStatus === 'static' ? (\r\n        <StaticNotes notes={notes} />\r\n      ) : (\r\n        <QuillNotes\r\n          notes={notes}\r\n          isEditing={notesStatus === 'editing'}\r\n          onChange={handleChange}\r\n          onFocus={handleFocus}\r\n          isInDrawer={isInDrawer}\r\n          quillRef={quillRef}\r\n        />\r\n      )}\r\n    </NotesContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(Notes, (prevProps, nextProps) => (\r\n  prevProps.profileId === nextProps.profileId &&\r\n  prevProps.notes === nextProps.notes &&\r\n  prevProps.isDefaultNotes === nextProps.isDefaultNotes &&\r\n  prevProps.onHeightPossibleChange === nextProps.onHeightPossibleChange\r\n));\r\n","import styled from '@emotion/styled';\r\nimport { FormControlLabel, Switch } from '@material-ui/core';\r\n\r\nexport const StyledSwitch = styled(Switch)`\r\n  .MuiSwitch-track {\r\n    background-color: inherit;\r\n  }\r\n\r\n  .MuiSwitch-colorPrimary.Mui-checked {\r\n    color: var(--00A987-profile-new-settings-switch);\r\n    margin: 1px 0 0 -7px;\r\n  }\r\n\r\n  .MuiSwitch-thumb {\r\n    width: 12px;\r\n    height: 12px;\r\n    box-shadow: none;\r\n  }\r\n\r\n  &.MuiSwitch-root {\r\n    border: 1px solid var(--D2D2D5-profile-new-settings-switch);\r\n    border-radius: 50px;\r\n    width: 28px;\r\n    height: 16px;\r\n    padding: 0;\r\n  }\r\n\r\n  .MuiSwitch-switchBase {\r\n    color: var(--E9E9E7-profile-new-settings-switch);\r\n    margin-left: 1px;\r\n    margin-top: 1px;\r\n    padding: 0;\r\n  }\r\n\r\n  .MuiSwitch-colorPrimary.Mui-checked + .MuiSwitch-track {\r\n    background-color: inherit;\r\n  }\r\n`;\r\n\r\nexport const StyledFormControlLabel = styled(FormControlLabel)`\r\n  .MuiTypography-body1 {\r\n    font-size: 14px !important;\r\n    margin-left: 16px;\r\n  }\r\n\r\n  &.MuiFormControlLabel-root {\r\n    margin-left: 0;\r\n    margin-top: 2px;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\n\r\nimport { StyledFormControlLabel, StyledSwitch } from './styles';\r\n\r\ninterface ICustomSwitch {\r\n  checked: boolean;\r\n  onChange: (checked: boolean) => void;\r\n  label?: string;\r\n}\r\n\r\nconst ModernSwitch: FC<ICustomSwitch> = ({ checked, onChange, label= '' }) => (\r\n  <StyledFormControlLabel\r\n    control={\r\n      <StyledSwitch\r\n        size='medium'\r\n        checked={checked}\r\n        onChange={(event, afterChecked): void => onChange(afterChecked)}\r\n        color='primary'\r\n      />\r\n    }\r\n    label={label}\r\n    labelPlacement='end'\r\n  />\r\n);\r\n\r\nexport default ModernSwitch;\r\n","import React, { FC } from 'react';\r\n\r\nimport { IFullProfile } from '../../../../interfaces';\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IActiveSessionLock {\r\n  lockEnabled: boolean;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const ActiveSessionLock: FC<IActiveSessionLock> = ({ changeSetting, lockEnabled }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      onChange={(checked): void => changeSetting({ lockEnabled: checked })}\r\n      checked={lockEnabled}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import React, { FC } from 'react';\r\n\r\nimport PerformanceObserverService from '../../../../services/performance-observer/performance-observer.service';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { ISelectItem } from '../../../../ui/modern-select/interfaces';\r\nimport { ANDROID_RESOLUTIONS, RESOLUTIONS } from '../../../common/all-resolutions';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerSpaceBetween, ContainerParams } from '../../styles';\r\n\r\ninterface IResolution extends IChangeSetting {\r\n  selectedResolution: typeof RESOLUTIONS[number]|typeof ANDROID_RESOLUTIONS[number];\r\n  isAndroidProfile: boolean;\r\n}\r\n\r\nexport const Resolution: FC<IResolution> = ({ changeSetting, selectedResolution, isAndroidProfile }) => {\r\n  const resolutionsList = isAndroidProfile ? ANDROID_RESOLUTIONS : RESOLUTIONS;\r\n  const selectItems: ISelectItem[] = resolutionsList.map(resolution => ({\r\n    title: resolution,\r\n    value: resolution,\r\n  }));\r\n\r\n  const onSelect = (value: string): void => {\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    performanceObserverService.handleUserAction({ userAction: 'select-profile-settings-resolution' });\r\n\r\n    changeSetting({\r\n      navigator: {\r\n        resolution: value as typeof ANDROID_RESOLUTIONS[number]|typeof RESOLUTIONS[number],\r\n      },\r\n    });\r\n  };\r\n\r\n  const onSelectOpen = (): void => {\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    performanceObserverService.handleUserAction({ userAction: 'open-profile-settings-resolution-select' });\r\n  };\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ContainerSpaceBetween>\r\n        <ModernSelect\r\n          title={selectedResolution}\r\n          currentValue={selectedResolution}\r\n          itemList={selectItems}\r\n          onSelected={onSelect}\r\n          popoverWidth='140px'\r\n          popoverMaxHeight='206px'\r\n          onSelectOpen={onSelectOpen}\r\n        />\r\n      </ContainerSpaceBetween>\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { CANVAS_MODES, CanvasModesType, IFullProfile } from '../../../../interfaces';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface ICanvasComponent {\r\n  mode: CanvasModesType;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const Canvas: FC<ICanvasComponent> = ({ changeSetting, mode }) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const titleSelect: Record<CanvasModesType, string> = {\r\n    noise: translation('quickSettings.parameters.maskedWithNoise'),\r\n    off: translation('quickSettings.parameters.real'),\r\n    block: translation('quickSettings.parameters.blocked'),\r\n  };\r\n\r\n  const selectItems = CANVAS_MODES.map(canvasMode => ({\r\n    title: titleSelect[canvasMode],\r\n    value: canvasMode,\r\n  }));\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ModernSelect\r\n        currentValue={mode}\r\n        itemList={selectItems}\r\n        onSelected={(value): void => changeSetting({ canvas: { mode: value as CanvasModesType } })}\r\n      />\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { textFont } from '../../../../../ui/style-templates';\r\nimport { greyDark } from '../../../../../ui/style-templates/colors';\r\nimport { ContainerSpaceBetween } from '../../../styles';\r\n\r\nexport const DescriptionContainer = styled('div')`\r\n  display: flex;\r\n  align-self: center;\r\n  color: var(--767676-profile-new-settings);\r\n  ${textFont()};\r\n`;\r\n\r\nexport const IconPasteContainer = styled(DescriptionContainer)`\r\n  display: none;\r\n`;\r\n\r\nexport const LanguageParamContainer = styled(ContainerSpaceBetween)`\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    ${IconPasteContainer} {\r\n      display: flex;\r\n    }\r\n      \r\n    ${DescriptionContainer} {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { DescriptionContainer, IconPasteContainer, LanguageParamContainer } from './styles';\r\nimport { checkDoesLangExist } from '../../../../../../common/locales';\r\nimport { getLanguageByBasedIp } from '../../../../../features/common/get-data-by-based-ip';\r\nimport LocalesManager from '../../../../../features/modalsComponents/components/locales-manager';\r\nimport { refreshLocalUserDevice, useLocalUserDevice } from '../../../../../state/local-user-device.atom';\r\nimport { useProxyList } from '../../../../../state/proxy-list.atom';\r\nimport { IconPaste } from '../../../../../ui/gologin-header/icons';\r\nimport TooltipCustom from '../../../../../ui/tooltip-custom';\r\nimport { IChangeSetting } from '../../../interfaces';\r\nimport { SeparatedContainer } from '../../../styles';\r\n\r\ninterface ILanguage extends IChangeSetting {\r\n  profileLanguage: string;\r\n  profileAutoLang: boolean;\r\n  profileId: string;\r\n  proxyId: string;\r\n  isFreeOrTorProxy: boolean;\r\n}\r\n\r\nexport const Language: React.FC<ILanguage> = (props) => {\r\n  const {\r\n    changeSetting, profileLanguage = '', profileAutoLang, proxyId, profileId, isFreeOrTorProxy,\r\n  } = props;\r\n\r\n  const localUserDevice = useLocalUserDevice();\r\n  const { languages: realLocalLanguages = '', country: realLocalCountry = '' } = localUserDevice;\r\n\r\n  const [isLocalesManagerVisible, setIsLocalesManagerVisible] = useState<boolean>(false);\r\n  const [languagesBasedOnIp, setLanguagesBasedOnIp] = useState<string>('');\r\n  const [anchorElTooltip, setAnchorElTooltip] = useState<HTMLElement|null>(null);\r\n\r\n  const proxyList = useProxyList();\r\n\r\n  const { t: translation } = useTranslation();\r\n  const proxyFromCtx = proxyList.find(proxyFromList => proxyFromList._id === proxyId);\r\n\r\n  const getData = async (): Promise<void> => {\r\n    let languagesByBasedIp = translation('quickSettings.parameters.automatic');\r\n    if (!isFreeOrTorProxy) {\r\n      languagesByBasedIp = getLanguageByBasedIp({\r\n        proxyFromCtx,\r\n        realLocalLanguages,\r\n        realLocalCountry,\r\n      });\r\n    }\r\n\r\n    setLanguagesBasedOnIp(languagesByBasedIp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    refreshLocalUserDevice();\r\n  }, [proxyId, profileId, proxyFromCtx, isFreeOrTorProxy, realLocalLanguages, realLocalCountry]);\r\n\r\n  const separatedLanguages = (profileAutoLang ? languagesBasedOnIp : profileLanguage)\r\n    .split(',')\r\n    .map(item => item.split(';')[0])\r\n    .filter(key => checkDoesLangExist(key));\r\n\r\n  const setProfileNavigatorLanguage = (save: boolean, autoLang = true, language?: string): void => {\r\n    setIsLocalesManagerVisible(false);\r\n    if (!(save && language)) {\r\n      return;\r\n    }\r\n\r\n    changeSetting({ navigator: { language }, autoLang });\r\n  };\r\n\r\n  const onPasteLanguage = async (): Promise<void> => {\r\n    const clipboardText = await navigator.clipboard.readText();\r\n    const languageFromClipboard = clipboardText\r\n      .split(',')\r\n      .reduce((acc, currentLang) => {\r\n        const [key, order] = currentLang.split(';');\r\n        let { lastIndex, combinedLanguages } = acc;\r\n        const maxLanguages = 10;\r\n        const doesLangExist = checkDoesLangExist(key);\r\n        if (lastIndex >= maxLanguages || !doesLangExist) {\r\n          return acc;\r\n        }\r\n\r\n        const orderLang = order ? ';' + order : `;q=0.${maxLanguages - lastIndex}`;\r\n        lastIndex += 1;\r\n        combinedLanguages = combinedLanguages + key + (!lastIndex ? '' : orderLang) + ',';\r\n\r\n        return { lastIndex, combinedLanguages };\r\n      }, { lastIndex: 0, combinedLanguages: '' });\r\n\r\n    let { combinedLanguages } = languageFromClipboard;\r\n    if (combinedLanguages.endsWith(',')) {\r\n      combinedLanguages = combinedLanguages.slice(0, -1);\r\n    }\r\n\r\n    if (!combinedLanguages) {\r\n      return;\r\n    }\r\n\r\n    changeSetting({ navigator: { language: combinedLanguages, autoLang: true } });\r\n  };\r\n\r\n  const renderLanguages = (): JSX.Element => {\r\n    if (isFreeOrTorProxy && profileAutoLang) {\r\n      return (\r\n        <span>\r\n          {languagesBasedOnIp}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {separatedLanguages.map((lang, index) => (\r\n          <span style={{ overflow: 'hidden', textOverflow: 'ellipsis' }} key={index}>\r\n            {lang}\r\n          </span>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LanguageParamContainer onClick={(): void => setIsLocalesManagerVisible(true)}>\r\n        <SeparatedContainer>\r\n          {renderLanguages()}\r\n        </SeparatedContainer>\r\n        <DescriptionContainer>\r\n          {translation('quickSettings.parameters.' + (profileAutoLang ? 'basedIP' : 'manual'))}\r\n        </DescriptionContainer>\r\n        <IconPasteContainer>\r\n          <IconPaste\r\n            iconColor='var(--98989F-profile-new-settings)'\r\n            padding={0}\r\n            iconHoveredColor='var(--2B2B31-profile-new-settings)'\r\n            onClick={(event): void => {\r\n              event.stopPropagation();\r\n              onPasteLanguage();\r\n            }}\r\n            onMouseEnter={(event): void => setAnchorElTooltip(event.currentTarget)}\r\n            onMouseLeave={(): void => setAnchorElTooltip(null)}\r\n          />\r\n        </IconPasteContainer>\r\n      </LanguageParamContainer>\r\n      <TooltipCustom\r\n        anchorEl={anchorElTooltip}\r\n        value={translation('quickSettings.tooltip.pasteLanguage') || 'Paste languages'}\r\n      />\r\n      <LocalesManager\r\n        languages={profileLanguage}\r\n        languagesBasedOnIp={languagesBasedOnIp}\r\n        localesModalVisible={isLocalesManagerVisible}\r\n        toggleLocalesListModal={setProfileNavigatorLanguage}\r\n        autoLang={profileAutoLang}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport FontsManager from '../../../../features/modalsComponents/components/fonts-manager';\r\nimport { IFonts } from '../../../../interfaces';\r\nimport { OsType } from '../../../../types';\r\nimport { getFontsList, getSystemFonts } from '../../../../utils/fonts-list';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams, FontsSpan } from '../../styles';\r\n\r\ninterface IFontFullData {\r\n  name: string;\r\n  value: string;\r\n  fileNames?: string[];\r\n  os?: string[];\r\n  checked?: boolean;\r\n}\r\n\r\nconst getUserFonts = async (os: OsType, families: string[]): Promise<IFontFullData[]> => getFontsList(os, families);\r\n\r\ninterface IFontsComponent extends IChangeSetting {\r\n  os: OsType;\r\n  profileFonts: IFonts;\r\n}\r\n\r\nconst Fonts: FC<IFontsComponent> = (props) => {\r\n  const { os, profileFonts, changeSetting } = props;\r\n  const [fonts, setFonts] = useState<IFontFullData[]>([]);\r\n  const [fontsModalVisible, setFontsModalVisible] = useState<boolean>(false);\r\n  const [systemFonts, setSystemFonts] = useState<string[]>([]);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    getUserFonts(os, profileFonts.families)\r\n      .then((resultFonts) => setFonts(resultFonts));\r\n    getSystemFonts(os).then((resultSystemFonts) => setSystemFonts(resultSystemFonts));\r\n  }, [profileFonts.families]);\r\n\r\n  const onMaskingChanged = (enableMasking: boolean): void => {\r\n    changeSetting({\r\n      fonts: {\r\n        ...profileFonts,\r\n        enableMasking,\r\n      },\r\n    });\r\n  };\r\n\r\n  const saveFontsModal = (): void => {\r\n    const newFontFamilies = fonts\r\n      .filter(fontElem => fontElem.checked)\r\n      .map(fontElem => fontElem.value);\r\n\r\n    updateFonts(newFontFamilies);\r\n    setFontsModalVisible(false);\r\n  };\r\n\r\n  const updateFonts = (newFonts: string[]): void => {\r\n    changeSetting({\r\n      fonts: {\r\n        ...profileFonts,\r\n        families: newFonts,\r\n      },\r\n    });\r\n  };\r\n\r\n  const selectItems = [{\r\n    title: translation('quickSettings.parameters.real'),\r\n    value: 'real',\r\n  }, {\r\n    title: translation('quickSettings.parameters.masked'),\r\n    value: 'masked',\r\n  }];\r\n\r\n  const fontsDataLength = profileFonts.enableMasking ? profileFonts.families.length : systemFonts.length;\r\n\r\n  return (\r\n    <>\r\n      <ContainerParams\r\n        onClick={(): void => setFontsModalVisible(os !== 'android')}\r\n        style={{ cursor: 'pointer', justifyContent: 'space-between' }}\r\n      >\r\n        <div onClick={(event): void => event.stopPropagation()}>\r\n          <ModernSelect\r\n            currentValue={profileFonts.enableMasking ? 'masked' : 'real'}\r\n            itemList={selectItems}\r\n            onSelected={(value): void => onMaskingChanged(value === 'masked')}\r\n          />\r\n        </div>\r\n        <FontsSpan>\r\n          {translation('quickSettings.browser.fontsNum', { count: fontsDataLength })}\r\n        </FontsSpan>\r\n      </ContainerParams>\r\n      <FontsManager\r\n        fonts={fonts}\r\n        fontsModalVisible={fontsModalVisible}\r\n        updateFontsList={(newFonts): void => setFonts([...newFonts])}\r\n        onCancel={(): void => {\r\n          setFontsModalVisible(false);\r\n          setFonts(fonts);\r\n        }}\r\n        onOk={saveFontsModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Fonts);\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { AUDIO_CONTEXT_MODES, AudioContextModesType, IFullProfile } from '../../../../interfaces';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IAudioContextComponent {\r\n  mode: AudioContextModesType;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const AudioContext: FC<IAudioContextComponent> = ({ changeSetting, mode }) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const titleSelect: Record<AudioContextModesType, string> = {\r\n    noise: translation('quickSettings.parameters.maskedWithNoise'),\r\n    off: translation('quickSettings.parameters.real'),\r\n  };\r\n\r\n  const selectItems = AUDIO_CONTEXT_MODES.map(audioContextMode => ({\r\n    title: titleSelect[audioContextMode],\r\n    value: audioContextMode,\r\n  }));\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ModernSelect\r\n        currentValue={mode}\r\n        itemList={selectItems}\r\n        onSelected={(value): void => changeSetting({ audioContext: { mode: value as AudioContextModesType } })}\r\n      />\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IBrowserBookmarkSaving extends IChangeSetting{\r\n  bookmarks: boolean;\r\n}\r\n\r\nexport const BrowserBookmarkSaving: FC<IBrowserBookmarkSaving> = ({ changeSetting, bookmarks }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={bookmarks}\r\n      onChange={(checked): void => changeSetting({ storage: { bookmarks: checked } })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import React, { FC } from 'react';\r\n\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IBrowserHistorySaving extends IChangeSetting{\r\n  history: boolean;\r\n}\r\n\r\nexport const BrowserHistorySaving: FC<IBrowserHistorySaving> = ({ changeSetting, history }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={history}\r\n      onChange={(checked): void => changeSetting({ storage: { history: checked } })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import React, { FC } from 'react';\r\n\r\nimport { IFullProfile } from '../../../../interfaces';\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IBrowserPlugins {\r\n  enableVulnerable: boolean;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const BrowserPlugins: FC<IBrowserPlugins> = ({ changeSetting, enableVulnerable }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={enableVulnerable}\r\n      onChange={(checked): void => changeSetting({ plugins: { enableVulnerable: checked } })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { IconWrapperWithDescription } from '../../../../../ui/gologin-header/icons/wrapper';\r\nimport { textFont } from '../../../../../ui/style-templates';\r\nimport { blackMain, greyDark } from '../../../../../ui/style-templates/colors';\r\n\r\nexport const NoCookiesSpan = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  color: var(--767676-profile-new-settings);\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const CookiesWrapper = styled('div')`\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CookieItemContainer = styled('div')`\r\n  display: flex;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: pre;\r\n  color: var(--2B2B31-profile-new-settings);\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport const CookieCountContainer = styled('div')`\r\n  margin-left: 4px;\r\n  color: var(--767676-profile-new-settings);\r\n`;\r\n\r\nexport const ContainerParams = styled('div')<{ hasCursorPointer?: boolean }>`\r\n  position: relative;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: var(--2B2B31-profile-new-settings);\r\n  width: 100%;\r\n  cursor: ${(props): string => props.hasCursorPointer ? 'pointer' : 'auto'};\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const ContainerIcon = styled(IconWrapperWithDescription)`\r\n  ${textFont()};\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport {\r\n  ContainerIcon,\r\n  ContainerParams,\r\n  CookieCountContainer,\r\n  CookieItemContainer,\r\n  CookiesWrapper,\r\n  NoCookiesSpan,\r\n} from './styles';\r\nimport { ICookie } from '../../../../../interfaces';\r\nimport { IconPlusFill } from '../../../../../ui/gologin-header/icons';\r\nimport { blackMain, grey, greyInformers } from '../../../../../ui/style-templates/colors';\r\n\r\ninterface ICookies {\r\n  cookiesLoading: boolean;\r\n  cookies: ICookie[];\r\n  showModalCookies: () => void;\r\n}\r\n\r\nexport const Cookies: FC<ICookies> = (props) => {\r\n  const { cookies, cookiesLoading, showModalCookies } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const renderCookies = (): JSX.Element => {\r\n    if (cookiesLoading) {\r\n      return (\r\n        <NoCookiesSpan>\r\n          loading...\r\n        </NoCookiesSpan>\r\n      );\r\n    }\r\n\r\n    if (!cookies.length) {\r\n      return (\r\n        <ContainerIcon\r\n          iconColor='var(--B5B5BA-profile-new-settings)'\r\n          iconHoveredColor='var(--2B2B31-profile-new-settings)'\r\n          textColor='var(--81818A-profile-new-settings)'\r\n          textHoveredColor='var(--2B2B31-profile-new-settings)'\r\n          iconType='stroke'\r\n        >\r\n          <IconPlusFill padding={0} margin='0 8px 0 0' />\r\n          {translation('quickSettings.favorites.addCookies')}\r\n        </ContainerIcon>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CookiesWrapper>\r\n        {cookies.map(({ cookie, count }) => (\r\n          <CookieItemContainer key={cookie}>\r\n            {cookie}\r\n            <CookieCountContainer>\r\n              {count}\r\n            </CookieCountContainer>\r\n          </CookieItemContainer>\r\n        ))}\r\n      </CookiesWrapper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContainerParams onClick={showModalCookies}>\r\n      {renderCookies()}\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import { SerializedStyles } from '@emotion/core';\r\nimport css from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { IconWrapperWithDescription } from '../gologin-header/icons/wrapper';\r\nimport { textFont } from '../style-templates';\r\n\r\nexport const SettingsInput = styled('input')`\r\n  background: inherit;\r\n  outline: none;\r\n  letter-spacing: 0.25px;\r\n  border: none;\r\n  font-family: Roboto;\r\n  font-size: 14px;\r\n  width: 100%;\r\n  padding: 0;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n\r\n  ::placeholder {\r\n    color: var(--D2D2D5-profile-new-settings-input-start-url);\r\n  }\r\n\r\n  :disabled {\r\n    background-color: inherit;\r\n    color: var(--B5B5BA-profile-new-settings-input-start-url);\r\n  }\r\n`;\r\n\r\nexport const ContainerCloseIcon = styled(IconWrapperWithDescription)`\r\n  display: none;\r\n  background-color: inherit;\r\n  border-radius: 0;\r\n  margin-top: 1px;\r\n`;\r\n\r\nexport const InputTitle = styled('span')<{ hasMarginTop?: boolean }>`\r\n  white-space: nowrap;\r\n  margin-top: ${(props): string => props.hasMarginTop ? '8px' : '0'};\r\n  ${textFont()};\r\n  color: var(--81818A-profile-new-settings-input-start-url);\r\n`;\r\n\r\nexport const InputContainer = styled('div')<{ hasMarginTop?: boolean }>`\r\n  margin-left: auto;\r\n  display: flex;\r\n  background-color: inherit;\r\n  padding: ${(props): string => props.hasMarginTop ? '6px 0' : '0 0 6px 0'};\r\n  width: 100%;\r\n\r\n  ${(props): SerializedStyles => props.hasMarginTop ? css`\r\n    padding: 6px 0;\r\n    margin-top: 8px;\r\n  ` : css`\r\n    padding: 0 0 6px 0;\r\n    margin-top: 0;\r\n  `}\r\n\r\n  :hover {\r\n    ${ContainerCloseIcon} {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  :focus-within {\r\n    box-shadow: inset 0px -1px 0px var(--CDCDCD-profile-new-settings-input-start-url);\r\n  }\r\n`;\r\n","import React, { FC, useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ANDROID_RESOLUTIONS, RESOLUTIONS } from '../../../../features/common/all-resolutions';\r\nimport { updateMultipleFingerprints } from '../../../../features/updateProfile/api';\r\nimport { IFullProfile, IProfile } from '../../../../interfaces';\r\nimport { templatesContext } from '../../../../state';\r\nimport { useProfilesSettingsState } from '../../../../state/profiles-settings-atom';\r\nimport { IconSpin } from '../../../../ui/gologin-header/icons';\r\nimport { IconCheckFingerprint } from '../../../../ui/gologin-header/icons/icon-check-fingerprint';\r\nimport { ContainerParams, DrawerParams, FingerprintResultContainer } from '../../styles';\r\n\r\nlet FINGERPRINT_REFRESH_TIMEOUT: NodeJS.Timeout;\r\n\r\ninterface IFingerprint {\r\n  resolution: typeof RESOLUTIONS[number]|typeof ANDROID_RESOLUTIONS[number];\r\n  updateStateProfile: (profileData: Partial<IFullProfile>) => void;\r\n  updateProfileFingerprints: (profilesData: IProfile[]) => void;\r\n}\r\n\r\nexport const Fingerprint: FC<IFingerprint> = (props) => {\r\n  const [isFingerprintResult, setIsFingerprintResult] = useState<boolean>(false);\r\n  const [isFingerprintRefreshing, setIsFingerprintRefreshing] = useState<boolean>(false);\r\n\r\n  const { profileIds } = useProfilesSettingsState();\r\n\r\n  const {\r\n    resolution = `${screen.width}x${screen.height}`, updateStateProfile,\r\n    updateProfileFingerprints,\r\n  } = props;\r\n\r\n  const { selectedTemplate } = useContext(templatesContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const refreshFingerprint = async (): Promise<void> => {\r\n    try {\r\n      if (FINGERPRINT_REFRESH_TIMEOUT) {\r\n        clearTimeout(FINGERPRINT_REFRESH_TIMEOUT);\r\n      }\r\n\r\n      setIsFingerprintRefreshing(true);\r\n\r\n      const propsToFingerprint = { resolution, instanceIds: profileIds, template: selectedTemplate.id };\r\n      const newFingerprints = await updateMultipleFingerprints(propsToFingerprint);\r\n\r\n      if (profileIds.length > 1) {\r\n        updateProfileFingerprints(newFingerprints);\r\n      } else {\r\n        const [newFingerprint] = newFingerprints;\r\n        const {\r\n          fonts,\r\n          navigator,\r\n        } = newFingerprint;\r\n\r\n        let deviceMemory = navigator.deviceMemory || 2;\r\n        if (deviceMemory > 8) {\r\n          deviceMemory = 8;\r\n        }\r\n\r\n        if (deviceMemory < 1) {\r\n          deviceMemory = 1;\r\n        }\r\n\r\n        let { webGLMetadata } = newFingerprint;\r\n        const webGLMetadataMode = webGLMetadata.mode && webGLMetadata.mode === 'off' ? webGLMetadata.mode : 'mask';\r\n        webGLMetadata = {\r\n          ...webGLMetadata,\r\n          mode: webGLMetadataMode,\r\n          vendor: webGLMetadata.vendor || 'Google Inc.',\r\n          renderer: webGLMetadata.renderer || '',\r\n        };\r\n\r\n        updateStateProfile({\r\n          ...newFingerprint,\r\n          webGLMetadata,\r\n          fonts: {\r\n            families: fonts.families,\r\n          },\r\n          navigator: {\r\n            ...navigator,\r\n            deviceMemory,\r\n          },\r\n        });\r\n      }\r\n    } finally {\r\n      setIsFingerprintRefreshing(false);\r\n      setIsFingerprintResult(true);\r\n\r\n      // Set notification timeout\r\n      FINGERPRINT_REFRESH_TIMEOUT = setTimeout(() => {\r\n        setIsFingerprintResult(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const renderIcon = (): JSX.Element => {\r\n    if (isFingerprintResult && !isFingerprintRefreshing) {\r\n      return <IconCheckFingerprint padding={0} />;\r\n    }\r\n\r\n    return <IconSpin hasSpin={isFingerprintRefreshing} padding={0} />;\r\n  };\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <DrawerParams>\r\n        <FingerprintResultContainer\r\n          isFingerprintRefreshing={isFingerprintRefreshing}\r\n          onClick={refreshFingerprint}\r\n          iconColor={isFingerprintResult ? 'var(--00A987-profile-new-settings)' : 'var(--1B1B1F-profile-new-settings)'}\r\n          iconHoveredColor='var(--00A987-profile-new-settings)'\r\n          textColor={isFingerprintResult ? 'var(--00A987-profile-new-settings)' : 'var(--2B2B31-profile-new-settings)'}\r\n          textHoveredColor='var(--00A987-profile-new-settings)'\r\n          iconType='stroke'\r\n        >\r\n          {renderIcon()}\r\n          <span style={{ marginLeft: 7 }}>\r\n            {translation('quickSettings.fingerprint.refreshActionTxt')}\r\n          </span>\r\n        </FingerprintResultContainer>\r\n      </DrawerParams>\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IFullProfile } from '../../../../interfaces';\r\nimport { IconPlusFill } from '../../../../ui/gologin-header/icons';\r\nimport { blackMain, grey, greyInformers } from '../../../../ui/style-templates/colors';\r\nimport { SettingsInput } from '../../../../ui/closeable-input/styles';\r\nimport {\r\n  ContainerIcon,\r\n  ContainerParams,\r\n  ContainerSubRow,\r\n} from '../../styles';\r\n\r\ninterface ICustomDns {\r\n  dns: string;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const CustomDns: FC<ICustomDns> = ({ changeSetting, dns }) => {\r\n  const [userDns, setUserDns] = useState<string>('');\r\n  const [isEdit, setIsEdit] = useState<boolean>(false);\r\n\r\n  const inputRef = useRef<HTMLInputElement|null>(null);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!dns) {\r\n      setUserDns('');\r\n    }\r\n\r\n    setUserDns(dns);\r\n  }, [dns]);\r\n\r\n  const handleHotkey = (event: React.KeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      inputRef?.current?.blur();\r\n    }\r\n  };\r\n\r\n  const onBlur = (): void => {\r\n    changeSetting({ dns: userDns });\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const renderDns = (): JSX.Element => {\r\n    if (isEdit || userDns) {\r\n      return (\r\n        <div style={{ backgroundColor: 'inherit', width: '100%' }}>\r\n          <SettingsInput\r\n            onChange={(event): void => setUserDns(event.target.value)}\r\n            onBlur={onBlur}\r\n            onKeyPress={handleHotkey}\r\n            onFocus={(event): void => {\r\n              event.currentTarget.select();\r\n              setIsEdit(true);\r\n            }}\r\n            value={userDns}\r\n            autoFocus={true}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ContainerIcon\r\n        iconColor='var(--B5B5BA-profile-new-settings)'\r\n        iconHoveredColor='var(--2B2B31-profile-new-settings)'\r\n        textColor='var(--81818A-profile-new-settings)'\r\n        textHoveredColor='var(--2B2B31-profile-new-settings)'\r\n        iconType='stroke'\r\n        onClick={(): void => setIsEdit(true)}\r\n      >\r\n        <IconPlusFill padding={0} margin='0 8px 0 0' />\r\n        {translation('quickSettings.proxyLocation.addCustomDns')}\r\n      </ContainerIcon>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ContainerSubRow>\r\n        {renderDns()}\r\n      </ContainerSubRow>\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { DEVICE_MEMORY, DeviceMemoryType } from '../../../../interfaces';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IDeviceMemory extends IChangeSetting {\r\n  deviceMemory: DeviceMemoryType;\r\n}\r\n\r\nexport const DeviceMemory: FC<IDeviceMemory> = ({ changeSetting, deviceMemory }) => {\r\n  const selectItems = DEVICE_MEMORY.map(memory => ({\r\n    title: memory.toString() + ' GB',\r\n    value: memory.toString(),\r\n  }));\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ModernSelect\r\n        title={deviceMemory + ' GB'}\r\n        currentValue={deviceMemory.toString()}\r\n        itemList={selectItems}\r\n        onSelected={(value): void => changeSetting({ navigator: { deviceMemory: (Number(value) as DeviceMemoryType) } })}\r\n      />\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IExtensionStorage extends IChangeSetting {\r\n  extensions: boolean;\r\n}\r\nexport const ExtensionStorage: FC<IExtensionStorage> = ({ changeSetting, extensions }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={extensions}\r\n      onChange={(checked): void => changeSetting({ storage: { extensions: checked } })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import React, { FC } from 'react';\r\n\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IExternalExtensions extends IChangeSetting {\r\n  enableExternalExtensions: boolean;\r\n}\r\n\r\nexport const ExternalExtensions: FC<IExternalExtensions> = ({ changeSetting, enableExternalExtensions }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={enableExternalExtensions}\r\n      onChange={(checked): void => changeSetting({ storage: { enableExternalExtensions: checked } })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import React from 'react';\r\n\r\nimport { IconWrapper, IIconWrapper } from './wrapper';\r\n\r\nexport const IconCheckFingerprint: React.FC<IIconWrapper> = (props) => (\r\n  <IconWrapper {...props}>\r\n    <svg width='16' height='17' viewBox='0 0 16 17' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <path d='M1 9.03223L5 13.0322L15 3.03223' strokeLinecap='round' strokeLinejoin='round' />\r\n    </svg>\r\n  </IconWrapper>\r\n);\r\n","import { TFunction } from 'i18next';\r\n\r\nimport { GEOLOCATION_SELECT_DATA } from '../../../../../features/common/geolocations';\r\nimport { ISelectGroupItems } from '../../../../../ui/modern-select/interfaces';\r\n\r\nexport const selectItems = (translation: TFunction): ISelectGroupItems[] => [{\r\n  groupTitle: translation('quickSettings.parameters.automatic'),\r\n  selectItems: [{\r\n    title: translation('quickSettings.parameters.basedIP'),\r\n    value: 'automatic',\r\n    isSearchIgnored: true,\r\n  }],\r\n}, {\r\n  groupTitle: translation('quickSettings.parameters.manual'),\r\n  selectItems: [{\r\n    title: translation('quickSettings.favorites.customCoordinates'),\r\n    value: 'custom coordinates',\r\n    isSearchIgnored: true,\r\n  }, ...GEOLOCATION_SELECT_DATA,\r\n  {\r\n    title: translation('quickSettings.parameters.blocked'),\r\n    value: 'block',\r\n    isSearchIgnored: true,\r\n  }],\r\n}];\r\n","import React, { ChangeEvent, FC, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { selectItems } from './select-items';\r\nimport { GEOLOCATION_DATA } from '../../../../../features/common/geolocations';\r\nimport { getTimezoneByBasedIp } from '../../../../../features/common/get-data-by-based-ip';\r\nimport { IGetTimezoneByBasedIp } from '../../../../../features/common/get-data-by-based-ip/interfaces';\r\nimport { IFullProfile, IGeolocation, IProxy } from '../../../../../interfaces';\r\nimport { refreshLocalUserDevice, useLocalUserDevice } from '../../../../../state/local-user-device.atom';\r\nimport { useProxyList } from '../../../../../state/proxy-list.atom';\r\nimport { InputTitle, SettingsInput } from '../../../../../ui/closeable-input/styles';\r\nimport { ModernSelect } from '../../../../../ui/modern-select';\r\nimport { ContainerParams, ContainerSpaceBetween, ContainerSubRow, DrawerParams, GreyDarkTextContainer } from '../../../styles';\r\n\r\ninterface IGeolocationComponent {\r\n  profileGeolocation: IGeolocation;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n  proxy: IProxy;\r\n  isFreeOrTorProxy: boolean;\r\n}\r\n\r\nconst Geolocation: FC<IGeolocationComponent> = (props) => {\r\n  const { changeSetting, profileGeolocation, proxy, isFreeOrTorProxy } = props;\r\n\r\n  const localUserDevice = useLocalUserDevice();\r\n\r\n  const [isEdit, setIsEdit] = useState<boolean>(false);\r\n  const [data, setData] = useState<IGetTimezoneByBasedIp>({ timezone: '', country: '' });\r\n  const [geolocation, setGeolocation] = useState<IGeolocation>(profileGeolocation);\r\n\r\n  const proxyList = useProxyList();\r\n\r\n  const { t: translation } = useTranslation();\r\n  const proxyFromCtx = proxyList.find(proxyFromList => proxyFromList._id === proxy.id);\r\n\r\n  const getData = (): void => {\r\n    const timezoneLocation = getTimezoneByBasedIp({\r\n      proxy,\r\n      translation,\r\n      proxyFromCtx,\r\n      localUserDevice,\r\n    });\r\n\r\n    setData(timezoneLocation);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    refreshLocalUserDevice();\r\n  }, [proxy, proxyFromCtx, isFreeOrTorProxy, localUserDevice.timezone]);\r\n\r\n  useEffect(() => {\r\n    setGeolocation(profileGeolocation);\r\n  }, [profileGeolocation]);\r\n\r\n  const automaticTitle = translation('quickSettings.parameters.basedIP');\r\n  const hasOpenCoordinates = geolocation.isCustomCoordinates;\r\n\r\n  const saveGeolocation = (): void => {\r\n    const { latitude = 0, longitude = 0 } = geolocation;\r\n    const minAccuracy = 10;\r\n    const maxAccuracy = 100;\r\n    let { accuracy = minAccuracy } = geolocation;\r\n\r\n    if (accuracy < minAccuracy) {\r\n      accuracy = minAccuracy;\r\n    }\r\n\r\n    if (accuracy > maxAccuracy) {\r\n      accuracy = maxAccuracy;\r\n    }\r\n\r\n    changeSetting({\r\n      geolocation: {\r\n        ...geolocation,\r\n        accuracy,\r\n        latitude,\r\n        longitude,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onKeyPressInput = (event: React.KeyboardEvent): void => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n\r\n    saveGeolocation();\r\n  };\r\n\r\n  const onGeolocationChanged = (type: 'latitude'|'longitude'|'accuracy', event: ChangeEvent<HTMLInputElement>): void => {\r\n    const regex = /^-?\\d*\\.?\\d*$/;\r\n    const { value } = event.target;\r\n    if (!regex.test(value)) {\r\n      return;\r\n    }\r\n\r\n    setGeolocation({ ...geolocation, [type]: value });\r\n  };\r\n\r\n  const isFillBasedOnIp = (value: string): boolean => {\r\n    if (value === 'automatic') {\r\n      return true;\r\n    }\r\n\r\n    if (value !== 'block') {\r\n      return false;\r\n    }\r\n\r\n    return !!geolocation.fillBasedOnIp;\r\n  };\r\n\r\n  const onChangeMode = (type: string): void => {\r\n    if (!type) {\r\n      return;\r\n    }\r\n\r\n    const isCustomCoordinates = type === 'custom coordinates';\r\n    setIsEdit(isCustomCoordinates);\r\n    const selectedLocation = GEOLOCATION_DATA.find(({ city }) => city === type);\r\n    let { latitude, longitude } = geolocation;\r\n    if (type !== 'block' && type !== 'automatic' && selectedLocation) {\r\n      const { latitude: latitudeFromFoundLocation, longitude: longitudeFromFoundLocation } = selectedLocation;\r\n      latitude = latitudeFromFoundLocation;\r\n      longitude = longitudeFromFoundLocation;\r\n    }\r\n\r\n    changeSetting({\r\n      geolocation: {\r\n        mode: type === 'block' ? 'block' : 'prompt',\r\n        fillBasedOnIp: isFillBasedOnIp(type),\r\n        isCustomCoordinates,\r\n        latitude,\r\n        longitude,\r\n      },\r\n    });\r\n  };\r\n\r\n  const renderGeolocationData = (): JSX.Element|null => {\r\n    if (!(isEdit && hasOpenCoordinates)) {\r\n      return null;\r\n    }\r\n\r\n    const geolocationRenderData: { type: 'latitude'|'longitude'|'accuracy' }[] = [\r\n      { type: 'latitude' },\r\n      { type: 'longitude' },\r\n      { type: 'accuracy' },\r\n    ];\r\n\r\n    return (\r\n      <ContainerSubRow\r\n        hasMarginTop={true}\r\n        hasGap={true}\r\n        onClick={(event): void => event.stopPropagation()}\r\n      >\r\n        {geolocationRenderData.map(({ type }) => (\r\n          <>\r\n            <InputTitle hasMarginTop={true}>\r\n              {type.charAt(0).toUpperCase() + type.slice(1)}\r\n            </InputTitle>\r\n            <SettingsInput\r\n              onChange={(event): void => onGeolocationChanged(type, event)}\r\n              onBlur={saveGeolocation}\r\n              onKeyPress={onKeyPressInput}\r\n              value={geolocation[type]?.toString()}\r\n              key={type}\r\n              style={{ padding: '6px 0', marginTop: 8 }}\r\n              onFocus={(event): void => event.currentTarget.select()}\r\n            />\r\n          </>\r\n        ))}\r\n      </ContainerSubRow>\r\n    );\r\n  };\r\n\r\n  const currentValueFromSelectItems = useMemo((): string => {\r\n    const { latitude: profileLatitude = 0, longitude: profileLongitude = 0, isCustomCoordinates } = geolocation;\r\n    const selectedCity = GEOLOCATION_DATA\r\n      .find(({ latitude, longitude }) => latitude === profileLatitude && longitude === profileLongitude)?.city || '';\r\n\r\n    const isCustom = !isCustomCoordinates && selectedCity;\r\n    let value = isCustom ? selectedCity : 'custom coordinates';\r\n    if (geolocation.fillBasedOnIp) {\r\n      value = 'automatic';\r\n    }\r\n\r\n    if (geolocation.mode === 'block') {\r\n      value = 'block';\r\n    }\r\n\r\n    return value;\r\n  }, [geolocation]);\r\n\r\n  const renderSelectTitle = (): string => {\r\n    const isBasedOnIp = geolocation.fillBasedOnIp && geolocation.mode !== 'block';\r\n    const { timezone = '', country = '' } = data;\r\n    const [countryByIp, cityByIp] = timezone.split('/');\r\n    if (isFreeOrTorProxy && isBasedOnIp) {\r\n      return countryByIp;\r\n    }\r\n\r\n    let selectTitle = 'Custom geolocation';\r\n    const currentValue = isBasedOnIp ? cityByIp : currentValueFromSelectItems;\r\n    selectItems(translation).forEach(item => {\r\n      item.selectItems.forEach(subItem => {\r\n        if (!(subItem.value === currentValue && subItem.subValue === country)) {\r\n          return;\r\n        }\r\n\r\n        selectTitle = subItem.title;\r\n      });\r\n    });\r\n\r\n    return selectTitle;\r\n  };\r\n\r\n  const renderDescription = (): JSX.Element|null => {\r\n    const { fillBasedOnIp, mode } = geolocation;\r\n    if (mode === 'block') {\r\n      return null;\r\n    }\r\n\r\n    const descriptions = fillBasedOnIp ?\r\n      automaticTitle :\r\n      selectItems(translation).find(item => item.selectItems.find(subItem => subItem.value === currentValueFromSelectItems))?.groupTitle || '';\r\n\r\n    return (\r\n      <GreyDarkTextContainer hasCursorPointer={currentValueFromSelectItems === 'custom coordinates'}>\r\n        {descriptions}\r\n      </GreyDarkTextContainer>\r\n    );\r\n  };\r\n\r\n  const changeEditMode = (): void => {\r\n    if (!hasOpenCoordinates) {\r\n      return;\r\n    }\r\n\r\n    setIsEdit(!isEdit);\r\n  };\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <DrawerParams\r\n        style={{ flexDirection: 'column' }}\r\n        onClick={changeEditMode}\r\n        hasCursorPointer={hasOpenCoordinates}\r\n      >\r\n        <ContainerSpaceBetween>\r\n          <ModernSelect\r\n            currentValue={currentValueFromSelectItems}\r\n            title={renderSelectTitle()}\r\n            itemList={selectItems(translation)}\r\n            onSelected={onChangeMode}\r\n            hasSearch\r\n            popoverMaxHeight='317px'\r\n            popoverWidth='303px'\r\n            maxWidth='170px'\r\n          />\r\n          {renderDescription()}\r\n        </ContainerSpaceBetween>\r\n        {renderGeolocationData()}\r\n      </DrawerParams>\r\n    </ContainerParams>\r\n  );\r\n};\r\n\r\nexport default React.memo(Geolocation);\r\n","import React, { FC } from 'react';\r\n\r\nimport { IFullProfile } from '../../../../interfaces';\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IGoogleServices {\r\n  googleServicesEnabled: boolean;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const GoogleServices: FC<IGoogleServices> = ({ changeSetting, googleServicesEnabled }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={googleServicesEnabled}\r\n      onChange={(checked): void => changeSetting({ googleServicesEnabled: checked })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { HARDWARE_CONCURRENCY, HardwareConcurrencyType } from '../../../../interfaces';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IHardwareConcurrency extends IChangeSetting {\r\n  hardwareConcurrency: HardwareConcurrencyType;\r\n}\r\n\r\nexport const HardwareConcurrency: FC<IHardwareConcurrency> = ({ changeSetting, hardwareConcurrency }) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const selectItems = HARDWARE_CONCURRENCY.map(hardware => ({\r\n    title: translation('quickSettings.hardware.threads', { count: hardware }),\r\n    value: hardware.toString(),\r\n  }));\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ModernSelect\r\n        currentValue={hardwareConcurrency.toString()}\r\n        itemList={selectItems}\r\n        onSelected={(value): void => changeSetting({ navigator: { hardwareConcurrency: (Number(value) as HardwareConcurrencyType) } })}\r\n      />\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface ILocalStorageAndIndexedDB extends IChangeSetting{\r\n  indexedDb: boolean;\r\n  local: boolean;\r\n}\r\n\r\nexport const LocalStorageAndIndexedDB: FC<ILocalStorageAndIndexedDB> = ({ changeSetting, indexedDb, local }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={(local && indexedDb)}\r\n      onChange={(checked): void => changeSetting({ storage: { local: checked, indexedDb: checked } })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import React, { FC } from 'react';\r\n\r\nimport { MAX_TOUCH_POINTS, MaxTouchPointsType } from '../../../../interfaces';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { ISelectItem } from '../../../../ui/modern-select/interfaces';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface  IMaxTouchPoints extends IChangeSetting{\r\n  maxTouchPoints: MaxTouchPointsType;\r\n}\r\n\r\nexport const MaxTouchPoints: FC<IMaxTouchPoints> = ({ changeSetting, maxTouchPoints }) => {\r\n  const selectItems: ISelectItem[] = MAX_TOUCH_POINTS.map(maxTouchPoint => ({\r\n    title: maxTouchPoint.toString(),\r\n    value: maxTouchPoint.toString(),\r\n  }));\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ModernSelect\r\n        currentValue={maxTouchPoints.toString()}\r\n        itemList={selectItems}\r\n        onSelected={(value): void => changeSetting({ navigator: { maxTouchPoints: Number(value) as MaxTouchPointsType } })}\r\n      />\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IFullProfile, IMediaDevices } from '../../../../interfaces';\r\nimport { InputTitle, SettingsInput } from '../../../../ui/closeable-input/styles';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport {\r\n  ContainerParams,\r\n  ContainerSubRow,\r\n  ContainerSpaceBetween,\r\n  GreyDarkTextContainer,\r\n} from '../../styles';\r\n\r\nconst defaultDevice = {\r\n  videoInputs: 0,\r\n  audioInputs: 0,\r\n  audioOutputs: 0,\r\n};\r\n\r\nlet userDeviceInfo = { ...defaultDevice };\r\n\r\ninterface IMediaDevicesComponent {\r\n  profileMediaDevices: IMediaDevices;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const MediaDevices: FC<IMediaDevicesComponent> = ({ changeSetting, profileMediaDevices }) => {\r\n  const [isEditModeOpened, setIsEditModeOpened] = useState<boolean>(false);\r\n  const [mediaDevices, setMediaDevices] = useState<IMediaDevices>(profileMediaDevices);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const getUserMedia = async (): Promise<void> => {\r\n    const userMediaDevices = await navigator.mediaDevices.enumerateDevices();\r\n    userDeviceInfo = userMediaDevices.reduce((allDevice, device) => {\r\n      if (device.kind === 'audioinput') {\r\n        allDevice.audioInputs++;\r\n\r\n        return allDevice;\r\n      }\r\n\r\n      if (device.kind === 'audiooutput') {\r\n        allDevice.audioOutputs++;\r\n\r\n        return allDevice;\r\n      }\r\n\r\n      allDevice.videoInputs++;\r\n\r\n      return allDevice;\r\n    }, { ...defaultDevice });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserMedia();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMediaDevices(profileMediaDevices.enableMasking ? profileMediaDevices : userDeviceInfo);\r\n  }, [profileMediaDevices]);\r\n\r\n  const onMaskingChanged = (enableMasking: boolean): void => {\r\n    changeSetting({\r\n      mediaDevices: {\r\n        ...profileMediaDevices,\r\n        enableMasking,\r\n      },\r\n    });\r\n  };\r\n\r\n  const renderMediaInfo = (): string => {\r\n    if (profileMediaDevices?.enableMasking) {\r\n      const { videoInputs, audioInputs, audioOutputs } = profileMediaDevices;\r\n\r\n      return `Cam. ${videoInputs} / Mic. ${audioInputs} / Sp. ${audioOutputs}`;\r\n    }\r\n\r\n    const { videoInputs, audioInputs, audioOutputs } = userDeviceInfo;\r\n\r\n    return `Cam. ${videoInputs} / Mic. ${audioInputs} / Sp. ${audioOutputs}`;\r\n  };\r\n\r\n  const onMediaDeviceChanged = (type: 'videoInputs'|'audioInputs'|'audioOutputs', event: ChangeEvent<HTMLInputElement>): void => {\r\n    const value = event.target.value.replace(/[^0-9]/g, '');\r\n    setMediaDevices({ ...mediaDevices, [type]: Number(value) });\r\n  };\r\n\r\n  const onKeyPressInput = (event: React.KeyboardEvent): void => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n\r\n    saveMediaInfo();\r\n  };\r\n\r\n  const saveMediaInfo = (): void => {\r\n    const maxValue = 9;\r\n    const videoInputs = +mediaDevices.videoInputs > maxValue ? maxValue : +mediaDevices.videoInputs;\r\n    const audioInputs = +mediaDevices.audioInputs > maxValue ? maxValue : +mediaDevices.audioInputs;\r\n    const audioOutputs = +mediaDevices.audioOutputs > maxValue ? maxValue : +mediaDevices.audioOutputs;\r\n\r\n    changeSetting({\r\n      mediaDevices: {\r\n        ...profileMediaDevices,\r\n        videoInputs,\r\n        audioInputs,\r\n        audioOutputs,\r\n      },\r\n    });\r\n\r\n    setMediaDevices({ ...mediaDevices, videoInputs, audioInputs, audioOutputs });\r\n  };\r\n\r\n  const renderInputMediaDevices = (): JSX.Element|null => {\r\n    if (!isEditModeOpened) {\r\n      return null;\r\n    }\r\n\r\n    const inputsData: { title: string; type: 'videoInputs'|'audioInputs'|'audioOutputs' }[] = [\r\n      { title: translation('quickSettings.hardware.videoinput'), type: 'videoInputs' },\r\n      { title: translation('quickSettings.hardware.audioinput'), type: 'audioInputs' },\r\n      { title: translation('quickSettings.hardware.audiooutput'), type: 'audioOutputs' },\r\n    ];\r\n\r\n    return (\r\n      <ContainerSubRow hasMarginTop={true} hasGap={true} onClick={(event): void => event.stopPropagation()}>\r\n        {inputsData.map(({ title, type }) => (\r\n          <>\r\n            <InputTitle hasMarginTop={true}>\r\n              {title}\r\n            </InputTitle>\r\n            <SettingsInput\r\n              onChange={(event): void => onMediaDeviceChanged(type, event)}\r\n              onBlur={saveMediaInfo}\r\n              onKeyPress={onKeyPressInput}\r\n              value={mediaDevices[type].toString()}\r\n              title={title}\r\n              key={type}\r\n              disabled={!profileMediaDevices.enableMasking}\r\n              style={{ padding: '6px 0', marginTop: 8 }}\r\n              onFocus={(event): void => event.currentTarget.select()}\r\n            />\r\n          </>\r\n        ))}\r\n      </ContainerSubRow>\r\n    );\r\n  };\r\n\r\n  const toggleEditMode = (): void => {\r\n    setIsEditModeOpened(!isEditModeOpened);\r\n  };\r\n\r\n  const selectItems = [{\r\n    title: translation('quickSettings.parameters.real'),\r\n    value: 'real',\r\n  }, {\r\n    title: translation('quickSettings.parameters.masked'),\r\n    value: 'masked',\r\n  }];\r\n\r\n  return (\r\n    <ContainerParams\r\n      style={{ flexWrap: 'wrap' }}\r\n      onClick={toggleEditMode}\r\n      hasCursorPointer={true}\r\n    >\r\n      <ContainerSpaceBetween>\r\n        <div onClick={(event): void => event.stopPropagation()}>\r\n          <ModernSelect\r\n            currentValue={profileMediaDevices.enableMasking ? 'masked' : 'real'}\r\n            itemList={selectItems}\r\n            onSelected={(value): void => onMaskingChanged(value === 'masked')}\r\n          />\r\n        </div>\r\n        <GreyDarkTextContainer hasCursorPointer={true}>\r\n          {renderMediaInfo()}\r\n        </GreyDarkTextContainer>\r\n      </ContainerSpaceBetween>\r\n      {renderInputMediaDevices()}\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { requestFingerprint } from '../../../../features/common/api';\r\nimport { OSWithM1 } from '../../../../utils/user-os';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { ISelectItem } from '../../../../ui/modern-select/interfaces';\r\nimport { ISetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\nexport const OperatingSystem: FC<ISetting> = ({ changeSetting, fullProfile })  => {\r\n  const updateFingerprint = async ({ os = 'win', isM1 = false }): Promise<void> => {\r\n    const resolution = `${screen.width}x${screen.height}`;\r\n\r\n    const fingerprint = await requestFingerprint({ os, resolution, isM1 }).catch(() => ({}));\r\n    const { os: fingerprintOS } = fingerprint;\r\n\r\n    if (os !== fingerprintOS) {\r\n      return;\r\n    }\r\n\r\n    const newProfile = {\r\n      ...fullProfile,\r\n      os: fingerprintOS,\r\n      isM1,\r\n    };\r\n\r\n    changeSetting(newProfile);\r\n  };\r\n\r\n  const onChange = (event: OSWithM1): void => {\r\n    updateFingerprint({\r\n      os: event === 'macM1' ? 'mac' : event,\r\n      isM1: event === 'macM1',\r\n    });\r\n  };\r\n\r\n  const osToRender: ISelectItem[] = [\r\n    { title: 'Windows', value: 'win' },\r\n    { title: 'MacOS', value: 'mac' },\r\n    { title: 'MacOS M1', value: 'macM1' },\r\n    { title: 'Linux', value: 'lin' },\r\n    { title: 'Android', value: 'android' },\r\n  ];\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ModernSelect\r\n        currentValue={fullProfile.os}\r\n        itemList={osToRender}\r\n        onSelected={(value): void => onChange(value as OSWithM1)}\r\n      />\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IPasswordSaving extends IChangeSetting {\r\n  passwords: boolean;\r\n}\r\n\r\nexport const PasswordSaving: FC<IPasswordSaving> = ({ changeSetting, passwords }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={passwords}\r\n      onChange={(checked): void => changeSetting({ storage: { passwords: checked } })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import { addMultipleProxies } from './add-multiple-proxies';\r\nimport { IProxy } from './components/interfaces/IProxy';\r\nimport { parseMultipleProxies } from '../../utils/proxy-string';\r\nimport { sendActionAnalytics } from '../common/api';\r\n\r\ninterface IParams {\r\n  clipboardText: string;\r\n  profileInEditProxyMode: string | null;\r\n  proxyList: IProxy[];\r\n}\r\n\r\nexport const sendPastedProxies = async (params: IParams): Promise<IProxy[] | undefined> => {\r\n  const { clipboardText, profileInEditProxyMode, proxyList } = params;\r\n  const proxies = await parseMultipleProxies(clipboardText);\r\n  if (!profileInEditProxyMode) {\r\n    return;\r\n  }\r\n\r\n  sendActionAnalytics('pasted proxy from buffer');\r\n\r\n  return addMultipleProxies({\r\n    proxyList,\r\n    proxies,\r\n  });\r\n};\r\n","import { getProfilesList, mapAndSetProfilesList, setProfilesList } from './profiles-list.atom';\r\nimport {\r\n  decrementProxyProfilesCount,\r\n  getProxyList,\r\n  incrementProxyProfilesCount,\r\n  removeProxiesFromList,\r\n} from './proxy-list.atom';\r\nimport { closeProxyManager, getProxyManagerState } from './proxy-manager-modal-status.atom';\r\nimport { updateSelectedProxies } from './selected-proxies.atom';\r\nimport { sendActionAnalytics } from '../features/common/api';\r\nimport { IProfileProxy } from '../features/proxy/components/interfaces/IProfileProxy';\r\nimport { IProxy } from '../features/proxy/components/interfaces/IProxy';\r\nimport { PROXY_EMPTY } from '../features/proxy/constants';\r\nimport { EMPTY_PROXY } from '../features/proxy/proxy-helpers';\r\nimport { sendPastedProxies } from '../features/proxy/send-pasted-proxies';\r\nimport { updateProfileProxy } from '../features/quickProfiles/api';\r\n\r\nconst deleteProxyFromProfiles = (proxyIds: string[]): void => {\r\n  mapAndSetProfilesList(prevProfiles => prevProfiles.map(profile => {\r\n    const isDeletingProfileProxy = proxyIds && proxyIds.includes(profile.proxy.id || '');\r\n    if (!isDeletingProfileProxy) {\r\n      return profile;\r\n    }\r\n\r\n    return {\r\n      ...profile,\r\n      proxyEnabled: false,\r\n      proxy: PROXY_EMPTY,\r\n      proxyType: 'none',\r\n    };\r\n  }));\r\n};\r\n\r\nexport const deleteProxies = (proxyIdsToDelete: string[]): void => {\r\n  removeProxiesFromList(proxyIdsToDelete);\r\n  deleteProxyFromProfiles(proxyIdsToDelete);\r\n  updateSelectedProxies({\r\n    selectedProxies: [],\r\n    selectedProxy: null,\r\n  });\r\n};\r\n\r\n// TODO: fix `any` types for proxies\r\nexport const selectProfileProxy = async (profileId: string, proxy: IProfileProxy): Promise<void> => {\r\n  const profilesList = getProfilesList();\r\n  const profileInfo = profilesList.find((profile) => profile.id === profileId);\r\n  const prevProfileProxyId = profileInfo?.proxy?.id || '';\r\n  const noNeedToUpdate = prevProfileProxyId === (proxy._id || ' ');\r\n  if (!profileInfo || noNeedToUpdate) {\r\n    return;\r\n  }\r\n\r\n  if (proxy._id) {\r\n    incrementProxyProfilesCount(proxy?._id);\r\n  }\r\n\r\n  if (prevProfileProxyId) {\r\n    decrementProxyProfilesCount(prevProfileProxyId);\r\n  }\r\n\r\n  mapAndSetProfilesList(prevProfilesList => prevProfilesList.map((profile) => {\r\n    if (profile.id !== profileId) {\r\n      return profile;\r\n    }\r\n\r\n    return {\r\n      ...profile,\r\n      proxy: {\r\n        id: proxy._id,\r\n        customName: proxy.customName,\r\n        mode: proxy.mode,\r\n        host: proxy.host,\r\n        port: proxy.port,\r\n        username: proxy.username,\r\n        password: proxy.password,\r\n        country: proxy.country,\r\n        city: proxy.city,\r\n        autoProxyRegion: proxy.autoProxyRegion,\r\n        torProxyRegion: proxy.torProxyRegion,\r\n        profiles: (proxy as any).profiles || [],\r\n        profilesCount: proxy.profilesCount || 0,\r\n      } as any,\r\n      proxyType: proxy.mode,\r\n      proxyEnabled: proxy.mode !== 'none',\r\n    };\r\n  }));\r\n\r\n  await updateProfileProxy({ ...proxy, id: profileId } as any)\r\n    .catch(() => setProfilesList(profilesList));\r\n\r\n  sendActionAnalytics('chose proxy via proxy manager');\r\n};\r\n\r\nexport const unselectProfileProxy = (profileId: string): Promise<void> => selectProfileProxy(profileId, EMPTY_PROXY);\r\n\r\nexport const pasteProxies = async (profileId?: string): Promise<IProxy[]> => {\r\n  const { currentProfileId } = getProxyManagerState();\r\n  const proxyList = getProxyList();\r\n\r\n  const clipboardText = await navigator.clipboard.readText();\r\n\r\n  const proxies = await sendPastedProxies({\r\n    clipboardText,\r\n    profileInEditProxyMode: profileId || currentProfileId,\r\n    proxyList,\r\n  }) || [];\r\n\r\n  if (proxies.length === 1 && profileId) {\r\n    const [pastedProxy] = proxies;\r\n    await selectProfileProxy(profileId, pastedProxy);\r\n    closeProxyManager();\r\n  }\r\n\r\n  return proxies;\r\n};\r\n","import { Tooltip } from 'antd';\r\nimport { TooltipTrigger } from 'antd/lib/tooltip';\r\nimport React, { FC, useState } from 'react';\r\n\r\ninterface IProps {\r\n  tooltipContent: JSX.Element;\r\n  tooltipTrigger?: TooltipTrigger;\r\n}\r\n\r\nconst ProxyIconBtnWithTooltip: FC<IProps> = (props) => {\r\n  const {\r\n    tooltipContent,\r\n    children,\r\n    tooltipTrigger = 'hover',\r\n  } = props;\r\n\r\n  const [tooltipVisible, setTooltipVisible] = useState<boolean>(false);\r\n\r\n  const handleVisibleChange = (visible: boolean): void => {\r\n    setTooltipVisible(visible);\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      title={(): JSX.Element => tooltipContent}\r\n      visible={tooltipVisible}\r\n      mouseEnterDelay={0.8}\r\n      onVisibleChange={handleVisibleChange}\r\n    >\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ProxyIconBtnWithTooltip;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { theme } from '../proxy-helpers';\r\n\r\nexport const ProxyInfoContainerEl = styled('div')`\r\n  width: 318px;\r\n  padding: 6px 8px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  letter-spacing: 0.25px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const ProxyInfoButtonsEl = styled('div')`\r\n  width: 64px;\r\n  height: 28px;\r\n  padding: 0 16px 0 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: var(--767676-proxy-manager-info);\r\n  margin-top: -6px;\r\n  align-items: flex-end;\r\n  flex-flow: row-reverse;\r\n\r\n  & button {\r\n    margin-right: 13px;\r\n  }\r\n\r\n  & > .proxy-selected {\r\n    color: ${theme.colors.primary};\r\n  }\r\n`;\r\n\r\nexport const ProxyInfoRowEl = styled('div')`\r\n  padding: 4px 0 3px;\r\n  display: flex;\r\n`;\r\n\r\nexport const ProxyInfoUpdatedAgoEl = styled('div')<{ danger?: boolean }>`\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.danger) ? `\r\n      color: var(--F5222D-proxy-manager-info);\r\n    ` : 'color: var(--767676-proxy-manager-info);'}\r\n  `}\r\n`;\r\n\r\nexport const ProxyStatusDotContainerEl = styled('div')`\r\n  margin-top: 2px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const ProxyStatusIconEl = styled('div')<{ danger?: boolean }>`\r\n  padding: 0 5px;\r\n  text-align: center;\r\n  position: relative;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.danger) ? `\r\n      color: var(--F5222D-proxy-manager-info);\r\n      width: 25px;\r\n      margin-right: 3px;\r\n      margin-left: -4px;\r\n    `: `\r\n      color: ${theme.colors.primary};\r\n      top: -2px;\r\n      width: 13px;\r\n      margin-right: 11px;\r\n    `}\r\n  `}\r\n`;\r\n\r\nexport const ChangeIpBtn = styled('a')`\r\n  color: var(--767676-proxy-manager-info);\r\n  outline: none;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  margin-left: 8px;\r\n\r\n  &:focus,\r\n  &:visited {\r\n    color: var(--767676-proxy-manager-info);\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: var(--767676-proxy-manager-info);\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport const RemoveBtnContainerEl = styled('div')`\r\n  width:32px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nimport IconArrawDown from '../../../ui/icons/IconArrawDown';\r\n\r\nexport const ReadMoreBtnEl = styled('button')`\r\n  color: var(--767676-proxy-manager-info-error);\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: none;\r\n  border: none;\r\n  padding: 0;\r\n  letter-spacing: 0.25px;\r\n  line-height: 20px;\r\n`;\r\n\r\nexport const IconArrow = styled(IconArrawDown)`\r\n  margin-left: 6px;\r\n  stroke: var(--767676-proxy-manager-info-error);\r\n`;\r\n\r\nexport const ErrorTextEl = styled('div')`\r\n  padding: 3px 0 4px;\r\n  display: flex;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n`;\r\n\r\nexport const ErrorDetailsEl = styled('div')`\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const ErrorDetailsListEl = styled('ul')`\r\n  list-style: outside;\r\n  padding: 0;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  margin: 0 0 3px;\r\n`;\r\n\r\nexport const ErrorDetailsListItemEl = styled('li')`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ReadMoreBlockEl = styled('div')`\r\n  position: absolute;\r\n  background-color: var(--FFFFFF-proxy-manager-info-error);\r\n  border-radius: 0px 0px 4px 4px;\r\n  box-shadow: var(--00000026-proxy-manager-info-error) 0px 2px 8px;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  padding: 0px 16px 12px;\r\n  margin-top: -13px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: -5px;\r\n    height: 5px;\r\n    width: 100%;\r\n    background: var(--FFFFFF-proxy-manager-info-error);\r\n  }\r\n`;\r\n","import React, { FC, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ProxyInfoRowEl } from '../styles/proxy-info';\r\nimport {\r\n  ReadMoreBtnEl,\r\n  IconArrow,\r\n  ErrorDetailsEl,\r\n  ErrorDetailsListEl,\r\n  ErrorDetailsListItemEl,\r\n  ErrorTextEl,\r\n  ReadMoreBlockEl,\r\n} from '../styles/proxy-info-error';\r\nimport { IProxy } from './interfaces/IProxy';\r\n\r\ninterface IProps {\r\n  proxy: IProxy;\r\n}\r\n\r\nconst ProxyInfoError: FC<IProps> = (props: IProps) => {\r\n  const {\r\n    proxy,\r\n  } = props;\r\n\r\n  const [readMore, setReadMore] = useState<boolean>(false);\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleReadMoreClick = (): void => {\r\n    setReadMore(true);\r\n  };\r\n\r\n  const handleReadLessClick = (): void => {\r\n    setReadMore(false);\r\n  };\r\n\r\n  const errorTranslation: { howToFixList: string[] } =\r\n  {\r\n    howToFixList: [\r\n      translation('proxies.error.howToFixListItemOne'),\r\n      translation('proxies.error.howToFixListItemTwo'),\r\n      translation('proxies.error.howToFixListItemThree'),\r\n    ],\r\n  };\r\n\r\n  let { howToFixList } = errorTranslation;\r\n  if (!howToFixList) {\r\n    howToFixList = [];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorTextEl>\r\n        {translation('proxies.error.reason')}\r\n      </ErrorTextEl>\r\n\r\n      {(readMore) ? (\r\n        <ReadMoreBlockEl>\r\n          <ErrorDetailsEl>\r\n            {translation('proxies.error.howToFixTitle')}\r\n            <ErrorDetailsListEl>\r\n              {howToFixList.map((el: string): JSX.Element => (\r\n                <ErrorDetailsListItemEl key={`el_${el}`}>\r\n                  {el}\r\n                </ErrorDetailsListItemEl>\r\n              ))}\r\n            </ErrorDetailsListEl>\r\n          </ErrorDetailsEl>\r\n          <ProxyInfoRowEl>\r\n            <ReadMoreBtnEl onClick={handleReadLessClick}>\r\n              {translation('proxies.readLess')}\r\n              <IconArrow color={'var(--767676-proxy-manager-info-error)'} width={16} height={10} style={{\r\n                transform: 'scaleY(-1)',\r\n              }} />\r\n            </ReadMoreBtnEl>\r\n          </ProxyInfoRowEl>\r\n        </ReadMoreBlockEl>\r\n      ) : (\r\n        <ProxyInfoRowEl>\r\n          <ReadMoreBtnEl onClick={handleReadMoreClick}>\r\n            {translation('proxies.readMore')}\r\n            <IconArrow color={'var(--767676-proxy-manager-info-error)'} width={16} height={10} />\r\n          </ReadMoreBtnEl>\r\n        </ProxyInfoRowEl>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProxyInfoError;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconCheckCircle: FC = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M8 15.5C12.1421 15.5 15.5 12.1421 15.5 8C15.5 3.85786 12.1421 0.5 8 0.5C3.85786 0.5 0.5 3.85786 0.5 8C0.5 12.1421 3.85786 15.5 8 15.5Z\"\r\n      stroke=\"currentColor\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path d=\"M4.5 8.5L7 11L12 6\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconCheckCircle;\r\n","import React from 'react';\r\n\r\nconst IconCloseCurrentColor = () => (\r\n  <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g>\r\n      <path d=\"M19 5L5 19\" stroke=\"currentColor\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"square\" />\r\n      <path d=\"M19 19L5 5\" stroke=\"currentColor\" strokeWidth=\"2\" strokeMiterlimit=\"10\" strokeLinecap=\"square\" />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default IconCloseCurrentColor;\r\n","import React from 'react';\r\n\r\nconst IconProxyPencil = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M13 7L9 3\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M5.5 14.5L0.5 15.5L1.5 10.5L11.5 0.5L15.5 4.5L5.5 14.5Z\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconProxyPencil;\r\n","import React from 'react';\r\n\r\nconst IconWarningTr = () => (\r\n  <svg width=\"16\" height=\"15\" viewBox=\"0 0 16 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M8 13C8.55228 13 9 12.5523 9 12C9 11.4477 8.55228 11 8 11C7.44772 11 7 11.4477 7 12C7 12.5523 7.44772 13 8 13Z\" fill=\"currentColor\"/>\r\n    <path d=\"M8 4.5V9.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M0.741037 12.7768L6.97004 1.20877C7.07022 1.02284 7.21887 0.867485 7.40021 0.759204C7.58156 0.650923 7.78883 0.59375 8.00004 0.59375C8.21125 0.59375 8.41852 0.650923 8.59986 0.759204C8.7812 0.867485 8.92985 1.02284 9.03004 1.20877L15.259 12.7768C15.3548 12.955 15.4028 13.155 15.3982 13.3573C15.3936 13.5595 15.3367 13.7572 15.2329 13.9308C15.1291 14.1045 14.9821 14.2483 14.8062 14.3482C14.6302 14.4481 14.4314 14.5007 14.229 14.5008H1.77104C1.56871 14.5007 1.36987 14.4481 1.19392 14.3482C1.01797 14.2483 0.870936 14.1045 0.767167 13.9308C0.663397 13.7572 0.606442 13.5595 0.601862 13.3573C0.597283 13.155 0.645235 12.955 0.741037 12.7768V12.7768Z\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconWarningTr;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { theme } from '../../../proxy-helpers';\r\n\r\nexport const ProxyListItemEl = styled('a')`\r\n  border-top: 1px solid var(--EBEBEB-proxy-manager-list-item);\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  color: var(--222222-proxy-manager-list-item);\r\n  height: 41px;\r\n\r\n  & .proxy-title {\r\n    padding-right: ${theme.spacing(2)}px;\r\n  }\r\n\r\n  &:first-of-type {\r\n    border-top: 1px solid transparent;\r\n  }\r\n\r\n  .proxy-selected {\r\n    color: ${theme.colors.primary};\r\n  }\r\n\r\n  .proxy-update-btn {\r\n    display: none;\r\n    color: var(--767676-proxy-manager-list-item);\r\n  }\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n    outline: none;\r\n    text-decoration: none;\r\n    background: var(--F9F9F9-proxy-manager-list-item);\r\n\r\n    .proxy-flag-block,\r\n    .flag-item,\r\n    .proxy-title {\r\n      opacity: 1;\r\n      color: ${theme.colors.primary};\r\n    }\r\n\r\n    .flag-item {\r\n      color: var(--D9D9D9-proxy-manager-list-item);\r\n    }\r\n\r\n    .proxy-selected {\r\n      display: none;\r\n    }\r\n\r\n    .proxy-update-btn {\r\n      display: flex;\r\n\r\n      &:hover {\r\n        color: ${theme.colors.primary};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProxyListItemInnerEl = styled('div')<{ newStyle: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 278px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 10px 16px;\r\n  margin-left: ${(props): string => props.newStyle ? '16px' : '0'};\r\n`;\r\n\r\nexport const ProxyButtonsContainerEl = styled('div')`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  padding-right: 24px;\r\n  justify-content: flex-end;\r\n  cursor: default;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const ProxyButtonEl = styled('div')<{ success?: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 16px;\r\n  height: 16px;\r\n  padding: 0;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  margin-left: 16px;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.success) ? `\r\n      color: ${theme.colors.primary};\r\n    `: ''}\r\n  `}\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonEl = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 18px;\r\n  height: 18px;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  margin-left: 15px;\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n  }\r\n\r\n  & > svg {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nexport const ProxyFlagBlockEl = styled('div')<{ isFailed?: boolean; newStyle: boolean }>`\r\n  white-space: nowrap;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    opacity: ${(props.isFailed) ? '0.5' : '1'};\r\n  `}\r\n\r\n  tr:hover, .gologin-table-row & {\r\n    opacity: 1;\r\n  }\r\n\r\n  background-color: ${(props): string|null => props.newStyle ? 'inherit' : null};\r\n`;\r\n","import moment from 'moment';\r\nimport React, { FC, SyntheticEvent, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IProxy } from './interfaces/IProxy';\r\nimport ProxyIconBtnWithTooltip from './proxy-icon-btn-with-tooltip';\r\nimport ProxyInfoError from './proxy-info-error';\r\nimport { updateEditModeProfileId, updateProxyElementLocation } from '../../../state/edit-mode-profile-id.atom';\r\nimport { useFreeProxies } from '../../../state/free-proxies.atom';\r\nimport { closeProxyManager, openProxyManagerEditView } from '../../../state/proxy-manager-modal-status.atom';\r\nimport IconCheckCircle from '../../../ui/icons/IconCheckCircle';\r\nimport IconCloseCurrentColor from '../../../ui/icons/IconCloseCurrentColor';\r\nimport IconProxyPencil from '../../../ui/icons/IconProxyPencil';\r\nimport IconWarningTr from '../../../ui/icons/IconWarningTr';\r\nimport countries from '../../common/countries';\r\nimport { sendChangeIpRequest } from '../../quickProfiles/api';\r\nimport { checkIsCurrent, getProxyStatus } from '../proxy-helpers';\r\nimport { ProxyStatusDot } from '../styles/check-proxy-btn';\r\nimport {\r\n  ProxyInfoContainerEl,\r\n  ProxyInfoButtonsEl,\r\n  ProxyInfoRowEl,\r\n  ProxyStatusIconEl,\r\n  ProxyInfoUpdatedAgoEl,\r\n  ChangeIpBtn,\r\n  RemoveBtnContainerEl,\r\n  ProxyStatusDotContainerEl,\r\n} from '../styles/proxy-info';\r\nimport { ProxyButtonEl, RemoveButtonEl } from '../proxy-manager/proxy-list/styles/proxy-list-item';\r\nimport { TooltipEl } from '../proxy-selector/styles';\r\nimport { unselectProfileProxy } from '../../../state/proxy-operations.commands';\r\n\r\ninterface IProps {\r\n  proxy: IProxy;\r\n  currentProxy?: IProxy;\r\n  profileId?: string;\r\n  closeTooltip: () => void;\r\n  isInForm?: boolean;\r\n  setIsChecking: React.Dispatch<React.SetStateAction<boolean>>;\r\n  updateProxyStatus: (event: React.MouseEvent, skipRowNode: boolean) => Promise<void>;\r\n  localProxyElementLocation: string|null;\r\n  isSharedProxy?: boolean;\r\n  onProxyInfoEditClick?: () => void;\r\n}\r\n\r\nconst ProxyInfo: FC<IProps> = (props) => {\r\n  const {\r\n    proxy,\r\n    currentProxy,\r\n    profileId,\r\n    closeTooltip,\r\n    isInForm,\r\n    setIsChecking,\r\n    updateProxyStatus,\r\n    localProxyElementLocation,\r\n    isSharedProxy,\r\n    onProxyInfoEditClick,\r\n  } = props;\r\n\r\n  const [noProxyBtnVisible, setNoProxyBtnVisible] = useState<boolean>(false);\r\n\r\n  const freeProxies = useFreeProxies();\r\n  const isProxyModeEditable = ['http', 'socks4', 'socks5', 'geolocation'].includes(proxy.mode);\r\n  const shouldShowEditButton = isProxyModeEditable && !(proxy.isInvisible || isSharedProxy);\r\n\r\n  const handleMouseEnter = (): void => setNoProxyBtnVisible(true);\r\n  const handleMouseLeave = (): void => setNoProxyBtnVisible(false);\r\n\r\n  const { t: translation, i18n } = useTranslation();\r\n  moment.locale(i18n.language);\r\n\r\n  let checkedAgo = '';\r\n  if (proxy.checkDate) {\r\n    checkedAgo = moment(proxy.checkDate).fromNow();\r\n  }\r\n\r\n  let countryString = '';\r\n\r\n  let proxyCountry = proxy.country;\r\n  if (proxy.mode === 'tor') {\r\n    proxyCountry = proxy.torProxyRegion?.toUpperCase();\r\n  } else if (proxy.mode === 'gologin') {\r\n    proxyCountry = proxy.autoProxyRegion?.toUpperCase();\r\n  }\r\n\r\n  if (proxyCountry) {\r\n    const country = countries.find((el => el.code === proxyCountry));\r\n\r\n    if (country) {\r\n      countryString = [\r\n        [proxy.city, country.name].filter(Boolean).join(', '),\r\n        `(${proxyCountry})`,\r\n      ].filter(Boolean).join(' ');\r\n    }\r\n  }\r\n\r\n  const handleEditClick = async (event: SyntheticEvent): Promise<void> => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (profileId) {\r\n      updateEditModeProfileId(profileId);\r\n      updateProxyElementLocation(localProxyElementLocation);\r\n    }\r\n\r\n    onProxyInfoEditClick && onProxyInfoEditClick();\r\n    openProxyManagerEditView(proxy._id);\r\n    closeTooltip();\r\n  };\r\n\r\n  const changeIp: React.MouseEventHandler = async (event): Promise<void> => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (!proxy.changeIpUrl) {\r\n      return;\r\n    }\r\n\r\n    setIsChecking(true);\r\n    sendChangeIpRequest(proxy.changeIpUrl).catch(() => null).finally(() => {\r\n      updateProxyStatus(event, true).catch(() => null).finally(() => setIsChecking(false));\r\n    });\r\n  };\r\n\r\n  const handleNoProxyClick = (event: SyntheticEvent): void => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (profileId) {\r\n      unselectProfileProxy(profileId);\r\n      closeProxyManager();\r\n    }\r\n  };\r\n\r\n  const isCurrent = checkIsCurrent(proxy, currentProxy);\r\n\r\n  const isTorOrFree = ['gologin', 'tor'].includes(proxy.mode);\r\n  let { host } = proxy;\r\n  if (proxy.mode === 'gologin') {\r\n    const freeProxy = freeProxies.find((el) => el.region === proxy.autoProxyRegion);\r\n    if (freeProxy) {\r\n      host = freeProxy.host;\r\n    }\r\n\r\n    countryString = [translation('proxies.freeProxy'), countryString].join(', ');\r\n  } else if (proxy.mode === 'tor') {\r\n    countryString = [translation('proxies.torProxy'), countryString].join(', ');\r\n  }\r\n\r\n  const renderCheckDate = (): JSX.Element | null => {\r\n    if (isTorOrFree) {\r\n      return (\r\n        <ProxyInfoRowEl>\r\n          <ProxyStatusDotContainerEl>\r\n            <ProxyStatusDot status={'success'} />\r\n          </ProxyStatusDotContainerEl>\r\n          <ProxyInfoUpdatedAgoEl>\r\n            {translation('proxies.connected')}\r\n          </ProxyInfoUpdatedAgoEl>\r\n        </ProxyInfoRowEl>\r\n      );\r\n    }\r\n\r\n    const status = getProxyStatus(proxy);\r\n\r\n    if (!proxy.checkDate) {\r\n      return (\r\n        <ProxyInfoRowEl>\r\n          <ProxyStatusDotContainerEl>\r\n            <ProxyStatusDot status={status} />\r\n          </ProxyStatusDotContainerEl>\r\n          <ProxyInfoUpdatedAgoEl>\r\n            {translation('proxies.clickToCheckTheConnection')}\r\n          </ProxyInfoUpdatedAgoEl>\r\n        </ProxyInfoRowEl>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {proxy.status === false ? (\r\n          <>\r\n            <ProxyInfoRowEl>\r\n              <ProxyStatusDotContainerEl>\r\n                <ProxyStatusDot status={status} />\r\n              </ProxyStatusDotContainerEl>\r\n              <ProxyInfoUpdatedAgoEl>\r\n                {' '}\r\n                {translation('proxies.updated')}\r\n                {' '}\r\n                {checkedAgo}\r\n              </ProxyInfoUpdatedAgoEl>\r\n            </ProxyInfoRowEl>\r\n            <ProxyInfoRowEl>\r\n              <ProxyStatusIconEl danger>\r\n                <IconWarningTr />\r\n              </ProxyStatusIconEl>\r\n              <ProxyInfoUpdatedAgoEl danger>\r\n                {translation(proxy.error || translation('notifications.error.proxyError'))}\r\n              </ProxyInfoUpdatedAgoEl>\r\n            </ProxyInfoRowEl>\r\n          </>\r\n        ) : (\r\n          <ProxyInfoRowEl>\r\n            <ProxyStatusDotContainerEl>\r\n              <ProxyStatusDot status={status} />\r\n            </ProxyStatusDotContainerEl>\r\n            <ProxyInfoUpdatedAgoEl>\r\n              {' '}\r\n              {translation('proxies.updated')}\r\n              {' '}\r\n              {checkedAgo}\r\n            </ProxyInfoUpdatedAgoEl>\r\n          </ProxyInfoRowEl>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderRemoveButton = (): JSX.Element|null => {\r\n    if (!isCurrent) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        {(noProxyBtnVisible) ? (\r\n          <RemoveBtnContainerEl>\r\n            <ProxyIconBtnWithTooltip tooltipContent={(\r\n              <TooltipEl>\r\n                {translation('proxies.unlinkProxy')}\r\n              </TooltipEl>\r\n            )}>\r\n              <RemoveButtonEl onClick={handleNoProxyClick}>\r\n                <IconCloseCurrentColor />\r\n              </RemoveButtonEl>\r\n            </ProxyIconBtnWithTooltip>\r\n          </RemoveBtnContainerEl>\r\n        ) : (\r\n          <ProxyButtonEl success>\r\n            <IconCheckCircle />\r\n          </ProxyButtonEl>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderEditButton = (): JSX.Element|null => {\r\n    if (!shouldShowEditButton || isInForm) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ProxyIconBtnWithTooltip tooltipContent={(\r\n        <TooltipEl>\r\n          {translation('proxies.editProxy')}\r\n        </TooltipEl>\r\n      )}>\r\n        <ProxyButtonEl onClick={handleEditClick}>\r\n          <IconProxyPencil />\r\n        </ProxyButtonEl>\r\n      </ProxyIconBtnWithTooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ProxyInfoContainerEl onClick={(e): void => {\r\n      e.stopPropagation();\r\n    }}>\r\n      <div>\r\n        {renderCheckDate()}\r\n\r\n        {(proxy.status === false) ? <ProxyInfoError proxy={proxy} /> : (\r\n          <>\r\n            {(countryString) ? (\r\n              <ProxyInfoRowEl>\r\n                {countryString}\r\n              </ProxyInfoRowEl>\r\n            ) : null}\r\n\r\n            {(host && proxy.status) ? (\r\n              <ProxyInfoRowEl>\r\n                {proxy.origin || proxy.lastIp || host}\r\n                {' '}\r\n                {(proxy.changeIpUrl) ? (\r\n                  <ChangeIpBtn onClick={changeIp}>\r\n                    {translation('proxies.changeIp')}\r\n                  </ChangeIpBtn>\r\n                ) : null}\r\n              </ProxyInfoRowEl>\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <ProxyInfoButtonsEl>\r\n        {renderRemoveButton()}\r\n        {renderEditButton()}\r\n      </ProxyInfoButtonsEl>\r\n    </ProxyInfoContainerEl>\r\n  );\r\n};\r\n\r\nexport default ProxyInfo;\r\n","import Popper from '@material-ui/core/Popper';\r\nimport moment from 'moment';\r\nimport React, { FC, useState, useEffect, useRef } from 'react';\r\n\r\nimport { IProxy } from './interfaces/IProxy';\r\nimport { IUpdateSharedProxyInfo } from './interfaces/ISharedProxyInfo';\r\nimport ProxyInfo from './proxy-info';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { setProxyStatuses, setSharedProxyStatuses } from '../../../state/proxies.context/api';\r\nimport { IUpdateProxyItem } from '../../../state/proxies.context/interfaces/update-proxy-item.interface';\r\nimport { updateProxyItem } from '../../../state/proxy-list.atom';\r\nimport { updateSharedProxyInfo } from '../../../state/shared-proxy-info.atom';\r\nimport { useCurrentTheme } from '../../../state/theme.atom';\r\nimport getSelectedThemeColor from '../../../utils/get-selected-theme-color';\r\nimport { getProxyStatus, getProxyStatusParams } from '../proxy-helpers';\r\nimport { CheckProxyBtnContainerEl, FormIcon, ProxyStatusDot, TooltipEl, TooltipWrapperEl } from '../styles/check-proxy-btn';\r\n\r\ninterface IProps {\r\n  proxy: IProxy;\r\n  currentProxy?: IProxy;\r\n  profileId?: string;\r\n  hideDot?: boolean;\r\n  updateInForm?: (proxyData: Partial<IProxy>) => void;\r\n  saveProfileProxyStatus?: () => Promise<IProxy | undefined>;\r\n  isSharedProxy?: boolean;\r\n  isInTable?: boolean;\r\n  showTooltipCheckProxy?: boolean;\r\n  setShowTooltipCheckProxy?: (state: boolean) => void;\r\n  localProxyElementLocation: string | null;\r\n  onProxyInfoEditClick?: () => void;\r\n}\r\n\r\nconst CheckProxyBtn: FC<IProps> = (props) => {\r\n  const {\r\n    proxy,\r\n    currentProxy,\r\n    profileId,\r\n    hideDot,\r\n    updateInForm,\r\n    saveProfileProxyStatus,\r\n    isSharedProxy,\r\n    isInTable,\r\n    showTooltipCheckProxy,\r\n    setShowTooltipCheckProxy,\r\n    localProxyElementLocation,\r\n    onProxyInfoEditClick,\r\n  } = props;\r\n\r\n  const [tooltipVisible, setTooltipVisible] = useState<boolean>(false);\r\n  const [btnVisible, setBtnVisible] = useState<boolean>(false);\r\n  const [isChecking, setIsChecking] = useState<boolean>(false);\r\n  const [showInfoAfterCheck, setShowInfoAfterCheck] = useState<boolean>(false);\r\n  const tooltipRef = useRef<HTMLDivElement>(null);\r\n  const theme = useCurrentTheme();\r\n\r\n  let showSpinner = proxy.checkInProgress || isChecking;\r\n  const isDarkTheme = getSelectedThemeColor(theme) === 'dark';\r\n\r\n  const closeTooltip = (): void => {\r\n    setTooltipVisible(false);\r\n    if (setShowTooltipCheckProxy) {\r\n      setShowTooltipCheckProxy(false);\r\n    }\r\n  };\r\n\r\n  const openTooltip = (): void => {\r\n    setTooltipVisible(true);\r\n    if (setShowTooltipCheckProxy) {\r\n      setShowTooltipCheckProxy(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showSpinner = proxy.checkInProgress || isChecking;\r\n  }, [proxy.checkInProgress]);\r\n\r\n  useEffect(() => {\r\n    let timeout: any;\r\n    if (!tooltipVisible) {\r\n      if (btnVisible && !showSpinner) {\r\n        setIsChecking(false);\r\n        setBtnVisible(false);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (proxy.showInfoAfterCheck || showInfoAfterCheck) {\r\n      timeout = setTimeout(() => closeTooltip(), 2 * 1000);\r\n\r\n      updateProxyItem({\r\n        _id: proxy._id,\r\n        showInfoAfterCheck: false,\r\n        checkInProgress: false,\r\n      });\r\n\r\n      setShowInfoAfterCheck(false);\r\n    }\r\n\r\n    const root = document.getElementById('root');\r\n    root?.addEventListener('scroll', closeTooltip, true);\r\n\r\n    return () => {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n      }\r\n\r\n      root?.removeEventListener('keydown', closeTooltip, true);\r\n    };\r\n  }, [tooltipVisible]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !proxy.checkInProgress &&\r\n      proxy.showInfoAfterCheck &&\r\n      (hideDot || updateInForm)\r\n    ) {\r\n      setTooltipVisible(true);\r\n    }\r\n  }, [proxy]);\r\n\r\n  const updateProxyStatus = async (event: React.MouseEvent, skipRowNode = false): Promise<void> => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    let rowNode: HTMLElement|null = null;\r\n    if (setShowTooltipCheckProxy) {\r\n      setShowTooltipCheckProxy(true);\r\n    }\r\n\r\n    if (isInTable && !skipRowNode) {\r\n      rowNode = event.currentTarget.closest('tr');\r\n      rowNode?.classList.add('row-visible-dot');\r\n      rowNode?.classList.add('check-in-progress');\r\n    }\r\n\r\n    const { mode, host, port, username, password } = proxy;\r\n    let proxyRes = proxy;\r\n\r\n    setIsChecking(true);\r\n\r\n    if (!isSharedProxy && saveProfileProxyStatus) {\r\n      const savingResult = await saveProfileProxyStatus();\r\n      if (savingResult) {\r\n        proxyRes = savingResult;\r\n      }\r\n    }\r\n\r\n    const { id: proxyId } = proxyRes as any;\r\n    if (proxyId) {\r\n      proxyRes._id = proxyId;\r\n    }\r\n\r\n    const statusParams = await getProxyStatusParams({\r\n      ...proxyRes,\r\n      mode,\r\n      host,\r\n      port,\r\n      username,\r\n      password,\r\n    });\r\n\r\n    const updateParams: IUpdateProxyItem = {\r\n      ...proxy,\r\n      ...statusParams,\r\n      checkDate: moment().toDate(),\r\n      checkInProgress: false,\r\n      shouldAddInvisible: true,\r\n    };\r\n\r\n    if (isSharedProxy && profileId) {\r\n      const updateParamsSharedProxy: IUpdateSharedProxyInfo = {\r\n        ...updateParams,\r\n        profileId,\r\n      };\r\n\r\n      updateSharedProxyInfo(updateParamsSharedProxy);\r\n    } else if (updateInForm) {\r\n      updateInForm({ ...updateParams, _id: proxyRes._id });\r\n    } else {\r\n      updateProxyItem({ ...updateParams, _id: proxyRes._id });\r\n    }\r\n\r\n    if (isInTable && !skipRowNode) {\r\n      setShowInfoAfterCheck(true);\r\n      openTooltip();\r\n\r\n      if (rowNode) {\r\n        rowNode.classList.remove('check-in-progress');\r\n      }\r\n    }\r\n\r\n    if (!statusParams || updateInForm) {\r\n      setIsChecking(false);\r\n\r\n      return;\r\n    }\r\n\r\n    const checkParams: any = {\r\n      status: statusParams.status,\r\n      country: statusParams.country || proxyRes.country,\r\n      city: statusParams.city || proxyRes.city,\r\n      error: statusParams.error || null,\r\n      checkDate: moment().unix(),\r\n      lastIp: statusParams.origin,\r\n      timezone: statusParams.timezone,\r\n      languages: statusParams.languages,\r\n    };\r\n\r\n    if (isSharedProxy && profileId) {\r\n      checkParams.profileId = profileId;\r\n      await setSharedProxyStatuses([checkParams]);\r\n    } else if (proxyRes._id) {\r\n      checkParams._id = proxyRes._id;\r\n      await setProxyStatuses([checkParams]).catch(() => null);\r\n    }\r\n\r\n    setIsChecking(false);\r\n  };\r\n\r\n  const isTorOrFree = ['gologin', 'tor'].includes(proxy.mode);\r\n\r\n  const handleMouseEnter = (): void => {\r\n    openTooltip();\r\n    if (proxy.mode === 'none' || isTorOrFree) {\r\n      return;\r\n    }\r\n\r\n    setBtnVisible(true);\r\n  };\r\n\r\n  const handleMouseLeave = (): void => {\r\n    setBtnVisible(false);\r\n    closeTooltip();\r\n  };\r\n\r\n  const hideBtn = (proxy.mode === 'none');\r\n\r\n  if (hideBtn) {\r\n    return <CheckProxyBtnContainerEl btnVisible={false} tooltipVisible={tooltipVisible} newStyle={!!NEW_FEATURES.header} />;\r\n  }\r\n\r\n  const hideDotResult = (showSpinner || tooltipVisible) ? false : hideDot;\r\n\r\n  const renderDot = (): JSX.Element => {\r\n    if (btnVisible || showSpinner) {\r\n      return (\r\n        <FormIcon\r\n          type='sync'\r\n          spin={showSpinner}\r\n          className='proxy-status-icon'\r\n          onClick={updateProxyStatus}\r\n        />\r\n      );\r\n    }\r\n\r\n    const status = getProxyStatus(proxy);\r\n\r\n    return (\r\n      <ProxyStatusDot\r\n        status={status}\r\n        className='proxy-status-dot'\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CheckProxyBtnContainerEl\r\n      btnVisible={btnVisible || isChecking}\r\n      hideDot={hideDotResult}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      onClick={(event): void => event.stopPropagation()}\r\n      ref={tooltipRef}\r\n      newStyle={!!NEW_FEATURES.header}\r\n      tooltipVisible={tooltipVisible}\r\n    >\r\n      {renderDot()}\r\n\r\n      <Popper\r\n        open={!!(!isChecking && tooltipVisible && tooltipRef.current && showTooltipCheckProxy)}\r\n        anchorEl={tooltipRef.current}\r\n        style={{ zIndex: 1070 }}\r\n        placement='top'\r\n      >\r\n        <TooltipWrapperEl>\r\n          <TooltipEl isDarkTheme={isDarkTheme}>\r\n            <ProxyInfo\r\n              proxy={proxy}\r\n              currentProxy={currentProxy}\r\n              profileId={profileId}\r\n              closeTooltip={closeTooltip}\r\n              isInForm={!!updateInForm}\r\n              setIsChecking={setIsChecking}\r\n              updateProxyStatus={updateProxyStatus}\r\n              localProxyElementLocation={localProxyElementLocation}\r\n              isSharedProxy={isSharedProxy}\r\n              onProxyInfoEditClick={onProxyInfoEditClick}\r\n            />\r\n          </TooltipEl>\r\n        </TooltipWrapperEl>\r\n      </Popper>\r\n    </CheckProxyBtnContainerEl>\r\n  );\r\n};\r\n\r\nexport default CheckProxyBtn;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconEmptyFlag: FC = () => (\r\n  <svg width=\"14\" height=\"10\" viewBox=\"0 0 14 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <rect x=\"0.5\" y=\"0.5\" width=\"13\" height=\"9\" stroke=\"currentColor\" />\r\n    <path d=\"M0.5 0.416992L13.5 9.58366\" stroke=\"currentColor\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconEmptyFlag;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const EmptyFlagEl = styled('div')`\r\n  display: inline-block;\r\n  width: 14px;\r\n  height: 10px;\r\n  text-align: center;\r\n  color: var(--D9D9D9-proxy-manager-empty-flag);\r\n\r\n  & > svg {\r\n    vertical-align: top;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\n\r\nimport IconEmptyFlag from '../../../ui/icons/IconEmptyFlag';\r\nimport { EmptyFlagEl } from '../styles/proxy-flag';\r\n\r\ninterface IProps {\r\n  region?: string;\r\n}\r\n\r\nconst ProxyFlag: FC<IProps> = (props) => {\r\n  const {\r\n    region,\r\n  } = props;\r\n\r\n  if (!region || region === 'null') {\r\n    return (\r\n      <EmptyFlagEl style={{\r\n        marginRight: 9,\r\n      }} className='flag-item'>\r\n        <IconEmptyFlag />\r\n      </EmptyFlagEl>\r\n    );\r\n  }\r\n\r\n  const regionLowercase = region.toLowerCase();\r\n\r\n  return (\r\n    <div className={`flag-item fi fi-${regionLowercase}`} style={{\r\n      marginRight: 9,\r\n    }} />\r\n  );\r\n};\r\n\r\nexport default ProxyFlag;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const ProxyTitleBlockEl = styled('div')<{ isFailed?: boolean }>`\r\n  align-items: center;\r\n  display: flex;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  letter-spacing: 0.25px;\r\n  line-height: 20px;\r\n  min-width: 93px;\r\n  height: 16px;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    opacity: ${(!props.isFailed) ? '1' : '0.5'};\r\n  `}\r\n\r\n  .ant-drawer-body & {\r\n    max-width: 246px;\r\n  }\r\n\r\n  .proxy-popper-container  & {\r\n    min-width: 0;\r\n  }\r\n\r\n  .nowrap {\r\n    line-height: normal;\r\n    height: 16px;\r\n  }\r\n`;\r\n\r\nexport const ProxyItemWrapperEl = styled('div')`\r\n  display: flex;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const ProxyTitleWrapperEl = styled('div')<{ newStyle: boolean; noProxy?: boolean }>`\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.noProxy) ? '' : `\r\n      width: auto;\r\n      min-width: calc(100% - 48px);\r\n      padding-top: 2px;\r\n    `};\r\n  `}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    padding-top: 0;\r\n    width: auto;\r\n    min-width: calc(100% - 48px);\r\n  ` : null}\r\n\r\n  .proxy-popper & {\r\n    padding-top: 0;\r\n  }\r\n`;\r\n","import React, { FC, useState, memo, SyntheticEvent, ChangeEvent, ClipboardEvent, useEffect, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ProxyFormContainerEl, ProxyFormEl } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { filterProxyList, useProxyList } from '../../../../state/proxy-list.atom';\r\nimport { closeProxyManager, useProxyManagerState } from '../../../../state/proxy-manager-modal-status.atom';\r\nimport { pasteProxies, unselectProfileProxy } from '../../../../state/proxy-operations.commands';\r\nimport { useSharedProxyInfo } from '../../../../state/shared-proxy-info.atom';\r\nimport CheckProxyBtn from '../../components/check-proxy-btn';\r\nimport { IProfileProxy } from '../../components/interfaces/IProfileProxy';\r\nimport { IProxy } from '../../components/interfaces/IProxy';\r\nimport { ISharedProxyInfo } from '../../components/interfaces/ISharedProxyInfo';\r\nimport ProxyFlag from '../../components/proxy-flag';\r\nimport { getProxyTitle } from '../../proxy-helpers';\r\nimport { ProxyTitleBlockEl, ProxyTitleWrapperEl } from '../../proxy-manager/proxy-list/styles/proxy-item';\r\nimport { ProxyFlagBlockEl } from '../../proxy-manager/proxy-list/styles/proxy-list-item';\r\nimport { ProxySearchInputEl } from '../../styles/proxy-search-input';\r\n\r\ninterface IProxyForm {\r\n  currentProxy?: IProfileProxy;\r\n  profileId?: string;\r\n  isSharedProxy: boolean;\r\n  editProxyMode: boolean;\r\n  isInDrawer: boolean;\r\n  showTooltipCheckProxy?: boolean;\r\n  setShowTooltipCheckProxy: (state: boolean) => void;\r\n  onProxyInfoEditClick?: () => void;\r\n}\r\n\r\nconst ProxyForm: FC<IProxyForm> = (props) => {\r\n  const {\r\n    currentProxy,\r\n    profileId,\r\n    isSharedProxy,\r\n    editProxyMode,\r\n    isInDrawer,\r\n    showTooltipCheckProxy,\r\n    setShowTooltipCheckProxy,\r\n    onProxyInfoEditClick,\r\n  } = props;\r\n\r\n  const [searchValue, setSearchValue] = useState<string>('');\r\n  const [inputChanged, setInputChanged] = useState<boolean>(false);\r\n\r\n  const input = useRef<HTMLInputElement>(null);\r\n\r\n  const sharedProxyInfos = useSharedProxyInfo();\r\n  const proxyList = useProxyList();\r\n  const { currentProfileId } = useProxyManagerState();\r\n\r\n  const { t: translation } = useTranslation();\r\n  const placeholder = translation('proxies.searchForProxy');\r\n\r\n  useEffect((): void => {\r\n    setInputChanged(false);\r\n    setSearchValue('');\r\n\r\n    if (editProxyMode && input?.current) {\r\n      input.current.focus();\r\n    }\r\n  }, [editProxyMode]);\r\n\r\n  useEffect((): void => {\r\n    setInputChanged(false);\r\n    setSearchValue('');\r\n  }, [proxyList]);\r\n\r\n  useEffect(() => {\r\n    filterProxyList(searchValue, currentProxy);\r\n  }, [searchValue, currentProxy, editProxyMode]);\r\n\r\n  const handleSubmit = (event: SyntheticEvent): void => {\r\n    event.preventDefault();\r\n\r\n    if (inputChanged && !searchValue && currentProfileId) {\r\n      unselectProfileProxy(currentProfileId);\r\n      closeProxyManager();\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setInputChanged(true);\r\n\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  const handleFocus = (event: ChangeEvent<HTMLInputElement>): void => event.currentTarget.select();\r\n\r\n  const handlePaste = async (event: ClipboardEvent<HTMLInputElement>): Promise<void> => {\r\n    event.persist();\r\n    setShowTooltipCheckProxy(true);\r\n    const proxies = await pasteProxies(profileId);\r\n    if (proxies.length) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const title = getProxyTitle(currentProxy);\r\n  const noProxy = (!currentProxy || currentProxy.mode === 'none');\r\n\r\n  let inputWidth;\r\n  if (noProxy) {\r\n    inputWidth = 123;\r\n  }\r\n\r\n  let sharedProxyInfo: ISharedProxyInfo | undefined;\r\n  let { country } = currentProxy as IProxy;\r\n  let checkProxy = currentProxy as IProxy;\r\n  if (isSharedProxy) {\r\n    sharedProxyInfo = sharedProxyInfos.find((el) => el.profileId === profileId);\r\n    if (sharedProxyInfo) {\r\n      country = sharedProxyInfo.country;\r\n      checkProxy = {\r\n        ...currentProxy,\r\n        ...sharedProxyInfo,\r\n      };\r\n    }\r\n  }\r\n\r\n  const isFailed = (currentProxy?.status === false);\r\n  const isTransparent = (isFailed && !editProxyMode);\r\n\r\n  const renderFlagBlock = (): JSX.Element | null => {\r\n    if (noProxy) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ProxyFlagBlockEl newStyle={!!NEW_FEATURES.header} isFailed={isTransparent}>\r\n        <CheckProxyBtn\r\n          proxy={checkProxy}\r\n          currentProxy={currentProxy}\r\n          hideDot={true}\r\n          profileId={profileId}\r\n          isSharedProxy={isSharedProxy}\r\n          isInTable={true}\r\n          showTooltipCheckProxy={showTooltipCheckProxy}\r\n          setShowTooltipCheckProxy={setShowTooltipCheckProxy}\r\n          localProxyElementLocation='no-location'\r\n          onProxyInfoEditClick={onProxyInfoEditClick}\r\n        />\r\n        <ProxyFlag region={country} />\r\n      </ProxyFlagBlockEl>\r\n    );\r\n  };\r\n\r\n  const renderInvisibleTitle = (): JSX.Element | null => {\r\n    if (noProxy) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ProxyTitleBlockEl className='proxy-title' style={{ opacity: 0 }}>\r\n        <div className='nowrap'>\r\n          {title || '-'}\r\n        </div>\r\n      </ProxyTitleBlockEl>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ProxyFormContainerEl addMaxWidth={editProxyMode} newStyle={!!NEW_FEATURES.header} isEditProxy={editProxyMode}>\r\n      {renderFlagBlock()}\r\n      <ProxyTitleWrapperEl newStyle={!!NEW_FEATURES.header} noProxy={noProxy}>\r\n        <ProxyFormEl onSubmit={handleSubmit}>\r\n          {renderInvisibleTitle()}\r\n          <ProxySearchInputEl\r\n            newStyle={!!NEW_FEATURES.header}\r\n            ref={input}\r\n            placeholder={placeholder}\r\n            value={(!searchValue && !inputChanged) ? title : searchValue}\r\n            onChange={handleInputChange}\r\n            onPaste={handlePaste}\r\n            onFocus={handleFocus}\r\n            width={inputWidth}\r\n            truncate={!editProxyMode}\r\n            isTransparent={isTransparent}\r\n            isInDrawer={isInDrawer}\r\n            newDrawer={!!NEW_FEATURES.drawer}\r\n          />\r\n        </ProxyFormEl>\r\n      </ProxyTitleWrapperEl>\r\n    </ProxyFormContainerEl>\r\n  );\r\n};\r\n\r\nexport default memo(ProxyForm);\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { theme } from '../../proxy-helpers';\r\n\r\nexport const ProxyPlaceholder = styled('div')`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const ProxyPlaceholderText = styled('div')<{ isInDrawer: boolean; newStyle: boolean; newDrawer: boolean }>`\r\n  color: var(--767676-proxy-manager-placeholder);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  height: 100%;\r\n  letter-spacing: 0.25px;\r\n  min-width: 146px;\r\n  padding-left: ${(props): string => props.newStyle ? props.newDrawer && props.isInDrawer ? '8px' : '16px' : '23px'};\r\n  padding-top: 4px;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    ${(props.isInDrawer) ? '' : `\r\n      opacity: 0;\r\n    `}\r\n  `}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    padding-top: 0;\r\n  ` : null}\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n\r\n    & i {\r\n      color: ${theme.colors.primary};\r\n    }\r\n  }\r\n\r\n  & i {\r\n    color: var(--CDCDCD-proxy-manager-placeholder);\r\n  }\r\n\r\n  .row-active:hover &,\r\n  td:hover &,\r\n  .new-proxy-cell:hover & {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ProxyPlaceholderText } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { IconPlusFill } from '../../../../ui/gologin-header/icons';\r\nimport { IconWrapperWithDescription } from '../../../../ui/gologin-header/icons/wrapper';\r\n\r\ninterface IProps {\r\n  isInDrawer: boolean;\r\n}\r\n\r\nconst ProxyPlaceholder: FC<IProps> = (props) => {\r\n  const { isInDrawer } = props;\r\n  const { t: translation } = useTranslation();\r\n\r\n  const renderPlaceholder = (): JSX.Element => {\r\n    if (!isInDrawer || !NEW_FEATURES.drawer) {\r\n      return (\r\n        <div className='nowrap'>\r\n          {translation('proxies.addOrPasteProxy')}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <IconWrapperWithDescription\r\n        iconColor='var(--B5B5BA-proxy-manager-placeholder)'\r\n        iconHoveredColor='var(--2B2B31-proxy-manager-placeholder)'\r\n        textColor='var(--81818A-proxy-manager-placeholder)'\r\n        textHoveredColor='var(--2B2B31-proxy-manager-placeholder)'\r\n        iconType='stroke'\r\n        style={{ lineHeight: 'inherit' }}\r\n      >\r\n        <IconPlusFill padding={0} margin='0 8px 0 0' />\r\n        {translation('proxies.addOrPasteProxy')}\r\n      </IconWrapperWithDescription>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='nowrap'>\r\n      <ProxyPlaceholderText isInDrawer={isInDrawer} newDrawer={!!NEW_FEATURES.drawer} newStyle={!!NEW_FEATURES.header}>\r\n        {renderPlaceholder()}\r\n      </ProxyPlaceholderText>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProxyPlaceholder;\r\n","import { useEffect, useState } from 'react';\r\n\r\ninterface IDelayedMountResult {\r\n  shouldMount: boolean;\r\n}\r\n\r\nconst useDelayedMount = (defaultShouldMount: boolean, timeout = 400): IDelayedMountResult => {\r\n  const [shouldMount, setShouldMount] = useState(!!defaultShouldMount);\r\n\r\n  useEffect(() => {\r\n    if (shouldMount) {\r\n      return;\r\n    }\r\n\r\n    window.requestIdleCallback(\r\n      () => setShouldMount(true),\r\n      { timeout },\r\n    );\r\n  }, [shouldMount]);\r\n\r\n  return { shouldMount };\r\n};\r\n\r\nexport default useDelayedMount;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconPasteProxy: FC = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M12.5 1.5H13.5C13.7652 1.5 14.0196 1.60536 14.2071 1.79289C14.3946 1.98043 14.5 2.23478 14.5 2.5V14.5C14.5 14.7652 14.3946 15.0196 14.2071 15.2071C14.0196 15.3946 13.7652 15.5 13.5 15.5H2.5C2.23478 15.5 1.98043 15.3946 1.79289 15.2071C1.60536 15.0196 1.5 14.7652 1.5 14.5V2.5C1.5 2.23478 1.60536 1.98043 1.79289 1.79289C1.98043 1.60536 2.23478 1.5 2.5 1.5H3.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M10.5 0.5H5.5V2.5H10.5V0.5Z\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M4.5 6.5H11.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M4.5 9.5H11.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M4.5 12.5H11.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconPasteProxy;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconPlus: FC = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M8 1V15\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M1 8H15\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconPlus;\r\n","import styled from '@emotion/styled';\r\n\r\nimport { theme } from '../proxy-helpers';\r\n\r\nexport const IconBtn = styled('button')<{ isInNewDrawer?: boolean }>`\r\n  color: ${props => props.isInNewDrawer ? 'var(--98989F-proxy-manager-icon-buttons)' : 'var(--767676-proxy-manager-icon-buttons)'};\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: none;\r\n  border: none;\r\n  width: 16px;\r\n  height: 16px;\r\n  text-decoration: none;\r\n  margin-right: ${theme.spacing(3)}px;\r\n  padding: 0;\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n\r\n  &:focus,\r\n  &:visited {\r\n    color: ${props => props.isInNewDrawer ? 'var(--98989F-proxy-manager-icon-buttons)' : 'var(--767676-proxy-manager-icon-buttons)'};\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${props => props.isInNewDrawer ? 'var(--2B2B31-proxy-manager-icon-buttons)' : theme.colors.primary};\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import React, { FC, SyntheticEvent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ProxyButtonsContainerEl } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport useDelayedMount from '../../../../hooks/use-should-mount.hook';\r\nimport { openProxyManagerAddView } from '../../../../state/proxy-manager-modal-status.atom';\r\nimport { pasteProxies } from '../../../../state/proxy-operations.commands';\r\nimport IconPasteProxy from '../../../../ui/icons/IconPasteProxy';\r\nimport IconPlus from '../../../../ui/icons/IconPlus';\r\nimport ProxyIconBtnWithTooltip from '../../components/proxy-icon-btn-with-tooltip';\r\nimport { IconBtn } from '../../styles/icon-btns';\r\nimport { TooltipEl } from '../styles';\r\n\r\ninterface IProps {\r\n  isVisible?: boolean;\r\n  editProxyMode: boolean;\r\n  profileId: string;\r\n  isInDrawer?: boolean;\r\n  setShowTooltipCheckProxy: (state: boolean) => void;\r\n}\r\n\r\nconst ProxySelectorButtons: FC<IProps> = (props) => {\r\n  const { isVisible, editProxyMode, profileId, isInDrawer, setShowTooltipCheckProxy } = props;\r\n  const isInNewDrawer = isInDrawer && NEW_FEATURES.drawer;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const { shouldMount } = useDelayedMount(!!isVisible);\r\n  if (!shouldMount) {\r\n    return null;\r\n  }\r\n\r\n  const handleAddClick = (event: SyntheticEvent): void => {\r\n    event.preventDefault();\r\n    openProxyManagerAddView();\r\n  };\r\n\r\n  const handlePasteClick = async (event: SyntheticEvent): Promise<void> => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    setShowTooltipCheckProxy(true);\r\n\r\n    await pasteProxies(profileId);\r\n  };\r\n\r\n  return (\r\n    <ProxyButtonsContainerEl className='proxy-btns' editProxyMode={editProxyMode} newStyle={!!NEW_FEATURES.header} isVisible={isVisible}>\r\n      <ProxyIconBtnWithTooltip tooltipContent={(\r\n        <TooltipEl>\r\n          {translation('proxies.addProxy')}\r\n        </TooltipEl>\r\n      )}>\r\n        <IconBtn isInNewDrawer={isInNewDrawer} onClick={handleAddClick}>\r\n          <IconPlus />\r\n        </IconBtn>\r\n      </ProxyIconBtnWithTooltip>\r\n\r\n      <ProxyIconBtnWithTooltip tooltipContent={(\r\n        <TooltipEl>\r\n          {translation('proxies.pasteProxies')}\r\n        </TooltipEl>\r\n      )}>\r\n        <IconBtn isInNewDrawer={isInNewDrawer} onClick={handlePasteClick}>\r\n          <IconPasteProxy />\r\n        </IconBtn>\r\n      </ProxyIconBtnWithTooltip>\r\n    </ProxyButtonsContainerEl>\r\n  );\r\n};\r\n\r\nexport default ProxySelectorButtons;\r\n","import { IProfileProxy } from '../components/interfaces/IProfileProxy';\r\nimport { IProxy } from '../components/interfaces/IProxy';\r\n\r\nconst areProxyFieldsEqual = (proxy1: IProxy|IProfileProxy, proxy2: IProxy|IProfileProxy): boolean => proxy1.mode === proxy2.mode &&\r\n  (\r\n    (proxy1.mode === 'gologin' && proxy1.autoProxyRegion === proxy2.autoProxyRegion) ||\r\n    (proxy1.mode === 'tor' && proxy1.torProxyRegion === proxy2.torProxyRegion) ||\r\n    (\r\n      proxy1.mode !== 'gologin' && proxy1.mode !== 'tor' &&\r\n      proxy1.host === proxy2.host &&\r\n      proxy1.port === proxy2.port &&\r\n      proxy1.username === proxy2.username &&\r\n      proxy1.password === proxy2.password\r\n    )\r\n  );\r\n\r\nexport const findProxyInList = (proxy: IProfileProxy, proxyList: IProxy[]): IProxy|undefined => {\r\n  let proxyFound: IProxy|undefined;\r\n  if (proxy.id) {\r\n    proxyFound = proxyList.find(proxyListItem => proxyListItem._id === proxy.id);\r\n  }\r\n\r\n  if (!proxyFound) {\r\n    proxyFound = proxyList.find((proxyInList) => areProxyFieldsEqual(proxyInList, proxy));\r\n  }\r\n\r\n  return proxyFound;\r\n};\r\n","import React, { FC, useRef, useState, SyntheticEvent, memo, useCallback } from 'react';\r\n\r\nimport ProxyForm from './proxy-form';\r\nimport ProxyPlaceholder from './proxy-placeholder';\r\nimport ProxySelectorButtons from './proxy-selector-buttons';\r\nimport { ProxyAreaEl, ProxyHeightLimitterEl, ProxyWidthLimitterEl, ProxyWrapperEl, ProxyWrapperSectionEl } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { useProxyList } from '../../../state/proxy-list.atom';\r\nimport { closeProxyManager, openProxyManager, useProxyManagerState } from '../../../state/proxy-manager-modal-status.atom';\r\nimport { IProfileProxy } from '../components/interfaces/IProfileProxy';\r\nimport { IProxy } from '../components/interfaces/IProxy';\r\nimport { EMPTY_PROXY } from '../proxy-helpers';\r\nimport { findProxyInList } from '../utils/find-proxy-in-list';\r\n\r\ninterface IProxySelector {\r\n  profileId: string;\r\n  proxy?: IProfileProxy;\r\n  isInDrawer: boolean;\r\n  isSharedProxy: boolean;\r\n  proxyEnabled: boolean;\r\n  localProxySelectorLocation: string;\r\n}\r\n\r\nconst ProxySelector: FC<IProxySelector> = (props) => {\r\n  const {\r\n    profileId, proxy: propProxy, isInDrawer,\r\n    isSharedProxy, proxyEnabled, localProxySelectorLocation,\r\n  } = props;\r\n\r\n  const proxyList = useProxyList();\r\n  const { currentProfileId: proxyManagerProfileId, proxySelectorLocation } = useProxyManagerState();\r\n\r\n  const [showTooltipCheckProxy, setShowTooltipCheckProxy] = useState<boolean>(false);\r\n\r\n  const containerElement = useRef<HTMLDivElement>(null);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  const proxy = proxyEnabled ? propProxy : EMPTY_PROXY;\r\n  const editProxyMode = !!(profileId && profileId === proxyManagerProfileId && proxySelectorLocation === localProxySelectorLocation);\r\n  const isNoProxy = !proxy || proxy.mode === 'none';\r\n  const shouldProxyTakeAllWidth = isInDrawer && NEW_FEATURES.drawer;\r\n\r\n  const onProxyInfoEditClick = useCallback((): void => {\r\n    if (!containerElement.current) {\r\n      console.error('No containerElement.current');\r\n\r\n      return;\r\n    }\r\n\r\n    openProxyManager(containerElement.current, profileId, localProxySelectorLocation);\r\n  }, [containerElement.current, profileId, openProxyManager]);\r\n\r\n  const proxyAreaClassName = editProxyMode ? 'area-active' : '';\r\n\r\n  const renderProxy = (): JSX.Element => {\r\n    let proxyItem: IProxy|undefined;\r\n    if (proxy) {\r\n      proxyItem = findProxyInList(proxy, proxyList);\r\n      if (!proxyItem) {\r\n        proxyItem = proxy;\r\n      }\r\n    }\r\n\r\n    if (isNoProxy && !editProxyMode) {\r\n      return <ProxyPlaceholder isInDrawer={isInDrawer} />;\r\n    }\r\n\r\n    return (\r\n      <ProxyForm\r\n        currentProxy={proxyItem as IProfileProxy}\r\n        profileId={profileId}\r\n        isSharedProxy={isSharedProxy}\r\n        editProxyMode={editProxyMode}\r\n        isInDrawer={isInDrawer}\r\n        showTooltipCheckProxy={showTooltipCheckProxy}\r\n        setShowTooltipCheckProxy={setShowTooltipCheckProxy}\r\n        onProxyInfoEditClick={onProxyInfoEditClick}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleContainerClick = (): void => {\r\n    if (!profileId) {\r\n      return;\r\n    }\r\n\r\n    if (proxyManagerProfileId) {\r\n      closeProxyManager();\r\n\r\n      return;\r\n    }\r\n\r\n    if (!containerElement.current) {\r\n      console.error('No containerElement.current');\r\n\r\n      return;\r\n    }\r\n\r\n    openProxyManager(containerElement.current, profileId, localProxySelectorLocation);\r\n  };\r\n\r\n  const handleInnerClick = (event: SyntheticEvent): void => {\r\n    event.stopPropagation();\r\n    if (!profileId) {\r\n      return;\r\n    }\r\n\r\n    if (!containerElement.current) {\r\n      console.error('No containerElement.current');\r\n\r\n      return;\r\n    }\r\n\r\n    openProxyManager(containerElement.current, profileId, localProxySelectorLocation);\r\n  };\r\n\r\n  const renderBtns = (): JSX.Element|null => {\r\n    const isInTableOrNewDrawer = NEW_FEATURES.drawer || !isInDrawer;\r\n\r\n    return (\r\n      <ProxySelectorButtons\r\n        isVisible={editProxyMode || !isInTableOrNewDrawer}\r\n        editProxyMode={editProxyMode}\r\n        profileId={profileId}\r\n        isInDrawer={isInDrawer}\r\n        setShowTooltipCheckProxy={setShowTooltipCheckProxy}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ProxyWrapperSectionEl\r\n      isInDrawer={isInDrawer}\r\n      newStyle={!!NEW_FEATURES.header}\r\n      newDrawer={!!NEW_FEATURES.drawer}\r\n      editProxyMode={editProxyMode}\r\n    >\r\n      <ProxyWidthLimitterEl\r\n        editProxyMode={editProxyMode || isInDrawer}\r\n        takeAllWidth={shouldProxyTakeAllWidth}\r\n      >\r\n        <ProxyWrapperEl\r\n          newStyle={!!NEW_FEATURES.header}\r\n          newDrawer={!!NEW_FEATURES.drawer}\r\n          ref={wrapperRef}\r\n          editProxyMode={editProxyMode || isInDrawer}\r\n          isNoProxy={isNoProxy}\r\n          className='proxy-wrapper'\r\n          isInDrawer={isInDrawer}\r\n        >\r\n          <ProxyHeightLimitterEl\r\n            newStyle={!!NEW_FEATURES.header}\r\n            isNoProxy={isNoProxy}\r\n            ref={containerElement}\r\n            onClick={handleContainerClick}\r\n            takeAllWidth={shouldProxyTakeAllWidth}\r\n          >\r\n            <ProxyAreaEl\r\n              onClick={handleInnerClick}\r\n              className={proxyAreaClassName}\r\n              newStyle={!!NEW_FEATURES.header}\r\n              takeAllWidth={shouldProxyTakeAllWidth}\r\n            >\r\n              {renderProxy()}\r\n              {renderBtns()}\r\n            </ProxyAreaEl>\r\n          </ProxyHeightLimitterEl>\r\n        </ProxyWrapperEl>\r\n      </ProxyWidthLimitterEl>\r\n    </ProxyWrapperSectionEl>\r\n  );\r\n};\r\n\r\nexport default memo(ProxySelector);\r\n","import React, { FC } from 'react';\r\n\r\nimport ProxySelector from '../../../../features/proxy/proxy-selector';\r\nimport { IProfile } from '../../../../interfaces';\r\nimport { useProfilesSettingsProfile } from '../../../../state/profiles-settings-atom';\r\n\r\ninterface IProxyComponent {\r\n  localProxySelectorLocation: string;\r\n}\r\n\r\nexport const Proxy: FC<IProxyComponent> = (props) => {\r\n  const { localProxySelectorLocation } = props;\r\n  const profileInfo = useProfilesSettingsProfile() || {} as Partial<IProfile>;\r\n  const { id: profileId, proxy, proxyEnabled, role } = profileInfo;\r\n\r\n  return (\r\n    <div\r\n      style={{ cursor: 'pointer' }}\r\n    >\r\n      <ProxySelector\r\n        proxy={proxy}\r\n        proxyEnabled={!!proxyEnabled}\r\n        profileId={profileId}\r\n        isInDrawer={true}\r\n        isSharedProxy={role !== 'owner'}\r\n        localProxySelectorLocation={localProxySelectorLocation}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport ModernSwitch from '../../../../ui/modern-switch';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface ISessionSaving extends IChangeSetting{\r\n  session: boolean;\r\n}\r\n\r\nexport const SessionSaving: FC<ISessionSaving> = ({ changeSetting, session }) => (\r\n  <ContainerParams>\r\n    <ModernSwitch\r\n      checked={session}\r\n      onChange={(checked): void => changeSetting({ storage: { session: checked } })}\r\n    />\r\n  </ContainerParams>\r\n);\r\n","import React, { ChangeEvent, FC } from 'react';\r\n\r\nimport { ContainerCloseIcon, SettingsInput, InputContainer, InputTitle } from './styles';\r\nimport { IconSmallClose } from '../gologin-header/icons';\r\n\r\ninterface IInputCustom {\r\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n  onBlur: (event: React.FocusEvent<HTMLInputElement>) => void;\r\n  onKeyPress: (event: React.KeyboardEvent) => void;\r\n  onClickIconClose: () => void;\r\n  currentValue: string;\r\n  title?: string;\r\n  hasMarginTop?: boolean;\r\n  placeholder?: string;\r\n  isDisabled?: boolean;\r\n  hasAutoFocus?: boolean;\r\n}\r\n\r\nconst CloseableInput: FC<IInputCustom> = (props) => {\r\n  const { title, onChange, onBlur, onClickIconClose, onKeyPress, hasMarginTop, currentValue, placeholder, isDisabled, hasAutoFocus } = props;\r\n\r\n  return (\r\n    <>\r\n      {title ? (\r\n        <InputTitle hasMarginTop={hasMarginTop}>\r\n          {title}\r\n        </InputTitle>\r\n      ) : null}\r\n      <InputContainer hasMarginTop={hasMarginTop}>\r\n        <SettingsInput\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          value={currentValue}\r\n          autoFocus={hasAutoFocus}\r\n          onBlur={onBlur}\r\n          onKeyPress={onKeyPress}\r\n          disabled={isDisabled}\r\n        />\r\n        <ContainerCloseIcon\r\n          iconType='stroke'\r\n          iconColor='var(--767676-profile-new-settings-input-start-url)'\r\n          iconHoveredColor='var(--2B2B31-profile-new-settings-input-start-url)'\r\n          onClick={onClickIconClose}\r\n        >\r\n          <IconSmallClose padding={0} />\r\n        </ContainerCloseIcon>\r\n      </InputContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CloseableInput;\r\n","import React, { ChangeEvent, FC, useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IFullProfile } from '../../../../interfaces';\r\nimport CloseableInput from '../../../../ui/closeable-input';\r\nimport { IconPlusFill } from '../../../../ui/gologin-header/icons';\r\nimport {\r\n  ContainerIcon,\r\n  ContainerParamsColumn,\r\n  ContainerSubRow,\r\n  SeparatedContainer,\r\n} from '../../styles';\r\n\r\ninterface IStartUrl {\r\n  startUrl: string;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const StartUrl: FC<IStartUrl> = ({ startUrl, changeSetting }) => {\r\n  const [urlsList, setUrlsList] = useState<string[]>([]);\r\n  const [isEdit, setIsEdit] = useState<boolean>(false);\r\n\r\n  const containerRef = useRef<HTMLDivElement|null>(null);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const normalizeUrlsList = (): string[] => urlsList\r\n    .map(url => url.replace(/\\s/g, ''))\r\n    .filter(Boolean);\r\n\r\n  useEffect(() => {\r\n    const cleanedUrls = normalizeUrlsList();\r\n\r\n    let newStartUrl = urlsList;\r\n    if (!startUrl) {\r\n      newStartUrl = [];\r\n    }\r\n\r\n    const hasStartUrl = startUrl && cleanedUrls.join(',') !== startUrl;\r\n    if (hasStartUrl) {\r\n      newStartUrl = startUrl.split(',');\r\n    }\r\n\r\n    setUrlsList(newStartUrl);\r\n  }, [startUrl]);\r\n\r\n  const onStartURLInputBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\r\n    const cleanedUrls = normalizeUrlsList();\r\n    const { value = '' } = event.currentTarget;\r\n    if (!value.trim()) {\r\n      setUrlsList(cleanedUrls);\r\n    }\r\n\r\n    changeSetting({ startUrl: cleanedUrls.join(',') });\r\n  };\r\n\r\n  const hotkeyHandler = (event: React.KeyboardEvent, index: number): void => {\r\n    if (!containerRef.current) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === 'Backspace' && !urlsList[index]) {\r\n      event.preventDefault();\r\n      const inputs: NodeListOf<HTMLInputElement> = containerRef.current.querySelectorAll('input');\r\n      inputs[index - 1].focus();\r\n\r\n      const cleanedUrls = normalizeUrlsList();\r\n      setUrlsList(cleanedUrls);\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.key === 'Enter') {\r\n      const inputs: NodeListOf<HTMLInputElement> = containerRef.current.querySelectorAll('input');\r\n\r\n      if (!urlsList[index]?.replace(/\\s/g, '')) {\r\n        return;\r\n      }\r\n\r\n      if (index === inputs.length - 1) {\r\n        addStartUrl();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onStartUrlChange = (index: number, event: ChangeEvent<HTMLInputElement>): void => {\r\n    const updatedUrlsList = urlsList.map((url, idx) => idx === index ? event.target.value : url);\r\n\r\n    setUrlsList(updatedUrlsList);\r\n  };\r\n\r\n  const onStartUrlDelete = (index: number): void => {\r\n    const updatedUrlsList = urlsList.filter((_, idx) => idx !== index);\r\n    setUrlsList(updatedUrlsList);\r\n\r\n    const newStartUrl = updatedUrlsList\r\n      .map(url => url.replace(/\\s/g, ''))\r\n      .filter(Boolean)\r\n      .join(',');\r\n\r\n    changeSetting({\r\n      startUrl: newStartUrl,\r\n    });\r\n  };\r\n\r\n  const renderStartURLInput = (value: string, index: number): JSX.Element|null => (\r\n    <CloseableInput\r\n      onChange={(event): void => onStartUrlChange(index, event)}\r\n      onBlur={onStartURLInputBlur}\r\n      onKeyPress={(event): void => hotkeyHandler(event, index)}\r\n      onClickIconClose={(): void => onStartUrlDelete(index)}\r\n      currentValue={value}\r\n      hasMarginTop={!!startUrl}\r\n      placeholder={translation('quickSettings.browser.addStartUrl') || 'Start url'}\r\n      hasAutoFocus={true}\r\n    />\r\n  );\r\n\r\n  const renderStartUrlsList = (): (JSX.Element|null)[] => urlsList.map(renderStartURLInput);\r\n\r\n  const addStartUrl = (): void => {\r\n    setIsEdit(true);\r\n    if (urlsList.some(url => !url)) {\r\n      return;\r\n    }\r\n\r\n    setUrlsList([...urlsList, '']);\r\n  };\r\n\r\n  const renderAddStartUrl = (): JSX.Element => (\r\n    <ContainerIcon\r\n      onClick={addStartUrl}\r\n      iconColor='var(--B5B5BA-profile-new-settings)'\r\n      iconHoveredColor='var(--2B2B31-profile-new-settings)'\r\n      textColor='var(--81818A-profile-new-settings)'\r\n      textHoveredColor='var(--2B2B31-profile-new-settings)'\r\n      iconType='stroke'\r\n    >\r\n      <IconPlusFill padding={0} margin='0 8px 0 0' />\r\n      {translation('quickSettings.browser.addStartUrl')}\r\n    </ContainerIcon>\r\n  );\r\n\r\n  const renderStartURL = (): JSX.Element|null => {\r\n    if (!urlsList.length) {\r\n      return renderAddStartUrl();\r\n    }\r\n\r\n    if (!isEdit) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ContainerSubRow style={{ marginBottom: 16, marginTop: startUrl ? 8 : 0 }}>\r\n          {renderStartUrlsList()}\r\n        </ContainerSubRow>\r\n        {renderAddStartUrl()}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContainerParamsColumn ref={containerRef}>\r\n      {startUrl ? (\r\n        <SeparatedContainer onClick={(): void => setIsEdit(!isEdit)}>\r\n          {urlsList.map((url, index) => (\r\n            <span key={index}>\r\n              {url}\r\n            </span>\r\n          ))}\r\n        </SeparatedContainer>\r\n      ) : null}\r\n      {renderStartURL()}\r\n    </ContainerParamsColumn>\r\n  );\r\n};\r\n","import { TFunction } from 'i18next';\r\n\r\nimport TIMEZONES from '../../../../../features/common/timezones';\r\nimport { ISelectGroupItems } from '../../../../../ui/modern-select/interfaces';\r\n\r\nconst sortTimezonesByOffset = (firstValue: string, secondValue: string): number => {\r\n  const parsedValueA = parseInt(firstValue.replace('−', '-').replace(':', ''), 10);\r\n  const parsedValueB = parseInt(secondValue.replace('−', '-').replace(':', ''), 10);\r\n\r\n  if (parsedValueA === parsedValueB) {\r\n    return 0;\r\n  } else if (parsedValueA < parsedValueB) {\r\n    return -1;\r\n  }\r\n\r\n  return 1;\r\n};\r\n\r\nexport const selectItems = (translation: TFunction): ISelectGroupItems[] => [{\r\n  groupTitle: translation('quickSettings.parameters.automatic'),\r\n  selectItems: [{\r\n    title: translation('quickSettings.parameters.basedIP'),\r\n    value: 'automatic',\r\n    isSearchIgnored: true,\r\n  }],\r\n}, {\r\n  groupTitle: translation('quickSettings.parameters.manual'),\r\n  selectItems: TIMEZONES\r\n    .sort((firstValue, secondValue) => sortTimezonesByOffset(firstValue.offset, secondValue.offset))\r\n    .map(({ name, offset }) => ({ title: name.replace('/', ', '), value: name, hint: offset })),\r\n}];\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { selectItems } from './select-items';\r\nimport TIMEZONES from '../../../../../features/common/timezones';\r\nimport { IFullProfile, IProxy, ITimezone } from '../../../../../interfaces';\r\nimport PerformanceObserverService from '../../../../../services/performance-observer/performance-observer.service';\r\nimport { refreshLocalUserDevice, useLocalUserDevice } from '../../../../../state/local-user-device.atom';\r\nimport { useProxyList } from '../../../../../state/proxy-list.atom';\r\nimport { ModernSelect } from '../../../../../ui/modern-select';\r\nimport { getTimezoneByBasedIp } from '../../../../common/get-data-by-based-ip';\r\nimport { ContainerParams, ContainerSpaceBetween, GreyDarkTextContainer } from '../../../styles';\r\n\r\ninterface ITimezoneComponent {\r\n  timezone: ITimezone;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n  proxy: IProxy;\r\n}\r\n\r\nexport const Timezone: FC<ITimezoneComponent> = ({ timezone, changeSetting, proxy }) => {\r\n  const localUserDevice = useLocalUserDevice();\r\n\r\n  const [data, setData] = useState<string>('');\r\n\r\n  const proxyList = useProxyList();\r\n\r\n  const { t: translation } = useTranslation();\r\n  const proxyFromCtx = proxyList.find(proxyFromList => proxyFromList._id === proxy.id);\r\n\r\n  const getData = (): void => {\r\n    const timezoneLocation = getTimezoneByBasedIp({\r\n      proxy,\r\n      translation,\r\n      proxyFromCtx,\r\n      localUserDevice,\r\n    });\r\n\r\n    setData(timezoneLocation.timezone);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    refreshLocalUserDevice();\r\n  }, [proxy, proxyFromCtx, localUserDevice.timezone]);\r\n\r\n  const onChange = (value: string): void => {\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    performanceObserverService.handleUserAction({ userAction: 'select-profile-settings-timezone' });\r\n\r\n    if (value === 'automatic') {\r\n      changeSetting({ timezone: { fillBasedOnIp: true } });\r\n\r\n      return;\r\n    }\r\n\r\n    changeSetting({ timezone: { timezone: value, fillBasedOnIp: false } });\r\n  };\r\n\r\n  const onSelectOpen = (): void => {\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    performanceObserverService.handleUserAction({ userAction: 'open-profile-settings-timezone-select' });\r\n  };\r\n\r\n  const renderTitleSelect = (): string => {\r\n    const { name, offset } = TIMEZONES\r\n      .find(({ name: nameFromList }) => timezone.fillBasedOnIp ? nameFromList === data : nameFromList === timezone.timezone)\r\n    || { name: data, offset: '' };\r\n\r\n    let title = name.replace('/', ', ').trim();\r\n\r\n    if (offset) {\r\n      title = offset + ' ' + title;\r\n    }\r\n\r\n    return title;\r\n  };\r\n\r\n  const renderTimezone = (): JSX.Element => (\r\n    <ModernSelect\r\n      title={renderTitleSelect()}\r\n      currentValue={timezone.fillBasedOnIp ? 'automatic' : timezone.timezone || 'Choose region'}\r\n      itemList={selectItems(translation)}\r\n      onSelected={onChange}\r\n      hasSearch\r\n      popoverMaxHeight='317px'\r\n      popoverWidth='303px'\r\n      maxWidth='170px'\r\n      onSelectOpen={onSelectOpen}\r\n    />\r\n  );\r\n\r\n  const renderDescription = (): string => {\r\n    if (timezone.fillBasedOnIp) {\r\n      return translation('quickSettings.parameters.basedIP');\r\n    }\r\n\r\n    return translation('quickSettings.parameters.manual');\r\n  };\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ContainerSpaceBetween style={{ justifyContent: 'space-between', width: 'inherit', overflow: 'visible' }}>\r\n        {renderTimezone()}\r\n        <GreyDarkTextContainer>\r\n          {renderDescription()}\r\n        </GreyDarkTextContainer>\r\n      </ContainerSpaceBetween>\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, useEffect, useRef, useState, KeyboardEvent } from 'react';\r\n\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { AreaNoteBorder, ContainerParamsNote, ContainerUserAgentData, TextArea } from '../../styles';\r\n\r\nlet previousUserAgent = '';\r\n\r\ninterface IUserAgent extends IChangeSetting {\r\n  profileUserAgent: string;\r\n}\r\n\r\nexport const UserAgent: FC<IUserAgent> = ({ profileUserAgent, changeSetting }) => {\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n  const [userAgent, setUserAgent] = useState<string>(profileUserAgent);\r\n  const [areaHeight, setAreaHeight] = useState<number>(20);\r\n\r\n  const areaRef = useRef<HTMLTextAreaElement|null>(null);\r\n  const hiddenDivRef = useRef<HTMLDivElement|null>(null);\r\n\r\n  useEffect(() => {\r\n    previousUserAgent = profileUserAgent;\r\n    setUserAgent(profileUserAgent);\r\n\r\n    if (hiddenDivRef.current) {\r\n      hiddenDivRef.current.innerText = profileUserAgent;\r\n      setAreaHeight(+hiddenDivRef?.current?.scrollHeight);\r\n    }\r\n  }, [profileUserAgent]);\r\n\r\n  const onAreaFocus = ():void => {\r\n    setIsActive(true);\r\n  };\r\n\r\n  const onAreaBlur = ():void => {\r\n    setIsActive(false);\r\n    changeSetting({ navigator: { userAgent } });\r\n  };\r\n\r\n  const onAreaChange = (event: ChangeEvent<HTMLTextAreaElement>):void => {\r\n    setUserAgent(event.target.value);\r\n\r\n    if (hiddenDivRef.current) {\r\n      hiddenDivRef.current.innerText = event.target.value;\r\n      setAreaHeight(+hiddenDivRef?.current?.scrollHeight);\r\n    }\r\n  };\r\n\r\n  const onKeyPress = (event: KeyboardEvent<HTMLTextAreaElement>): void => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      areaRef?.current?.blur();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContainerParamsNote>\r\n      <AreaNoteBorder nameAreaActive={isActive}>\r\n        <TextArea\r\n          minHeight={20}\r\n          ref={areaRef}\r\n          placeholder='Enter user agent'\r\n          value={userAgent}\r\n          onChange={onAreaChange}\r\n          onFocus={onAreaFocus}\r\n          onBlur={onAreaBlur}\r\n          onKeyPress={onKeyPress}\r\n          style={{\r\n            height: areaHeight,\r\n            overflowY: 'hidden',\r\n          }}\r\n        />\r\n        <ContainerUserAgentData ref={hiddenDivRef}>\r\n          {userAgent}\r\n        </ContainerUserAgentData>\r\n      </AreaNoteBorder>\r\n    </ContainerParamsNote>\r\n  );\r\n};\r\n","import { Table, Tooltip } from 'antd';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IFullProfile, IWebGLMetadata, IWebGLParams } from '../../../../interfaces';\r\nimport { IconSettings2 } from '../../../../ui/gologin-header/icons';\r\nimport Modal from '../../../../ui/Modal';\r\nimport { blackMain, grey } from '../../../../ui/style-templates/colors';\r\nimport { InputTitle, SettingsInput } from '../../../../ui/closeable-input/styles';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport {\r\n  ContainerParams,\r\n  ContainerSubRow,\r\n  ContainerIcon,\r\n  ContainerSpaceBetween,\r\n  ContainerWebGLData, SubContainerWebGL,\r\n} from '../../styles';\r\n\r\ninterface IWebglMetadataComponent {\r\n  webglParams: IWebGLParams;\r\n  webGLMetadata: IWebGLMetadata;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nconst WebglMetadata: FC<IWebglMetadataComponent> = ({ webglParams, webGLMetadata, changeSetting }) => {\r\n  const [isEdit, setIsEdit] = useState<boolean>(false);\r\n  const [webGlModalVisible, setWebGlModalVisible] = useState<boolean>(false);\r\n  const [vendor, setVendor] = useState<string>('');\r\n  const [renderer, setRenderer] = useState<string>('');\r\n  const [maskActive, setMaskActive] = useState<boolean>(false);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const canvas = document.createElement('canvas').getContext('webgl');\r\n  const rendererWebGL = canvas?.getExtension('WEBGL_debug_renderer_info');\r\n\r\n  useEffect(() => {\r\n    const isRealWebGl = webGLMetadata.mode === 'off';\r\n    setVendor(isRealWebGl ? canvas?.getParameter(rendererWebGL?.UNMASKED_VENDOR_WEBGL || 0) : webGLMetadata?.vendor);\r\n    setRenderer(isRealWebGl ? canvas?.getParameter(rendererWebGL?.UNMASKED_RENDERER_WEBGL || 1) : webGLMetadata.renderer);\r\n  }, [webGLMetadata.mode, webGLMetadata.vendor, webGLMetadata.renderer]);\r\n\r\n  useEffect(() => {\r\n    if (webGLMetadata.mode === 'off') {\r\n      setMaskActive(false);\r\n    }\r\n\r\n    if (webGLMetadata.mode === 'mask') {\r\n      setMaskActive(true);\r\n    }\r\n  }, [webGLMetadata.mode]);\r\n\r\n  const onKeyPress = (event: React.KeyboardEvent): void => {\r\n    if (event.key === 'Enter') {\r\n      saveWebglMetadata();\r\n    }\r\n  };\r\n\r\n  const saveWebglMetadata = (): void => changeSetting({ webGLMetadata: { renderer, vendor } });\r\n\r\n  const getGPUInfo = (): string => {\r\n    const isModeOff = webGLMetadata.mode === 'off';\r\n    const isEmptyDeviceMetadata = !rendererWebGL && isModeOff;\r\n    const isEmptyProfileMetadata = !(isModeOff || (webGLMetadata.vendor || webGLMetadata.renderer));\r\n    if (isEmptyDeviceMetadata || isEmptyProfileMetadata) {\r\n      return '';\r\n    }\r\n\r\n    if (isModeOff && rendererWebGL) {\r\n      return canvas?.getParameter(rendererWebGL.UNMASKED_RENDERER_WEBGL);\r\n    }\r\n\r\n    return webGLMetadata.vendor + ' / ' + webGLMetadata.renderer;\r\n  };\r\n\r\n  const webGParamsTable = (): JSX.Element => {\r\n    const webGLParams = webglParams || {};\r\n    const glParamValues = webGLParams.glParamValues || [];\r\n    const filteredParams = glParamValues.filter(obj => obj.value !== 'n/a');\r\n\r\n    const dataSource = filteredParams.map(obj => {\r\n      const { name, value } = obj;\r\n      let resultValue = [value];\r\n      if (value === Object(value)) {\r\n        resultValue = [];\r\n        for (const index of Object.keys(value)) {\r\n          resultValue.push(value[index]);\r\n        }\r\n      }\r\n\r\n      return {\r\n        key: name,\r\n        extension: 'webgl',\r\n        name,\r\n        value: resultValue,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <Table dataSource={dataSource} pagination={false} size='small'>\r\n        <Table.Column title='Extension' key='extension' dataIndex='extension' />\r\n        <Table.Column\r\n          title='Name'\r\n          key='name'\r\n          dataIndex='name'\r\n          ellipsis={true}\r\n          render={(name): JSX.Element => (\r\n            <Tooltip title={name}>\r\n              {name}\r\n            </Tooltip>\r\n          )}\r\n        />\r\n        <Table.Column\r\n          title='Value'\r\n          key='value'\r\n          dataIndex='value'\r\n          render={(arr): JSX.Element => (\r\n            <span>\r\n              {arr.join(', ')}\r\n            </span>\r\n          )}\r\n        />\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const onChangeWebGL = (value: string, type: 'vendor'|'renderer'): void => {\r\n    const webGLType = {\r\n      vendor: setVendor,\r\n      renderer: setRenderer,\r\n    };\r\n\r\n    webGLType[type](value);\r\n  };\r\n\r\n  const renderInputs = (): JSX.Element|null => {\r\n    if (!isEdit) {\r\n      return null;\r\n    }\r\n\r\n    const inputsData: { title: string; state: string; type: 'vendor'|'renderer' }[] = [\r\n      { title: translation('quickSettings.hardware.webglVendor'), state: vendor, type: 'vendor' },\r\n      { title: translation('quickSettings.hardware.webglRender'), state: renderer, type: 'renderer' },\r\n    ];\r\n\r\n    return (\r\n      <div onClick={(event): void => event.stopPropagation()}>\r\n        <ContainerSubRow\r\n          hasMarginTop={true}\r\n          hasGap={true}\r\n          onClick={(event): void => event.stopPropagation()}\r\n          style={{ marginBottom: 16 }}\r\n        >\r\n          {inputsData.map(({ title, state, type }) => (\r\n            <>\r\n              <InputTitle hasMarginTop={true}>\r\n                {title}\r\n              </InputTitle>\r\n              <SettingsInput\r\n                onChange={(event): void => onChangeWebGL(event.target.value, type)}\r\n                onBlur={saveWebglMetadata}\r\n                onKeyPress={onKeyPress}\r\n                value={state}\r\n                title={title}\r\n                key={type}\r\n                disabled={!maskActive}\r\n                style={{ padding: '6px 0', marginTop: 8 }}\r\n                onFocus={(event): void => event.currentTarget.select()}\r\n              />\r\n            </>\r\n          ))}\r\n        </ContainerSubRow>\r\n        <ContainerIcon\r\n          onClick={(event): void => {\r\n            event.stopPropagation();\r\n            setWebGlModalVisible(true);\r\n          }}\r\n          iconColor='var(--81818A-profile-new-settings)'\r\n          iconHoveredColor='var(--2B2B31-profile-new-settings)'\r\n          textColor='var(--81818A-profile-new-settings)'\r\n          textHoveredColor='var(--2B2B31-profile-new-settings)'\r\n          iconType='stroke'\r\n        >\r\n          <IconSettings2 padding={0} margin='0 8px 0 0' />\r\n          {translation('quickSettings.hardware.openWebgl')}\r\n        </ContainerIcon>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const selectItems = [{\r\n    title: translation('quickSettings.parameters.real'),\r\n    value: 'off',\r\n  }, {\r\n    title: translation('quickSettings.parameters.masked'),\r\n    value: 'mask',\r\n  }];\r\n\r\n  const toggleEditMode = (): void => {\r\n    setIsEdit(!isEdit);\r\n  };\r\n\r\n  return (\r\n    <ContainerParams\r\n      onClick={toggleEditMode}\r\n      style={{ flexWrap: 'wrap' }}\r\n      hasCursorPointer={true}\r\n    >\r\n      <ContainerSpaceBetween>\r\n        <div onClick={(event): void => event.stopPropagation()}>\r\n          <ModernSelect\r\n            currentValue={webGLMetadata.mode ||'off'}\r\n            itemList={selectItems}\r\n            onSelected={(value): void => changeSetting({ webGLMetadata: { mode: value as 'mask'|'off' } })}\r\n            maxWidth='200px'\r\n          />\r\n        </div>\r\n        <ContainerWebGLData hasCursorPointer={true}>\r\n          <SubContainerWebGL>\r\n            {getGPUInfo()}\r\n          </SubContainerWebGL>\r\n        </ContainerWebGLData>\r\n      </ContainerSpaceBetween>\r\n      {renderInputs()}\r\n      <div onClick={(event): void => event.stopPropagation()}>\r\n        <Modal\r\n          visible={webGlModalVisible}\r\n          onClose={(): void => setWebGlModalVisible(false)}\r\n          title='WebGL parameters'\r\n          footer={null}\r\n        >\r\n          {webGParamsTable()}\r\n        </Modal>\r\n      </div>\r\n    </ContainerParams>\r\n  );\r\n};\r\n\r\nexport default React.memo(WebglMetadata);\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IWebRTC } from '../../../../interfaces';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport {\r\n  ContainerParams,\r\n  DrawerParams,\r\n} from '../../styles';\r\n\r\ninterface IWebRTCPublic extends IChangeSetting{\r\n  webRTCMode: IWebRTC['enable'];\r\n}\r\n\r\nexport const WebRTCPublic: FC<IWebRTCPublic> = ({ changeSetting, webRTCMode }) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const selectItems = [{\r\n    title: translation('quickSettings.parameters.basedIP'),\r\n    value: 'enabled',\r\n  }, {\r\n    title: translation('profileSettings.webrtc.disabled'),\r\n    value: 'disabled',\r\n  }];\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <DrawerParams>\r\n        <ModernSelect\r\n          currentValue={webRTCMode === true ? 'enabled' : webRTCMode || 'disabled'}\r\n          itemList={selectItems}\r\n          onSelected={(value): void => changeSetting({ webRTC: { enable: value === 'enabled' } })}\r\n        />\r\n      </DrawerParams>\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, KeyboardEvent, useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { randomWords } from '../../../../../features/common/randomizer';\r\nimport { IDefaultProps } from '../../../../../interfaces';\r\nimport { useProfilesSettingsState } from '../../../../../state/profiles-settings-atom';\r\nimport { parseTranslatedKey } from '../../../../../utils/translation.utils';\r\nimport { IChangeSetting } from '../../../interfaces';\r\nimport { AreaNoteBorder, ProfileNameContainer, TextArea } from '../../../styles';\r\n\r\ninterface IProfileName extends IChangeSetting {\r\n  previousProfileName: string;\r\n  isAutoGenerated: boolean;\r\n  defaultProps: IDefaultProps;\r\n}\r\n\r\nexport const ProfileName: FC<IProfileName> = (props) => {\r\n  const { previousProfileName = '', changeSetting, defaultProps, isAutoGenerated } = props;\r\n\r\n  const { profileIds } = useProfilesSettingsState();\r\n  const [profileId] = profileIds;\r\n\r\n  const [areaHeight, setAreaHeight] = useState<number>(20);\r\n  const [profileName, setProfileName] = useState<string>(previousProfileName);\r\n\r\n  const nameRef = useRef<HTMLTextAreaElement|null>(null);\r\n  const hiddenDivRef = useRef<HTMLDivElement|null>(null);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!profileId) {\r\n      return;\r\n    }\r\n\r\n    setVariables();\r\n\r\n    if (hiddenDivRef.current) {\r\n      hiddenDivRef.current.innerText = previousProfileName;\r\n      setAreaHeight(+hiddenDivRef?.current?.scrollHeight);\r\n    }\r\n  }, [previousProfileName, profileId, isAutoGenerated, defaultProps]);\r\n\r\n  const setVariables = (): void => {\r\n    let defaultProfileName = previousProfileName;\r\n    if (isAutoGenerated && defaultProps.profileNameIsDefault) {\r\n      defaultProfileName = parseTranslatedKey(translation('profiles.firstProfileName'));\r\n    }\r\n\r\n    setProfileName(defaultProfileName);\r\n  };\r\n\r\n  const onAreaChange = (event: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    setProfileName(event.target.value);\r\n\r\n    if (hiddenDivRef.current) {\r\n      hiddenDivRef.current.innerText = event.target.value;\r\n      setAreaHeight(+hiddenDivRef?.current?.scrollHeight);\r\n    }\r\n  };\r\n\r\n  const onKeyPress = (event: KeyboardEvent<HTMLTextAreaElement>): void => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      nameRef?.current?.blur();\r\n    }\r\n  };\r\n\r\n  const onAreaBlur = (): void => {\r\n    let newProfileName = profileName;\r\n    if (!profileName.trim()) {\r\n      newProfileName = randomWords();\r\n      setProfileName(newProfileName);\r\n    }\r\n\r\n    changeSetting({\r\n      name: newProfileName,\r\n      defaultProps: {\r\n        ...defaultProps,\r\n        profileNameIsDefault: false,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AreaNoteBorder>\r\n      <TextArea\r\n        ref={nameRef}\r\n        spellCheck={false}\r\n        placeholder='Add name'\r\n        value={profileName}\r\n        onChange={onAreaChange}\r\n        onBlur={onAreaBlur}\r\n        onKeyPress={onKeyPress}\r\n        style={{ height: areaHeight }}\r\n        onFocus={(event) => event.currentTarget.select()}\r\n      />\r\n      <ProfileNameContainer ref={hiddenDivRef}>\r\n        {profileName}\r\n      </ProfileNameContainer>\r\n    </AreaNoteBorder>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ModalButton, ModalButtonConfirm, ModalCloseContainer, ModalConfirmCustom, ModalDescription, ModalTitle } from './styles';\r\nimport { IconClose } from '../../../../../ui/gologin-header/icons';\r\n\r\ninterface IModalCancelConfirm {\r\n  onConfirm: () => void;\r\n  visible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ModalCancelConfirm: FC<IModalCancelConfirm> = (props) => {\r\n  const { onConfirm, visible, onClose } = props;\r\n  const { t: translation } = useTranslation();\r\n\r\n  return (\r\n    <ModalConfirmCustom\r\n      visible={visible}\r\n      onCancel={onClose}\r\n      centered={true}\r\n    >\r\n      <ModalCloseContainer>\r\n        <IconClose\r\n          padding={0}\r\n          iconColor='var(--00000073-antd)'\r\n          onClick={onClose}\r\n        />\r\n      </ModalCloseContainer>\r\n      <ModalTitle>\r\n        {translation('modals.cancelRenameProfile.title')}\r\n      </ModalTitle>\r\n      <ModalDescription>\r\n        {translation('modals.cancelRenameProfile.description')}\r\n      </ModalDescription>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <ModalButton style={{ marginRight: 12 }} onClick={onConfirm}>\r\n          {translation('base.cancel')}\r\n        </ModalButton>\r\n        <ModalButtonConfirm style={{ backgroundColor: 'var(--00997A)' }} onClick={onClose}>\r\n          {translation('modals.cancelRenameProfile.continue')}\r\n        </ModalButtonConfirm>\r\n      </div>\r\n    </ModalConfirmCustom>\r\n  );\r\n};\r\n\r\nexport default ModalCancelConfirm;\r\n","import { API_BASE_URL } from '../../../common/constants/constants';\r\nimport { http } from '../../services';\r\nimport { INewNameProfile } from '../../utils/parse-name-formatting/interfaces';\r\n\r\nexport const requestFullProfileInfo = async (profileId: string) => {\r\n  const data = await http(`${API_BASE_URL}/browser/${profileId}?withCookies=true`, {\r\n    method: 'GET',\r\n  });\r\n\r\n  return data.body;\r\n};\r\n\r\nexport const renameProfileNameMany = async (newNameProfiles: INewNameProfile[]) => {\r\n  const data = await http(`${API_BASE_URL}/browser/name/many`, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify(newNameProfiles),\r\n  });\r\n\r\n  return data.body;\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { blackMain } from '../../../../../ui/style-templates/colors';\r\n\r\nexport const ContainerFolderList = styled('div')`\r\n  line-height: 24px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: 12px;\r\n  color: var(--2B2B31-profile-new-settings);\r\n  font-weight: 400;\r\n  flex-direction: column;\r\n  width: 292px;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport TooltipCustom from '../../../../../ui/tooltip-custom';\r\nimport { ContainerFolderList } from '../folder-list/styles';\r\n\r\nexport const Mixed = ({ colorText, onClick, id }: { colorText?: string; onClick?: () => void; id?: string }): JSX.Element => {\r\n  const [anchorElTooltip, setAnchorElTooltip] = useState<HTMLElement|null>(null);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ContainerFolderList\r\n        id={id}\r\n        style={{\r\n          fontSize: 14,\r\n          color: colorText || 'var(--767676-profile-new-settings)',\r\n          cursor: colorText ? 'pointer' : 'not-allowed',\r\n          width: 'auto',\r\n          height: 20,\r\n        }}\r\n        onMouseEnter={(event): void => setAnchorElTooltip(event.currentTarget)}\r\n        onMouseLeave={(): void => setAnchorElTooltip(null)}\r\n        onClick={onClick}\r\n      >\r\n        {translation('base.mixed')}\r\n      </ContainerFolderList>\r\n      <TooltipCustom anchorEl={!colorText ? anchorElTooltip : null} value={translation('notifications.error.mixed') || ''} placement='top' />\r\n    </>\r\n  );\r\n};\r\n","import { message } from 'antd';\r\nimport React, { ChangeEvent, FC, KeyboardEvent, useContext, useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport ModalCancelConfirm from './cancel-rename-confirm';\r\nimport { InputProfileName } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../../../feature-toggle';\r\nimport { DEFAULT_MANY_PROFILE_NAME } from '../../../../../hooks';\r\nimport {\r\n  DEFAULT_PROFILE_NAME,\r\n  importFilesContext,\r\n  templatesContext,\r\n} from '../../../../../state';\r\nimport { useProfilesList } from '../../../../../state/profiles-list.atom';\r\nimport { useProfilesSettingsState } from '../../../../../state/profiles-settings-atom';\r\nimport { IconCheck, IconClose } from '../../../../../ui/gologin-header/icons';\r\nimport { InputWithPopover } from '../../../../../ui/modern-popover/input-with-popover';\r\nimport { ISlotInputInactive } from '../../../../../ui/modern-popover/interfaces';\r\nimport { IRenderOptions, renderOptions } from '../../../../../ui/modern-popover/options';\r\nimport { pasteSpintax } from '../../../../../ui/modern-popover/paste-spintax';\r\nimport { getSpintaxList } from '../../../../../ui/modern-popover/spintax-list';\r\nimport { parseNameFormatting } from '../../../../../utils/parse-name-formatting';\r\nimport { INewNameProfile } from '../../../../../utils/parse-name-formatting/interfaces';\r\nimport { renameProfileNameMany } from '../../../api';\r\nimport { IChangeSetting } from '../../../interfaces';\r\nimport { ContainerParams } from '../../../styles';\r\nimport { Mixed } from '../mixed/mixed';\r\n\r\ninterface IMixedProfileName extends IChangeSetting {\r\n  changeProfilesData: (newProfilesData: INewNameProfile[]) => void;\r\n  localSettingId: string;\r\n}\r\n\r\nconst MixedProfileName: FC<IMixedProfileName> = (props) => {\r\n  const { changeProfilesData, localSettingId } = props;\r\n\r\n  const profilesList = useProfilesList();\r\n  const { profileIds } = useProfilesSettingsState();\r\n\r\n  const {\r\n    needParseName,\r\n    setNeedParseName,\r\n    manyProfilesName,\r\n    needOpenSpintaxPopup,\r\n    setNeedOpenSpintaxPopup,\r\n  } = useContext(importFilesContext);\r\n\r\n  const [profileName, setProfileName] = useState<string>(manyProfilesName);\r\n  const [oldProfileName, setOldProfileName] = useState<string>(manyProfilesName);\r\n  const [isPopupSpintaxVisible, setIsPopupSpintaxVisible] = useState<boolean>(false);\r\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\r\n  const [modalConfirmVisible, setModalConfirmVisible] = useState<boolean>(false);\r\n\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const { selectedTemplate } = useContext(templatesContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const isPinnedSection = localSettingId === 'pinned-name';\r\n  const spintaxList = getSpintaxList(translation);\r\n\r\n  const getSelectedProfilesName = (selectedProfileId: string): INewNameProfile|null => {\r\n    const selectedProfile = profilesList.find(profile => selectedProfileId === profile.id);\r\n    if (!selectedProfile) {\r\n      return null;\r\n    }\r\n\r\n    return { profileId: selectedProfile.id, name: selectedProfile.name, email: selectedProfile.facebookAccountData?.email };\r\n  };\r\n\r\n  const selectedProfiles: INewNameProfile[] = profileIds.map(profileId => getSelectedProfilesName(profileId))\r\n    .filter(Boolean) as INewNameProfile[];\r\n\r\n  useEffect(() => {\r\n    if (!(needOpenSpintaxPopup && isPinnedSection)) {\r\n      return;\r\n    }\r\n\r\n    onClickMixed();\r\n    setNeedOpenSpintaxPopup(false);\r\n  }, [needOpenSpintaxPopup]);\r\n\r\n  useEffect(() => {\r\n    const isMultiProfilesSettings = profileIds.length > 1;\r\n    if (!(isPinnedSection && (isMultiProfilesSettings || needParseName))) {\r\n      return;\r\n    }\r\n\r\n    const [drawer] = document.getElementsByClassName('ant-drawer-content-wrapper');\r\n    if (!drawer) {\r\n      return;\r\n    }\r\n\r\n    const transitionEndEvent = 'transitionend';\r\n    const onTransition = (drawerEvent: Event): void => {\r\n      drawer.removeEventListener(transitionEndEvent, onTransition);\r\n      if (drawerEvent.target !== drawer) {\r\n        return;\r\n      }\r\n\r\n      if (needParseName) {\r\n        setIsEditMode(true);\r\n        const defaultSpintax = (NEW_FEATURES.templateProfileName && manyProfilesName) || DEFAULT_PROFILE_NAME;\r\n        setProfileName(defaultSpintax);\r\n        setOldProfileName(defaultSpintax);\r\n        setIsPopupSpintaxVisible(true);\r\n\r\n        return;\r\n      }\r\n\r\n      onClickMixed();\r\n    };\r\n\r\n    drawer.addEventListener(transitionEndEvent, onTransition);\r\n\r\n    return () => drawer.removeEventListener(transitionEndEvent, onTransition);\r\n  }, []);\r\n\r\n  const onAreaChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setProfileName(event.target.value);\r\n  };\r\n\r\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>): void => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n\r\n    onApply();\r\n  };\r\n\r\n  const onApply = async (): Promise<void> => {\r\n    if (!profileName.trim()) {\r\n      setNeedParseName(false);\r\n      setIsEditMode(false);\r\n\r\n      return;\r\n    }\r\n\r\n    setIsEditMode(false);\r\n    setOldProfileName(profileName);\r\n    setNeedParseName(false);\r\n\r\n    const formattingParams = {\r\n      profiles: selectedProfiles,\r\n      nameFormat: profileName,\r\n    };\r\n\r\n    const newNameProfiles = parseNameFormatting(formattingParams);\r\n    changeProfilesData(newNameProfiles);\r\n    await renameProfileNameMany(newNameProfiles).then(renamedProfiles => {\r\n      message.success(translation('notifications.success.profilesRenamed', { count: renamedProfiles.length }));\r\n    });\r\n  };\r\n\r\n  const onCancel = (): void => {\r\n    setNeedParseName(false);\r\n    if (profileName === oldProfileName) {\r\n      setIsEditMode(false);\r\n\r\n      return;\r\n    }\r\n\r\n    setModalConfirmVisible(true);\r\n  };\r\n\r\n  const onConfirm = (): void => {\r\n    setIsEditMode(false);\r\n    setModalConfirmVisible(false);\r\n    setProfileName(selectedTemplate.profileName.rename || DEFAULT_MANY_PROFILE_NAME);\r\n  };\r\n\r\n  const iconWithInput = (): JSX.Element => (\r\n    <>\r\n      <IconCheck\r\n        padding={0}\r\n        margin='0 16px'\r\n        iconColor='var(--00A987)'\r\n        onClick={(): Promise<void> => onApply()}\r\n      />\r\n      <IconClose\r\n        padding={0}\r\n        iconColor='var(--98989F)'\r\n        onClick={(): void => onCancel()}\r\n      />\r\n    </>\r\n  );\r\n\r\n  const inputInactive = ({ onClick }: ISlotInputInactive): JSX.Element => (\r\n    <InputProfileName\r\n      ref={inputRef}\r\n      value={profileName}\r\n      onChange={(event): void => onAreaChange(event)}\r\n      onKeyPress={(event): void => onKeyPress(event)}\r\n      onClick={onClick}\r\n      autoFocus={true}\r\n    />\r\n  );\r\n\r\n  const onClickMixed = (): void => {\r\n    setProfileName(manyProfilesName);\r\n    setOldProfileName(manyProfilesName);\r\n    setIsEditMode(true);\r\n    setIsPopupSpintaxVisible(true);\r\n  };\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (!isEditMode) {\r\n      return (\r\n        <Mixed\r\n          colorText='var(--2B2B31-profile-new-settings)'\r\n          id={localSettingId + '-param-profile-name'}\r\n          onClick={onClickMixed}\r\n        />\r\n      );\r\n    }\r\n\r\n    const propsForRenderOptions: IRenderOptions = {\r\n      profiles: [selectedProfiles[0]],\r\n      nameFormat: profileName,\r\n      translation,\r\n      spintaxList,\r\n      pasteSpintax: (newText: string) => pasteSpintax({ newText, inputElem: inputRef.current, setProfileName }),\r\n    };\r\n\r\n    return (\r\n      <InputWithPopover\r\n        popupSlot={(): JSX.Element => renderOptions(propsForRenderOptions)}\r\n        slotInputDecoration={iconWithInput}\r\n        slotInputInactive={inputInactive}\r\n        anchorEl={inputRef.current}\r\n        optionsVisible={isPopupSpintaxVisible}\r\n        setOptionsVisible={setIsPopupSpintaxVisible}\r\n        onCancel={onCancel}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContainerParams>\r\n        {renderContent()}\r\n      </ContainerParams>\r\n      <ModalCancelConfirm\r\n        onConfirm={onConfirm}\r\n        onClose={(): void => setModalConfirmVisible(false)}\r\n        visible={modalConfirmVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MixedProfileName);\r\n","import React, { FC, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ContainerFolderList } from './styles';\r\nimport { userContext } from '../../../../../state';\r\nimport { IconPlusFill } from '../../../../../ui/gologin-header/icons';\r\nimport { ContainerIcon, SeparatedContainer } from '../../../styles';\r\nimport { Mixed } from '../mixed/mixed';\r\nimport { useProfilesSettingsState } from '../../../../../state/profiles-settings-atom';\r\n\r\ninterface IFolderList {\r\n  profileFolders: string[];\r\n  openFoldersModal: (profileIds: string[]) => void;\r\n}\r\n\r\nexport const FolderList: FC<IFolderList> = (props) => {\r\n  const { profileFolders = [], openFoldersModal } = props;\r\n\r\n  const { profileIds } = useProfilesSettingsState();\r\n\r\n  const { folders: foldersFromCtx } = useContext(userContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const profileFolderList = profileFolders.filter(folderName => foldersFromCtx.find(folder => folder.name === folderName));\r\n\r\n  const renderFolders = (): JSX.Element => {\r\n    if (profileIds.length > 1) {\r\n      return (\r\n        <Mixed colorText='var(--2B2B31-profile-new-settings)' />\r\n      );\r\n    }\r\n\r\n    if (!profileFolderList.length) {\r\n      return (\r\n        <ContainerIcon\r\n          iconColor='var(--B5B5BA-profile-new-settings)'\r\n          iconHoveredColor='var(--2B2B31-profile-new-settings)'\r\n          textColor='var(--81818A-profile-new-settings)'\r\n          textHoveredColor='var(--2B2B31-profile-new-settings)'\r\n          iconType='stroke'\r\n        >\r\n          <IconPlusFill padding={0} margin='0 8px 0 0' />\r\n          {translation('quickSettings.favorites.addFolder')}\r\n        </ContainerIcon>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <SeparatedContainer>\r\n        {profileFolderList.map((folder, index) => (\r\n          <span key={index}>\r\n            {folder}\r\n          </span>\r\n        ))}\r\n      </SeparatedContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContainerFolderList onClick={(): void => openFoldersModal(profileIds)}>\r\n      {renderFolders()}\r\n    </ContainerFolderList>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IFullProfile, WEBGL_IMAGE_MODES, WebglImageModesType } from '../../../../interfaces';\r\nimport { ModernSelect } from '../../../../ui/modern-select';\r\nimport { ContainerParams } from '../../styles';\r\n\r\ninterface IWebglImageComponent {\r\n  mode: WebglImageModesType;\r\n  changeSetting: (profileData: Partial<IFullProfile>) => void;\r\n}\r\n\r\nexport const WebglImage: FC<IWebglImageComponent> = ({ changeSetting, mode }) => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const titleSelect: Record<WebglImageModesType, string> = {\r\n    noise: translation('quickSettings.parameters.maskedWithNoise'),\r\n    off: translation('quickSettings.parameters.real'),\r\n  };\r\n\r\n  const selectItems = WEBGL_IMAGE_MODES.map(webglImageMode => ({\r\n    title: titleSelect[webglImageMode],\r\n    value: webglImageMode,\r\n  }));\r\n\r\n  return (\r\n    <ContainerParams>\r\n      <ModernSelect\r\n        currentValue={mode}\r\n        itemList={selectItems}\r\n        onSelected={(value): void => changeSetting({ webGL: { mode: value as WebglImageModesType } })}\r\n      />\r\n    </ContainerParams>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IBookmarkFoldersObj } from '../../../../../electron/interfaces/bookmarks-utils.interfaces';\r\nimport { IconPlusFill } from '../../../../ui/gologin-header/icons';\r\nimport { blackMain, grey, greyInformers } from '../../../../ui/style-templates/colors';\r\nimport { getCountBookmarks, parseBookmarksObjToTxt, parseBookmarksTxtToObj } from '../../../../utils/bookmarks-utils';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerIcon, SeparatedContainer, ContainerParamsColumn, TextArea } from '../../styles';\r\n\r\ninterface IBookmarks extends IChangeSetting {\r\n  bookmarks: IBookmarkFoldersObj;\r\n  profileId: string;\r\n}\r\n\r\nexport const Bookmarks: FC<IBookmarks> = ({ bookmarks, profileId, changeSetting }) => {\r\n  const [isEditing, setIsEditing] = useState<boolean>(false);\r\n  const [bookmarksText, setBookmarksText] = useState('');\r\n  const [bookmarksCount, setBookmarksCount] = useState(0);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const parsedBookmarksObjectToTxt = parseBookmarksObjToTxt(bookmarks);\r\n    setBookmarksText(parsedBookmarksObjectToTxt);\r\n  }, [bookmarks, profileId]);\r\n\r\n  useEffect(() => {\r\n    const parsedBookmarksObject = parseBookmarksTxtToObj(bookmarks, bookmarksText);\r\n    const count = getCountBookmarks(parsedBookmarksObject);\r\n    setBookmarksCount(count);\r\n  }, [bookmarksText]);\r\n\r\n  const changeBookmarks = (event: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const text = event.target.value;\r\n    setBookmarksText(text);\r\n  };\r\n\r\n  const onBlur = (): void => {\r\n    const parsedBookmarksObject = parseBookmarksTxtToObj(bookmarks, bookmarksText);\r\n    changeSetting({ bookmarks: parsedBookmarksObject });\r\n  };\r\n\r\n  const renderAddBookmarks = (): JSX.Element => {\r\n    if (bookmarksCount) {\r\n      return (\r\n        <div>\r\n          {translation('quickSettings.browser.bookmarksCountNewKey', { count: bookmarksCount })}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ContainerIcon\r\n        iconColor={greyInformers}\r\n        iconHoveredColor={blackMain}\r\n        textColor={grey}\r\n        textHoveredColor={blackMain}\r\n        iconType='stroke'\r\n      >\r\n        <IconPlusFill padding={0} margin='0 8px 0 0' />\r\n        {translation('quickSettings.browser.addBookmarks')}\r\n      </ContainerIcon>\r\n    );\r\n  };\r\n\r\n  const renderBookmarksArea = (): JSX.Element|null => {\r\n    if (!isEditing) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <TextArea\r\n        style={{ marginTop: 16 }}\r\n        shouldWrapText={true}\r\n        minHeight={132}\r\n        placeholder={translation('profileSettings.bookmarks.placeholder') || ''}\r\n        value={bookmarksText}\r\n        onChange={changeBookmarks}\r\n        onBlur={onBlur}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContainerParamsColumn hasCursorPointer={true}>\r\n      <SeparatedContainer onClick={(): void => setIsEditing(!isEditing)}>\r\n        {renderAddBookmarks()}\r\n      </SeparatedContainer>\r\n      {renderBookmarksArea()}\r\n    </ContainerParamsColumn>\r\n  );\r\n};\r\n","import React, { FC, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ExtensionsModal } from '../../../../features/modalsComponents/components/extensions-modal/extensions-modal';\r\nimport { getExtensionList } from '../../../../features/profileSettingsComponents/extensionsTab/get-extension-list';\r\nimport { IExtensionFromDb } from '../../../../features/profileSettingsComponents/extensionsTab/interfaces/extension.interface';\r\nimport { IFullProfile } from '../../../../interfaces';\r\nimport { extensionsContext } from '../../../../state';\r\nimport { IconPlusFill } from '../../../../ui/gologin-header/icons';\r\nimport { blackMain, grey, greyInformers } from '../../../../ui/style-templates/colors';\r\nimport { IChangeSetting } from '../../interfaces';\r\nimport { ContainerIcon, SeparatedContainer } from '../../styles';\r\n\r\ninterface IExtensionsProps extends IChangeSetting {\r\n  updateStateProfile: (profileData: Partial<IFullProfile>) => void;\r\n  fullProfile: IFullProfile;\r\n}\r\n\r\nexport const Extensions: FC<IExtensionsProps> = (props) => {\r\n  const { changeSetting, updateStateProfile, fullProfile } = props;\r\n  const { id: profileId, chromeExtensions = [], userChromeExtensions = [] } = fullProfile;\r\n\r\n  const [profileExtensions, setProfileExtensions] = useState<IExtensionFromDb[]>([]);\r\n  const [extensionsModalVisible, setExtensionsModalVisible] = useState<boolean>(false);\r\n\r\n  const { isLoading: isLoadingExtensions, updateExtensionsMap, getExtensions } = useContext(extensionsContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    fetchProfileExtensions();\r\n  }, [profileId, chromeExtensions, userChromeExtensions]);\r\n\r\n  const fetchProfileExtensions = async (): Promise<void> => {\r\n    const extensionList = await getExtensionList({\r\n      chromeExtensions,\r\n      userChromeExtensions,\r\n      updateProfileInfo: updateStateProfile,\r\n      isLoadingExtensions,\r\n      updateExtensionsMap,\r\n      getExtensions,\r\n    });\r\n\r\n    setProfileExtensions(extensionList);\r\n  };\r\n\r\n  const renderExtensions = (): JSX.Element => {\r\n    if (!profileExtensions.length) {\r\n      return (\r\n        <ContainerIcon\r\n          iconColor={greyInformers}\r\n          iconHoveredColor={blackMain}\r\n          textColor={grey}\r\n          textHoveredColor={blackMain}\r\n          iconType='stroke'\r\n        >\r\n          <IconPlusFill padding={0} margin='0 8px 0 0' />\r\n          {translation('storage.extension.addExtensions')}\r\n        </ContainerIcon>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <SeparatedContainer>\r\n        {profileExtensions.map(({ name, extId }) => (\r\n          <span key={extId}>\r\n            {name}\r\n          </span>\r\n        ))}\r\n      </SeparatedContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onClick={(): void => setExtensionsModalVisible(true)}>\r\n        {renderExtensions()}\r\n      </div>\r\n      <ExtensionsModal\r\n        userExtensionsTab={profileExtensions}\r\n        setUserExtensionsExtensionsTab={setProfileExtensions}\r\n        extensionsModalVisible={extensionsModalVisible}\r\n        setExtensionsModalVisible={setExtensionsModalVisible}\r\n        updateProfileInfo={changeSetting}\r\n        profileInfo={fullProfile}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useState } from 'react';\r\n\r\nimport { Mixed } from './mixed';\r\nimport ProfileBookmarksModal from '../../../../../features/modalsComponents/components/profile-bookmarks';\r\nimport {\r\n  useProfilesTableSelectedIds,\r\n} from '../../../../../state/profiles-table-selected-ids.atom';\r\n\r\nexport const MixedBookmarks: FC = (): JSX.Element => {\r\n  const selectedProfileIds = useProfilesTableSelectedIds();\r\n\r\n  const [isShowBookmarksManager, setIsShowBookmarksManager] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <div onClick={(): void => setIsShowBookmarksManager(true)}>\r\n        <Mixed colorText='var(--2B2B31-profile-new-settings)' />\r\n      </div>\r\n      <ProfileBookmarksModal\r\n        visible={isShowBookmarksManager}\r\n        onClose={(): void => setIsShowBookmarksManager(false)}\r\n        profilesIds={selectedProfileIds}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useState } from 'react';\r\n\r\nimport { Mixed } from './mixed';\r\nimport { ExtensionsModal } from '../../../../../features/modalsComponents/components/extensions-modal/extensions-modal';\r\nimport { IProfile } from '../../../../../interfaces';\r\nimport { useProfilesTableSelectedIds } from '../../../../../state/profiles-table-selected-ids.atom';\r\n\r\ninterface IMixedExtensions {\r\n  changeProfilesDataMany: (profileIds: string[], newProfilesData: Partial<IProfile>) => void;\r\n}\r\n\r\nexport const MixedExtensions: FC<IMixedExtensions> = (props): JSX.Element => {\r\n  const { changeProfilesDataMany } = props;\r\n\r\n  const selectedProfileIds = useProfilesTableSelectedIds();\r\n\r\n  const [extensionsModalVisible, setExtensionsModalVisible] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <div onClick={(): void => setExtensionsModalVisible(true)}>\r\n        <Mixed colorText='var(--2B2B31-profile-new-settings)' />\r\n      </div>\r\n      <ExtensionsModal\r\n        extensionsModalVisible={extensionsModalVisible}\r\n        setExtensionsModalVisible={setExtensionsModalVisible}\r\n        profileIds={selectedProfileIds}\r\n        updateProfileInfo={(newProfileData: Partial<IProfile>): void => changeProfilesDataMany(selectedProfileIds, newProfileData)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useState } from 'react';\r\n\r\nimport { Mixed } from './mixed';\r\nimport MultipleProxyManager from '../../../../../features/modalsComponents/components/multiple-proxy-manager';\r\n\r\nexport const MixedProxy: FC = (): JSX.Element => {\r\n  const [isShowProxyManager, setIsShowProxyManager] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <div onClick={(): void => setIsShowProxyManager(true)}>\r\n        <Mixed colorText='var(--2B2B31-profile-new-settings)' />\r\n      </div>\r\n      <MultipleProxyManager\r\n        onClose={(): void => setIsShowProxyManager(false)}\r\n        visible={isShowProxyManager}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nimport Collapse from './collapse';\r\nimport { DEFAULT_SECTIONS } from './default-sections';\r\nimport SectionHeader from './section-header';\r\nimport SettingRow from './setting-row';\r\nimport {\r\n  ANDROID_HARDWARE_SETTINGS,\r\n  HARDWARE_SETTINGS,\r\n} from './settings-lists';\r\nimport { settingsParam } from './settings-param';\r\nimport { useProfilesSettingsState } from '../../../../state/profiles-settings-atom';\r\nimport { ISections, ISettingsParam, SETTINGS_PARAM } from '../../interfaces';\r\n\r\nexport const SettingsSections: FC<ISettingsParam> = (props) => {\r\n  const { fullProfile } = props;\r\n\r\n  const { profileIds } = useProfilesSettingsState();\r\n  const isMultiProfilesSettings = profileIds.length > 1;\r\n\r\n  const [sections, setSections] = useState<ISections>(DEFAULT_SECTIONS);\r\n\r\n  const settings = settingsParam({ ...props, isMultiProfilesSettings });\r\n\r\n  useEffect(() => {\r\n    const sectionsTmp = { ...sections };\r\n    sectionsTmp.hardware.items = fullProfile.os === 'android' ? ANDROID_HARDWARE_SETTINGS : HARDWARE_SETTINGS;\r\n    setSections({ ...sections, ...sectionsTmp });\r\n  }, [fullProfile.os]);\r\n\r\n  const toggleSection = (sectionName: string): void => {\r\n    const sectionsTmp = { ...sections };\r\n    sectionsTmp[sectionName].isOpen = !sectionsTmp[sectionName].isOpen;\r\n    setSections({ ...sections, ...sectionsTmp });\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={(): null => null}>\r\n      {Object.entries(sections).map(([sectionId, section]) => (\r\n        <div key={sectionId}>\r\n          <SectionHeader\r\n            sectionId={sectionId}\r\n            section={section}\r\n            toggleSection={toggleSection}\r\n          />\r\n          <div>\r\n            <Droppable droppableId={sectionId} key={sectionId} isDropDisabled={sectionId !== 'pinned'}>\r\n              {(provided): JSX.Element => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  <Collapse isAlwaysOpen={sectionId === 'pinned'} isOpen={section.isOpen}>\r\n                    {section.items.map((setting, index) => (\r\n                      <SettingRow\r\n                        key={setting}\r\n                        settings={settings}\r\n                        setting={setting as typeof SETTINGS_PARAM[number]}\r\n                        sectionId={sectionId}\r\n                        index={index}\r\n                      />\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </Collapse>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </DragDropContext>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { zeroProfileBookmarks } from '../../../../../electron/constants/zero-profile-bookmarks';\r\nimport Notes from '../../../../features/quickProfiles/notes-cell/notes';\r\nimport { ISettingParam, ISettingsParamOpts } from '../../interfaces';\r\nimport {\r\n  ActiveSessionLock,\r\n  AudioContext,\r\n  BrowserBookmarkSaving,\r\n  BrowserHistorySaving,\r\n  BrowserPlugins,\r\n  Canvas,\r\n  Cookies,\r\n  CustomDns,\r\n  DeviceMemory,\r\n  ExtensionStorage,\r\n  ExternalExtensions,\r\n  Fingerprint,\r\n  FolderList,\r\n  Fonts,\r\n  Geolocation,\r\n  GoogleServices,\r\n  HardwareConcurrency,\r\n  Language,\r\n  LocalStorageAndIndexedDB,\r\n  MaxTouchPoints,\r\n  MediaDevices,\r\n  PasswordSaving,\r\n  ProfileName,\r\n  Proxy,\r\n  Resolution,\r\n  SessionSaving,\r\n  StartUrl,\r\n  Timezone,\r\n  UserAgent,\r\n  WebglMetadata,\r\n  WebRTCPublic,\r\n  WebglImage,\r\n  Bookmarks,\r\n  Extensions,\r\n  MixedProfileName,\r\n} from '../settings';\r\nimport { Mixed } from '../settings/mixed/mixed';\r\nimport { MixedBookmarks } from '../settings/mixed/mixed-bookmarks';\r\nimport { MixedExtensions } from '../settings/mixed/mixed-extensions';\r\nimport { MixedProxy } from '../settings/mixed/mixed-proxy';\r\n\r\nexport const settingsParam = (props: ISettingsParamOpts): ISettingParam => {\r\n  const {\r\n    fullProfile, changeSetting, saveProfileNotes, openFoldersModal,\r\n    cookiesLoading, showModalCookies, updateStateProfile,\r\n    isMultiProfilesSettings, updateProfileFingerprints, changeProfilesData, changeProfilesDataMany,\r\n  } = props;\r\n\r\n  const {\r\n    id: profileId, name: profileName, lockEnabled, audioContext, notes, defaultProps = {}, isAutoGenerated, navigator, proxy = {}, os,\r\n    geolocation, storage, timezone, googleServicesEnabled, plugins, canvas, dns, mediaDevices, webGLMetadata, webRTC, startUrl, webglParams,\r\n    fonts: profileFonts, folders, webGL, cookies = [], autoLang = true, bookmarks = zeroProfileBookmarks.roots,\r\n  } = fullProfile;\r\n\r\n  const isFreeOrTorProxy = ['gologin', 'tor'].includes(proxy.mode || '');\r\n\r\n  const propsProxyComponent = { localProxySelectorLocation: 'drawer' };\r\n  const propsProfileNameComponent = {\r\n    previousProfileName: profileName, changeSetting, defaultProps,\r\n    isAutoGenerated: !!isAutoGenerated, changeProfilesData, localSettingId: 'drawer',\r\n  };\r\n\r\n  const propsFolderListComponent = { profileFolders: folders || [], openFoldersModal };\r\n  const propsFingerprint = { resolution: navigator?.resolution, updateStateProfile, updateProfileFingerprints };\r\n\r\n  const propsNotes = {\r\n    notes, profileId, saveProfileNotes, location: 'profile-settings' as const,\r\n    isDefaultNotes: !!(isAutoGenerated && defaultProps?.profileNotesIsDefault),\r\n  };\r\n\r\n  const propsLanguage = {\r\n    changeSetting, profileLanguage: navigator?.language || '', proxyId: proxy.id || '', profileAutoLang: autoLang, profileId,\r\n    isFreeOrTorProxy,\r\n  };\r\n\r\n  const mixedParams = {\r\n    name: <MixedProfileName {...propsProfileNameComponent} />,\r\n    notes: <Mixed />,\r\n    folders: <FolderList {...propsFolderListComponent} />,\r\n    language: <Mixed />,\r\n    proxy: <MixedProxy />,\r\n    timezone: <Mixed />,\r\n    geolocation: <Mixed />,\r\n    fingerprint: <Fingerprint {...propsFingerprint} />,\r\n    cookies: <Mixed />,\r\n    useragent: <Mixed />,\r\n    activeSessionLock: <Mixed />,\r\n    sessionSaving: <Mixed />,\r\n    browserHistorySaving: <Mixed />,\r\n    browserBookmarkSaving: <Mixed />,\r\n    googleServices: <Mixed />,\r\n    passwordSaving: <Mixed />,\r\n    localStorageAndIndexedDB: <Mixed />,\r\n    browserPlugins: <Mixed />,\r\n    extensionStorage: <Mixed />,\r\n    externalExtensions: <Mixed />,\r\n    resolution: <Mixed />,\r\n    deviceMemory: <Mixed />,\r\n    hardwareConcurrency: <Mixed />,\r\n    canvas: <Mixed />,\r\n    maxTouchPoints: <Mixed />,\r\n    audioContext: <Mixed />,\r\n    fonts: <Mixed />,\r\n    mediaDevices: <Mixed />,\r\n    webglImage: <Mixed />,\r\n    webglMetadata: <Mixed />,\r\n    startUrl: <Mixed />,\r\n    customDns: <Mixed />,\r\n    webRTCPublic: <Mixed />,\r\n    bookmarks: <MixedBookmarks />,\r\n    extensions: <MixedExtensions\r\n      changeProfilesDataMany={changeProfilesDataMany}\r\n    />,\r\n  };\r\n\r\n  const params = {\r\n    name: <ProfileName {...propsProfileNameComponent} />,\r\n    notes: <Notes {...propsNotes} />,\r\n    folders: <FolderList {...propsFolderListComponent} />,\r\n    language: <Language {...propsLanguage} />,\r\n    proxy: <Proxy {...propsProxyComponent} />,\r\n    timezone: <Timezone {...{ timezone, changeSetting, proxy }} />,\r\n    geolocation: <Geolocation {...{ profileGeolocation: geolocation, changeSetting, proxy, isFreeOrTorProxy }} />,\r\n    fingerprint: <Fingerprint {...propsFingerprint} />,\r\n    cookies: <Cookies {...{ cookiesLoading, cookies, showModalCookies }} />,\r\n    useragent: <UserAgent {...{ changeSetting, profileUserAgent: navigator?.userAgent }} />,\r\n    activeSessionLock: <ActiveSessionLock {...{ lockEnabled, changeSetting }} />,\r\n    sessionSaving: <SessionSaving {...{ changeSetting, session: !!storage.session }} />,\r\n    browserHistorySaving: <BrowserHistorySaving {...{ changeSetting, history: !!storage.history }} />,\r\n    browserBookmarkSaving: <BrowserBookmarkSaving {...{ changeSetting, bookmarks: !!storage.bookmarks }} />,\r\n    googleServices: <GoogleServices {...{ googleServicesEnabled, changeSetting }} />,\r\n    passwordSaving: <PasswordSaving {...{ changeSetting, passwords: !!storage.passwords }} />,\r\n    localStorageAndIndexedDB: <LocalStorageAndIndexedDB {...{ changeSetting, indexedDb: !!storage.indexedDb, local: !!storage.local }} />,\r\n    browserPlugins: <BrowserPlugins {...{ enableVulnerable: plugins.enableVulnerable, changeSetting }} />,\r\n    extensionStorage: <ExtensionStorage {...{ changeSetting, extensions: !!storage.extensions }} />,\r\n    externalExtensions: <ExternalExtensions {...{ changeSetting, enableExternalExtensions: !!storage.enableExternalExtensions }} />,\r\n    resolution: <Resolution {...{ changeSetting, selectedResolution: navigator?.resolution, isAndroidProfile: os === 'android' }} />,\r\n    deviceMemory: <DeviceMemory {...{ changeSetting, deviceMemory: navigator?.deviceMemory || 1 }} />,\r\n    hardwareConcurrency: <HardwareConcurrency {...{ changeSetting, hardwareConcurrency: navigator?.hardwareConcurrency || 2 }} />,\r\n    canvas: <Canvas {...{ mode: canvas.mode, changeSetting }} />,\r\n    maxTouchPoints: <MaxTouchPoints {...{ changeSetting, maxTouchPoints: navigator?.maxTouchPoints || 1 }} />,\r\n    audioContext: <AudioContext {...{ mode: audioContext.mode, changeSetting }} />,\r\n    fonts: <Fonts {...{ changeSetting, os, profileFonts }} />,\r\n    mediaDevices: <MediaDevices {...{ profileMediaDevices: mediaDevices, changeSetting }} />,\r\n    webglImage: <WebglImage {...{ mode: webGL.mode || 'off' , changeSetting }} />,\r\n    webglMetadata: <WebglMetadata {...{ webGLMetadata, changeSetting, webglParams }} />,\r\n    startUrl: <StartUrl {...{ startUrl, changeSetting }} />,\r\n    customDns: <CustomDns {...{ dns, changeSetting }} />,\r\n    webRTCPublic: <WebRTCPublic {...{ webRTCMode: webRTC.enable, changeSetting }} />,\r\n    bookmarks: <Bookmarks {...{ bookmarks, profileId, changeSetting }} />,\r\n    extensions: <Extensions {...{ changeSetting, updateStateProfile, fullProfile }} />,\r\n  };\r\n\r\n  return isMultiProfilesSettings ? mixedParams : params;\r\n};\r\n","import { IFullProfile, IProfile } from '../../../../interfaces';\r\nimport { DEFAULT_PROFILE_DATA } from '../../../../utils/default-profile-data';\r\nimport { requestShortCookies } from '../../../common/api';\r\nimport { requestFullProfileInfo } from '../../api';\r\n\r\ninterface IGetProfileInfo {\r\n  profileData: IProfile|IFullProfile;\r\n  updateProfile: (data: IFullProfile) => void;\r\n  setCookiesLoading: (state: boolean) => void;\r\n}\r\n\r\nexport const getProfileInfo = async (props: IGetProfileInfo): Promise<void> => {\r\n  const { profileData, updateProfile, setCookiesLoading } = props;\r\n  if (!Object.prototype.hasOwnProperty.call(profileData, 'cookies')) {\r\n    setCookiesLoading(true);\r\n  }\r\n\r\n  const promises = [\r\n    requestFullProfileInfo(profileData.id),\r\n    requestShortCookies(profileData.id),\r\n  ];\r\n\r\n  const [fingerprint, cookies] = await Promise.all(promises);\r\n  const {\r\n    geolocation = DEFAULT_PROFILE_DATA.geolocation,\r\n    webRTC = DEFAULT_PROFILE_DATA.webRTC,\r\n  } = fingerprint;\r\n\r\n  updateProfile({\r\n    ...DEFAULT_PROFILE_DATA,\r\n    ...profileData,\r\n    ...fingerprint,\r\n    folders: profileData.folders || [],\r\n    geolocation: {\r\n      ...profileData.geolocation,\r\n      ...geolocation,\r\n    },\r\n    webRTC,\r\n    cookies,\r\n    isFullProfile: true,\r\n  });\r\n\r\n  setCookiesLoading(false);\r\n};\r\n","import { atom, getDefaultStore, useAtomValue } from 'jotai/index';\r\n\r\nimport { IFullProfile } from '../interfaces';\r\nimport { DEFAULT_PROFILE_DATA } from '../utils/default-profile-data';\r\n\r\nconst fullProfileAtom = atom<IFullProfile>({ ...DEFAULT_PROFILE_DATA });\r\n\r\nexport const useProfileSettingsFullProfile = (): IFullProfile => useAtomValue(fullProfileAtom);\r\nexport const getProfileSettingsFullProfile = (): IFullProfile => getDefaultStore().get(fullProfileAtom);\r\nexport const setProfileSettingsFullProfile = (newFullProfile: IFullProfile): void => getDefaultStore().set(fullProfileAtom, newFullProfile);\r\n","import React, { FC, useCallback, useContext, useEffect, useState } from 'react';\r\n\r\nimport { SettingsSections } from './sections-group';\r\nimport { buildProfile } from './utils/build-profile';\r\nimport { getProfileInfo } from './utils/get-profile';\r\nimport {\r\n  IFullProfile,\r\n  IProfile,\r\n} from '../../../interfaces';\r\nimport { profilesContext } from '../../../state';\r\nimport {\r\n  getProfileSettingsFullProfile,\r\n  setProfileSettingsFullProfile,\r\n  useProfileSettingsFullProfile,\r\n} from '../../../state/profile-settings-full-profile.atom';\r\nimport { mapAndSetProfilesList, useProfilesList } from '../../../state/profiles-list.atom';\r\nimport { useProfilesSettingsState } from '../../../state/profiles-settings-atom';\r\nimport { IProfileDrawer } from '../../drawer/interfaces';\r\nimport { updateProfile } from '../../updateProfile/api';\r\nimport { ContentContainer, SettingsSectionsContainer } from '../styles';\r\n\r\ninterface IProfileSettingsContent extends IProfileDrawer {\r\n  profileData: IProfile;\r\n  showModalCookies: () => void;\r\n}\r\n\r\nconst ProfileSettingsContent: FC<IProfileSettingsContent> = (props) => {\r\n  const { profileData } = props;\r\n\r\n  const profilesList = useProfilesList();\r\n  const fullProfile = useProfileSettingsFullProfile();\r\n\r\n  const { profileIds } = useProfilesSettingsState();\r\n  const isMultiProfilesSettings = profileIds.length > 1;\r\n\r\n  const [cookiesLoading, setCookiesLoading] = useState<boolean>(false);\r\n\r\n  const { refreshFullProfile, getProfile, updateFullProfilesMap } = useContext(profilesContext);\r\n  const currentProfile = getProfile(profileData.id);\r\n\r\n  const changeSetting = useCallback((newData: Partial<IFullProfile>): void => {\r\n    updateProfileData(newData);\r\n    saveProfileData(buildProfile(fullProfile, newData));\r\n  }, [fullProfile]);\r\n\r\n  useEffect(() => {\r\n    if (!(profileData.id && currentProfile)) {\r\n      return;\r\n    }\r\n\r\n    getProfileInfo({\r\n      profileData: currentProfile,\r\n      updateProfile: refreshFullProfile,\r\n      setCookiesLoading,\r\n    });\r\n  }, [profileData.id, isMultiProfilesSettings]);\r\n\r\n  useEffect(() => {\r\n    if (!currentProfile) {\r\n      return;\r\n    }\r\n\r\n    setProfileSettingsFullProfile(currentProfile);\r\n  }, [currentProfile]);\r\n\r\n  useEffect(() => {\r\n    const profileSettingsFullProfile = getProfileSettingsFullProfile();\r\n    const newProfile = buildProfile(profileSettingsFullProfile, profileData);\r\n    updateFullProfilesMap([newProfile]);\r\n    setProfileSettingsFullProfile(newProfile);\r\n  }, [profileData]);\r\n\r\n  const updateProfileData = (newData: Partial<IFullProfile>): void => {\r\n    const profileSettingsFullProfile = getProfileSettingsFullProfile();\r\n    mapAndSetProfilesList(profiles => {\r\n      const newProfiles = profiles.map(profile => {\r\n        if (profile.id === profileSettingsFullProfile.id) {\r\n          return buildProfile(profileSettingsFullProfile, newData);\r\n        }\r\n\r\n        return profile;\r\n      });\r\n\r\n      updateFullProfilesMap(newProfiles);\r\n\r\n      return newProfiles;\r\n    });\r\n  };\r\n\r\n  const saveProfileData = async (updatedProfile: IFullProfile): Promise<void> => {\r\n    const profileSettingsFullProfile = getProfileSettingsFullProfile();\r\n    await updateProfile({ profileId: profileSettingsFullProfile.id, profileData: updatedProfile });\r\n  };\r\n\r\n  return (\r\n    <ContentContainer>\r\n      <SettingsSectionsContainer>\r\n        <SettingsSections\r\n          {...props}\r\n          profilesList={profilesList}\r\n          fullProfile={fullProfile}\r\n          changeSetting={changeSetting}\r\n          cookiesLoading={cookiesLoading}\r\n          updateStateProfile={updateProfileData}\r\n        />\r\n      </SettingsSectionsContainer>\r\n    </ContentContainer>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsContent;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const HeaderContainer = styled('div')`\r\n  padding: 20px 24px 20px 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: var(--F9F9F9-profile-new-settings-header);\r\n  z-index: 101;\r\n  position: sticky;\r\n  top: 0;\r\n`;\r\n\r\nexport const HeaderButtonsContainer = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  * + * {\r\n    margin-left: 12px;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\n\r\nimport { HeaderButtonsContainer, HeaderContainer } from './styles';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { IProfileRunStatus } from '../../../state/profiles-list.atom';\r\nimport HeaderRightPart from '../../../ui/gologin-header/header-right-part';\r\nimport { IconDoubleArrow } from '../../../ui/gologin-header/icons';\r\nimport { useProfileRunStatus } from '../../../state/profile-run-statuses.atom';\r\n\r\ninterface IProfileSettingsHeader {\r\n  profile: IProfile;\r\n  changeVisibility: () => void;\r\n  renderDropDownMenu: (rowInfo: IProfile & IProfileRunStatus, isInDrawer?: boolean) => JSX.Element|null;\r\n}\r\n\r\nconst ProfileSettingsHeader: FC<IProfileSettingsHeader> = (props) => {\r\n  const { profile, changeVisibility, renderDropDownMenu } = props;\r\n\r\n  const profileRunStatus = useProfileRunStatus(profile?.id);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderButtonsContainer>\r\n        <IconDoubleArrow\r\n          onClick={changeVisibility}\r\n          iconColor='var(--767676-profile-new-settings-header)'\r\n          iconHoveredColor='var(--2B2B31-profile-new-settings-header)'\r\n          padding={0}\r\n        />\r\n        <div style={{ marginLeft: 22 }}>\r\n          {renderDropDownMenu({ ...profile, ...profileRunStatus }, true)}\r\n        </div>\r\n      </HeaderButtonsContainer>\r\n      <HeaderRightPart />\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsHeader;\r\n","import React, { FC, useEffect } from 'react';\r\n\r\nimport ProfileSettingsContent from './content/profile-settings-content';\r\nimport ProfileSettingsHeader from './profile-settings-header';\r\nimport { ProfileSettingsDrawer } from './styles';\r\nimport { IProfile } from '../../interfaces';\r\nimport {\r\n  closeProfilesSettings,\r\n  useIsProfilesSettingsOpen,\r\n  useProfilesSettingsProfile,\r\n  useProfilesSettingsState,\r\n} from '../../state/profiles-settings-atom';\r\nimport { useCurrentTheme } from '../../state/theme.atom';\r\nimport getSelectedThemeColor from '../../utils/get-selected-theme-color';\r\nimport { IProfileDrawer } from '../drawer/interfaces';\r\nimport PageOverlay from '../quickProfiles/components/page-overlay';\r\n\r\nconst isElectron = !!window.require;\r\nlet ipcRenderer: Electron.IpcRenderer;\r\nif (isElectron) {\r\n  ipcRenderer = window.require('electron').ipcRenderer;\r\n}\r\n\r\nconst ProfileSettings: FC<IProfileDrawer> = props => {\r\n  const { renderDropDownMenu, toggleCookiesListModal } = props;\r\n\r\n  // FIXME: consistent nullable type of profileInfo across profile settings\r\n  const profileInfo = useProfilesSettingsProfile() || ({} as IProfile);\r\n\r\n  const isProfilesSettingsOpen = useIsProfilesSettingsOpen();\r\n  const { profileIds } = useProfilesSettingsState();\r\n  const isMultiProfilesSettings = profileIds.length > 1;\r\n\r\n  const theme = useCurrentTheme();\r\n\r\n  const { id: profileId, name: profileName } = profileInfo;\r\n  const isDarkTheme = getSelectedThemeColor(theme) === 'dark';\r\n  const isShowDrawer = profileId || isMultiProfilesSettings;\r\n\r\n  useEffect(() => {\r\n    if (isShowDrawer) {\r\n\r\n      return;\r\n    }\r\n\r\n    closeProfilesSettings();\r\n  }, [profileId, isMultiProfilesSettings]);\r\n\r\n  return (\r\n    <div onClick={(event): void => event.stopPropagation()}>\r\n      <ProfileSettingsDrawer\r\n        bodyStyle={{ padding: 0 }}\r\n        visible={isProfilesSettingsOpen}\r\n        placement='right'\r\n        maskStyle={{ backgroundColor: 'inherit' }}\r\n        mask={false}\r\n        onClose={closeProfilesSettings}\r\n        width={505}\r\n        closable={false}\r\n        drawerStyle={{\r\n          backgroundColor: 'var(--F9F9F9-profile-new-settings)',\r\n        }}\r\n        isDarkTheme={isDarkTheme}\r\n      >\r\n        <ProfileSettingsHeader\r\n          profile={profileInfo}\r\n          changeVisibility={closeProfilesSettings}\r\n          renderDropDownMenu={renderDropDownMenu}\r\n        />\r\n        <ProfileSettingsContent\r\n          profileData={profileInfo}\r\n          showModalCookies={(): void => toggleCookiesListModal({ visible: true, id: profileId, name: profileName })}\r\n          selectedProfilesIds={profileIds}\r\n          {...props}\r\n        />\r\n        <PageOverlay position='absolute' />\r\n      </ProfileSettingsDrawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSettings;\r\n","/* eslint-disable max-lines */\r\nimport { css } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\nimport { Button, Drawer, Icon, Input, message, Tooltip } from 'antd';\r\nimport React, { FC, useContext, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport DrawerBackdrop from './drawer-backdrop';\r\nimport { DrawerGeolocation } from './drawer-geolocation';\r\nimport DrawerHeaderButtons from './drawer-header-buttons';\r\nimport { DrawerLanguage } from './drawer-language';\r\nimport { DrawerProxy } from './drawer-proxy';\r\nimport { DrawerTimezone } from './drawer-timezone';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { checkDoesLangExist, locales } from '../../../../common/locales';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { tagsContext, templatesContext } from '../../../state';\r\nimport { refreshLocalUserDevice, useLocalUserDevice } from '../../../state/local-user-device.atom';\r\nimport { mapAndSetProfilesList } from '../../../state/profiles-list.atom';\r\nimport { closeProfilesSettings, useIsProfilesSettingsOpen, useProfilesSettingsProfile } from '../../../state/profiles-settings-atom';\r\nimport { useProxyList } from '../../../state/proxy-list.atom';\r\nimport { closeProxyManager, useProxyManagerState } from '../../../state/proxy-manager-modal-status.atom';\r\nimport IconClose from '../../../ui/icons/IconClose';\r\nimport IconRemoveFolderFromRow from '../../../ui/icons/IconRemoveFolderFromRow';\r\nimport { closeCloudBrowserUrlInSingleTab } from '../../../utils/cloud-browser';\r\nimport { proxyFromClipboard } from '../../../utils/proxy-string';\r\nimport { parseTranslatedKey } from '../../../utils/translation.utils';\r\nimport { sendActionAnalytics, requestShortCookies, startContainer, stopContainer } from '../../common/api';\r\nimport { getLanguageByBasedIp } from '../../common/get-data-by-based-ip';\r\nimport { randomWords } from '../../common/randomizer';\r\nimport ResolutionManager from '../../common/resolution-manager';\r\nimport timezones from '../../common/timezones';\r\nimport CookiesList from '../../modalsComponents/components/cookies-manager/cookies-list';\r\nimport LocalesManager from '../../modalsComponents/components/locales-manager';\r\nimport ProfileSettings from '../../profile-settings';\r\nimport ProxySelector from '../../proxy/proxy-selector';\r\nimport Notes from '../../quickProfiles/notes-cell/notes';\r\nimport {\r\n  fetchPatchProfileLanguage,\r\n  refreshFingerprintRequest,\r\n  updateProfileName,\r\n  updateProfileProxy as updateProfileProxyRequest,\r\n  updateProfileResolution,\r\n} from '../api';\r\nimport { IProfileDrawer } from '../interfaces';\r\nimport { upsertProfileRunStatuses } from '../../../state/profile-run-statuses.atom';\r\n\r\nconst DrawerProfileHeader = styled('div')<{ newStyle: boolean }>`\r\n  margin: ${props => props.newStyle ? '20px 0 12px 25px' : '20px 0 20px 25px'};\r\n`;\r\n\r\nconst DrawerProfileName = styled('div')<{ newStyle: boolean }>`\r\n  display: flex;\r\n  font-weight: 500;\r\n  margin-bottom: ${props => props.newStyle ? '9px' : '17px'};\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  color: var(--000000);\r\n  width: 390px;\r\n  max-height: 100px;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border: 1px dashed transparent;\r\n  margin-left: -6px;\r\n  white-space: normal;\r\n  overflow-wrap: anywhere;\r\n  overflow: hidden;\r\n\r\n  :hover {\r\n    border: 1px dashed var(--CDCDCD);\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst DrawerDotsIcon = styled('div')`\r\n  position: absolute;\r\n  top: 4px;\r\n  right: 7px;\r\n`;\r\n\r\nconst DrawerDotsButton = styled('button')`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  height: 25px;\r\n  min-width: 31px;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: transparent;\r\n  color: var(--828282);\r\n  margin-left: 9px;\r\n  transform: rotate(-90deg);\r\n  margin-bottom: 1px;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nconst DrawerCancel = styled('div')<{ newStyle: boolean }>`\r\n  width: 24px;\r\n  height: 24px;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  opacity: 0.7;\r\n  right: ${props => props.newStyle ? '37px' : '23px'};\r\n  top: 28px;\r\n`;\r\n\r\nconst DrawerProfileBody = styled('div')`\r\n  padding: 0;\r\n`;\r\n\r\nconst ArrowDrawer = styled('div')`\r\n  position: absolute;\r\n  right: 21px;\r\n  top: 47%;\r\n  border: solid var(--01AD7F);\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  padding: 3px;\r\n  transform: rotate(-45deg);\r\n  opacity: 0;\r\n`;\r\n\r\nconst ContainerFolderList = styled('div')`\r\n  width: 260px;\r\n  lineHeight: 24px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: 12px;\r\n  color: var(--000000);\r\n  font-weight: 400;\r\n`;\r\n\r\nconst ContainerParams = styled('div')`\r\n  position: relative;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: var(--F9F9F9);\r\n  }\r\n  &:hover div {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst ContainerParamsNote = styled('div')`\r\n  padding-top: 20px;\r\n  padding-bottom: 9px;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst ContainerParamsFingerprint = styled('div')`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: baseline;\r\n  padding-top: 25px;\r\n`;\r\n\r\nconst DrawerNameParams = styled('span')`\r\n  width: 80px;\r\n  align-items: center;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000);\r\n  opacity: 0.5;\r\n  margin-left: 25px;\r\n`;\r\n\r\nconst DrawerParams = styled('span')`\r\n  font-weight: 500;\r\n  width: 330px;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000);\r\n  margin-left: 2px;\r\n  letter-spacing: 0.25px;\r\n`;\r\n\r\nconst DrawerProxyParams = styled('span')`\r\n  font-weight: 500;\r\n  width: 327px;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  color: var(--000000);\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 2px;\r\n  height: 59px;\r\n  position: relative;\r\n`;\r\n\r\nconst DrawerLanguageParams = styled('span')`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 230px;\r\n  font-size: 12px;\r\n  color: var(--000000);\r\n  font-weight: 500;\r\n  margin-left: 1px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst DrawerLanguageParamsRegion = styled('span')`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000);\r\n`;\r\n\r\nconst DrawerLanguageParamsDomain = styled('span')`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--848484);\r\n  margin-left: 5px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst DrawerCookiesParams = styled('span')`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 290px;\r\n  font-size: 12px;\r\n  color: var(--000000);\r\n  font-weight: 500;\r\n  margin-left: 1px;\r\n`;\r\n\r\nconst NoCookiesSpan = styled('span')`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000);\r\n  opacity: 0.5;\r\n  border-bottom: 1px dashed var(--7E7E7E);\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst DrawerCookiesParamUrl = styled('span')`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000);\r\n`;\r\n\r\nconst DrawerCookiesParamCount = styled('span')`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--848484);\r\n  margin-left: 4px;\r\n  margin-right: 11px;\r\n`;\r\n\r\nconst DrawerFolderName = styled('span')`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000);\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  margin-left: 40px;\r\n`;\r\n\r\nconst DrawerRemoveProfileFromFolder = styled('span')`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  margin-top: 2px;\r\n  margin-left: 6px;\r\n`;\r\n\r\nconst FingerprintText = styled('div')`\r\n  position: absolute;\r\n  left: 106px;\r\n  top: 57px;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  color: var(--7E7E7E);\r\n  width: 328px;\r\n`;\r\n\r\nconst DrawerDivider = styled('div')`\r\n  border-top: 1px solid var(--E8E8E8);\r\n`;\r\n\r\nconst ResultFingerprint = styled('span')<{ isFingerprintResult: boolean | undefined }>`\r\n  color: var(--00A987);\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  margin-left: 142px;\r\n  transition: 0.3s;\r\n  ${props =>\r\n    css`\r\n      opacity: ${props.isFingerprintResult === true ? 1 : 0};\r\n    `}\r\n`;\r\n\r\nconst ButtonFingerprint = styled(Button)<{ isFingerprintRefreshing: boolean | undefined }>`\r\n  position: absolute;\r\n  left: 106px;\r\n  top: 20px;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n  height: 25px;\r\n  min-width: 54px;\r\n  outline: none;\r\n  border: 1px solid var(--828282);\r\n  border-radius: 4px;\r\n  background-color: var(--FFFFFF);\r\n  color: var(--828282);\r\n  padding: 6px 12px 5px 11px;\r\n  margin-bottom: 11px;\r\n  :hover {\r\n    background-color: var(--00A987);\r\n    border-color: var(--00A987);\r\n    color: var(--FFFFFF);\r\n    transition: 0.3s;\r\n  }\r\n  ${props =>\r\n    css`\r\n      background-color: ${props.isFingerprintRefreshing ? 'var(--00A987)' : 'var(--FFFFFF)'};\r\n      border-color: ${props.isFingerprintRefreshing ? 'var(--00A987)' : 'var(--828282)'};\r\n      color: ${props.isFingerprintRefreshing ? 'var(--00A987)' : 'var(--828282)'};\r\n    `}\r\n`;\r\n\r\nconst ButtonLine = styled('span')`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: var(--000000);\r\n  opacity: 0.5;\r\n  border-bottom: 1px dashed var(--7E7E7E);\r\n  cursor: pointer;\r\n  margin-left: 2px;\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst DrawerContainerProfileName = styled('div')`\r\n  display: flex;\r\n  font-weight: 500;\r\n  margin-bottom: 22px;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  color: var(--000000);\r\n  width: 400px;\r\n`;\r\n\r\nconst AreaProfileName = styled(Input.TextArea)`\r\n  width: 392px;\r\n  font-size: 20px;\r\n  color: var(--000000);\r\n  font-weight: 500;\r\n  padding: 5px 7px 7px 7px;\r\n  box-shadow: none;\r\n  resize: none;\r\n\r\n  :focus {\r\n    outline: none !important;\r\n    border: 1px solid var(--CDCDCD);\r\n    box-shadow: none;\r\n    line-height: 24px;\r\n    padding: 5px 7px 7px 7px;\r\n  }\r\n\r\n  :hover {\r\n    outline: none !important;\r\n    border: 1px solid var(--CDCDCD);\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst ButtonRun = styled(Button)<{ width: number }>`\r\n  background: var(--FFFFFF);\r\n  border: 0.6px solid var(--00B86D);\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  white-space: nowrap;\r\n  padding-top: 2px;\r\n  font-size: 12px;\r\n  line-height: 13px;\r\n  color: var(--00B86D);\r\n  height: 25px;\r\n  cursor: pointer;\r\n  ${props =>\r\n    css`\r\n    width: ${props.width}px;\r\n  `}\r\n\r\n  :hover {\r\n    background: var(--00B86D);\r\n    color: var(--FFFFFF);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nconst isElectron = !!window.require;\r\nlet ipcRenderer: Electron.IpcRenderer;\r\nif (isElectron) {\r\n  ipcRenderer = window.require('electron').ipcRenderer;\r\n}\r\n\r\nlet PROFILE_NAME = '';\r\nlet PROFILE_NOTES = '';\r\nlet FINGERPRINT_REFRESH_TIMEOUT: any;\r\n\r\nconst PROXY_MODES = {\r\n  tor: 'TOR Proxy',\r\n  gologin: 'FREE Proxy',\r\n  http: 'HTTP Proxy',\r\n  socks4: 'Socks4 Proxy',\r\n  socks5: 'Socks5 Proxy',\r\n  none: 'None',\r\n  geolocation: 'Geolocation',\r\n};\r\n\r\nconst ProfileDrawer: FC<IProfileDrawer> = (props) => {\r\n  const profileInfo = useProfilesSettingsProfile();\r\n  const profileData = profileInfo || {} as Partial<IProfile>;\r\n\r\n  const isProfileDrawerOpen = useIsProfilesSettingsOpen();\r\n  const localUserDevice = useLocalUserDevice();\r\n  const { languages: realLocalLanguages = '', country: realLocalCountry = '' } = localUserDevice;\r\n\r\n  const [profileDrawerProxyVisible, setProfileDrawerProxyVisible] = useState<boolean>(false);\r\n  const [profileDrawerLanguageVisible, setProfileDrawerLanguageVisible] = useState<boolean>(false);\r\n  const [profileDrawerTimezoneVisible, setProfileDrawerTimezoneVisible] = useState<boolean>(false);\r\n  const [profileDrawerGeolocationVisible, setProfileDrawerGeolocationVisible] = useState<boolean>(false);\r\n  const [notes, setNotes] = useState<boolean>(false);\r\n  const [changeProfileName, setChangeProfileName] = useState<boolean>(false);\r\n  const [cookies, setCookies] = useState<any>([]);\r\n  const [cookiesLoading, setCookiesLoading] = useState<boolean>(true);\r\n  const [isFingerprintRefreshing, setIsFingerprintRefreshing] = useState<boolean>(false);\r\n  const [isFingerprintResult, setIsFingerprintResult] = useState<boolean>(false);\r\n  const [isCookiesListModalVisible, setIsCookiesListModalVisible] = useState<boolean>(false);\r\n  const [proxyManagerVisible, setProxyManagerVisible] = useState<boolean>(false);\r\n  const [isLocalesManagerVisible, setIsLocalesManagerVisible] = useState<boolean>(false);\r\n  const [isResolutionEditOpen, setIsResolutionEditOpen] = useState<boolean>(false);\r\n  const [languagesBasedOnIp, setLanguagesBasedOnIp] = useState<string>('');\r\n\r\n  const proxyList = useProxyList();\r\n\r\n  const { selectedTemplate } = useContext(templatesContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const { proxy: profileProxy = { id: '', mode: 'none' } } = profileData;\r\n  const proxyProfileFromCtx = proxyList.find(proxyFromList => proxyFromList._id === profileProxy.id);\r\n  const isFreeOrTorProxy = ['gologin', 'tor'].includes(profileProxy.mode || '');\r\n\r\n  const requestCookiesProfile = async (): Promise<void> => {\r\n    const cookiesData = await requestShortCookies(profileData.id);\r\n    setCookies(cookiesData);\r\n    setCookiesLoading(false);\r\n  };\r\n\r\n  const setVariables = (): void => {\r\n    PROFILE_NAME = profileData?.name || '';\r\n    PROFILE_NOTES = profileData?.notes || '';\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (NEW_FEATURES.drawer) {\r\n      return;\r\n    }\r\n\r\n    if (!profileData.id) {\r\n      closeProfilesSettings();\r\n    }\r\n\r\n    PROXY_MODES.none = translation('base.none');\r\n\r\n    if (changeProfileName) {\r\n      const profileNameElement = document.getElementById('profileNameId') as HTMLInputElement;\r\n      profileNameElement?.setSelectionRange && profileNameElement?.setSelectionRange(PROFILE_NAME.length, PROFILE_NAME.length);\r\n    }\r\n\r\n    if (notes) {\r\n      const noteElement = document.getElementById('noteId');\r\n      const range = document.createRange();\r\n      const sel = window.getSelection();\r\n\r\n      if (PROFILE_NOTES) {\r\n        range.setStart((noteElement as any).childNodes[0], 0);\r\n        range.setEnd((noteElement as any).childNodes[0], PROFILE_NOTES.length);\r\n        (sel as any).removeAllRanges();\r\n        (sel as any).addRange(range);\r\n      } else {\r\n        (noteElement as any).focus();\r\n      }\r\n    }\r\n  }, [profileData?.id, notes, changeProfileName]);\r\n\r\n  useEffect(() => {\r\n    if (NEW_FEATURES.drawer || !profileData?.id) {\r\n      return;\r\n    }\r\n\r\n    setCookiesLoading(true);\r\n    setCookies([]);\r\n    requestCookiesProfile();\r\n    setVariables();\r\n  }, [profileData?.id]);\r\n\r\n  const getData = async (): Promise<void> => {\r\n    let languagesByBasedIp = translation('quickSettings.parameters.automatic');\r\n    if (!isFreeOrTorProxy) {\r\n      languagesByBasedIp = getLanguageByBasedIp({\r\n        proxyFromCtx: proxyProfileFromCtx,\r\n        realLocalLanguages,\r\n        realLocalCountry,\r\n      });\r\n    }\r\n\r\n    setLanguagesBasedOnIp(languagesByBasedIp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    refreshLocalUserDevice();\r\n  }, [profileData.proxy, profileData.id, proxyProfileFromCtx, isFreeOrTorProxy]);\r\n\r\n  if (NEW_FEATURES.drawer) {\r\n    return <ProfileSettings {...props} />;\r\n  }\r\n\r\n  const setPasteProxy = async () => {\r\n    const pastedProxy = await proxyFromClipboard();\r\n\r\n    sendActionAnalytics('pasted proxy from buffer');\r\n\r\n    if (!pastedProxy) {\r\n      message.error(translation('notifications.error.invalidProxy'));\r\n\r\n      return;\r\n    }\r\n\r\n    const proxyObj = {\r\n      ...pastedProxy,\r\n      port: +pastedProxy.port,\r\n      autoProxyRegion: 'us',\r\n      torProxyRegion: 'us',\r\n      id: profileData.id,\r\n    };\r\n\r\n    updateProfileProxy(profileData.id, proxyObj);\r\n    updateProfileProxyRequest(proxyObj);\r\n\r\n    return proxyObj;\r\n  };\r\n\r\n  const FingerprintResult = () => (\r\n    <ResultFingerprint isFingerprintResult={isFingerprintResult}>\r\n      <Icon type='check' style={{ paddingLeft: 10, fontSize: 9, position: 'relative', bottom: 2 }} />\r\n      {' '}\r\n      {translation('quickSettings.refreshFingerprint.successText')}\r\n    </ResultFingerprint>\r\n  );\r\n\r\n  const refreshFingerprint = async () => {\r\n    try {\r\n      if (FINGERPRINT_REFRESH_TIMEOUT !== undefined) {\r\n        clearTimeout(FINGERPRINT_REFRESH_TIMEOUT);\r\n      }\r\n\r\n      setIsFingerprintRefreshing(true);\r\n      const [profileInfo] = await refreshFingerprintRequest(profileData?.id, selectedTemplate.id);\r\n      updateProfileData(profileData?.id, profileInfo);\r\n    } finally {\r\n      setIsFingerprintRefreshing(false);\r\n      setIsFingerprintResult(true);\r\n\r\n      // Set notification timeout\r\n      FINGERPRINT_REFRESH_TIMEOUT = setTimeout(() => setIsFingerprintResult(false), 1000);\r\n    }\r\n  };\r\n\r\n  const saveProfileName = async () => {\r\n    const name = PROFILE_NAME.trim().replace(/\\s{2,}/g, ' ') || randomWords();\r\n    updateProfileName({\r\n      id: profileData.id,\r\n      name,\r\n    });\r\n\r\n    mapAndSetProfilesList(profiles => profiles.map(profile => {\r\n      if (profile?.id === profileData?.id) {\r\n        return {\r\n          ...profile,\r\n          name,\r\n          defaultProps: {\r\n            ...profile?.defaultProps,\r\n            profileNameIsDefault: false,\r\n          },\r\n        };\r\n      }\r\n\r\n      return profile;\r\n    }));\r\n  };\r\n\r\n  const updateProfileData = (id: string, currentProfileData: any) => {\r\n    mapAndSetProfilesList(profiles => profiles.map((profile) => {\r\n      if (profile?.id === id) {\r\n        return {\r\n          ...profile,\r\n          ...currentProfileData,\r\n        };\r\n      }\r\n\r\n      return profile;\r\n    }));\r\n  };\r\n\r\n  const updateProfileProxy = (id: string, proxy: any) => {\r\n    mapAndSetProfilesList(profiles => profiles.map((profile) => {\r\n      if (profile?.id === id) {\r\n        return {\r\n          ...profile,\r\n          proxy,\r\n          proxyEnabled: proxy.mode !== 'none',\r\n          proxyType: proxy.mode === 'none' ? '-' : proxy.mode,\r\n          proxyRegion:\r\n            (proxy.mode === 'gologin' && (proxy.autoProxyRegion || 'US'))\r\n            || (proxy.mode === 'tor' && (proxy.torProxyRegion || 'US')),\r\n        };\r\n      }\r\n\r\n      return profile;\r\n    }));\r\n  };\r\n\r\n  const changeProfileResolution = async (resolution: string) => {\r\n    await updateProfileResolution(profileData.id, resolution);\r\n    mapAndSetProfilesList(profiles => profiles.map(profile => {\r\n      if (profile?.id !== profileData?.id) {\r\n        return profile;\r\n      }\r\n\r\n      return {\r\n        ...profile,\r\n        navigator: {\r\n          ...profile?.navigator,\r\n          resolution,\r\n        },\r\n      };\r\n    }));\r\n\r\n    setIsResolutionEditOpen(false);\r\n  };\r\n\r\n  const setProfileNavigatorLanguage = (save: boolean, autoLang = true, language = ''): void => {\r\n    setIsLocalesManagerVisible(false);\r\n\r\n    if (!(save && language)) {\r\n      return;\r\n    }\r\n\r\n    fetchPatchProfileLanguage(profileData.id, language, autoLang);\r\n\r\n    mapAndSetProfilesList(profiles => profiles.map((profile) => {\r\n      if (profile?.id === profileData?.id) {\r\n        return {\r\n          ...profile,\r\n          navigator: {\r\n            ...profile?.navigator,\r\n            language,\r\n          },\r\n          autoLang,\r\n        };\r\n      }\r\n\r\n      return profile;\r\n    }));\r\n  };\r\n\r\n  const updateProfileGeolocation = (id: string, geolocation: any) => {\r\n    mapAndSetProfilesList(profiles => profiles.map((profile) => {\r\n      if (profile?.id === id) {\r\n        return {\r\n          ...profile,\r\n          geolocation,\r\n        };\r\n      }\r\n\r\n      return profile;\r\n    }));\r\n  };\r\n\r\n  const updateProfileTimezone = (id: string, timezone: any) => {\r\n    mapAndSetProfilesList(profiles => profiles.map((profile) => {\r\n      if (profile?.id === id) {\r\n        return {\r\n          ...profile,\r\n          timezone,\r\n        };\r\n      }\r\n\r\n      return profile;\r\n    }));\r\n  };\r\n\r\n  const ChangeProfileName = () => {\r\n    let profileName = profileData.name || '';\r\n    const { isAutoGenerated, defaultProps = {} } = profileData;\r\n    if (isAutoGenerated && defaultProps.profileNameIsDefault) {\r\n      profileName = parseTranslatedKey(translation('profiles.firstProfileName'));\r\n      PROFILE_NAME = profileName;\r\n    } else {\r\n      PROFILE_NAME = profileData.name || '';\r\n    }\r\n\r\n    if (changeProfileName) {\r\n      return (\r\n        <>\r\n          <DrawerContainerProfileName style={{ marginLeft: -8, marginBottom: 15 }}>\r\n            <AreaProfileName\r\n              id={'profileNameId'}\r\n              autoFocus={true}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  event.preventDefault();\r\n                  saveProfileName();\r\n                  setChangeProfileName(false);\r\n                }\r\n              }}\r\n              onChange={(event => PROFILE_NAME = event.target.value)}\r\n              autoSize={{ minRows: 1, maxRows: 4 }}\r\n              onBlur={() => {\r\n                saveProfileName();\r\n                setTimeout(() => setChangeProfileName(false), 0);\r\n              }}\r\n              defaultValue={PROFILE_NAME}\r\n              placeholder={translation('base.profileName')}\r\n              style={{ lineHeight: '24px' }}\r\n            />\r\n            <DrawerCancel onClick={closeProfilesSettings} newStyle={!!NEW_FEATURES.header}>\r\n              <IconClose />\r\n            </DrawerCancel>\r\n          </DrawerContainerProfileName>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <DrawerProfileName\r\n          onClick={(): void => setChangeProfileName(true)}\r\n          newStyle={!!NEW_FEATURES.header}\r\n        >\r\n          {profileName}\r\n        </DrawerProfileName>\r\n        <DrawerCancel onClick={closeProfilesSettings} newStyle={!!NEW_FEATURES.header}>\r\n          <IconClose />\r\n        </DrawerCancel>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const showNotes = (): JSX.Element => {\r\n    const { isAutoGenerated, defaultProps = {} } = profileData;\r\n\r\n    return (\r\n      <ContainerParamsNote style={{ paddingBottom: 19 }}>\r\n        <DrawerNameParams style={{ width: 73 }}>\r\n          {translation('quickSettings.notes.title')}\r\n        </DrawerNameParams>\r\n        <div className=\"ql-drawer-container\">\r\n          <Notes\r\n            notes={profileData.notes}\r\n            profileId={profileData.id}\r\n            saveProfileNotes={props.saveProfileNotes}\r\n            isDefaultNotes={!!(isAutoGenerated && defaultProps?.profileNotesIsDefault)}\r\n            location='old-drawer'\r\n          />\r\n        </div>\r\n      </ContainerParamsNote>\r\n    );\r\n  };\r\n\r\n  const renderFolderName = () => profileData.folders.map((folderName: string, index: number) => {\r\n    const folderNameEmoji = folderName.length >= 15 ? folderName.substr(0, 15) + '...' : folderName;\r\n\r\n    return (\r\n      <div key={`renderFolderName-${index}`}>\r\n        <div>\r\n          <DrawerFolderName key={folderName}>\r\n            {folderNameEmoji}\r\n          </DrawerFolderName>\r\n          <DrawerRemoveProfileFromFolder\r\n            onClick={(): Promise<void> => props.removeProfilesFromFolder(folderName, [profileData.id])}\r\n          >\r\n            <IconRemoveFolderFromRow />\r\n          </DrawerRemoveProfileFromFolder>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const foldersList = () => {\r\n    if (!(profileData.folders?.length)) {\r\n      return (\r\n        <>\r\n          <DrawerNameParams>\r\n            {translation('folders.title')}\r\n          </DrawerNameParams>\r\n          <ButtonLine onClick={(): void => props.openFoldersModal([profileData.id])}>\r\n            {translation('quickSettings.folders.actionAddText')}\r\n          </ButtonLine>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <DrawerNameParams style={{ width: 41 }}>\r\n          {translation('folders.title')}\r\n        </DrawerNameParams>\r\n        <ContainerFolderList>\r\n          {renderFolderName()}\r\n        </ContainerFolderList>\r\n        <ButtonLine onClick={(): void => props.openFoldersModal([profileData.id])}>\r\n          {translation('quickSettings.folders.actionAddText')}\r\n        </ButtonLine>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const showProfileDrawerChild = (Child: any) => {\r\n    Child(true);\r\n  };\r\n\r\n  const closeProfileDrawerСhildren = (): void => {\r\n    setProfileDrawerProxyVisible(false);\r\n    setProfileDrawerLanguageVisible(false);\r\n    setProfileDrawerTimezoneVisible(false);\r\n    setProfileDrawerGeolocationVisible(false);\r\n  };\r\n\r\n  const [profileTimezone] = timezones.filter(tz => tz.name === profileData?.timezone?.timezone);\r\n  const currentUsingLanguages = profileData.autoLang ? languagesBasedOnIp : profileData?.navigator?.language;\r\n  const separatedLanguages = (currentUsingLanguages || '')\r\n    .split(',')\r\n    .map(item => item.split(';')[0])\r\n    .filter(key => checkDoesLangExist(key));\r\n\r\n  let proxyRes = profileData?.proxy;\r\n\r\n  if (proxyRes?.id) {\r\n    proxyRes = proxyList.find((el) => el._id === proxyRes.id);\r\n\r\n    if (!proxyRes) {\r\n      proxyRes = profileData?.proxy;\r\n    }\r\n  }\r\n\r\n  const renderLanguageItem = (language: string, index: number): JSX.Element | null => {\r\n    const languageLimit = 9;\r\n\r\n    if (index > languageLimit) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DrawerLanguageParamsRegion>\r\n          {locales[language]?.replace(/\\(.*\\)/g, '')?.trim()}\r\n        </DrawerLanguageParamsRegion>\r\n        <DrawerLanguageParamsDomain>\r\n          {language}\r\n          {languageLimit === index ? (\r\n            <DrawerLanguageParamsRegion>\r\n              ...\r\n            </DrawerLanguageParamsRegion>\r\n          ) : null}\r\n        </DrawerLanguageParamsDomain>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const renderLanguages = (): JSX.Element => {\r\n    if (isFreeOrTorProxy && profileData.autoLang) {\r\n      return (\r\n        <span>\r\n          {languagesBasedOnIp}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {separatedLanguages.map((lang: string, index: number) => (\r\n          <div\r\n            key={`DrawerLanguageParams-${index}`}\r\n          >\r\n            {renderLanguageItem(lang, index)}\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const contentDrawer = () => (\r\n    <div style={{ fontFamily: 'Roboto' }}>\r\n      <DrawerProfileHeader newStyle={!!NEW_FEATURES.header}>\r\n        {ChangeProfileName()}\r\n        <DrawerHeaderButtons\r\n          profile={profileInfo}\r\n          renderDropDownMenu={props.renderDropDownMenu}\r\n          launchProfileOrbita={props.launchProfileOrbita}\r\n        />\r\n      </DrawerProfileHeader>\r\n      <DrawerDivider />\r\n      <DrawerProfileBody>\r\n        {showNotes()}\r\n        <DrawerDivider />\r\n        <ContainerParams\r\n          style={{\r\n            alignItems: 'baseline',\r\n            paddingTop: 23,\r\n            paddingBottom: 23,\r\n          }}\r\n        >\r\n          {foldersList()}\r\n        </ContainerParams>\r\n        <DrawerDivider />\r\n        <ContainerParams\r\n          style={{\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            cursor: 'pointer',\r\n            alignItems: 'center',\r\n          }}\r\n          onClick={() => {\r\n            setProxyManagerVisible(true);\r\n          }}\r\n        >\r\n          <DrawerNameParams>\r\n            {translation('proxy.title')}\r\n          </DrawerNameParams>\r\n          <DrawerProxyParams style={{\r\n            width: 385,\r\n            marginLeft: NEW_FEATURES.header ? -31 : -15,\r\n          }}>\r\n            <ProxySelector\r\n              proxy={profileData.proxy}\r\n              proxyEnabled={profileData.proxyEnabled}\r\n              profileId={profileData.id}\r\n              isInDrawer={true}\r\n              isSharedProxy={profileData.role !== 'owner'}\r\n              localProxySelectorLocation='old-drawer'\r\n            />\r\n          </DrawerProxyParams>\r\n        </ContainerParams>\r\n\r\n        <DrawerDivider />\r\n        <ContainerParams\r\n          style={{ alignItems: 'baseline', paddingTop: 21, paddingBottom: 12 }}\r\n          // TODO: Create Locales Form\r\n          // onClick={() => showProfileDrawerChild(setProfileDrawerLanguageVisible)}\r\n          onClick={() => {\r\n            setIsLocalesManagerVisible(true);\r\n          }}\r\n        >\r\n          <DrawerNameParams>\r\n            {translation('language.title')}\r\n          </DrawerNameParams>\r\n          <DrawerLanguageParams>\r\n            {renderLanguages()}\r\n          </DrawerLanguageParams>\r\n          <ArrowDrawer />\r\n        </ContainerParams>\r\n        <DrawerDivider />\r\n        <ContainerParams\r\n          style={{\r\n            paddingTop: 21,\r\n            paddingBottom: 20,\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => {\r\n            showProfileDrawerChild(setProfileDrawerTimezoneVisible);\r\n          }}\r\n        >\r\n          <DrawerNameParams>\r\n            {translation('timezone.title')}\r\n          </DrawerNameParams>\r\n          <DrawerParams style={{ marginLeft: 1 }}>\r\n            {profileData?.timezone?.fillBasedOnIp\r\n              ? translation('timezone.fillBasedOnIpTxt')\r\n              : `${profileTimezone?.name} (${profileTimezone?.offset})`}\r\n          </DrawerParams>\r\n          <ArrowDrawer />\r\n        </ContainerParams>\r\n        <DrawerDivider />\r\n        <ContainerParams\r\n          style={{\r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => {\r\n            showProfileDrawerChild(setProfileDrawerGeolocationVisible);\r\n          }}\r\n        >\r\n          <DrawerNameParams>\r\n            {translation('geolocation.title')}\r\n          </DrawerNameParams>\r\n          <DrawerParams style={{ marginLeft: 1 }}>\r\n            {profileData?.geolocation?.mode === 'block'\r\n              ? translation('quickSettings.geolocation.block.label')\r\n              : translation('quickSettings.geolocation.allow.label')}\r\n          </DrawerParams>\r\n          <ArrowDrawer />\r\n        </ContainerParams>\r\n        <DrawerDivider />\r\n        <ContainerParams\r\n          style={{\r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n          }}\r\n          onClick={() => profileData.os !== 'android' && setIsResolutionEditOpen(true)}\r\n        >\r\n          <DrawerNameParams>\r\n            {translation('base.screenResolution')}\r\n          </DrawerNameParams>\r\n          <DrawerParams>\r\n            {!isResolutionEditOpen ? profileData.navigator?.resolution : (\r\n              <div style={{ marginLeft: -9 }} onClick={e => e.stopPropagation()}>\r\n                <ResolutionManager\r\n                  updateResolution={changeProfileResolution}\r\n                  isDisabled={profileData.os === 'android'}\r\n                  resolution={profileData.navigator?.resolution}\r\n                  width='200px'\r\n                  autoOpen={true}\r\n                  onClose={(): void => setIsResolutionEditOpen(false)}\r\n                />\r\n              </div>\r\n            )}\r\n          </DrawerParams>\r\n        </ContainerParams>\r\n        <DrawerDivider />\r\n        <ContainerParams\r\n          style={{\r\n            alignItems: 'baseline',\r\n            paddingTop: 20,\r\n            paddingBottom: cookies.length ? 20 : 21,\r\n          }}\r\n          onClick={() => {\r\n            setIsCookiesListModalVisible(true);\r\n          }}\r\n        >\r\n          <DrawerNameParams>\r\n            {translation('base.cookies')}\r\n          </DrawerNameParams>\r\n          <DrawerCookiesParams>\r\n            {cookiesLoading ? <NoCookiesSpan style={{ opacity: 1, borderColor: 'transparent' }}>\r\n              {translation('quickSettings.cookies.loadingTxt')}\r\n            </NoCookiesSpan> : null}\r\n\r\n            {!cookiesLoading && !cookies.length && <NoCookiesSpan>\r\n              {translation('quickSettings.cookies.emptyTxt')}\r\n                                                   </NoCookiesSpan>}\r\n\r\n            {!cookiesLoading && cookies.map((cookie: any, index: number) => (\r\n              <div\r\n                key={`DrawerCookiesParams-${index}`}\r\n              >\r\n                <div\r\n                  style={{ marginTop: -2 }}\r\n                >\r\n                  <DrawerCookiesParamUrl>\r\n                    {cookie.cookie}\r\n                  </DrawerCookiesParamUrl>\r\n                  <DrawerCookiesParamCount>\r\n                    {cookie.count}\r\n                  </DrawerCookiesParamCount>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {cookies.length >= 10 && <DrawerCookiesParamUrl>\r\n              ...\r\n            </DrawerCookiesParamUrl>}\r\n          </DrawerCookiesParams>\r\n          <ArrowDrawer />\r\n        </ContainerParams>\r\n        <DrawerDivider />\r\n        <ContainerParamsFingerprint>\r\n          <DrawerNameParams style={{ alignItems: 'normal' }}>\r\n            {translation('base.fingerprint')}\r\n          </DrawerNameParams>\r\n          <ButtonFingerprint onClick={refreshFingerprint} isFingerprintRefreshing={isFingerprintRefreshing}>\r\n            {isFingerprintRefreshing ? <Icon type='loading' style={{ fontSize: 16, marginTop: -3 }} /> : translation('quickSettings.fingerprint.refreshActionTxt')}\r\n          </ButtonFingerprint>\r\n          {FingerprintResult()}\r\n          <FingerprintText>\r\n            {translation('quickSettings.fingerprint.help')}\r\n          </FingerprintText>\r\n        </ContainerParamsFingerprint>\r\n      </DrawerProfileBody>\r\n    </div>\r\n  );\r\n\r\n  const drawerProxy = (\r\n    <DrawerProxy\r\n      profileInfo={{\r\n        ...profileData,\r\n        proxy: proxyRes,\r\n      }}\r\n      changeVisibility={closeProfileDrawerСhildren}\r\n      updateProfileInfoProxy={updateProfileProxy}\r\n      setPasteProxy={setPasteProxy}\r\n      showProxyManager={() => setProxyManagerVisible(true)}\r\n    />\r\n  );\r\n\r\n  const showContent = () => {\r\n    if (profileDrawerProxyVisible) {\r\n      return (\r\n        <>\r\n          <Drawer\r\n            bodyStyle={{ padding: 0 }}\r\n            visible={isProfileDrawerOpen}\r\n            placement={'right'}\r\n            maskStyle={{\r\n              backgroundColor: 'inherit',\r\n            }}\r\n            mask={false}\r\n            onClose={() => {\r\n              closeProfileDrawerСhildren();\r\n              closeProfilesSettings();\r\n            }}\r\n            width={475}\r\n            closable={false}\r\n          >\r\n            {drawerProxy}\r\n          </Drawer>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (profileDrawerLanguageVisible) {\r\n      return (\r\n        <>\r\n          <Drawer\r\n            bodyStyle={{ padding: 0 }}\r\n            visible={isProfileDrawerOpen}\r\n            placement={'right'}\r\n            maskStyle={{\r\n              backgroundColor: 'inherit',\r\n            }}\r\n            mask={false}\r\n            onClose={() => {\r\n              closeProfileDrawerСhildren();\r\n              closeProfilesSettings();\r\n            }}\r\n            width={475}\r\n            closable={false}\r\n          >\r\n            <DrawerLanguage\r\n              profileInfo={profileData}\r\n              changeVisibility={closeProfileDrawerСhildren}\r\n            />\r\n          </Drawer>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (profileDrawerTimezoneVisible) {\r\n      return (\r\n        <>\r\n          <Drawer\r\n            bodyStyle={{ padding: 0 }}\r\n            visible={isProfileDrawerOpen}\r\n            placement='right'\r\n            maskStyle={{\r\n              backgroundColor: 'inherit',\r\n            }}\r\n            mask={false}\r\n            onClose={() => {\r\n              closeProfileDrawerСhildren();\r\n              closeProfilesSettings();\r\n            }}\r\n            width={475}\r\n            closable={false}\r\n          >\r\n            <DrawerTimezone\r\n              profileInfo={profileData}\r\n              changeVisibility={closeProfileDrawerСhildren}\r\n              updateProfileTimezone={updateProfileTimezone}\r\n            />\r\n          </Drawer>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (profileDrawerGeolocationVisible) {\r\n      return (\r\n        <>\r\n          <Drawer\r\n            bodyStyle={{ padding: 0 }}\r\n            visible={isProfileDrawerOpen}\r\n            placement='right'\r\n            width={475}\r\n            maskStyle={{\r\n              backgroundColor: 'inherit',\r\n            }}\r\n            mask={false}\r\n            onClose={() => {\r\n              closeProfileDrawerСhildren();\r\n              closeProfilesSettings();\r\n            }}\r\n            closable={false}\r\n          >\r\n            <DrawerGeolocation\r\n              profileInfo={profileData}\r\n              changeVisibility={closeProfileDrawerСhildren}\r\n              updateProfileGeolocation={updateProfileGeolocation}\r\n            />\r\n          </Drawer>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Drawer\r\n          bodyStyle={{ padding: 0 }}\r\n          visible={isProfileDrawerOpen}\r\n          placement='right'\r\n          maskStyle={{\r\n            backgroundColor: 'inherit',\r\n          }}\r\n          mask={false}\r\n          onClose={closeProfilesSettings}\r\n          width={475}\r\n          closable={false}\r\n          drawerStyle={{ overflow: 'auto' }}\r\n        >\r\n          {contentDrawer()}\r\n          <DrawerBackdrop />\r\n        </Drawer>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const afterModalClose = () => {\r\n    if (document.getElementsByTagName('body')[0].hasAttribute('style')) {\r\n      document.getElementsByTagName('body')[0].removeAttribute('style');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={(event): void => event.stopPropagation()} style={{ position: 'relative' }}>\r\n      {showContent()}\r\n      <CookiesList\r\n        id={profileData?.id}\r\n        name={profileData?.name}\r\n        afterClose={afterModalClose}\r\n        cookiesListModalVisible={isCookiesListModalVisible}\r\n        toggleCookiesListModal={({ boolean }: any) => setIsCookiesListModalVisible(boolean)}\r\n        onCookiesRequest={requestCookiesProfile}\r\n      />\r\n      <LocalesManager\r\n        languages={profileData?.navigator?.language || ''}\r\n        languagesBasedOnIp={languagesBasedOnIp}\r\n        localesModalVisible={isLocalesManagerVisible}\r\n        afterClose={afterModalClose}\r\n        toggleLocalesListModal={setProfileNavigatorLanguage}\r\n        autoLang={!!profileData.autoLang}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProfileDrawer);\r\n","import React, { FC, memo, useEffect, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Button, Icon, Modal, Table } from 'antd';\r\nimport { format } from 'date-fns';\r\n\r\nimport { cloneS3Profile, requestProfileHistory } from './api';\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\nlet ipcRenderer: Electron.IpcRenderer;\r\nconst isElectron = !!window.require;\r\n\r\nif (isElectron) {\r\n  ipcRenderer = window.require('electron').ipcRenderer;\r\n}\r\n\r\nconst ContainerLoader = styled('div')`\r\n  font-size: 32px;\r\n  text-align: center;\r\n`;\r\n\r\nconst DescriptionModalTxt = styled('div')`\r\n  padding: 4px;\r\n  background-color: var(--FAFAFA);\r\n  margin-bottom: 10px;\r\n`;\r\n\r\ninterface IHistoryModal {\r\n  profileId: string;\r\n  visible: boolean;\r\n  onClose: () => any;\r\n  afterClose?: () => void;\r\n}\r\n\r\nconst HistoryModal: FC<IHistoryModal> = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [profileUploads, setProfileUploads] = useState<any[]>([]);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const updateProfileHistory = async () => {\r\n    setIsLoading(true);\r\n    const profileHistory = await requestProfileHistory(props.profileId);\r\n\r\n    setProfileUploads(profileHistory);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const cloneProfile = async (key: string) => {\r\n    const clonedProfile = await cloneS3Profile(props.profileId, key);\r\n    if (clonedProfile.id) {\r\n      ipcRenderer && ipcRenderer.invoke('clear-profile-cache', props.profileId);\r\n    }\r\n    setProfileUploads([clonedProfile, ...profileUploads]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.profileId) {\r\n      updateProfileHistory();\r\n    }\r\n  }, [props.profileId]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={props.visible}\r\n      onCancel={props.onClose}\r\n      afterClose={() => document.body.style.removeProperty('overflow')}\r\n      title={translation('historyModal.title')}\r\n      footer={null}\r\n    >\r\n      {isLoading ? (\r\n        <ContainerLoader>\r\n          <Icon type='loading'/>\r\n        </ContainerLoader>\r\n      ) : (\r\n        <>\r\n          <DescriptionModalTxt>\r\n            <Trans i18nKey='historyModal.help' t={translation}>\r\n              Continue work from any of the listed sessions. To do that, <b>restore</b> the session needed and run the profile. The <b>current</b> session will be erased.\r\n            </Trans>\r\n          </DescriptionModalTxt>\r\n\r\n          <Table dataSource={profileUploads} pagination={false} rowKey={record => record.id} locale={{ emptyText: 'No Data' }}>\r\n            <Table.Column\r\n              title={translation('historyModal.table.columns.date')}\r\n              dataIndex='lastModified'\r\n              render={(v: string) => format(new Date(v), 'MMM dd, h:mm a')}\r\n            />\r\n            <Table.Column\r\n              title={translation('historyModal.table.columns.size')}\r\n              dataIndex='size'\r\n              render={(v: number) => `${(v / (1024 ** 2)).toFixed(2)}MB`}\r\n            />\r\n            <Table.Column\r\n              dataIndex='id'\r\n              render={(v: string, record: any, index: number) => index === 0 ? translation('historyModal.currentSessionLabel') : <Button onClick={() => cloneProfile(v)}>{translation('historyModal.restoreBtn.label')}</Button>}\r\n            />\r\n          </Table>\r\n        </>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default memo(HistoryModal);\r\n","import { API_BASE_URL } from '../../../../../common/constants/constants';\r\nimport { http } from '../../../../services';\r\n\r\nexport const requestProfileHistory = async (profileId: string) => {\r\n  const url = `${API_BASE_URL}/browser/${profileId}/history`;\r\n\r\n  const data = await http(url);\r\n\r\n  return data.body;\r\n};\r\n\r\nexport const cloneS3Profile = async (profileId: string, keyId: string) => {\r\n  const url = `${API_BASE_URL}/browser/${profileId}/history`;\r\n\r\n  const data = await http(url, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({\r\n      id: keyId.substr(keyId.indexOf('/') + 1),\r\n    }),\r\n  });\r\n\r\n  return data.body;\r\n};\r\n","import { API_BASE_URL } from '../../../../../common/constants/constants';\r\nimport { http } from '../../../../services';\r\nimport { IUpdateProfilesUAOpts, IUpdateProfilesUAResponse } from './interfaces';\r\n\r\nexport const updateProfilesUA = async (opts: IUpdateProfilesUAOpts): Promise<IUpdateProfilesUAResponse> => {\r\n  const {\r\n    browserIds = [],\r\n    updateAllProfiles = false,\r\n    updateUaToNewBrowserV = false,\r\n    testOrbita = false,\r\n    currentWorkspace = '',\r\n  } = opts;\r\n\r\n  let url = `${API_BASE_URL}/browser/update_ua_to_new_browser_v`;\r\n  if (currentWorkspace) {\r\n    url += `?currentWorkspace=${currentWorkspace}`;\r\n  }\r\n\r\n  const data = await http(url, {\r\n    method: 'PATCH',\r\n    body: JSON.stringify({\r\n      browserIds,\r\n      updateAllProfiles,\r\n      updateUaToNewBrowserV,\r\n      testOrbita,\r\n    }),\r\n  });\r\n\r\n  return data.body;\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { Button, Checkbox, Modal, message } from 'antd';\r\nimport React, { FC, useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { updateProfilesUA } from './api';\r\nimport { IUpdateProfile, IUpdateProfilesUAOpts, IUpdateProfilesUAResponse } from './interfaces';\r\nimport { workspaceContext } from '../../../../state';\r\nimport { mapAndSetProfilesList } from '../../../../state/profiles-list.atom';\r\n\r\nconst Container = styled('div')`\r\n  font-family: 'Roboto';\r\n  line-height: initial;\r\n`;\r\n\r\nconst InformationTxt = styled('div')`\r\n  width: 440px;\r\n  margin-bottom: 10px;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst CustomCheckbox = styled(Checkbox)`\r\n  font-family: 'Roboto';\r\n  line-height: initial;\r\n  font-size: 16px;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst UpdateProfilesModal: FC<IUpdateProfile> = (props) => {\r\n  const [updateAll, setUpdateAll] = useState<boolean>(false);\r\n  const [buttonsDisabled, setButtonsDisabled] = useState<boolean>(false);\r\n\r\n  const { id: workspaceId } = useContext(workspaceContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const {\r\n    visible,\r\n    profileId,\r\n    onClose,\r\n    afterClose,\r\n  } = props;\r\n\r\n  const updateProfilesUAHandleClick = (updateUaToNewBrowserV = false): void => {\r\n    setButtonsDisabled(true);\r\n\r\n    const updateUaParams: IUpdateProfilesUAOpts = {\r\n      browserIds: [profileId],\r\n      updateAllProfiles: updateAll,\r\n      updateUaToNewBrowserV,\r\n      testOrbita: false,\r\n      currentWorkspace: workspaceId,\r\n    };\r\n\r\n    updateProfilesUA(updateUaParams)\r\n      .then((res: IUpdateProfilesUAResponse = { updatedTo: '' }) => {\r\n        const { updatedTo } = res;\r\n        if (updateUaToNewBrowserV) {\r\n          message.success(translation('updateProfilesToLatestUseragent.success'));\r\n        }\r\n\r\n        mapAndSetProfilesList(prevProfiles => prevProfiles.map((profile) => {\r\n          if (updateAll || profile.id === profileId) {\r\n            delete profile.suggestUpdateUA;\r\n\r\n            if (updatedTo) {\r\n              profile.navigator.userAgent = updatedTo;\r\n            }\r\n          }\r\n\r\n          return profile;\r\n        }));\r\n\r\n        onClose();\r\n      })\r\n      .catch((e: any) => {\r\n        message.error(e.message || e.body?.message);\r\n        setButtonsDisabled(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onCancel={onClose}\r\n      destroyOnClose={true}\r\n      afterClose={(): void => {\r\n        setButtonsDisabled(false);\r\n        setUpdateAll(false);\r\n        (afterClose as any)();\r\n      }}\r\n      title={translation('updateProfilesToLatestUseragentModal.title')}\r\n      footer={(\r\n        <>\r\n          <Button\r\n            disabled={buttonsDisabled}\r\n            onClick={(): void => updateProfilesUAHandleClick(false)}\r\n          >\r\n            {translation('updateProfilesToLatestUseragentModal.buttons.skip.label')}\r\n          </Button>\r\n          <Button\r\n            type='primary'\r\n            style={{ marginLeft: 8 }}\r\n            disabled={buttonsDisabled}\r\n            onClick={(): void => updateProfilesUAHandleClick(true)}\r\n          >\r\n            {translation('updateProfilesToLatestUseragentModal.buttons.submit.label')}\r\n          </Button>\r\n        </>\r\n      )}\r\n    >\r\n      <Container>\r\n        <InformationTxt>\r\n          {translation('updateProfilesToLatestUseragentModal.outdatedFingerprints')}\r\n        </InformationTxt>\r\n        <CustomCheckbox\r\n          defaultChecked={updateAll}\r\n          onChange={(e: any): void => setUpdateAll(e.target.checked)}\r\n        >\r\n          {translation('updateProfilesToLatestUseragentModal.updateAllProfiles.label')}\r\n        </CustomCheckbox>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdateProfilesModal;\r\n","export const isFirefox = () => {\r\n  return navigator.userAgent.toLowerCase().includes('firefox');\r\n}\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport { useAtomValue } from 'jotai';\r\nimport React, { FC, useMemo } from 'react';\r\n\r\nimport AddTagPlaceholder from './add-tag-placeholder';\r\nimport EditModeTags from './edit-mode-tags';\r\nimport Tag from './tag';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport useDelayedMount from '../../../hooks/use-should-mount.hook';\r\nimport { tagsContext } from '../../../state';\r\nimport { IBasicTableProfile } from '../../../state/profiles-list.atom';\r\nimport { isFirefox } from '../../../utils/is-firefox';\r\nimport { IAddTag, ITagBase, TagField } from '../interfaces/tag.interface';\r\n\r\nconst TagsWrapper = styled('section')<{ isFirefox: boolean; newStyle: boolean; isOpen?: boolean; isPlaceholder?: boolean }>`\r\n  position: relative;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  width: calc(100% - 1px);\r\n  display: flex;\r\n  align-items: flex-start;\r\n  /*transition: box-shadow 0.25s ease-out;*/\r\n  border-radius: 4px;\r\n\r\n  ${(props): SerializedStyles|null => css`\r\n    ${(props.isFirefox) ? '' : `\r\n      height: 100%;\r\n    `}\r\n  `}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    gap: 4px;\r\n    padding: 16px 8px 12px;\r\n\r\n    :hover {\r\n      background-color: inherit;\r\n      z-index: 104;\r\n    }\r\n  ` : css`\r\n    padding: 19px 8px 15px;\r\n    min-height: 59px;\r\n  `}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle && props.isPlaceholder ? css`\r\n    padding: 14px 8px;\r\n  ` : null}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle && props.isOpen ? css`\r\n    z-index: 150;\r\n\r\n    :hover {\r\n      z-index: 150;\r\n    }\r\n  ` : null}\r\n`;\r\n\r\nconst TagsListBlock = styled('div')<{ newStyle: boolean; isAddMode: boolean }>`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  gap: ${(props): string => props.newStyle ? '4px' : '0'};\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    z-index: ${props.isAddMode ? '103' : '100'};\r\n\r\n    :hover {\r\n      z-index: 104;\r\n    }\r\n  ` : null}\r\n`;\r\n\r\ninterface ITagsCell {\r\n  profileAtom: IBasicTableProfile['atom'];\r\n  addTag: (params: IAddTag) => Promise<void>;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n  onTagsPopupOpen: (profileTagsCount: number, totalTagsCount: number) => void;\r\n  field: TagField;\r\n}\r\n\r\nconst TagsCell: FC<ITagsCell> = (props) => {\r\n  const {\r\n    profileAtom,\r\n    addTag,\r\n    updateTag,\r\n    removeProfileTag,\r\n    removeTag,\r\n    onTagsPopupOpen,\r\n    field,\r\n  } = props;\r\n\r\n  const profile = useAtomValue(profileAtom);\r\n  const { id: profileId, tags: profileRawTags } = profile;\r\n\r\n  const {\r\n    tags: allGlobalTags = [],\r\n    setNewAddedTag,\r\n    tagEditorVisible,\r\n    profileInEditTagsMode,\r\n    setProfileInEditTagsMode,\r\n    currentTagField,\r\n    setCurrentTagField,\r\n  } = React.useContext(tagsContext);\r\n\r\n  const globalTags = useMemo(() => allGlobalTags.filter(tag => tag.field === field), [allGlobalTags]);\r\n  const tags = useMemo(() => profileRawTags.filter(rawTag => rawTag.field === field), [profileRawTags]);\r\n\r\n  const profileIds = useMemo(() => [profileId], [profileId]);\r\n\r\n  const isAddMode = profileId && profileId === profileInEditTagsMode && field === currentTagField;\r\n  const setIsAddMode = (): void => {\r\n    const totalTagsCount = globalTags.length;\r\n    const profileTagsCount = tags.length;\r\n    onTagsPopupOpen(profileTagsCount, totalTagsCount);\r\n    setCurrentTagField(field);\r\n\r\n    if (profileId) {\r\n      setProfileInEditTagsMode(profileId);\r\n    }\r\n  };\r\n\r\n  const handleHideDropdown = (event: KeyboardEvent): void => {\r\n    if (event.key === 'Escape') {\r\n      setProfileInEditTagsMode(null);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isAddMode) {\r\n      document.addEventListener('keydown', handleHideDropdown, true);\r\n    } else {\r\n      setNewAddedTag(null);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleHideDropdown, true);\r\n    };\r\n  }, [tagEditorVisible, profileInEditTagsMode]);\r\n\r\n  const { shouldMount } = useDelayedMount(!!tags.length);\r\n  if (!shouldMount) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TagsWrapper\r\n      newStyle={!!NEW_FEATURES.header}\r\n      isFirefox={isFirefox()}\r\n      isOpen={!!isAddMode}\r\n      isPlaceholder={!tags.length}\r\n      onClick={(): void => {\r\n        if (!isAddMode) {\r\n          setIsAddMode();\r\n        }\r\n      }}\r\n    >\r\n      <TagsListBlock newStyle={!!NEW_FEATURES.header} isAddMode={!!isAddMode}>\r\n        {tags.map((tag, index) => (\r\n          <Tag\r\n            key={tag.id}\r\n            tag={tag}\r\n            updateTag={updateTag}\r\n            isAddMode={false}\r\n            removeTag={(): Promise<void> => removeProfileTag([profileId], tag.id)}\r\n            isLastTag={index + 1 === tags.length}\r\n          />\r\n        ))}\r\n        <AddTagPlaceholder\r\n          setIsAddMode={setIsAddMode}\r\n          showPlaceholder={!tags.length}\r\n          field={field}\r\n        />\r\n        {isAddMode ? <EditModeTags\r\n          profileIds={profileIds}\r\n          tags={tags}\r\n          updateTag={updateTag}\r\n          addTag={addTag}\r\n          isAddMode={isAddMode}\r\n          removeProfileTag={removeProfileTag}\r\n          removeTag={removeTag}\r\n          field={field}\r\n        /> : null}\r\n      </TagsListBlock>\r\n    </TagsWrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(TagsCell);\r\n","import styled from '@emotion/styled/macro';\r\nimport { SerializedStyles } from '@emotion/css';\r\nimport { css } from '@emotion/core';\r\n\r\nexport const NameColText = styled('span')<{ newStyle: boolean }>`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n\r\n  ${(props): SerializedStyles => props.newStyle ? css`\r\n    opacity: 1;\r\n    font-weight: 400;\r\n    letter-spacing: 0.25px;\r\n  ` : css`\r\n    opacity: 0.5;\r\n  `}\r\n`;\r\n","import React from 'react';\r\n\r\nimport { IconSort, IconSortDown, IconSortUp } from '../gologin-header/icons';\r\n\r\nexport const SorterCol = ({ sorterField = '' }: { sorterField?: string }): JSX.Element|null => {\r\n  const sortType = localStorage.getItem('sorterOrder');\r\n  const sorterFieldLocal = localStorage.getItem('sorterField');\r\n  const sortCurrentCol = sorterFieldLocal === sorterField;\r\n  const iconProps = {\r\n    padding: 4,\r\n    iconColor: 'var(--98989F-profile-table-new-sorter)',\r\n    iconHoveredColor: 'var(--2B2B31-profile-table-new-sorter)',\r\n  };\r\n\r\n  if (sortCurrentCol && sortType === 'ascend') {\r\n    return (\r\n      <IconSortUp {...iconProps} />\r\n    );\r\n  }\r\n\r\n  if (sortCurrentCol && sortType === 'descend') {\r\n    return (\r\n      <IconSortDown {...iconProps} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <IconSort {...iconProps} />\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst IconArrowBack = () => (\r\n  <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M0.5 7.5H8C8.92826 7.5 9.8185 7.13125 10.4749 6.47487C11.1313 5.8185 11.5 4.92826 11.5 4C11.5 3.07174 11.1313 2.1815 10.4749 1.52513C9.8185 0.868749 8.92826 0.5 8 0.5H4.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M4 4L0.5 7.5L4 11\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconArrowBack;\r\n","import styled from '@emotion/styled';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport React, { FC, useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { tagsContext } from '../../../state/tags.context';\r\nimport IconArrowBack from '../../../ui/icons/IconArrowBack';\r\nimport { TagField } from '../../tags/interfaces/tag.interface';\r\n\r\nconst TagInfoBlock = styled('div')`\r\n  background-color: var(--FFFFFF-profile-table-show-all-tags-button);\r\n  box-shadow: 0 1px 4px var(--00000003-profile-table-show-all-tags-button), 0 4px 8px var(--00000005-profile-table-show-all-tags-button), 0 1px 12px var(--0000001F-profile-table-show-all-tags-button);\r\n  border-radius: 4px;\r\n  padding: 8px 12px 7px;\r\n  position: relative;\r\n  top: -3px;\r\n`;\r\n\r\nconst TagInfo = styled('div')`\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  letter-spacing: 0.25px;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  color: var(--767676-profile-table-show-all-tags-button);\r\n`;\r\n\r\nconst TagsBackBtnIcon = styled('div')`\r\n  display: inline-block;\r\n  position: relative;\r\n  top: 2px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst TagsBackBtn = styled('div')`\r\n  display: inline-block;\r\n  margin-left: 16px;\r\n  color: var(--000000D9-profile-table-show-all-tags-button);\r\n  cursor: pointer;\r\n  font-weight: 400;\r\n\r\n  &:hover {\r\n    color: var(--00A987-profile-table-show-all-tags-button);\r\n  }\r\n`;\r\n\r\ninterface IShowAllTagsBtn {\r\n  field: TagField;\r\n}\r\n\r\nconst ShowAllTagsBtn: FC<IShowAllTagsBtn> = (props) => {\r\n  const { field } = props;\r\n\r\n  const [anchorInfoEl, setAnchorInfoEl] = useState<null | HTMLElement>(null);\r\n\r\n  const { selectedTag, setSelectedTag } = useContext(tagsContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const infoOpen = Boolean(anchorInfoEl);\r\n  const showAllKey = field === 'custom-status' ? 'tags.showAllStatuses' : 'tags.showAllTags';\r\n\r\n  const isShowAllTagsButtonShown = field === selectedTag?.field;\r\n\r\n  const handleMouseEnter = async (event: React.MouseEvent<HTMLElement, MouseEvent>): Promise<void> => {\r\n    setAnchorInfoEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMouseLeave = (): void => {\r\n    setAnchorInfoEl(null);\r\n  };\r\n\r\n  if (!isShowAllTagsButtonShown) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TagsBackBtn\r\n      onClick={(): void => setSelectedTag(null)}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      <TagsBackBtnIcon>\r\n        <IconArrowBack />\r\n      </TagsBackBtnIcon>\r\n      <Popper\r\n        open={infoOpen}\r\n        anchorEl={anchorInfoEl}\r\n        style={{ zIndex: 11000 }}\r\n        placement='top'\r\n      >\r\n        <TagInfoBlock>\r\n          <TagInfo>\r\n            {translation(showAllKey)}\r\n          </TagInfo>\r\n        </TagInfoBlock>\r\n      </Popper>\r\n    </TagsBackBtn>\r\n  );\r\n};\r\n\r\nexport default ShowAllTagsBtn;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst LineStyle = styled('path')`\r\n  stroke: var(--949393);\r\n`;\r\n\r\nconst CircleStyle = styled('rect')`\r\n  stroke: var(--E8E8E8);\r\n`;\r\n\r\nconst IconPlusInCircleStyle = styled('svg')`\r\n  &:hover {\r\n    stroke: var(--00B86D);\r\n    cursor: pointer;\r\n\r\n    ${LineStyle} {\r\n      stroke: var(--00B86D);\r\n    }\r\n    ${CircleStyle} {\r\n      stroke: var(--00B86D);\r\n    }\r\n  }\r\n`;\r\n\r\nconst IconPlusInCircle = () => (\r\n  <IconPlusInCircleStyle width=\"25\" height=\"24\" viewBox='0 0 24 24' fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <LineStyle d=\"M12.5898 7V17\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n    <LineStyle d=\"M7.58984 12H17.5898\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n    <CircleStyle x=\"1.08984\" y=\"0.5\" width=\"23\" height=\"23\" rx=\"11.5\"/>\r\n  </IconPlusInCircleStyle>\r\n);\r\n\r\nexport default IconPlusInCircle;\r\n","import styled from '@emotion/styled';\r\nimport { Icon } from 'antd';\r\nimport React, { FC, useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { ITemplatesCtx, templatesContext } from '../../../state';\r\nimport { IconPlus } from '../../../ui/gologin-header/icons';\r\nimport IconPlusInCircle from '../../../ui/icons/IconPlusInCircle';\r\nimport TooltipCustom from '../../../ui/tooltip-custom';\r\n\r\nconst IconContainer = styled('div')<{ newStyle: boolean }>`\r\n  margin: ${(props): string => props.newStyle ? '-4px 5px 0 0' : '-4px 5px 0 11px'};\r\n  height: 21px;\r\n`;\r\n\r\ninterface IQuickCreateProfile {\r\n  createProfile: (templateCtx: ITemplatesCtx) => Promise<void>;\r\n}\r\n\r\nconst ButtonQuickCreateProfile: FC<IQuickCreateProfile> = (props) => {\r\n  const { createProfile } = props;\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [anchorElTooltip, setAnchorElTooltip] = useState<HTMLElement|null>(null);\r\n  const [tooltipText, setTooltipText] = useState<string>('');\r\n\r\n  const templateCtx = useContext(templatesContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const onSend = async (event: React.MouseEvent<HTMLDivElement>): Promise<void> => {\r\n    event.stopPropagation();\r\n\r\n    if (isLoading) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    await createProfile(templateCtx).finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const renderIcon = (): JSX.Element => {\r\n    if (isLoading) {\r\n      return <Icon type='loading' style={{ fontSize: 20, margin: NEW_FEATURES.header ? '2px 10px 0 2px' : '2px 3px 0 2px', color: 'var(--949393-profile-table-create-quick-profile)' }} />;\r\n    }\r\n\r\n    if (NEW_FEATURES.header) {\r\n      return (\r\n        <IconPlus\r\n          margin='-4px 0 0 0'\r\n          styleType='activeGrayWithBackground'\r\n          iconColor='var(--98989F-profile-table-create-quick-profile)'\r\n          iconHoveredColor='var(--2B2B31-profile-table-create-quick-profile)'\r\n        />\r\n      );\r\n    }\r\n\r\n    return <IconPlusInCircle />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconContainer\r\n        newStyle={!!NEW_FEATURES.header}\r\n        onMouseEnter={(event): void => {\r\n          setAnchorElTooltip(event.currentTarget);\r\n          setTooltipText(translation('tooltip.profilesTable.addProfile'));\r\n        }}\r\n        onMouseLeave={(): void => setAnchorElTooltip(null)}\r\n        onClick={event => onSend(event)}\r\n      >\r\n        {renderIcon()}\r\n      </IconContainer>\r\n      <TooltipCustom anchorEl={anchorElTooltip} value={tooltipText} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonQuickCreateProfile;\r\n","import React, { FC, useContext } from 'react';\r\n\r\nimport { NameColText } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { ITemplatesCtx, tagsContext, templatesContext } from '../../../state';\r\nimport { SorterCol } from '../../../ui/gologin-table/sorter-col';\r\nimport { ProfilesTableColumn } from '../components/interfaces/app-settings.interface';\r\nimport ShowAllTagsBtn from '../components/show-all-tags-btn';\r\nimport ButtonQuickCreateProfile from '../quick-create-profile';\r\nimport { ContainerNameCol } from '../table/styles';\r\n\r\ninterface IColumnHeader {\r\n  column: ProfilesTableColumn;\r\n  title: string;\r\n  enableDrag?: boolean;\r\n  hasSort?: boolean;\r\n  sorterField?: string;\r\n  quickCreateProfile?: (templateCtx: ITemplatesCtx) => Promise<void>;\r\n}\r\n\r\nconst ColumnHeader: FC<IColumnHeader> = (props) => {\r\n  const {\r\n    column,\r\n    title = '',\r\n    enableDrag = true,\r\n    hasSort = false,\r\n    sorterField,\r\n    quickCreateProfile = Promise.resolve,\r\n  } = props;\r\n\r\n  const { selectedTag } = useContext(tagsContext);\r\n  const templateCtx = useContext(templatesContext);\r\n\r\n  const containerClassName = (enableDrag) ? 'dragHandler' : '';\r\n\r\n  const isShowAllTagsButtonShown = (column === 'tags' && selectedTag?.field === 'tags') ||\r\n    (column === 'customStatus' && selectedTag?.field === 'custom-status');\r\n\r\n  return (\r\n    <ContainerNameCol className={containerClassName} isProxy={column === 'proxy'} newStyle={NEW_FEATURES.header}>\r\n      <NameColText newStyle={!!NEW_FEATURES.header}>\r\n        {title}\r\n      </NameColText>\r\n      {isShowAllTagsButtonShown ? <ShowAllTagsBtn field={selectedTag.field} /> : null}\r\n      {hasSort && NEW_FEATURES.header ? <SorterCol sorterField={sorterField} /> : null}\r\n      {column === 'name' ? (\r\n        <ButtonQuickCreateProfile\r\n          createProfile={(): Promise<void> => quickCreateProfile(templateCtx)}\r\n        />\r\n      ) : null}\r\n    </ContainerNameCol>\r\n  );\r\n};\r\n\r\nexport default ColumnHeader;\r\n","import React, { FC, memo } from 'react';\r\n\r\nimport { IBasicTableProfile } from '../../../state/profiles-list.atom';\r\nimport TagsCell from '../../tags/components/tags';\r\nimport { IAddTag, ITagBase } from '../../tags/interfaces/tag.interface';\r\n\r\ninterface ICustomStatusCell {\r\n  profileAtom: IBasicTableProfile['atom'];\r\n  addTag: (params: IAddTag) => Promise<void>;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n  onTagsPopupOpen: (profileTagsCount: number, totalTagsCount: number) => void;\r\n}\r\n\r\nconst CustomStatusCell: FC<ICustomStatusCell> = (props) => {\r\n  const {\r\n    profileAtom,\r\n    addTag,\r\n    updateTag,\r\n    removeProfileTag,\r\n    removeTag,\r\n    onTagsPopupOpen,\r\n  } = props;\r\n\r\n  return (\r\n    <TagsCell\r\n      profileAtom={profileAtom}\r\n      addTag={addTag}\r\n      updateTag={updateTag}\r\n      removeProfileTag={removeProfileTag}\r\n      removeTag={removeTag}\r\n      onTagsPopupOpen={onTagsPopupOpen}\r\n      field='custom-status'\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(CustomStatusCell);\r\n","import { format } from 'date-fns';\r\nimport { useAtomValue } from 'jotai';\r\nimport React, { FC, memo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport TooltipCustom from '../../../ui/tooltip-custom';\r\nimport { ITableCell } from '../interfaces';\r\nimport { TextCell } from '../table/styles';\r\n\r\nexport type DateCellField = 'updatedAt' | 'lastActivity' | 'createdAt';\r\n\r\ninterface IDateCell extends ITableCell {\r\n  field: DateCellField;\r\n  hasTooltip?: boolean;\r\n}\r\n\r\nconst DateCell: FC<IDateCell> = (props) => {\r\n  const { profileAtom, field, hasTooltip } = props;\r\n\r\n  const [anchorElTooltip, setAnchorElTooltip] = useState<HTMLElement | null>(null);\r\n  const [tooltipValue, setTooltipValue] = useState<string>('');\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const profile = useAtomValue(profileAtom);\r\n  const date = profile[field];\r\n\r\n  const openTooltip = (event: React.MouseEvent<HTMLSpanElement>): void => {\r\n    if (!(hasTooltip && date)) {\r\n      return;\r\n    }\r\n\r\n    setAnchorElTooltip(event.currentTarget);\r\n    setTooltipValue(translation('tooltip.profilesTable.lastLaunched') + ' ' + format(new Date(date), 'MMMM d, yyyy pp'));\r\n  };\r\n\r\n  const closeTooltip = (): void => {\r\n    setTooltipValue('');\r\n    setAnchorElTooltip(null);\r\n  };\r\n\r\n  if (!date) {\r\n    return null;\r\n  }\r\n\r\n  if (NEW_FEATURES.header) {\r\n    const isTooltipShown = hasTooltip && anchorElTooltip && tooltipValue;\r\n\r\n    return (\r\n      <TextCell>\r\n        <span\r\n          style={{ cursor: hasTooltip ? 'pointer': 'default' }}\r\n          onMouseEnter={openTooltip}\r\n          onMouseLeave={closeTooltip}\r\n        >\r\n          {format(new Date(date), 'MMM d, yyyy p')}\r\n        </span>\r\n        {isTooltipShown ? (\r\n          <TooltipCustom\r\n            anchorEl={anchorElTooltip}\r\n            value={tooltipValue}\r\n          />\r\n        ) : null}\r\n      </TextCell>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {format(new Date(date), 'dd/MM/yyyy')}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default memo(DateCell);\r\n","import css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { textFont } from '../../../../ui/style-templates';\r\nimport { blackMain } from '../../../../ui/style-templates/colors';\r\n\r\nexport const Wrapper = styled('div')<{ newStyle: boolean }>`\r\n  align-items: center;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n\r\n  ${props => props.newStyle ? css `\r\n    ${textFont()};\r\n    font-weight: 500; \r\n    color: var(--2B2B31-profile-table-profile-name);\r\n    padding: 0;\r\n    margin-left: 0;\r\n  ` : css `\r\n    padding: 5px;\r\n    border: 1px dashed transparent;\r\n    margin-left: -5px;\r\n    color: var(--000000-profile-table-profile-name);\r\n    font-size: 14px;\r\n    line-height: 14px;\r\n  `}\r\n\r\n  :hover {\r\n    border: 1px dashed var(--CDCDCD-profile-table-profile-name);\r\n    border: ${props => props.newStyle ? '0' : '1px dashed var(--CDCDCD-profile-table-profile-name)'};\r\n  }\r\n`;\r\n\r\nexport const TextEllipsis = styled('span')`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n","import { Tooltip } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nimport { TextEllipsis, Wrapper } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport PerformanceObserverService from '../../../../services/performance-observer/performance-observer.service';\r\nimport TooltipCustom from '../../../../ui/tooltip-custom';\r\nimport { useIsProfilesSettingsOpen } from '../../../../state/profiles-settings-atom';\r\n\r\ninterface IProfileName {\r\n  profileName: string;\r\n  profileId: string;\r\n  setChangeProfileName: (profileId: string) => void;\r\n}\r\n\r\nconst ProfileName: React.FC<IProfileName> = ({\r\n  profileName,\r\n  profileId,\r\n  setChangeProfileName,\r\n}) => {\r\n  const isProfilesSettingsOpen = useIsProfilesSettingsOpen();\r\n\r\n  const [anchorElTooltip, setAnchorElTooltip] = useState<HTMLElement|null>(null);\r\n\r\n  const handleClick: React.MouseEventHandler = (event) => {\r\n    if (!isProfilesSettingsOpen) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    performanceObserverService.handleUserAction({ userAction: 'start-name-column-edit' });\r\n\r\n    setChangeProfileName(profileId);\r\n  };\r\n\r\n  const renderProfileName = (): JSX.Element => {\r\n    if (!NEW_FEATURES.header) {\r\n      return (\r\n        <Tooltip title={profileName}>\r\n          {profileName}\r\n        </Tooltip>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <TextEllipsis>\r\n          {profileName}\r\n        </TextEllipsis>\r\n        <TooltipCustom\r\n          anchorEl={anchorElTooltip}\r\n          value={profileName}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      newStyle={!!NEW_FEATURES.header}\r\n      onClick={handleClick}\r\n      onMouseEnter={(e): void => setAnchorElTooltip(e.currentTarget)}\r\n      onMouseLeave={(): void => setAnchorElTooltip(null)}\r\n    >\r\n      {renderProfileName()}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ProfileName;\r\n","import { SerializedStyles } from '@emotion/core';\r\nimport css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled('div')<{ newStyle?: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 15px;\r\n  \r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    margin-left: 8px;\r\n\r\n    * + * {\r\n      margin-left: 4px;\r\n    }\r\n  ` : null}\r\n`;\r\n","import React from 'react';\r\n\r\nconst IconAppleM1 = () => (\r\n  <svg width='25' height='20' viewBox='0 0 598 238' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n    <g clipPath='url(#clip0_513:94)'>\r\n      <path d='M195.8 185C192.334 193.086 188.045 200.793 183 208C176.3 217.6 170.8 224.2 166.6 227.9C160 233.9 153 237 145.5 237.2C140.1 237.2 133.6 235.7 126 232.5C119.364 229.622 112.232 228.06 105 227.9C97.5716 228.034 90.2384 229.596 83.4 232.5C75.7 235.6 69.5 237.2 64.7 237.4C57.5 237.7 50.3 234.5 43.1 227.8C38.5 223.8 32.8 216.9 25.9 207.2C18.162 196.085 12.0347 183.931 7.7 171.1C2.6 156.3 0 142 0 128.1C0 112.2 3.4 98.5 10.3 87C15.5206 77.982 22.9549 70.4445 31.9 65.1C40.7194 59.7798 50.8008 56.9142 61.1 56.8C66.8 56.8 74.4 58.6 83.7 62.1C93 65.6 99 67.4 101.6 67.4C103.6 67.4 110.2 65.3 121.5 61.2C132.167 57.4 141.167 55.8 148.5 56.4C168.5 58 183.5 65.9 193.5 80.1C175.6 90.9 166.8 106.1 167 125.5C167.2 140.7 172.7 153.3 183.5 163.3C188.3 167.823 193.849 171.477 199.9 174.1C198.7 177.9 197.3 181.5 195.8 185ZM150 4.8C150 16.7 145.7 27.8 137 38C126.6 50.2 113.9 57.2 100.3 56.1C100.094 54.609 99.9936 53.1052 100 51.6C100 40.2 105 28 113.8 18C118.476 12.6916 124.195 8.40254 130.6 5.4C136.572 2.32884 143.102 0.492305 149.8 0C149.9 1.6 150 3.2 150 4.8Z' fill='black'/>\r\n      <path d='M448 233.7V83.7003H447L385.92 233.7H360.14L299.06 83.7003H298.06V233.7H263.9V22.3203H307.7L372.45 183.6H373.62L438.37 22.3203H482V233.7H448Z' fill='black'/>\r\n      <path d='M560.6 58.3603H559.72L505.08 95.8603V61.1403L560.31 22.3203H597.66V233.7H560.6V58.3603Z' fill='black'/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id='clip0_513:94'>\r\n        <rect width='597.66' height='237.42' fill='var(--FFFFFF)'/>\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nexport default IconAppleM1;\r\n","import React from 'react';\r\n\r\nconst IconLinuxProfileTable = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\"><path d=\"M20.581 19.049c-.55-.446-.336-1.431-.907-1.917.553-3.365-.997-6.331-2.845-8.232-1.551-1.595-1.051-3.147-1.051-4.49 0-2.146-.881-4.41-3.55-4.41-2.853 0-3.635 2.38-3.663 3.738-.068 3.262.659 4.11-1.25 6.484-2.246 2.793-2.577 5.579-2.07 7.057-.237.276-.557.582-1.155.835-1.652.72-.441 1.925-.898 2.78-.13.243-.192.497-.192.74 0 .75.596 1.399 1.679 1.302 1.461-.13 2.809.905 3.681.905.77 0 1.402-.438 1.696-1.041 1.377-.339 3.077-.296 4.453.059.247.691.917 1.141 1.662 1.141 1.631 0 1.945-1.849 3.816-2.475.674-.225 1.013-.879 1.013-1.488 0-.39-.139-.761-.419-.988zm-9.147-10.465c-.319 0-.583-.258-1-.568-.528-.392-1.065-.618-1.059-1.03 0-.283.379-.37.869-.681.526-.333.731-.671 1.249-.671.53 0 .69.268 1.41.579.708.307 1.201.427 1.201.773 0 .355-.741.609-1.158.868-.613.378-.928.73-1.512.73zm1.665-5.215c.882.141.981 1.691.559 2.454l-.355-.145c.184-.543.181-1.437-.435-1.494-.391-.036-.643.48-.697.922-.153-.064-.32-.11-.523-.127.062-.923.658-1.737 1.451-1.61zm-3.403.331c.676-.168 1.075.618 1.078 1.435l-.31.19c-.042-.343-.195-.897-.579-.779-.411.128-.344 1.083-.115 1.279l-.306.17c-.42-.707-.419-2.133.232-2.295zm-2.115 19.243c-1.963-.893-2.63-.69-3.005-.69-.777 0-1.031-.579-.739-1.127.248-.465.171-.952.11-1.343-.094-.599-.111-.794.478-1.052.815-.346 1.177-.791 1.447-1.124.758-.937 1.523.537 2.15 1.85.407.851 1.208 1.282 1.455 2.225.227.871-.71 1.801-1.896 1.261zm6.987-1.874c-1.384.673-3.147.982-4.466.299-.195-.563-.507-.927-.843-1.293.539-.142.939-.814.46-1.489-.511-.721-1.555-1.224-2.61-2.04-.987-.763-1.299-2.644.045-4.746-.655 1.862-.272 3.578.057 4.069.068-.988.146-2.638 1.496-4.615.681-.998.691-2.316.706-3.14l.62.424c.456.337.838.708 1.386.708.81 0 1.258-.466 1.882-.853.244-.15.613-.302.923-.513.52 2.476 2.674 5.454 2.795 7.15.501-1.032-.142-3.514-.142-3.514.842 1.285.909 2.356.946 3.67.589.241 1.221.869 1.279 1.696l-.245-.028c-.126-.919-2.607-2.269-2.83-.539-1.19.181-.757 2.066-.997 3.288-.11.559-.314 1.001-.462 1.466zm4.846-.041c-.985.38-1.65 1.187-2.107 1.688-.88.966-2.044.503-2.168-.401-.131-.966.36-1.493.572-2.574.193-.987-.023-2.506.431-2.668.295 1.753 2.066 1.016 2.47.538.657 0 .712.222.859.837.092.385.219.709.578 1.09.418.447.29 1.133-.635 1.49zm-8-13.006c-.651 0-1.138-.433-1.534-.769-.203-.171.05-.487.253-.315.387.328.777.675 1.281.675.607 0 1.142-.519 1.867-.805.247-.097.388.285.143.382-.704.277-1.269.832-2.01.832z\"/></svg>\r\n);\r\n\r\nexport default IconLinuxProfileTable;","import { Icon, Tooltip } from 'antd';\r\nimport React from 'react';\r\n\r\nimport { OsType } from '../../../../../types';\r\nimport IconAppleM1 from '../../../../../ui/icons/IconAppleM1';\r\nimport IconLinuxProfileTable from '../../../../../ui/icons/IconLinuxProfileTable';\r\n\r\ninterface ITooltipOsIcon {\r\n  os: OsType;\r\n  isM1?: boolean;\r\n}\r\n\r\nconst TooltipOsIcon: React.FC<ITooltipOsIcon> = (props) => {\r\n  const { os, isM1 } = props;\r\n\r\n  const OSIcons = {\r\n    mac: {\r\n      icon: isM1 ? (\r\n        <IconAppleM1 />\r\n      ) : (\r\n        <Icon style={{ position: 'relative', bottom: '1px' }} type='apple' />\r\n      ),\r\n      title: isM1 ? 'Apple M1' : 'Mac OS',\r\n    },\r\n    lin: {\r\n      icon: (\r\n        <span style={{ position: 'relative', top: 1 }}>\r\n          <IconLinuxProfileTable />\r\n        </span>\r\n      ),\r\n      title: 'Linux',\r\n    },\r\n    android: {\r\n      icon: <Icon type='android' />,\r\n      title: 'Android',\r\n    },\r\n    win: {\r\n      icon: <Icon style={{ position: 'relative', top: 1 }} type='windows' />,\r\n      title: 'Windows',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={OSIcons[os].title}>\r\n      {OSIcons[os].icon}\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default TooltipOsIcon;\r\n","import { Icon } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { Wrapper } from './styles';\r\nimport TooltipOsIcon from './tooltip-os-icon';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { OsType } from '../../../../types';\r\nimport { IconCircle, IconPin, IconUser2 } from '../../../../ui/gologin-header/icons';\r\nimport { IconWrapperWithDescription } from '../../../../ui/gologin-header/icons/wrapper';\r\nimport { greenMain, greyInformers } from '../../../../ui/style-templates/colors';\r\nimport TooltipCustom from '../../../../ui/tooltip-custom';\r\n\r\ninterface IProfileNameIcons {\r\n  os: OsType;\r\n  isM1?: boolean;\r\n  isPinned?: boolean;\r\n  isShared?: boolean;\r\n  isNewProfile?: boolean;\r\n}\r\n\r\nconst ProfileNameIcons: React.FC<IProfileNameIcons> = (props) => {\r\n  const [anchorElTooltip, setAnchorElTooltip] = useState<HTMLElement|null>(null);\r\n  const [tooltipText, setTooltipText] = useState<string>('');\r\n  const { os, isM1, isPinned, isShared, isNewProfile } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  if (!NEW_FEATURES.header) {\r\n    return (\r\n      <Wrapper onClick={(event): void => event.stopPropagation()}>\r\n        <TooltipOsIcon os={os} isM1={false} />\r\n        {isPinned ? <Icon type='pushpin' style={{ marginLeft: 4 }} /> : null}\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper newStyle={NEW_FEATURES.header} onClick={(event): void => event.stopPropagation()}>\r\n      {isShared ? (\r\n        <IconWrapperWithDescription\r\n          colorIconType='activeGray'\r\n          onMouseEnter={(event): void => {\r\n            setAnchorElTooltip(event.currentTarget);\r\n            setTooltipText(translation('tooltip.profilesTable.sharedProfile'));\r\n          }}\r\n          onMouseLeave={(): void => setAnchorElTooltip(null)}\r\n          iconColor='var(--B5B5BA-profile-table-profile-name-icons)'\r\n          iconType='stroke'\r\n        >\r\n          <IconUser2 padding={0} />\r\n        </IconWrapperWithDescription>\r\n      ) : null}\r\n      {isPinned ? (\r\n        <IconWrapperWithDescription\r\n          colorIconType='activeGray'\r\n          onMouseEnter={(event): void => {\r\n            setAnchorElTooltip(event.currentTarget);\r\n            setTooltipText(translation('tooltip.profilesTable.pinnedProfile'));\r\n          }}\r\n          onMouseLeave={(): void => setAnchorElTooltip(null)}\r\n          iconColor='var(--B5B5BA-profile-table-profile-name-icons)'\r\n          iconType='stroke'\r\n        >\r\n          <IconPin padding={0} />\r\n        </IconWrapperWithDescription>\r\n      ) : null}\r\n      {isNewProfile ? (\r\n        <IconWrapperWithDescription\r\n          colorIconType='green'\r\n          onMouseEnter={(event): void => {\r\n            setAnchorElTooltip(event.currentTarget);\r\n            setTooltipText(translation('tooltip.profilesTable.newProfile'));\r\n          }}\r\n          onMouseLeave={(): void => setAnchorElTooltip(null)}\r\n          iconColor='var(--00A987-profile-table-profile-name-icons)'\r\n          iconType='stroke'\r\n        >\r\n          <IconCircle padding={0} />\r\n        </IconWrapperWithDescription>\r\n      ) : null}\r\n      <TooltipCustom anchorEl={anchorElTooltip} value={tooltipText} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ProfileNameIcons;\r\n","import { keyframes } from '@emotion/core';\r\nimport css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { textFont } from '../../../../ui/style-templates';\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const ProfileSettingsBtnWrapper = styled('div')<{ newStyle: boolean; newDrawer: boolean }>`\r\n  height: 100%;\r\n  border-radius: 4px;\r\n\r\n  visibility: hidden;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  right: 0;\r\n  padding-left: ${(props): string => props.newDrawer ? '8px' : '0'};\r\n  padding-right: 0;\r\n  width: 68px;\r\n  z-index: 99;\r\n\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  letter-spacing: 0.2px;\r\n  color: var(--98989F-profile-table);\r\n  background-color: var(--F9F9F9-profile-table-profile-settings-button);\r\n\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-align: end;\r\n  vertical-align: middle;\r\n\r\n  cursor: pointer;\r\n  animation: ${fadeIn} 0.2s ease-in-out;\r\n\r\n  ${(props): SerializedStyles|null => props.newDrawer ? css`\r\n    width: auto;\r\n  ` : null}\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    ${textFont()};\r\n  ` : null}\r\n  \r\n  &:hover {\r\n    color: var(--222222);\r\n  }\r\n`;\r\n\r\nexport const Text = styled('span')``;\r\n\r\nexport const IconWrapper = styled('div')`\r\n  margin-left: 6px;\r\n\r\n  svg {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import { keyframes } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\n\r\nconst zoomBigIn = keyframes`\r\n  0% {\r\n    transform: scale(0.8);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n// The components below are based on TagsInfoContainer, etc.\r\nexport const InfoContainer = styled('div')`\r\n  width: 250px;\r\n  height: 32px;\r\n  border-radius: 4px;\r\n  margin-left: -121px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  \r\n  position: absolute;\r\n  bottom: 11px; // different from the original one\r\n  z-index: 120;\r\n  \r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  letter-spacing: 0.25px;\r\n\r\n  // ↓ different from the original one\r\n  animation: ${zoomBigIn} 0.1s cubic-bezier(0.08, 0.82, 0.17, 1) 0.8s both;\r\n`;\r\n\r\nexport const InfoBlock = styled('div')`\r\n  padding: 12px 16px; // different from the original one\r\n  border-radius: 4px;\r\n  position: absolute;\r\n\r\n  background-color: var(--FFFFFF-profile-table-profile-settings-button);\r\n  box-shadow: 0 1px 4px var(--00000003-profile-table-profile-settings-button), 0 4px 8px var(--00000005-profile-table-profile-settings-button),\r\n    0 1px 12px var(--0000001F-profile-table-profile-settings-button);\r\n`;\r\n\r\nexport const Info = styled('div')`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  color: var(--767676-profile-table-profile-settings-button);\r\n\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n","import Popper from '@material-ui/core/Popper';\r\nimport React from 'react';\r\n\r\nimport { InfoBlock, InfoContainer, Info } from './styles';\r\n\r\ninterface IProfileSettingsBtnTooltip {\r\n  isVisible: boolean;\r\n  anchorEl: HTMLElement | null;\r\n  children: React.FC | string;\r\n}\r\n\r\nconst ProfileSettingsBtnTooltip: React.FC<IProfileSettingsBtnTooltip> = (\r\n  props,\r\n) => {\r\n  const { isVisible, anchorEl, children } = props;\r\n\r\n  return (\r\n    <Popper\r\n      open={isVisible}\r\n      anchorEl={anchorEl}\r\n      placement='top'\r\n      style={{\r\n        zIndex: 11000,\r\n        pointerEvents: 'none',\r\n      }}\r\n    >\r\n      <InfoContainer>\r\n        <InfoBlock>\r\n          <Info>\r\n            {children}\r\n          </Info>\r\n        </InfoBlock>\r\n      </InfoContainer>\r\n    </Popper>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsBtnTooltip;\r\n","import React from 'react';\r\n\r\nconst IconProfileSettingsBtnArrow: React.FC = () => (\r\n  <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M3.5 0.5L9.5 6L3.5 11.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconProfileSettingsBtnArrow;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IconWrapper, ProfileSettingsBtnWrapper, Text } from './styles';\r\nimport ProfileSettingsBtnTooltip from './tooltip';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport IconProfileSettingsBtnArrow from '../../../../ui/icons/IconProfileSettingsBtnArrow';\r\nimport TooltipCustom from '../../../../ui/tooltip-custom';\r\n\r\ninterface IProfileSettingsBtn {\r\n  openProfileSettings: (event: React.MouseEvent) => void;\r\n}\r\n\r\nconst ProfileSettingsBtn: React.FC<IProfileSettingsBtn> = (props) => {\r\n  const { openProfileSettings } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\r\n  const [isTooltipVisible, setIsTooltipVisible] = useState<boolean>(false);\r\n  const [anchorElTooltip, setAnchorElTooltip] = useState<HTMLElement|null>(null);\r\n\r\n  const [shouldMount, setShouldMount] = useState<boolean>(false);\r\n\r\n  const wrapperRef = useRef<HTMLDivElement|null>(null);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (shouldMount) {\r\n      return;\r\n    }\r\n\r\n    window.requestIdleCallback(\r\n      () => setShouldMount(true),\r\n      { timeout: 400 },\r\n    );\r\n  }, [shouldMount]);\r\n\r\n  useEffect(() => {\r\n    setAnchorEl(wrapperRef.current);\r\n  }, []);\r\n\r\n  if (!shouldMount) {\r\n    return null;\r\n  }\r\n\r\n  const renderTooltip = (): JSX.Element => {\r\n    if (NEW_FEATURES.header) {\r\n      return (\r\n        <TooltipCustom\r\n          anchorEl={anchorElTooltip}\r\n          value={translation('quickSettings.openQuickSettingBtnText') || 'Open quick profile settings'}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ProfileSettingsBtnTooltip\r\n        isVisible={isTooltipVisible}\r\n        anchorEl={anchorEl}\r\n      >\r\n        {translation('quickSettings.openQuickSettingBtnText') || 'Open quick profile settings'}\r\n      </ProfileSettingsBtnTooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProfileSettingsBtnWrapper\r\n        ref={wrapperRef}\r\n        onClick={openProfileSettings}\r\n        onMouseEnter={(event): void => {\r\n          NEW_FEATURES.header ? setAnchorElTooltip(event.currentTarget) : setIsTooltipVisible(true);\r\n        }}\r\n        onMouseLeave={(): void => {\r\n          NEW_FEATURES.header ? setAnchorElTooltip(null) : setIsTooltipVisible(false);\r\n        }}\r\n        newStyle={!!NEW_FEATURES.header}\r\n        newDrawer={!!NEW_FEATURES.drawer}\r\n      >\r\n        <Text>\r\n          {translation(NEW_FEATURES.drawer ? 'profilesTable.openQuickSettings.settings' : 'quickSettings.details')}\r\n        </Text>\r\n        <IconWrapper>\r\n          <IconProfileSettingsBtnArrow />\r\n        </IconWrapper>\r\n      </ProfileSettingsBtnWrapper>\r\n      {renderTooltip()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProfileSettingsBtn);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const IconWrapper = styled('div')`\r\n  margin-right: 7px;\r\n  margin-top: 3px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { IconWrapper } from './styles';\r\nimport IconSharing from '../../../../ui/icons/IconSharing';\r\n\r\ninterface ISharingIcon {\r\n  isShared: boolean;\r\n}\r\n\r\nconst SharingIcon: React.FC<ISharingIcon> = (props) => {\r\n  const { isShared } = props;\r\n\r\n  if (!isShared) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div onClick={(event): void => event.stopPropagation()}>\r\n      <IconWrapper>\r\n        <IconSharing />\r\n      </IconWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SharingIcon;\r\n","import css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { ProfileSettingsBtnWrapper } from './profile-settings-btn/styles';\r\n\r\nexport const Row = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 12px;\r\n  position: relative; // to properly (absolutely) position <ProfileSettingsBtn />\r\n`;\r\n\r\nexport const ContainerTable = styled('div')<{ newStyle: boolean; isEditMode?: boolean }>`\r\n  height: 100%;\r\n  padding: 16px;\r\n\r\n  ${props => (props.newStyle || props.isEditMode) && css `\r\n    padding: 14px 22px 14px 6px;\r\n  `}\r\n\r\n  :hover {\r\n    ${ProfileSettingsBtnWrapper} {\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ContainerName = styled('div')`\r\n  position: relative;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  &:hover {\r\n    ${ProfileSettingsBtnWrapper} {\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ContainerButtons = styled('div')`\r\n  justify-content: flex-end;\r\n  display: flex;\r\n  padding-left: 10px;\r\n`;\r\n","import React from 'react';\r\n\r\nconst IconNewProfile = () => (\r\n  <div style={{ display: 'inline-block', marginTop: 7, marginRight: 4, marginLeft: 1 }}>\r\n    <svg width=\"20\" height=\"12\" viewBox=\"0 0 20 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <mask id=\"path-1-inside-1_0_1\" fill=\"var(--FFFFFF)\">\r\n        <rect width=\"20\" height=\"12\" rx=\"1\"/>\r\n      </mask>\r\n      <rect width=\"20\" height=\"12\" rx=\"1\" stroke=\"var(--00B86D)\" strokeWidth=\"12\" mask=\"url(#path-1-inside-1_0_1)\"/>\r\n      <path d=\"M6.46875 9H5.48047L2.94531 4.96484V9H1.95703V3.3125H2.94531L5.48828 7.36328V3.3125H6.46875V9ZM10.9609 6.46094H8.625V8.21094H11.3555V9H7.63672V3.3125H11.3281V4.10938H8.625V5.67969H10.9609V6.46094ZM16.6211 7.59375L17.4961 3.3125H18.4766L17.1641 9H16.2188L15.1367 4.84766L14.0312 9H13.082L11.7695 3.3125H12.75L13.6328 7.58594L14.7188 3.3125H15.5469L16.6211 7.59375Z\" fill=\"var(--FFFFFF)\"/>\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nexport default IconNewProfile;\r\n","import React, { useCallback } from 'react';\r\n\r\nimport ProfileName from './profile-name';\r\nimport ProfileNameIcons from './profile-name-icons';\r\nimport ProfileSettingsBtn from './profile-settings-btn';\r\nimport SharingIcon from './sharing-icon';\r\nimport { ContainerName } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { closeProfilesSettings, toggleProfilesTableProfileSettings } from '../../../state/profiles-settings-atom';\r\nimport IconNewProfile from '../../../ui/icons/IconNewProfile';\r\n\r\ninterface INameCellCore {\r\n  profileName: string;\r\n  profile: IProfile;\r\n  setChangeProfileName: (profileId: string) => void;\r\n}\r\n\r\nconst NameCellCore: React.FC<INameCellCore> = (props) => {\r\n  const {\r\n    profileName,\r\n    profile,\r\n    setChangeProfileName,\r\n  } = props;\r\n\r\n  const {\r\n    id: profileId,\r\n    os,\r\n    isM1,\r\n    isPinned,\r\n    sharedEmails = [],\r\n    lastActivity,\r\n  } = profile;\r\n\r\n  const isShared = profile.isShared || !!sharedEmails.length;\r\n\r\n  const handleProfileSettings = useCallback((event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n    toggleProfilesTableProfileSettings(profileId);\r\n  }, [profileId]);\r\n\r\n  return (\r\n    <ContainerName\r\n      onClick={(event): void => {\r\n        event.stopPropagation();\r\n        closeProfilesSettings();\r\n      }}\r\n    >\r\n      {!NEW_FEATURES.header ? <SharingIcon isShared={isShared} /> : null}\r\n      <ProfileName\r\n        profileName={profileName}\r\n        profileId={profileId}\r\n        setChangeProfileName={setChangeProfileName}\r\n      />\r\n      {!lastActivity && !NEW_FEATURES.header && <IconNewProfile />}\r\n      <ProfileNameIcons\r\n        os={os}\r\n        isM1={isM1}\r\n        isPinned={isPinned}\r\n        isShared={isShared}\r\n        isNewProfile={!lastActivity}\r\n      />\r\n      <ProfileSettingsBtn openProfileSettings={handleProfileSettings} />\r\n    </ContainerName>\r\n  );\r\n};\r\n\r\nexport default React.memo(NameCellCore);\r\n","import css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { textFont } from '../../../../ui/style-templates';\r\n\r\nexport const Input = styled('input')<{ newStyle: boolean }>`\r\n  width: 100%;\r\n  height: 26px; // to match the height of the div that contains the name of the profile\r\n  padding: 5px;\r\n  border: 1px solid transparent;\r\n  border-radius: 4px;\r\n  margin-left: -5px;\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n\r\n  font-family: Roboto;\r\n  font-size: 14px;\r\n  line-height: 14px;\r\n  color: var(--000000-profile-table-profile-name-edit);\r\n  \r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  \r\n  &:focus {\r\n    border: ${props => props.newStyle ? 'none' : '1px solid var(--CDCDCD-profile-table-profile-name-edit)'};\r\n    outline: none !important;\r\n    color: ${props => props.newStyle ? 'var(--535358-profile-table-profile-name-edit)' : 'var(--000000-profile-table-profile-name-edit)'};\r\n    box-shadow: none;\r\n  }\r\n\r\n  ${props => props.newStyle && css `\r\n    ${textFont()};\r\n    border-width: 0;\r\n    padding: 0;\r\n    height: 20px;\r\n    font-weight: 500; \r\n    color: var(--535358-profile-table-profile-name-edit);\r\n    background-color: transparent;\r\n    margin-left: 0;\r\n  `}\r\n`;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Input } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { IProfile } from '../../../../interfaces';\r\nimport { randomWords } from '../../../common/randomizer';\r\nimport { updateProfileName } from '../../../drawer/api';\r\nimport PerformanceObserverService from '../../../../services/performance-observer/performance-observer.service';\r\n\r\ninterface IProfileEdit {\r\n  profileName: string;\r\n  profile: IProfile;\r\n  setProfiles: (set: (prevProfiles: IProfile[]) => IProfile[]) => void;\r\n  setChangeProfileName: (profileId: string) => void;\r\n}\r\n\r\nconst ProfileEdit: React.FC<IProfileEdit> = ({\r\n  profileName,\r\n  profile,\r\n  setProfiles,\r\n  setChangeProfileName,\r\n}) => {\r\n  const [inputValue, setInputValue] = useState<string>(profileName);\r\n\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    ref.current?.select();\r\n  }, []);\r\n\r\n  const getTrimmedOrRandomName = (name: string): string =>\r\n    name.trim().replace(/\\s{2,}/g, ' ') || randomWords();\r\n\r\n  const saveProfileName = async (): Promise<void> => {\r\n    const name = getTrimmedOrRandomName(inputValue);\r\n\r\n    updateProfileName({\r\n      id: profile.id,\r\n      name,\r\n    });\r\n\r\n    setProfiles(profiles => profiles.map((profileFromTheList) => {\r\n      if (profileFromTheList?.id === profile?.id) {\r\n        return {\r\n          ...profileFromTheList,\r\n          name,\r\n          defaultProps: {\r\n            ...profileFromTheList?.defaultProps,\r\n            profileNameIsDefault: false,\r\n          },\r\n        };\r\n      }\r\n\r\n      return profileFromTheList;\r\n    }));\r\n  };\r\n\r\n  const handleChange: React.FormEventHandler<HTMLInputElement> = (event) => {\r\n    event.preventDefault();\r\n    setInputValue(event.currentTarget.value);\r\n  };\r\n\r\n  const handleKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (\r\n    event,\r\n  ) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    saveProfileName();\r\n    setChangeProfileName('id');\r\n  };\r\n\r\n  const handleBlur: React.FormEventHandler<HTMLInputElement> = () => {\r\n    saveProfileName();\r\n    setChangeProfileName('id');\r\n  };\r\n\r\n  const handleClick: React.MouseEventHandler<HTMLInputElement> = (event) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      id='profileNameId'\r\n      ref={ref}\r\n      value={inputValue}\r\n      onChange={handleChange}\r\n      onKeyDown={handleKeyDown}\r\n      onBlur={handleBlur}\r\n      onClick={handleClick}\r\n      newStyle={!!NEW_FEATURES.header}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import { atom, getDefaultStore, useAtomValue } from 'jotai';\r\n\r\nconst profilesTableEditingProfileNameAtom = atom<string | null>(null);\r\n\r\nconst useProfilesTableEditingProfileName = (): string | null => useAtomValue(profilesTableEditingProfileNameAtom);\r\nexport const useIsEditingProfileName = (profileId: string): boolean => useProfilesTableEditingProfileName() === profileId;\r\n\r\nconst getProfilesTableEditingProfileName = (): string | null => getDefaultStore().get(profilesTableEditingProfileNameAtom);\r\nexport const setProfilesTableEditingProfileName = (newEditingProfileNameId: string | null): void => getDefaultStore()\r\n  .set(profilesTableEditingProfileNameAtom, newEditingProfileNameId);\r\n","import { css } from '@emotion/core';\r\nimport { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nexport const ContainerButtons = styled('div')<{ newStyle?: boolean }>`\r\n  display: flex;\r\n  background-color: inherit;\r\n\r\n  ${(props): SerializedStyles => props.newStyle ? css`\r\n    align-items: center;\r\n    justify-content: end;\r\n    gap: 8px;\r\n    margin-right: 14px;\r\n  ` : css`\r\n    justify-content: flex-end;\r\n  `};\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { ContainerButtons } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { useProfileRunStatus } from '../../../state/profile-run-statuses.atom';\r\nimport { IProfileRunStatus } from '../../../state/profiles-list.atom';\r\nimport { ILaunchProfileOrbita } from '../components/interfaces/launch-profile-orbita.interface';\r\nimport RunProfileButton from '../run-button';\r\n\r\nconst stopPropagation: React.MouseEventHandler<HTMLDivElement> = (event) => event.stopPropagation();\r\n\r\ninterface IRunButtonCell {\r\n  profile: IProfile;\r\n  // TODO create child components\r\n  // instead of this `renderDropDownMenu` method from profiles table\r\n  renderDropDownMenu: (profile: IProfile & IProfileRunStatus) => JSX.Element | null;\r\n  browserUpdating: boolean;\r\n  versionLoadingNow?: string;\r\n  launchProfileOrbita: (opts: ILaunchProfileOrbita) => void;\r\n}\r\n\r\nconst RunButtonCell: React.FC<IRunButtonCell> = (props) => {\r\n  const { profile, renderDropDownMenu, browserUpdating, versionLoadingNow, launchProfileOrbita } = props;\r\n\r\n  const profileRunStatus = useProfileRunStatus(profile.id);\r\n\r\n  const [shouldMountDropDown, setShouldMountDropDown] = useState<boolean>(!NEW_FEATURES.header);\r\n\r\n  useEffect(() => {\r\n    if (shouldMountDropDown) {\r\n      return;\r\n    }\r\n\r\n    window.requestIdleCallback(\r\n      () => setShouldMountDropDown(true),\r\n      { timeout: 400 },\r\n    );\r\n  }, [shouldMountDropDown]);\r\n\r\n  const profileWithRunStatus: IProfile & IProfileRunStatus = {\r\n    ...profileRunStatus,\r\n    ...profile,\r\n  };\r\n\r\n  if (!NEW_FEATURES.header) {\r\n    return (\r\n      <ContainerButtons onClick={stopPropagation}>\r\n        <RunProfileButton\r\n          profile={profileWithRunStatus}\r\n          browserUpdating={browserUpdating}\r\n          versionLoadingNow={versionLoadingNow}\r\n          launchProfileOrbita={launchProfileOrbita}\r\n        />\r\n        {shouldMountDropDown ? renderDropDownMenu(profileWithRunStatus) : <div style={{ width: 20, height: 20 }} />}\r\n      </ContainerButtons>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center', backgroundColor: 'inherit' }}>\r\n      <ContainerButtons\r\n        newStyle={NEW_FEATURES.header}\r\n        onClick={stopPropagation}\r\n      >\r\n        <RunProfileButton\r\n          profile={profileWithRunStatus}\r\n          browserUpdating={browserUpdating}\r\n          versionLoadingNow={versionLoadingNow}\r\n          launchProfileOrbita={launchProfileOrbita}\r\n        />\r\n      </ContainerButtons>\r\n      {shouldMountDropDown ? renderDropDownMenu(profileWithRunStatus) : <div style={{ width: 20, height: 20 }} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(RunButtonCell);\r\n","import { PrimitiveAtom, useAtomValue } from 'jotai';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport NameCellCore from './name-cell-core';\r\nimport ProfileEdit from './profile-edit';\r\nimport { ContainerButtons, ContainerTable, Row } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { IProfileRunStatus } from '../../../state/profiles-list.atom';\r\nimport { openProfilesSettings } from '../../../state/profiles-settings-atom';\r\nimport {\r\n  setProfilesTableEditingProfileName,\r\n  useIsEditingProfileName,\r\n} from '../../../state/profiles-table-editing-profile-name.atom';\r\nimport { parseTranslatedKey } from '../../../utils/translation.utils';\r\nimport { ILaunchProfileOrbita } from '../components/interfaces/launch-profile-orbita.interface';\r\nimport RunButtonCell from '../run-button-cell';\r\n\r\nexport interface INameCell {\r\n  profileAtom: PrimitiveAtom<IProfile>;\r\n  setProfiles: (set: (prevProfiles: IProfile[]) => IProfile[]) => void;\r\n  renderDropDownMenu: (profile: IProfile & IProfileRunStatus) => JSX.Element | null;\r\n  browserUpdating: boolean;\r\n  versionLoadingNow?: string;\r\n  launchProfileOrbita: (opts: ILaunchProfileOrbita) => void;\r\n}\r\n\r\nconst NameCell: React.FC<INameCell> = (props) => {\r\n  const {\r\n    profileAtom,\r\n    setProfiles,\r\n    renderDropDownMenu,\r\n    browserUpdating,\r\n    versionLoadingNow,\r\n    launchProfileOrbita,\r\n  } = props;\r\n\r\n  const profile = useAtomValue(profileAtom);\r\n  const { id: profileId } = profile;\r\n  const isEditingName = useIsEditingProfileName(profileId);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  let { name: profileName } = profile;\r\n  if (profile.defaultProps) {\r\n    const { profileNameIsDefault = false } = profile.defaultProps;\r\n    if (profile.isAutoGenerated && profileNameIsDefault) {\r\n      profileName = parseTranslatedKey(translation('profiles.firstProfileName'));\r\n    }\r\n  }\r\n\r\n  if (isEditingName) {\r\n    return (\r\n      <ContainerTable isEditMode={true} newStyle={!!NEW_FEATURES.header} onClick={(): void => openProfilesSettings([profileId])}>\r\n        <Row>\r\n          <ProfileEdit\r\n            profileName={profileName}\r\n            profile={profile}\r\n            setProfiles={setProfiles}\r\n            setChangeProfileName={setProfilesTableEditingProfileName}\r\n          />\r\n          <ContainerButtons>\r\n            <RunButtonCell\r\n              profile={profile}\r\n              renderDropDownMenu={renderDropDownMenu}\r\n              browserUpdating={browserUpdating}\r\n              versionLoadingNow={versionLoadingNow}\r\n              launchProfileOrbita={launchProfileOrbita}\r\n            />\r\n          </ContainerButtons>\r\n        </Row>\r\n      </ContainerTable>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ContainerTable newStyle={!!NEW_FEATURES.header} >\r\n      <Row>\r\n        <NameCellCore\r\n          {...props}\r\n          setChangeProfileName={setProfilesTableEditingProfileName}\r\n          profile={profile}\r\n          profileName={profileName}\r\n        />\r\n        <ContainerButtons>\r\n          <RunButtonCell\r\n            profile={profile}\r\n            renderDropDownMenu={renderDropDownMenu}\r\n            browserUpdating={browserUpdating}\r\n            versionLoadingNow={versionLoadingNow}\r\n            launchProfileOrbita={launchProfileOrbita}\r\n          />\r\n        </ContainerButtons>\r\n      </Row>\r\n    </ContainerTable>\r\n  );\r\n};\r\n\r\nexport default React.memo(NameCell);\r\n","import { Button } from 'antd';\r\nimport React, { FC, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AddFirstProfileTitle, FirstProfileButtonContainer } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { ITemplatesCtx, templatesContext } from '../../../state';\r\nimport { IconPlus } from '../../../ui/gologin-header/icons';\r\nimport { IconCopy } from '../../../ui/gologin-header/icons/icon-copy';\r\n\r\ninterface INoProfilesPlaceholder {\r\n  quickCreateProfile: (templateCtx: ITemplatesCtx) => Promise<void>;\r\n}\r\n\r\nconst NoProfilesPlaceholder: FC<INoProfilesPlaceholder> = (props) => {\r\n  const { quickCreateProfile } = props;\r\n\r\n  const templateCtx = useContext(templatesContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  if (!NEW_FEATURES.header) {\r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Link to='/newProfile'>\r\n          <Button type='primary'>\r\n            {translation('newProfile.saveProfileBtnText')}\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <IconCopy styleType='lightGray' padding={0} margin='0 0 20px' iconColor='var(--B5B5BA-profile-table)' />\r\n      <AddFirstProfileTitle>\r\n        {translation('folders.createFirstFolder.noProfile')}\r\n      </AddFirstProfileTitle>\r\n      <FirstProfileButtonContainer\r\n        onClick={(): Promise<void> => quickCreateProfile(templateCtx)}\r\n      >\r\n        <IconPlus padding={0} styleType='lightGray' iconColor='var(--B5B5BA-profile-table)' />\r\n        <span style={{ color: 'var(--767676-profile-table)' }}>\r\n          {translation('folders.createFirstFolder.addProfile')}\r\n        </span>\r\n      </FirstProfileButtonContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoProfilesPlaceholder;\r\n","import { IProfile } from '../../interfaces';\r\nimport { normalizeTags } from '../tags/api';\r\n\r\nexport const normalizeProfilesData = (profiles: IProfile[]): IProfile[] => profiles.map((profile) => {\r\n  if (!profile.tags) {\r\n    profile.tags = [];\r\n  }\r\n\r\n  profile.tags = normalizeTags(profile.tags);\r\n\r\n  return {\r\n    ...profile,\r\n    order: profile.order ?? 1000,\r\n  };\r\n});\r\n","import { PrimitiveAtom, useAtomValue } from 'jotai';\r\nimport React, { FC, memo, useCallback } from 'react';\r\n\r\nimport Notes from './notes';\r\nimport useDelayedMount from '../../../hooks/use-should-mount.hook';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { callProfilesTableRowMeasurer } from '../../../state/profiles-table-row-measurers.atom';\r\n\r\ninterface INotesCellProps {\r\n  profileAtom: PrimitiveAtom<IProfile>;\r\n  saveProfileNotes: (profileId: string, notes: string) => void;\r\n}\r\n\r\nconst NotesCell: FC<INotesCellProps> = (props) => {\r\n  const { profileAtom, saveProfileNotes } = props;\r\n\r\n  const profile = useAtomValue(profileAtom);\r\n  const { id: profileId, notes, isAutoGenerated, defaultProps } = profile;\r\n  const isDefaultNotes = !!(isAutoGenerated && defaultProps?.profileNotesIsDefault);\r\n  const hasNotes = notes || isDefaultNotes;\r\n\r\n  const onNotesChange = useCallback(() => callProfilesTableRowMeasurer(profileId), [profileId]);\r\n\r\n  const { shouldMount } = useDelayedMount(!!hasNotes);\r\n  if (!shouldMount) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Notes\r\n      profileId={profileId}\r\n      notes={notes}\r\n      saveProfileNotes={saveProfileNotes}\r\n      isDefaultNotes={isDefaultNotes}\r\n      location='profiles-table'\r\n      onHeightPossibleChange={onNotesChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(NotesCell);\r\n","import { useAtomValue } from 'jotai';\r\nimport React, { FC } from 'react';\r\n\r\nimport { getMajorVersionByUa } from '../../common/orbita-browser';\r\nimport { ITableCell } from '../interfaces';\r\nimport { TextCell } from '../table/styles';\r\n\r\nconst OrbitaVersionCell: FC<ITableCell> = (props) => {\r\n  const { profileAtom } = props;\r\n\r\n  const { navigator } = useAtomValue(profileAtom);\r\n\r\n  return (\r\n    <TextCell>\r\n      {getMajorVersionByUa(navigator.userAgent)}\r\n    </TextCell>\r\n  );\r\n};\r\n\r\nexport default OrbitaVersionCell;\r\n","import { useAtomValue } from 'jotai';\r\nimport React, { FC } from 'react';\r\n\r\nimport { ITableCell } from './interfaces';\r\nimport { TextCell } from './table/styles';\r\nimport { IProfile } from '../../interfaces';\r\n\r\nconst OsCell: FC<ITableCell> = (props) => {\r\n  const { profileAtom } = props;\r\n\r\n  const { os, osSpec, isM1 } = useAtomValue(profileAtom);\r\n  const osNames: Record<IProfile['os'], string> = {\r\n    win: 'Windows 10',\r\n    mac: 'MacOS Intel',\r\n    lin: 'Linux',\r\n    android: 'Android',\r\n  };\r\n\r\n  let osToDisplay;\r\n\r\n  switch(true){\r\n    case os === 'mac' && (osSpec?.includes('M') || isM1):\r\n      osToDisplay = `MacOS ${osSpec || ''}`;\r\n      break;\r\n    case os === 'win' && osSpec === 'win11':\r\n      osToDisplay = 'Windows 11';\r\n      break;\r\n    default:\r\n      osToDisplay = osNames[os];\r\n  }\r\n\r\n  return (\r\n    <TextCell>\r\n      {osToDisplay}\r\n    </TextCell>\r\n  );\r\n};\r\n\r\nexport default OsCell;\r\n","import { useAtomValue } from 'jotai';\r\nimport React, { FC } from 'react';\r\n\r\nimport useDelayedMount from '../../../hooks/use-should-mount.hook';\r\nimport ProxySelector from '../../proxy/proxy-selector';\r\nimport { ITableCell } from '../interfaces';\r\n\r\nconst ProxyCell: FC<ITableCell> = (props) => {\r\n  const { profileAtom } = props;\r\n\r\n  const { id: profileId, proxy, proxyEnabled, role } = useAtomValue(profileAtom);\r\n\r\n  const hasProxy = proxyEnabled && proxy.mode !== 'none';\r\n  const { shouldMount } = useDelayedMount(!!hasProxy);\r\n  if (!shouldMount) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ProxySelector\r\n      proxy={proxy}\r\n      proxyEnabled={!!proxyEnabled}\r\n      profileId={profileId}\r\n      isInDrawer={false}\r\n      isSharedProxy={role !== 'owner'}\r\n      localProxySelectorLocation='profiles-table'\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProxyCell;\r\n","import * as Sentry from '@sentry/react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { ITemplatesCtx } from '../../../state';\r\nimport { upsertProfileRunStatuses } from '../../../state/profile-run-statuses.atom';\r\nimport { getBasicTableProfileIds, getProfilesList, mapAndSetProfilesList } from '../../../state/profiles-list.atom';\r\nimport { setProfilesTableEditingProfileName } from '../../../state/profiles-table-editing-profile-name.atom';\r\nimport { updateTemplateProfileName } from '../../../utils/parse-name-formatting';\r\nimport { getParsedName } from '../../../utils/parse-name-formatting/get-parsed-name';\r\nimport { getUserOS } from '../../../utils/user-os';\r\nimport { randomWords } from '../../common/randomizer';\r\nimport { quickCreateBrowser } from '../api';\r\nimport { callProfilesTableRowMeasurer } from '../../../state/profiles-table-row-measurers.atom';\r\n\r\nexport const createQuickProfile = async ({\r\n  workspaceId,\r\n  templateCtx,\r\n  folderName,\r\n  userLatestOrbitaVersion,\r\n}: { workspaceId: string; templateCtx: ITemplatesCtx; folderName: string; userLatestOrbitaVersion: string }): Promise<void> => {\r\n  const profilesLoaded = getProfilesList().length;\r\n  const transaction = Sentry.startTransaction({ name: 'create-quick-profile' });\r\n  transaction.setTag('loaded-profiles-count', profilesLoaded);\r\n  const prepareSpan = transaction.startChild({ op: 'prepare-data' });\r\n\r\n  const { dropFiles, singleProfileQuick = '' } = templateCtx.selectedTemplate.profileName;\r\n  let name = getParsedName(dropFiles, singleProfileQuick);\r\n  if (!name) {\r\n    name = randomWords();\r\n  }\r\n\r\n  const userOs = await getUserOS();\r\n  const needToUpdateTemplateProfileName = NEW_FEATURES.templateProfileName && dropFiles;\r\n  if (needToUpdateTemplateProfileName) {\r\n    updateTemplateProfileName(dropFiles, 1, templateCtx);\r\n  }\r\n\r\n  prepareSpan.finish();\r\n  const requestSpan = transaction.startChild({ op: 'http', description: 'create-profile-request' });\r\n\r\n  const newProfile = await quickCreateBrowser({\r\n    name,\r\n    os: userOs.name,\r\n    osSpec: userOs.spec,\r\n    workspaceId,\r\n    template: templateCtx.selectedTemplate.id,\r\n    folderName,\r\n    userLatestOrbitaVersion,\r\n  });\r\n\r\n  requestSpan.finish();\r\n  const updateSpan = transaction.startChild({ op: 'ui', description: 'update-profiles-list' });\r\n\r\n  upsertProfileRunStatuses([{ id: newProfile.id, status: 'profileStatuses.ready' }]);\r\n  mapAndSetProfilesList(profiles => {\r\n    const newProfilesList = [...profiles];\r\n    const countPinnedProfiles = newProfilesList.filter(profile => profile.isPinned).length;\r\n    newProfilesList.splice(countPinnedProfiles, 0, newProfile);\r\n\r\n    return newProfilesList;\r\n  });\r\n\r\n  updateSpan.finish();\r\n  const activateNameEditSpan = transaction.startChild({ op: 'ui', description: 'activate-name-edit' });\r\n\r\n  setProfilesTableEditingProfileName(newProfile.id);\r\n  activateNameEditSpan.finish();\r\n\r\n  const profileIds = getBasicTableProfileIds();\r\n  profileIds.forEach(profileId => callProfilesTableRowMeasurer(profileId));\r\n\r\n  transaction.finish();\r\n};\r\n","import { useAtomValue } from 'jotai';\r\nimport React, { FC, memo } from 'react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { IconUser } from '../../../ui/gologin-header/icons';\r\nimport { ITableCell } from '../interfaces';\r\nimport { Row, SharedValueContainer } from '../table/styles';\r\n\r\ninterface ISharingCell extends ITableCell {\r\n  openShareModal: (profile: IProfile) => void;\r\n}\r\n\r\nconst SharingCell: FC<ISharingCell> = (props) => {\r\n  const { profileAtom, openShareModal } = props;\r\n\r\n  const profile = useAtomValue(profileAtom);\r\n  const { sharedEmails } = profile;\r\n  let { sharesCount } = profile;\r\n  sharesCount = sharedEmails?.length || sharesCount;\r\n\r\n  if (!sharesCount) {\r\n    return null;\r\n  }\r\n\r\n  if (!NEW_FEATURES.header) {\r\n    return (\r\n      <>\r\n        <Row>\r\n          {sharesCount}\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SharedValueContainer\r\n      onClick={(): void => openShareModal(profile)}\r\n      colorIconType='activeGreen'\r\n      iconColor='var(--00A987-profile-table)'\r\n      iconHoveredColor='var(--00997A-profile-table)'\r\n      iconType='stroke'\r\n      textColor='var(--2B2B31-profile-table)'\r\n      textHoveredColor='var(--00997A-profile-table)'\r\n    >\r\n      <IconUser padding={0} margin='0 8px 0 0' />\r\n      {sharesCount}\r\n    </SharedValueContainer>\r\n  );\r\n};\r\n\r\nexport default memo(SharingCell);\r\n","import { css } from '@emotion/core';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { getDefaultColumnsSettings } from '../components/default-columns-settings';\r\n\r\nexport const ProfileStatusRow = styled('div')`\r\n  display: flex;\r\n  height: 20px;\r\n\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nexport const StatusWidthLimitterEl = styled('span')<{ width?: number; newStyle: boolean }>`\r\n  padding: 0;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: inline-block;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  ${props => css`width: ${props.width ? props.width - 16 : getDefaultColumnsSettings().status - 16}px;`};\r\n  z-index: ${(props): string => props.newStyle ? '100' : ''};\r\n\r\n  :hover {\r\n    padding-right: 16px;\r\n    z-index: ${(props): string => props.newStyle ? '104' : '59'};\r\n    overflow: visible;\r\n    width: 180px;\r\n    position: relative;\r\n    background-color: var(--F9F9F9-profile-table-status);\r\n`;\r\n\r\nexport const ErrorTooltip = styled('div')`\r\n  display: flex;\r\n`;\r\n\r\nexport const TooltipTextError = styled('div')`\r\n  margin-left: 3px;\r\n`;\r\n\r\nexport const ResyncButton = styled('div')`\r\n  margin-left: 16px;\r\n  margin-right: 3px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n\r\n  :hover path {\r\n    stroke: var(--01A886-profile-table-status);\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nconst IconResyncProfile = () => (\r\n  <svg width=\"15\" height=\"17\" viewBox=\"0 0 15 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M1 8.50121C0.999738 7.09515 1.45542 5.72691 2.29867 4.60177C3.14193 3.47663 4.32729 2.65526 5.67692 2.2609C7.02655 1.86654 8.46766 1.92044 9.78406 2.41452C11.1005 2.9086 12.2212 3.81622 12.978 5.00121\" stroke=\"var(--767676)\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M13 1V5H9\" stroke=\"var(--767676)\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M14.0014 8.5C14.0017 9.90606 13.546 11.2743 12.7028 12.3994C11.8595 13.5246 10.6741 14.3459 9.32452 14.7403C7.97489 15.1347 6.53377 15.0808 5.21738 14.5867C3.90098 14.0926 2.78029 13.185 2.02344 12\" stroke=\"var(--767676)\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M2 16V12H6\" stroke=\"var(--767676)\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconResyncProfile;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ErrorTooltip, ResyncButton, TooltipTextError } from './styles';\r\nimport { IProfileRunStatus } from '../../../state/profiles-list.atom';\r\nimport IconResyncProfile from '../../../ui/icons/IconResyncProfile';\r\n\r\nexport interface IStatusMessage {\r\n  profileId: string;\r\n  statusMessage: IProfileRunStatus['statusMessage'];\r\n  syncProfile: (profileId: string, onlyUpload?: boolean) => void;\r\n}\r\n\r\nconst StatusMessage: FC<IStatusMessage> = (props) => {\r\n  const { profileId, statusMessage, syncProfile } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  if (!statusMessage) {\r\n    return null;\r\n  }\r\n\r\n  if (typeof statusMessage === 'string') {\r\n    return (\r\n      <>\r\n        {translation(statusMessage)}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const { errorType, errorMessage, prefix } = statusMessage;\r\n  const somethingWentWrongKey = 'notifications.error.somethingWentWrong';\r\n  const translatedErrorType = translation(errorType || somethingWentWrongKey);\r\n  switch (prefix) {\r\n    case 'proxy':\r\n      return (\r\n        <div style={{ display: 'flex' }}>\r\n          {translatedErrorType}\r\n          .&nbsp;\r\n          {translation(errorMessage)}\r\n        </div>\r\n      );\r\n    case 'timezone':\r\n      return (\r\n        <div style={{ display: 'flex' }}>\r\n          {translatedErrorType}\r\n        </div>\r\n      );\r\n    case 'resync':\r\n      return (\r\n        <ErrorTooltip>\r\n          <TooltipTextError>\r\n            {translation(errorMessage || somethingWentWrongKey)}\r\n          </TooltipTextError>\r\n          <ResyncButton onClick={(): void => syncProfile(profileId, errorType.includes('uploading'))}>\r\n            <IconResyncProfile />\r\n          </ResyncButton>\r\n        </ErrorTooltip>\r\n      );\r\n    default:\r\n      return (\r\n        <>\r\n          {translation(somethingWentWrongKey)}\r\n        </>\r\n      );\r\n  }\r\n};\r\n\r\nexport default StatusMessage;\r\n","import { IProfile } from '../../../interfaces';\r\nimport { blue, greenMain, greyInformers, red } from '../../../ui/style-templates/colors';\r\n\r\nexport type StatusType = 'default'|'error'|'success'|'processing';\r\n\r\nexport const statusColor: Record<StatusType, string> = {\r\n  default: 'var(--B5B5BA-profile-table-status)',\r\n  error: 'var(--F5222D-profile-table-status)',\r\n  success: 'var(--00A987-profile-table-status)',\r\n  processing: 'var(--1890FF-profile-table-status)',\r\n};\r\n\r\nexport const getStatusTypeOfProfile = (profileStatus: IProfile['status']): StatusType => {\r\n  switch(profileStatus) {\r\n    case 'profileStatuses.ready':\r\n      return 'default';\r\n    case 'profileStatuses.error':\r\n      return 'error';\r\n    case 'profileStatuses.running':\r\n      return 'success';\r\n    default:\r\n      return 'processing';\r\n  }\r\n};\r\n","import { Badge, Icon, Tooltip } from 'antd';\r\nimport { useAtomValue } from 'jotai';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport StatusMessage from './status-message';\r\nimport { getStatusTypeOfProfile, statusColor } from './status-type';\r\nimport { ProfileStatusRow, StatusWidthLimitterEl } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { useProfileRunStatus } from '../../../state/profile-run-statuses.atom';\r\nimport { IBasicTableProfile } from '../../../state/profiles-list.atom';\r\nimport { IconEllipse } from '../../../ui/gologin-header/icons';\r\nimport { IIconWrapper } from '../../../ui/gologin-header/icons/wrapper';\r\n\r\ninterface IStatusCell {\r\n  profileAtom: IBasicTableProfile['atom'];\r\n  syncProfile: (profileId: string, onlyUpload?: boolean) => void;\r\n  statusTextWidth: number;\r\n}\r\n\r\nconst StatusCell: React.FC<IStatusCell> = (props) => {\r\n  const { profileAtom, syncProfile, statusTextWidth } = props;\r\n\r\n  const { id: profileId } = useAtomValue(profileAtom);\r\n\r\n  const { status, statusMessage, isWeb } = useProfileRunStatus(profileId);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const renderedStatus = getStatusTypeOfProfile(status);\r\n  const text = translation(status || '');\r\n  const iconProps: IIconWrapper = {\r\n    padding: 0,\r\n    margin: '0 12px 0 0',\r\n    iconColor: statusColor[renderedStatus],\r\n  };\r\n\r\n  const title = statusMessage ? (\r\n    <StatusMessage\r\n      profileId={profileId}\r\n      syncProfile={syncProfile}\r\n      statusMessage={statusMessage}\r\n    />\r\n  ) : null;\r\n\r\n  const statusElementForError = (): JSX.Element => {\r\n    if (!NEW_FEATURES.header) {\r\n      return (\r\n        <ProfileStatusRow>\r\n          <Badge dot={true} status={renderedStatus} />\r\n          <StatusWidthLimitterEl newStyle={!!NEW_FEATURES.header} width={statusTextWidth}>\r\n            {text}\r\n            <Tooltip title={title} defaultVisible={true}>\r\n              <Icon\r\n                style={{\r\n                  marginLeft: 5,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </StatusWidthLimitterEl>\r\n        </ProfileStatusRow>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ProfileStatusRow>\r\n        <IconEllipse {...iconProps} />\r\n        <Tooltip title={title} defaultVisible={true}>\r\n          <span>\r\n            {text}\r\n          </span>\r\n          <Icon\r\n            style={{\r\n              marginLeft: 5,\r\n              marginTop: 2,\r\n              opacity: 0.4,\r\n            }}\r\n            type='info-circle'\r\n          />\r\n        </Tooltip>\r\n      </ProfileStatusRow>\r\n    );\r\n  };\r\n\r\n  const processingStatusesElement = (): JSX.Element => (\r\n    <ProfileStatusRow>\r\n      {NEW_FEATURES.header ? (\r\n        <IconEllipse {...iconProps} />\r\n      ) : (\r\n        <Badge dot={true} status={renderedStatus} />\r\n      )}\r\n      <StatusWidthLimitterEl newStyle={!!NEW_FEATURES.header} width={statusTextWidth}>\r\n        {text}\r\n      </StatusWidthLimitterEl>\r\n    </ProfileStatusRow>\r\n  );\r\n\r\n  const elementExtendedStatusesForWeb = (): JSX.Element => (\r\n    <Tooltip title={title}>\r\n      {processingStatusesElement()}\r\n    </Tooltip>\r\n  );\r\n\r\n  const baseStatusElementForWeb = (): JSX.Element => (\r\n    <Tooltip title={title}>\r\n      <ProfileStatusRow>\r\n        {NEW_FEATURES.header ? (\r\n          <>\r\n            <IconEllipse {...iconProps} />\r\n            <span>\r\n              {text}\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Badge dot={true} status={renderedStatus} text={text} />\r\n        )}\r\n      </ProfileStatusRow>\r\n    </Tooltip>\r\n  );\r\n\r\n  if (isWeb) {\r\n    if (status && ['profileStatuses.ready', 'profileStatuses.running', 'profileStatuses.syncing', 'profileStatuses.error'].includes(status)) {\r\n      return baseStatusElementForWeb();\r\n    }\r\n\r\n    return elementExtendedStatusesForWeb();\r\n  }\r\n\r\n  if (status && ['profileStatuses.error'].includes(status)) {\r\n    return statusElementForError();\r\n  }\r\n\r\n  return processingStatusesElement();\r\n};\r\n\r\nexport default React.memo(StatusCell);\r\n","import { Checkbox } from 'antd';\r\nimport React, { FC } from 'react';\r\n\r\nimport { CheckboxContainer, GologinTableHeaderColumnContainer } from './styles';\r\nimport { SelectionStatus } from '../../state/profiles-table-selected-ids.atom';\r\n\r\ninterface IAllRowsSelection {\r\n  className: string;\r\n  width: number;\r\n  useSelectionStatus: () => SelectionStatus;\r\n  toggleAllRowsSelection: () => void;\r\n}\r\n\r\nconst AllRowsSelection: FC<IAllRowsSelection> = (props) => {\r\n  const { className, width, useSelectionStatus, toggleAllRowsSelection } = props;\r\n\r\n  const allRowsSelectionStatus = useSelectionStatus();\r\n  const isSelected = allRowsSelectionStatus === 'all';\r\n  const isIndeterminate = allRowsSelectionStatus === 'some';\r\n\r\n  return (\r\n    <GologinTableHeaderColumnContainer\r\n      style={{ width }}\r\n      className={className}\r\n    >\r\n      <CheckboxContainer>\r\n        <Checkbox\r\n          checked={isSelected}\r\n          onChange={toggleAllRowsSelection}\r\n          indeterminate={isIndeterminate}\r\n        />\r\n      </CheckboxContainer>\r\n    </GologinTableHeaderColumnContainer>\r\n  );\r\n};\r\n\r\nexport default AllRowsSelection;\r\n","import React, { FC } from 'react';\r\nimport { Resizable, ResizeCallbackData } from 'react-resizable';\r\n\r\nimport AllRowsSelection from './all-rows-selection';\r\nimport { SorterCol } from './sorter-col';\r\nimport { GologinTableHeaderColumnContainer, GologinTableHeaderColumnContent, ResizableHandle } from './styles';\r\nimport { NEW_FEATURES } from '../../../../feature-toggle';\r\nimport { IProfilesTableColumn } from '../../features/quickProfiles/components/interfaces/app-settings.interface';\r\nimport { DEFAULT_SORT_FIELD, DEFAULT_SORT_ORDER } from '../../features/quickProfiles/constants';\r\nimport { toggleAllProfilesSelected, useAllProfilesSelectionStatus } from '../../state/profiles-table-selected-ids.atom';\r\n\r\nexport interface IResizeProps {\r\n  onResize: (columnIndex: number, event: React.SyntheticEvent<Element>, data: ResizeCallbackData) => void;\r\n  resizeStart: () => void;\r\n  resizeEnd: () => void;\r\n}\r\n\r\nexport interface IGologinTableHeaderColumn extends IResizeProps {\r\n  column: IProfilesTableColumn;\r\n  columnIndex: number;\r\n  onSortChange: (newSortField: IProfilesTableColumn['sortField'], newSortOrder: 'ascend'|'descend') => void;\r\n}\r\n\r\nconst GologinTableHeaderColumn: FC<IGologinTableHeaderColumn> = (props) => {\r\n  const { column, columnIndex, onSortChange, onResize, resizeStart, resizeEnd } = props;\r\n  const { colName, sortField, width, minWidth, leftPadding } = column;\r\n\r\n  const onResizeHandle = (event: React.SyntheticEvent<Element>, data: ResizeCallbackData): void => {\r\n    onResize(column.originalColumnIndex ?? columnIndex, event, data);\r\n  };\r\n\r\n  const isDragEnabled = true;\r\n  const className = 'gologin-table-header-column ' + column.className;\r\n  let contentClassName = '';\r\n  if (isDragEnabled) {\r\n    contentClassName += ' dragHandler';\r\n  }\r\n\r\n  const resetSort = (): void => {\r\n    onSortChange(DEFAULT_SORT_FIELD, DEFAULT_SORT_ORDER);\r\n  };\r\n\r\n  const onColumnClick = (): void => {\r\n    if (!sortField) {\r\n      return;\r\n    }\r\n\r\n    const currSortField = localStorage.getItem('sorterField');\r\n    const currSortOrder = localStorage.getItem('sorterOrder');\r\n\r\n    if (currSortField === sortField) {\r\n      if (currSortOrder === 'ascend') {\r\n        onSortChange(sortField, 'descend');\r\n      } else if (currSortOrder === 'descend') {\r\n        resetSort();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    onSortChange(sortField, 'ascend');\r\n  };\r\n\r\n  if (colName === 'selection' as any) {\r\n    return (\r\n      <AllRowsSelection\r\n        className={className}\r\n        width={width}\r\n        useSelectionStatus={useAllProfilesSelectionStatus}\r\n        toggleAllRowsSelection={toggleAllProfilesSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Resizable\r\n      width={width}\r\n      height={0}\r\n      minConstraints={[minWidth, 0]}\r\n      handle={\r\n        <ResizableHandle\r\n          newStyle={!!NEW_FEATURES.header}\r\n          className='react-resizable-handle'\r\n          onClick={(event): void => {\r\n            event.stopPropagation();\r\n          }}\r\n        />\r\n      }\r\n      className='noselect'\r\n      onResize={onResizeHandle}\r\n      onResizeStart={resizeStart}\r\n      onResizeStop={resizeEnd}\r\n      draggableOpts={{ enableUserSelectHack: false }}\r\n    >\r\n      <GologinTableHeaderColumnContainer\r\n        style={{ width, paddingLeft: leftPadding }}\r\n        className={className}\r\n        onClick={onColumnClick}\r\n        newStyle={!!NEW_FEATURES.header}\r\n      >\r\n        <GologinTableHeaderColumnContent\r\n          className={contentClassName}\r\n        >\r\n          <span className='nowrap'>\r\n            {column.label}\r\n          </span>\r\n          {sortField && NEW_FEATURES.header ? <SorterCol sorterField={sortField} /> : null}\r\n          {column.actionsSlot}\r\n        </GologinTableHeaderColumnContent>\r\n      </GologinTableHeaderColumnContainer>\r\n    </Resizable>\r\n  );\r\n};\r\n\r\nexport default GologinTableHeaderColumn;\r\n","import React, { FC, memo } from 'react';\r\n\r\nimport GologinTableHeaderColumn, { IGologinTableHeaderColumn, IResizeProps } from './gologin-table-header-column';\r\nimport { GologinTableHeaderContainer } from './styles';\r\nimport { IProfilesTableColumn } from '../../features/quickProfiles/components/interfaces/app-settings.interface';\r\n\r\ninterface IGologinTableHeader extends IResizeProps {\r\n  columns: IProfilesTableColumn[];\r\n  onSortChange: IGologinTableHeaderColumn['onSortChange'];\r\n}\r\n\r\nconst GologinTableHeader: FC<IGologinTableHeader> = (props) => {\r\n  const { columns, ...columnProps } = props;\r\n\r\n  return (\r\n    <GologinTableHeaderContainer>\r\n      {columns.map((column, index) => (\r\n        <GologinTableHeaderColumn\r\n          key={column.colName}\r\n          column={column}\r\n          columnIndex={index}\r\n          {...columnProps}\r\n        />\r\n      ))}\r\n    </GologinTableHeaderContainer>\r\n  );\r\n};\r\n\r\nexport default memo(GologinTableHeader);\r\n","import React, { FC } from 'react';\r\n\r\nimport { RawProfileRow } from './styles';\r\nimport { useProfileSortable } from './use-profile-sortable';\r\nimport { onProfilesTableRowClick } from '../../../state/profiles-table.commands';\r\n\r\ninterface IProfileRow {\r\n  style: React.CSSProperties;\r\n  key: any;\r\n  index: number;\r\n  className?: string;\r\n}\r\n\r\nconst ProfileRow: FC<IProfileRow> = (props) => {\r\n  const {\r\n    index: rowIdx,\r\n    children,\r\n    key,\r\n    style,\r\n    className,\r\n  } = props;\r\n\r\n  let baseClassName = 'gologin-table-row';\r\n  if (className) {\r\n    baseClassName += ' ' + className;\r\n  }\r\n\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    isDragging,\r\n    relativeDropPosition,\r\n  } = useProfileSortable(rowIdx);\r\n\r\n  const handleOnClick = (): void => {\r\n    onProfilesTableRowClick(rowIdx);\r\n  };\r\n\r\n  return (\r\n    <RawProfileRow\r\n      key={key}\r\n      ref={setNodeRef}\r\n      className={baseClassName}\r\n      data-row-key={rowIdx}\r\n      {...attributes}\r\n      {...listeners}\r\n      dropPosition={relativeDropPosition}\r\n      isDragging={isDragging}\r\n      style={style}\r\n      role='row'\r\n      // eslint-disable-next-line no-undefined\r\n      tabIndex={undefined}\r\n      onClick={handleOnClick}\r\n    >\r\n      {children}\r\n    </RawProfileRow>\r\n  );\r\n};\r\n\r\nexport default ProfileRow;\r\n","import { useSortable } from '@dnd-kit/sortable';\r\nimport { useMemo } from 'react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { useDraggingProfilesState } from '../../../state/dragging-profiles-state.atom';\r\n\r\ntype RelativeDropPosition = 'top'|'bottom'|null;\r\n\r\ninterface ProfileSortable extends Pick<\r\n  ReturnType<typeof useSortable>,\r\n  'attributes'|'listeners'|'setNodeRef'|'isDragging'\r\n> {\r\n  relativeDropPosition: RelativeDropPosition;\r\n}\r\n\r\nexport const useProfileSortable = (rowIdx: number): ProfileSortable => {\r\n  const { draggingProfiles } = useDraggingProfilesState();\r\n  const draggingProfileIdx = draggingProfiles[0]?.idx || 0;\r\n\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    isOver,\r\n    isDragging,\r\n  } = useSortable({ id: `profile::${rowIdx}`, disabled: !NEW_FEATURES.dragAndDrop });\r\n\r\n  const relativeDropPosition = useMemo(() => {\r\n    let dropPosition: 'top'|'bottom'|null = null;\r\n    if (isOver) {\r\n      if (draggingProfileIdx < rowIdx) {\r\n        dropPosition = 'bottom';\r\n      } else if (draggingProfileIdx > rowIdx) {\r\n        dropPosition = 'top';\r\n      }\r\n    }\r\n\r\n    return dropPosition;\r\n  }, [isOver, rowIdx, draggingProfileIdx]);\r\n\r\n  return {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    isDragging,\r\n    relativeDropPosition,\r\n  };\r\n};\r\n","import deepEqual from 'deep-equal';\r\nimport React, { FC, memo, useEffect, useMemo } from 'react';\r\n\r\nimport { GologinTableItemCell } from './styles';\r\nimport { RowKey } from './types';\r\nimport { IProfilesTableColumn } from '../../features/quickProfiles/components/interfaces/app-settings.interface';\r\nimport ProfileRow from '../../features/quickProfiles/table/profile-row';\r\nimport { IBasicTableProfile } from '../../state/profiles-list.atom';\r\nimport { setProfilesTableRowMeasurer } from '../../state/profiles-table-row-measurers.atom';\r\n\r\ninterface IGologinTableRow {\r\n  columns: IProfilesTableColumn[];\r\n  dataItem: IBasicTableProfile;\r\n  useIsSelected: (rowKey: RowKey) => boolean;\r\n\r\n  index: number;\r\n  key: string;\r\n  style: React.CSSProperties;\r\n  measure: () => void;\r\n}\r\n\r\nconst GologinTableRow: FC<IGologinTableRow> = (props) => {\r\n  const { columns, dataItem, useIsSelected, index, key: elemKey, style, measure } = props;\r\n\r\n  const isSelected = useIsSelected(dataItem.idx);\r\n\r\n  const cells = useMemo(() => (\r\n    <>\r\n      {columns.map((column) => (\r\n        <GologinTableItemCell\r\n          key={column.colName}\r\n          style={{\r\n            minWidth: `${column.width}px`,\r\n            width: `${column.width}px`,\r\n          }}\r\n          className={column.className}\r\n        >\r\n          {column.render ? column.render('', dataItem) : <div></div>}\r\n        </GologinTableItemCell>\r\n      ))}\r\n    </>\r\n  ), [columns, dataItem]);\r\n\r\n  useEffect(() => {\r\n    measure();\r\n  }, [columns, dataItem, measure]);\r\n\r\n  useEffect(() => {\r\n    setProfilesTableRowMeasurer(index, measure);\r\n  }, [measure]);\r\n\r\n  return (\r\n    <ProfileRow\r\n      index={index}\r\n      key={elemKey}\r\n      style={style}\r\n      className={isSelected ? 'row-selected' : ''}\r\n    >\r\n      {cells}\r\n    </ProfileRow>\r\n  );\r\n};\r\n\r\nexport default memo(GologinTableRow, (prevProps, nextProps) => (\r\n  prevProps.columns === nextProps.columns &&\r\n  prevProps.dataItem === nextProps.dataItem &&\r\n  prevProps.index === nextProps.index &&\r\n  prevProps.key === nextProps.key &&\r\n  prevProps.style.top === nextProps.style.top &&\r\n  prevProps.style.height === nextProps.style.height\r\n));\r\n","import { Checkbox } from 'antd';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\n\r\nimport { CheckboxContainer } from './styles';\r\nimport { RowKey } from './types';\r\n\r\ninterface GologinTableRowSelectionCell {\r\n  rowKey: RowKey;\r\n  onToggle: (rowKey: RowKey, newIsChecked: boolean, isShiftActive: boolean) => void;\r\n  useIsSelected: (rowKey: RowKey) => boolean;\r\n}\r\n\r\nconst GologinTableRowSelectionCell: FC<GologinTableRowSelectionCell> = (props) => {\r\n  const { rowKey, useIsSelected, onToggle } = props;\r\n\r\n  const isSelected = useIsSelected(rowKey);\r\n\r\n  const [shouldMount, setShouldMount] = useState<boolean>(isSelected);\r\n\r\n  const onChange = useCallback((event: CheckboxChangeEvent) => {\r\n    const isShiftActive = !!event.nativeEvent.shiftKey;\r\n    const isChecked = event?.target.checked;\r\n    onToggle(rowKey, isChecked, isShiftActive);\r\n  }, [rowKey, onToggle]);\r\n\r\n  useEffect(() => {\r\n    if (shouldMount) {\r\n      return;\r\n    }\r\n\r\n    window.requestIdleCallback(\r\n      () => setShouldMount(true),\r\n      { timeout: 400 },\r\n    );\r\n  }, [shouldMount]);\r\n\r\n  return (\r\n    <CheckboxContainer hasPadding={true}>\r\n      {shouldMount ? <Checkbox checked={isSelected} onChange={onChange} /> : null}\r\n    </CheckboxContainer>\r\n  );\r\n};\r\n\r\nexport default GologinTableRowSelectionCell;\r\n","import { OverscanIndices, OverscanIndicesGetterParams } from 'react-virtualized';\r\n\r\nconst overscanIndicesGetter = (params: OverscanIndicesGetterParams): OverscanIndices => {\r\n  const {\r\n    cellCount,\r\n    overscanCellsCount,\r\n    startIndex,\r\n    stopIndex,\r\n  } = params;\r\n\r\n  return {\r\n    overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\r\n    overscanStopIndex: Math.min(\r\n      cellCount - 1,\r\n      stopIndex + overscanCellsCount,\r\n    ),\r\n  };\r\n};\r\n\r\nexport default overscanIndicesGetter;\r\n","import { RefObject, useEffect, useState } from 'react';\r\n\r\nconst useElementWidth = (elementRef: RefObject<HTMLElement>): number => {\r\n  const [width, setWidth] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    const handleResize = (entries: any): void => {\r\n      for (const entry of entries) {\r\n        if (entry.contentRect) {\r\n          setWidth(entry.contentRect.width);\r\n        }\r\n      }\r\n    };\r\n\r\n    const resizeObserver = new ResizeObserver(handleResize);\r\n\r\n    if (elementRef.current) {\r\n      resizeObserver.observe(elementRef.current);\r\n    }\r\n\r\n    return (): void => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return width;\r\n};\r\n\r\nexport default useElementWidth;\r\n","import React, { FC, useMemo, useRef } from 'react';\r\nimport { CellMeasurer, CellMeasurerCache, List, ListRowRenderer, WindowScroller } from 'react-virtualized';\r\n\r\nimport GologinTableHeader from './gologin-table-header';\r\nimport { IGologinTableHeaderColumn, IResizeProps } from './gologin-table-header-column';\r\nimport GologinTableRow from './gologin-table-row';\r\nimport GologinTableRowSelectionCell from './row-selection-cell';\r\nimport { GologinTableContainer, GologinTableItemList } from './styles';\r\nimport overscanIndicesGetter from './virtual-overscan-indices-getter';\r\nimport { IProfilesTableColumn } from '../../features/quickProfiles/components/interfaces/app-settings.interface';\r\nimport useElementWidth from '../../hooks/use-element-width.hook';\r\nimport { IBasicTableProfile } from '../../state/profiles-list.atom';\r\nimport { handleToggleProfileIsSelectedByIdx, useIsProfileSelected } from '../../state/profiles-table-selected-ids.atom';\r\n\r\nimport 'react-virtualized/styles.css';\r\n\r\nconst cellMeasurerCache = new CellMeasurerCache({\r\n  defaultHeight: 52,\r\n  fixedWidth: true,\r\n});\r\n\r\ninterface IGologinTableRowSelection {\r\n  columnWidth: number;\r\n}\r\n\r\ninterface IGologinTable extends IResizeProps {\r\n  dataArray: IBasicTableProfile[];\r\n  columns: IProfilesTableColumn[];\r\n  rowSelection: IGologinTableRowSelection;\r\n  onSortChange: IGologinTableHeaderColumn['onSortChange'];\r\n}\r\n\r\nconst GologinTable: FC<IGologinTable> = (props) => {\r\n  const { dataArray, columns, rowSelection, ...columnProps } = props;\r\n\r\n  const tableContainerRef = useRef<HTMLDivElement>(null);\r\n  const tableContainerWidth = useElementWidth(tableContainerRef);\r\n\r\n  const selectionColumn: IProfilesTableColumn = useMemo<IProfilesTableColumn>(() => ({\r\n    colName: 'selection' as any,\r\n    render: (_: unknown, record: IBasicTableProfile) => (\r\n      <GologinTableRowSelectionCell\r\n        useIsSelected={useIsProfileSelected}\r\n        rowKey={record.idx}\r\n        onToggle={handleToggleProfileIsSelectedByIdx}\r\n      />\r\n    ),\r\n    width: rowSelection.columnWidth,\r\n    label: '',\r\n    minWidth: rowSelection.columnWidth,\r\n    visible: true,\r\n    className: 'new-selection-cell',\r\n  }), [rowSelection]);\r\n\r\n  const shownColumns = useMemo(() => [selectionColumn, ...columns].filter((column) => column.visible), [selectionColumn, columns]);\r\n\r\n  const totalWidth = useMemo(() => {\r\n    const columnsWidth = shownColumns.reduce<number>((acc, column) => acc + column.width, 0);\r\n\r\n    return Math.max(columnsWidth, tableContainerWidth);\r\n  }, [shownColumns, tableContainerWidth]);\r\n\r\n  const rowRenderer: ListRowRenderer = (rowProps) => {\r\n    const { index, key, style, parent } = rowProps;\r\n    const dataItem = dataArray[index];\r\n    if (!dataItem) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <CellMeasurer\r\n        key={key}\r\n        cache={cellMeasurerCache}\r\n        columnIndex={0}\r\n        rowIndex={index}\r\n        parent={parent}\r\n      >\r\n        {({ measure }): JSX.Element => (\r\n          <GologinTableRow\r\n            columns={shownColumns}\r\n            dataItem={dataItem}\r\n            useIsSelected={useIsProfileSelected}\r\n            index={index}\r\n            key={key}\r\n            style={style}\r\n            measure={measure}\r\n          />\r\n        )}\r\n      </CellMeasurer>\r\n    );\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n  const rootElem = document.getElementById('root')!;\r\n\r\n  return (\r\n    <GologinTableContainer ref={tableContainerRef}>\r\n      <GologinTableHeader columns={shownColumns} {...columnProps} />\r\n      <GologinTableItemList\r\n        role='treegrid'\r\n      >\r\n        <WindowScroller scrollElement={rootElem}>\r\n          {({ height, isScrolling, onChildScroll, scrollTop }: any): JSX.Element => (\r\n            <List\r\n              tabIndex={null}\r\n              autoHeight={true}\r\n              height={height}\r\n              isScrolling={isScrolling}\r\n              onScroll={onChildScroll}\r\n              width={totalWidth}\r\n              rowCount={dataArray.length}\r\n              deferredMeasurementCache={cellMeasurerCache}\r\n              rowHeight={cellMeasurerCache.rowHeight}\r\n              rowRenderer={rowRenderer}\r\n              scrollTop={scrollTop}\r\n              overscanRowCount={8}\r\n              overscanIndicesGetter={overscanIndicesGetter}\r\n            />\r\n          )}\r\n        </WindowScroller>\r\n      </GologinTableItemList>\r\n    </GologinTableContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(GologinTable);\r\n","/* eslint-disable max-lines */\r\n// hide these warnings for now - there are ~300 this.state and this.props\r\n/* eslint-disable react/destructuring-assignment */\r\nimport {\r\n  SortableContext,\r\n} from '@dnd-kit/sortable';\r\nimport * as Sentry from '@sentry/react';\r\nimport { Checkbox, ConfigProvider, Dropdown, Icon, Menu, message } from 'antd';\r\nimport { TFunction } from 'i18next';\r\nimport React, { Component, SyntheticEvent, useEffect } from 'react';\r\nimport ReactCopyToClipboard from 'react-copy-to-clipboard';\r\nimport ReactDragListView from 'react-drag-listview';\r\nimport { TransProps, withTranslation } from 'react-i18next';\r\nimport type { ResizeCallbackData } from 'react-resizable';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { getDefaultColumnsSettings } from './default-columns-settings';\r\nimport { InfiniteScrollProfilesTable } from './infinite-scroll-profiles-table';\r\nimport { IProfilesTableColumn, IProfilesTableSettings, ProfilesTableColumn } from './interfaces/app-settings.interface';\r\nimport { IUpdateProfilesList } from './interfaces/get-profiles.interface';\r\nimport { ILaunchProfileOrbita } from './interfaces/launch-profile-orbita.interface';\r\nimport { ITransferParams } from './interfaces/transfer-params.interface';\r\nimport ProfilesMenu from './profiles-menu';\r\nimport ResizableTitle from './resizable-title';\r\nimport { DrawerDotsButton, IconMeatballsContainer } from './styles';\r\nimport TabProfiles from './tab-profile';\r\nimport { TableProfile } from './table-custom';\r\nimport { ProxyTypeColumn } from './TableColumns';\r\nimport ProxyParamCell from './TableColumns/ProxyParamColumn';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { PAGE_SIZE } from '../../../../common/constants/constants';\r\nimport { PROFILE_RUN_DEEP_LINK_EVENT_NAME, PROFILE_SHARE_DEEP_LINK_EVENT_NAME } from '../../../../common/constants/events';\r\nimport { DeepLinkProtocol } from '../../../../common/types/deep-link-protocol';\r\nimport { IUpdateProfileStatusEvent } from '../../../../electron/interfaces/profile.status.manager.interfaces';\r\nimport { DropFileStep } from '../../../hooks';\r\nimport { IProfile, IProxy } from '../../../interfaces';\r\nimport { history } from '../../../services';\r\nimport PerformanceObserverService from '../../../services/performance-observer/performance-observer.service';\r\nimport { ITagsCtx, ITemplatesCtx,  tagsContext } from '../../../state';\r\nimport { getIsMoreProfilesAvailable } from '../../../state/is-more-profiles-available.atom';\r\nimport {\r\n  getFlatProfileRunStatuses,\r\n  getProfileRunStatus,\r\n  updateProfileRunStatusesForWeb,\r\n} from '../../../state/profile-run-statuses.atom';\r\nimport {\r\n  filterProfilesByPermission, getBasicTableProfileById, getBasicTableProfileIds, getBasicTableProfiles, getProfileNamesForNotifications,\r\n  IBasicTableProfile, IProfileRunStatus,\r\n  mapAndSetProfilesList, useBasicTableProfiles,\r\n} from '../../../state/profiles-list.atom';\r\nimport { SHARE_MODAL_NAME, closeProfileTableModal, openProfileTableModal } from '../../../state/profiles-table-modal.atom';\r\nimport {\r\n  getProfilesTableSelectedIds,\r\n  updateProfilesTableSelectedIds,\r\n  useOldProfilesTableSelectedRowIndexes,\r\n} from '../../../state/profiles-table-selected-ids.atom';\r\nimport {\r\n  onUserChangeSelectedProfiles,\r\n  updateProfileStateAtFinish,\r\n  updateProfileStateAtLaunch,\r\n  updateProfileStatus,\r\n} from '../../../state/profiles-table.commands';\r\nimport { IconMeatballs } from '../../../ui/gologin-header/icons';\r\nimport IconDotsInButton from '../../../ui/icons/IconDotsInButton';\r\nimport IconSetting from '../../../ui/icons/IconSetting';\r\nimport Modal from '../../../ui/Modal';\r\nimport { INewNameProfile } from '../../../utils/parse-name-formatting/interfaces';\r\nimport { ReactError } from '../../../utils/sentry-parameters/custom-errors';\r\nimport { ITransactionObject } from '../../../utils/sentry-parameters/helper.functions.interfaces';\r\nimport {\r\n  generateBrowserIconsPromise,\r\n  getIconsFromSessionStorage,\r\n  getParamsToGenerateIcons,\r\n  removeIconsFromSessionStorage,\r\n  saveIconsToSessionStorage,\r\n} from '../../browser-system-icons';\r\nimport { requestShortCookies, sendActionAnalytics } from '../../common/api';\r\nimport { DEEP_LINKS_REDIRECT_ORIGIN, getProfileForLink } from '../../common/deep-links';\r\nimport { ICookiesListModal } from '../../common/interfaces/cookies-list-modal.interface';\r\nimport { MajorVersionOption } from '../../common/orbita-browser';\r\nimport { updateProfileNotes } from '../../drawer/api';\r\nimport ProfileDrawer from '../../drawer/components/index';\r\nimport CookiesList from '../../modalsComponents/components/cookies-manager/cookies-list';\r\nimport { IFolderChange } from '../../modalsComponents/components/folders-manager/interfaces/folder-change.interface';\r\nimport { IFoldersSelected } from '../../modalsComponents/components/folders-manager/interfaces/folders-selected.interface';\r\nimport OrbitaVersionModals from '../../modalsComponents/components/orbita-version-modals';\r\nimport HistoryModal from '../../modalsComponents/components/profile-upload-history';\r\nimport { calculateProfileDeleteOrLeave } from '../../modalsComponents/components/remove-profile-modal';\r\nimport ShareModal from '../../modalsComponents/components/share-modal';\r\nimport TransferProfileModal from '../../modalsComponents/components/transfer-profile';\r\nimport UpdateProfilesModal from '../../modalsComponents/components/update-profiles-ua/update-profiles';\r\nimport TagsCell from '../../tags/components/tags';\r\nimport { IAddTag, ITagBase } from '../../tags/interfaces/tag.interface';\r\nimport { launchProfileWeb } from '../actions';\r\nimport {\r\n  cloneProfile,\r\n  cloneWorkspaceProfiles,\r\n  IPinParams,\r\n  pin,\r\n  requestProfileFingerprint,\r\n  requestProfiles,\r\n  saveProfileTableColumns,\r\n  saveProfileTableColumnsOrder,\r\n  saveWorkspaceProfileTableColumns,\r\n  saveWorkspaceProfileTableColumnsOrder,\r\n  transferProfile,\r\n  transferToMyWorkspace,\r\n  unpin,\r\n  updateRunStatus,\r\n} from '../api';\r\nimport ColumnHeader from '../column-header';\r\nimport CustomStatusCell from '../custom-status-cell';\r\nimport DateCell, { DateCellField } from '../date-cell';\r\nimport { RenderTableCellFn } from '../interfaces';\r\nimport NameCell from '../name-cell';\r\nimport NoProfilesPlaceholder from '../no-profiles-placeholder';\r\nimport { normalizeProfilesData } from '../normalize-profiles-data';\r\nimport NotesCell from '../notes-cell';\r\nimport OrbitaVersionCell from '../orbita-version-cell';\r\nimport OsCell from '../os-cell';\r\nimport ProxyCell from '../proxy-cell';\r\nimport { createQuickProfile } from '../quick-create-profile/create-quick-profile.action';\r\nimport SharingCell from '../sharing-cell';\r\nimport StatusCell from '../status-cell';\r\nimport ProfileRow from '../table/profile-row';\r\nimport {\r\n  ContainerNameCol,\r\n  ContainerSettings,\r\n  MarginIcon,\r\n  ProfilesTabsContainer,\r\n  RowNameFolder,\r\n  TextNameFolder,\r\n} from '../table/styles';\r\nimport GologinTable from '../../../ui/gologin-table';\r\nimport { IGologinTableHeaderColumn, IResizeProps } from '../../../ui/gologin-table/gologin-table-header-column';\r\nimport ShowAllTagsBtn from './show-all-tags-btn';\r\nimport ButtonQuickCreateProfile from '../quick-create-profile';\r\n\r\nconst PROFILES_STATUS_UPDATE_TIMING = 10 * 1000;\r\nlet profileStatusUpdateIntervalId: NodeJS.Timeout;\r\n\r\nconst ROW_SELECTION = {\r\n  columnWidth: 34,\r\n};\r\n\r\nconst isElectron = !!window.require;\r\nlet ipcRenderer: Electron.IpcRenderer;\r\nif (isElectron) {\r\n  ({ ipcRenderer } = window.require('electron'));\r\n}\r\n\r\ninterface IProfileTable extends TransProps, IProfilesTableQuick {\r\n  t: TFunction;\r\n}\r\n\r\ninterface IProfilesTableQuick extends IFoldersSelected, IFolderChange {\r\n  basicTableProfiles: IBasicTableProfile[];\r\n  selectedProfileRowKeys: string[]; // used only by !header table\r\n  updateSelectedProfileIds: (newSelectedProfileIds: string[]) => void;\r\n  onProfilesTableRowClick: (rowIndex: number) => void;\r\n  profilesTableSettings: IProfilesTableSettings|null;\r\n  setProfilesTableSettings: (profilesTableSettings: IProfilesTableSettings|null) => void;\r\n  browserUpdating: boolean | undefined;\r\n  versionLoadingNow: string | undefined;\r\n  profiles: IProfile[];\r\n  foldersList: any[];\r\n  allProfilesFolderId?: string;\r\n  manageProfileFoldersList: (profilesIds: string[], folderName: string, action: string) => void;\r\n  openFoldersModal: (profileIds: string[]) => void;\r\n  setProfiles: (set: (prevProfiles: IProfile[]) => IProfile[]) => void;\r\n  requestNewProfilesPage: (params: IUpdateProfilesList) => Promise<void>;\r\n  countToScroll: number;\r\n  tableHeaderQuery: string;\r\n  addProfileToList: () => void;\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n  addTag: (params: IAddTag) => Promise<void>;\r\n  removeProfileTag: (profileIds: string[], tagId: string) => Promise<void>;\r\n  downloadSpecificOrbitaVersion: (version: string) => Promise<void>;\r\n  selectedFolderFromCtx: string;\r\n  isOrbitaVersionCompatible: (versionValue: MajorVersionOption) => Promise<boolean>;\r\n  lastWorkspaceId: string;\r\n  dropFileStep: DropFileStep;\r\n  selectedFolderId: string;\r\n  userLatestOrbitaVersion: string;\r\n}\r\n\r\ninterface IFilter {\r\n  [key: string]: string[];\r\n}\r\n\r\ndeclare interface ISorter {\r\n  field: string;\r\n  order: string;\r\n}\r\n\r\nclass PTableClass extends Component<IProfileTable> {\r\n  constructor(props: IProfileTable, context: ITagsCtx) {\r\n    super(props, context);\r\n    this.profileNameRef = React.createRef();\r\n    this.isElectron = !!window.require;\r\n\r\n    const { t: translation, profilesTableSettings } = props;\r\n\r\n    const previousSelectedFolder = localStorage.getItem('SelectedFolder');\r\n    let selectedFolder: string;\r\n    if (NEW_FEATURES.header) {\r\n      selectedFolder = this.props.selectedFolderFromCtx;\r\n    } else {\r\n      selectedFolder = previousSelectedFolder ? previousSelectedFolder : 'all';\r\n    }\r\n\r\n    const defaultColumnsOrder: ProfilesTableColumn[] = [\r\n      'name', 'status',\r\n      'notes', 'customStatus', 'tags', 'lastUpdate',\r\n      'lastLaunch', 'createdAt', 'sharing',\r\n      'proxyType', 'proxy', 'proxyPort', 'proxyUsername', 'proxyPassword', 'os', 'orbitaVersion',\r\n    ];\r\n\r\n    let columnsSettings: any = getDefaultColumnsSettings();\r\n    let columnsOrder = defaultColumnsOrder;\r\n    if (profilesTableSettings) {\r\n      if (profilesTableSettings.columnsOrder) {\r\n        const newColumns = ['customStatus', 'proxyPort', 'proxyUsername', 'proxyPassword', 'orbitaVersion'];\r\n        columnsOrder = profilesTableSettings.columnsOrder.concat(newColumns.filter((item) => !profilesTableSettings.columnsOrder.includes(item)));\r\n      }\r\n\r\n      if (profilesTableSettings.columnsSettings) {\r\n        const settingsRes: any = columnsSettings;\r\n        for (const el of profilesTableSettings.columnsSettings) {\r\n          if (el.title) {\r\n            settingsRes[el.title] = {\r\n              visible: el.visible,\r\n              width: el.width,\r\n            };\r\n          }\r\n        }\r\n        columnsSettings = settingsRes;\r\n      }\r\n    }\r\n\r\n    const columnsList: IProfilesTableColumn[] = [{\r\n      colName: 'name',\r\n      title: <ColumnHeader\r\n        column='name'\r\n        title={translation('base.name')}\r\n        enableDrag={false}\r\n        hasSort={true}\r\n        sorterField='name'\r\n        quickCreateProfile={this.quickCreateProfile}\r\n      />,\r\n      label: translation('base.name'),\r\n      dataIndex: 'name',\r\n      render: (_: unknown, record: IBasicTableProfile) => (\r\n        <NameCell\r\n          profileAtom={record.atom}\r\n          setProfiles={this.props.setProfiles}\r\n          browserUpdating={!!this.props.browserUpdating}\r\n          versionLoadingNow={this.props.versionLoadingNow}\r\n          renderDropDownMenu={this.renderDropDownMenu}\r\n          launchProfileOrbita={this.launchProfileOrbita}\r\n        />\r\n      ),\r\n      minWidth: 240,\r\n      width: columnsSettings.name.width < 240 ? 240 : columnsSettings.name.width,\r\n      visible: columnsSettings.name.visible,\r\n      sortField: 'name',\r\n      className: NEW_FEATURES.header ? 'new-name-cell no-drag' : 'no-drag name-cell',\r\n      actionsSlot: <ButtonQuickCreateProfile\r\n        createProfile={(templateCtx): Promise<void> => this.quickCreateProfile(templateCtx)}\r\n      />,\r\n    }, {\r\n      // TODO: rename to 'state' everywhere (after final decision is made)\r\n      colName: 'status',\r\n      title: <ColumnHeader\r\n        column='status'\r\n        title={translation('profiles.tableColumns.state')}\r\n      />,\r\n      label: translation('profiles.tableColumns.state'),\r\n      dataIndex: 'status',\r\n      render: this.renderState,\r\n      minWidth: 110,\r\n      width: columnsSettings.status.width,\r\n      visible: columnsSettings.status.visible,\r\n      className: NEW_FEATURES.header ? 'new-status-cell draggable' : 'draggable',\r\n    }, {\r\n      colName: 'notes',\r\n      title: <ColumnHeader\r\n        column='notes'\r\n        title={translation('quickSettings.notes.title')}\r\n      />,\r\n      label: translation('quickSettings.notes.title'),\r\n      dataIndex: 'notes',\r\n      render: this.renderNotes,\r\n      minWidth: 120,\r\n      width: columnsSettings.notes.width,\r\n      visible: columnsSettings.notes.visible,\r\n      className: NEW_FEATURES.header ? 'new-notes-cell draggable' : 'notes-cell draggable',\r\n      onCellClick: (_, event) => event.stopPropagation(),\r\n    }, {\r\n      colName: 'tags',\r\n      title: <ColumnHeader\r\n        column='tags'\r\n        title={translation('quickSettings.tags.title')}\r\n      />,\r\n      label: translation('quickSettings.tags.title'),\r\n      dataIndex: 'tags',\r\n      render: this.renderTags,\r\n      minWidth: 120,\r\n      width: columnsSettings.tags.width,\r\n      visible: columnsSettings.tags.visible,\r\n      className: NEW_FEATURES.header ? 'new-tags-cell draggable' : 'tags-cell draggable',\r\n      onCellClick: (_, event) => event.stopPropagation(),\r\n      actionsSlot: <ShowAllTagsBtn field='tags' />,\r\n    }, {\r\n      colName: 'customStatus',\r\n      title: <ColumnHeader\r\n        column='customStatus'\r\n        title={translation('profiles.tableColumns.customStatus')}\r\n      />,\r\n      label: translation('profiles.tableColumns.customStatus'),\r\n      dataIndex: 'customStatus',\r\n      render: this.renderCustomStatus,\r\n      minWidth: 120,\r\n      width: columnsSettings.customStatus.width,\r\n      visible: columnsSettings.customStatus.visible,\r\n      className: NEW_FEATURES.header ? 'new-tags-cell draggable' : 'tags-cell draggable',\r\n      onCellClick: (_, event) => event.stopPropagation(),\r\n      actionsSlot: <ShowAllTagsBtn field='custom-status' />,\r\n    }, {\r\n      colName: 'lastUpdate',\r\n      title: <ColumnHeader\r\n        column='lastUpdate'\r\n        title={translation('profiles.tableColumns.lastUpdate')}\r\n        hasSort={true}\r\n        sorterField='updatedAt'\r\n      />,\r\n      label: translation('profiles.tableColumns.lastUpdate'),\r\n      dataIndex: 'updatedAt',\r\n      render: (_, profile) => this.renderDate(profile, 'updatedAt'),\r\n      minWidth: 120,\r\n      width: columnsSettings.lastUpdate.width,\r\n      visible: columnsSettings.lastUpdate.visible,\r\n      sortField: 'updatedAt',\r\n      className: 'draggable',\r\n    }, {\r\n      colName: 'lastLaunch',\r\n      title: <ColumnHeader\r\n        column='lastLaunch'\r\n        title={translation('profiles.tableColumns.lastLaunch')}\r\n        hasSort={true}\r\n        sorterField='lastActivity'\r\n      />,\r\n      label: translation('profiles.tableColumns.lastLaunch'),\r\n      dataIndex: 'lastActivity',\r\n      render: (_, profile) => this.renderDate(profile, 'lastActivity'),\r\n      minWidth: 120,\r\n      width: columnsSettings.lastLaunch.width,\r\n      visible: columnsSettings.lastLaunch.visible,\r\n      sortField: 'lastActivity',\r\n      className: 'draggable',\r\n    }, {\r\n      colName: 'createdAt',\r\n      title: <ColumnHeader\r\n        column='createdAt'\r\n        title={translation('profiles.tableColumns.createdAt')}\r\n        hasSort={true}\r\n        sorterField='createdAt'\r\n      />,\r\n      label: translation('profiles.tableColumns.createdAt'),\r\n      dataIndex: 'createdAt',\r\n      render: (_, profile) => this.renderDate(profile, 'createdAt'),\r\n      minWidth: 120,\r\n      width: columnsSettings.createdAt.width,\r\n      visible: columnsSettings.createdAt.visible,\r\n      sortField: 'createdAt',\r\n      className: 'draggable',\r\n    }, {\r\n      colName: 'sharing',\r\n      title: <ColumnHeader\r\n        column='sharing'\r\n        title={translation('profiles.tableColumns.sharing')}\r\n        hasSort={true}\r\n        sorterField='sharedEmails'\r\n      />,\r\n      label: translation('profiles.tableColumns.sharing'),\r\n      dataIndex: 'sharedEmails',\r\n      render: this.renderSharing,\r\n      minWidth: 120,\r\n      width: columnsSettings.sharing.width,\r\n      visible: columnsSettings.sharing.visible,\r\n      sortField: 'sharedEmails',\r\n      className: 'draggable',\r\n    }, {\r\n      colName: 'proxyType',\r\n      title: <ColumnHeader\r\n        column='proxyType'\r\n        title={translation('profiles.tableColumns.proxyType')}\r\n        hasSort={true}\r\n        sorterField='proxyType'\r\n      />,\r\n      label: translation('profiles.tableColumns.proxyType'),\r\n      dataIndex: 'proxyType',\r\n      render: this.renderProxyType,\r\n      minWidth: 120,\r\n      width: columnsSettings.proxyType.width,\r\n      visible: columnsSettings.proxyType.visible,\r\n      sortField: 'proxyType',\r\n      className: 'draggable',\r\n    }, {\r\n      colName: 'proxy',\r\n      title: <ColumnHeader\r\n        column='proxy'\r\n        title={translation('proxy.title')}\r\n      />,\r\n      label: translation('proxy.title'),\r\n      dataIndex: 'proxy',\r\n      render: this.renderProxy,\r\n      minWidth: 120,\r\n      width: columnsSettings.proxy.width,\r\n      visible: columnsSettings.proxy.visible,\r\n      className: NEW_FEATURES.header ? 'new-proxy-cell draggable' : 'proxy-cell draggable',\r\n      onCellClick: (_, event) => event.stopPropagation(),\r\n      leftPadding: 24,\r\n    }, {\r\n      colName: 'proxyPort',\r\n      title: <ColumnHeader\r\n        column='proxyPort'\r\n        title={translation('profiles.tableColumns.proxyPort')}\r\n      />,\r\n      label: translation('profiles.tableColumns.proxyPort'),\r\n      dataIndex: 'proxyPort',\r\n      render: (_, profile) => this.renderProxyParam(profile, 'port'),\r\n      minWidth: 120,\r\n      width: columnsSettings.proxyPort.width,\r\n      visible: columnsSettings.proxyPort.visible,\r\n      className: 'draggable',\r\n      onCellClick: (_, event) => event.stopPropagation(),\r\n    }, {\r\n      colName: 'proxyUsername',\r\n      title: <ColumnHeader\r\n        column='proxyUsername'\r\n        title={translation('profiles.tableColumns.proxyUsername')}\r\n      />,\r\n      label: translation('profiles.tableColumns.proxyUsername'),\r\n      dataIndex: 'proxyUsername',\r\n      render: (_, profile) => this.renderProxyParam(profile, 'username'),\r\n      minWidth: 120,\r\n      width: columnsSettings.proxyUsername.width,\r\n      visible: columnsSettings.proxyUsername.visible,\r\n      className: 'draggable',\r\n      onCellClick: (_, event) => event.stopPropagation(),\r\n    }, {\r\n      colName: 'proxyPassword',\r\n      title: <ColumnHeader\r\n        column='proxyPassword'\r\n        title={translation('profiles.tableColumns.proxyPassword')}\r\n      />,\r\n      label: translation('profiles.tableColumns.proxyPassword'),\r\n      dataIndex: 'proxyPassword',\r\n      render: (_, profile) => this.renderProxyParam(profile, 'password'),\r\n      minWidth: 120,\r\n      width: columnsSettings.proxyPassword.width,\r\n      visible: columnsSettings.proxyPassword.visible,\r\n      className: 'draggable',\r\n      onCellClick: (_, event) => event.stopPropagation(),\r\n    }, {\r\n      colName: 'os',\r\n      title: <ColumnHeader\r\n        column='os'\r\n        title={translation('base.os')}\r\n        hasSort={true}\r\n        sorterField='os'\r\n      />,\r\n      label: translation('base.os'),\r\n      dataIndex: 'os',\r\n      render: this.renderOs,\r\n      minWidth: 120,\r\n      width: columnsSettings.os.width,\r\n      visible: columnsSettings.os.visible,\r\n      sortField: 'os',\r\n      className: 'draggable',\r\n    }, {\r\n      colName: 'orbitaVersion',\r\n      title: <ColumnHeader\r\n        column='orbitaVersion'\r\n        title={translation('profiles.tableColumns.orbitaVersion')}\r\n      />,\r\n      label: translation('profiles.tableColumns.orbitaVersion'),\r\n      dataIndex: 'navigator',\r\n      render: this.renderOrbitaVersion,\r\n      minWidth: 120,\r\n      width: columnsSettings.orbitaVersion.width,\r\n      visible: columnsSettings.orbitaVersion.visible,\r\n      className: 'draggable',\r\n    }];\r\n\r\n    const columns = columnsOrder.map((colName: string) => columnsList.find((col: any) => col.colName === colName)).filter(Boolean);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      profilesLoading: false,\r\n      cookiesListModalVisible: false,\r\n      modalVisiblee: false,\r\n      modalVisibleSharing: false,\r\n      sharingProfile: null,\r\n      // eslint-disable-next-line react/no-unused-state\r\n      windowWidth: 0,\r\n      selectedFolder,\r\n      filtersStatus: (localStorage.getItem('filtersStatus') as string)?.split(',') || null,\r\n      sorterField: localStorage.getItem('sorterField') || null,\r\n      sorterOrder: localStorage.getItem('sorterOrder') || null,\r\n      idCookiesList: '',\r\n      nameCookiesList: '',\r\n      isProfileHistoryModalOpened: false,\r\n      profileHistoryModalProfileId: '',\r\n      updateProfilesModal: false,\r\n      isBrowserVersionCompatible: true,\r\n      isOrbitaUpdateModalVisible: false,\r\n      isOrbitaIncompatibleCannotRunModalVisible: false,\r\n      areOrbitaModalButtonsDisabled: false,\r\n      updateProfileModalProfileId: '',\r\n      isResizeMode: false,\r\n      columnsSettings,\r\n      columns,\r\n    };\r\n  }\r\n\r\n  // eslint-disable-next-line react/sort-comp\r\n  protected isElectron: boolean;\r\n  protected profileNameRef: any;\r\n  state: any;\r\n\r\n  static contextType = tagsContext;\r\n\r\n  handleResize = (): void => this.setState({\r\n    // eslint-disable-next-line react/no-unused-state\r\n    windowWidth: window.innerWidth,\r\n  });\r\n\r\n  changeSelectedFolder = async (selectedFolder: string): Promise<void> => {\r\n    localStorage.setItem('SelectedFolder', selectedFolder);\r\n    this.setState({ selectedFolder });\r\n    await this.updateProfilesList();\r\n  };\r\n\r\n  updateProfilesRunningInWeb = async (): Promise<void> => {\r\n    const flatProfileRunStatuses = getFlatProfileRunStatuses();\r\n    const profilesRunningInWeb = await updateRunStatus({\r\n      profiles: flatProfileRunStatuses,\r\n      isNewRoute: true,\r\n      isPinging: true,\r\n      shouldSendAnalytics: false,\r\n    });\r\n\r\n    updateProfileRunStatusesForWeb(profilesRunningInWeb);\r\n  };\r\n\r\n  onUpdateProfileStatus = (_: unknown, args: IUpdateProfileStatusEvent): void => {\r\n    const { profileId, status, message: statusMessage } = args;\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    const profileStatusSpan = performanceObserverService.createProfileRunSpan(profileId, status);\r\n\r\n    const isProfileLoadingFinished = ['profileStatuses.ready', 'profileStatuses.error', 'profileStatuses.running'].includes(status);\r\n    if (!isProfileLoadingFinished) {\r\n      updateProfileStatus(args);\r\n      profileStatusSpan.finish();\r\n\r\n      return;\r\n    }\r\n\r\n    if (status !== 'profileStatuses.running') {\r\n      updateProfileStatus(args);\r\n      profileStatusSpan.finish();\r\n\r\n      return;\r\n    }\r\n\r\n    updateProfileStateAtFinish(profileId, status);\r\n\r\n    profileStatusSpan.finish();\r\n    performanceObserverService.finishProfileRunTransaction(profileId);\r\n  };\r\n\r\n  componentDidMount = async (): Promise<void> => {\r\n    if (this.isElectron && ipcRenderer) {\r\n      ipcRenderer.on('update-profile-status', this.onUpdateProfileStatus);\r\n\r\n      const urlCurrent = new URL(location.href.replace('#', ''));\r\n      const profileIdOrName = urlCurrent.searchParams.get('profile-id-or-name');\r\n      const deepLinkProtocol = urlCurrent.searchParams.get('protocol') === 'http' ? 'http' : 'custom';\r\n      if (profileIdOrName) {\r\n        this.handleDeepLinkRun(null, { profileIdOrName, deepLinkProtocol });\r\n      }\r\n\r\n      ipcRenderer.on(PROFILE_RUN_DEEP_LINK_EVENT_NAME, async (event, args) => {\r\n        await this.handleDeepLinkRun(event, args);\r\n      });\r\n    } else {\r\n      profileStatusUpdateIntervalId = setInterval(this.updateProfilesRunningInWeb, PROFILES_STATUS_UPDATE_TIMING);\r\n    }\r\n\r\n    this.normalizeData();\r\n    this.setState({ loading: false });\r\n    this.handleResize();\r\n    window.addEventListener('resize', this.handleResize);\r\n  };\r\n\r\n  componentDidUpdate(prevProps: any): void {\r\n    if (NEW_FEATURES.header && prevProps.selectedFolderFromCtx !== this.props.selectedFolderFromCtx) {\r\n      this.updateProfilesList();\r\n    }\r\n\r\n    if (this.profileNameRef.current !== null) {\r\n      const noteElement = document.getElementById('profileNameId');\r\n      const range = document.createRange();\r\n      const sel = window.getSelection();\r\n      range.setStart((noteElement as any).childNodes[0], 0);\r\n      range.setEnd((noteElement as any).childNodes[0], this.profileNameRef.current.innerText.length);\r\n      (sel as any).removeAllRanges();\r\n      (sel as any).addRange(range);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount = (): void => {\r\n    if (!isElectron) {\r\n      clearInterval(profileStatusUpdateIntervalId);\r\n    }\r\n\r\n    window.removeEventListener('resize', this.handleResize);\r\n    if (!ipcRenderer) {\r\n      return;\r\n    }\r\n\r\n    ipcRenderer.removeAllListeners('update-profile-status');\r\n    ipcRenderer.removeAllListeners(PROFILE_RUN_DEEP_LINK_EVENT_NAME);\r\n  };\r\n\r\n  private updateProfilesTableSettingsState = (columns: IProfilesTableColumn[]): IProfilesTableSettings => {\r\n    const columnsOrder: string[] = [];\r\n    const columnsSettings: IProfilesTableColumn[] = columns.map((column: IProfilesTableColumn) => {\r\n      if (column.colName) {\r\n        columnsOrder.push(column.colName);\r\n      }\r\n\r\n      return {\r\n        title: column.colName,\r\n        width: column.width,\r\n        minWidth: column.minWidth,\r\n        visible: column.visible,\r\n      };\r\n    });\r\n\r\n    const res: IProfilesTableSettings = {\r\n      columnsSettings,\r\n      columnsOrder,\r\n    };\r\n\r\n    this.props.setProfilesTableSettings(res);\r\n\r\n    return res;\r\n  };\r\n\r\n  private handleResizeCol = (index: number) =>\r\n    (_: React.SyntheticEvent<Element>, { size }: ResizeCallbackData): void => {\r\n      const newColumns = [...this.state.columns];\r\n      newColumns[index] = {\r\n        ...newColumns[index],\r\n        width: size.width,\r\n      };\r\n\r\n      this.setState({\r\n        columns: newColumns,\r\n      });\r\n    };\r\n\r\n  private handleResizeColumn: IResizeProps['onResize'] = (columnIndex, _, data) => {\r\n    const newColumns = [...this.state.columns];\r\n    newColumns[columnIndex] = {\r\n      ...newColumns[columnIndex],\r\n      width: data.size.width,\r\n    };\r\n\r\n    this.setState({\r\n      columns: newColumns,\r\n    });\r\n  };\r\n\r\n  private changeProfileNames = (newProfileData: INewNameProfile[]): void => {\r\n    mapAndSetProfilesList(profiles => profiles.map(profile => {\r\n      const currentProfile = newProfileData.find(({ profileId }) => profileId === profile.id);\r\n      if (!currentProfile) {\r\n        return profile;\r\n      }\r\n\r\n      return {\r\n        ...profile,\r\n        name: currentProfile.name || '',\r\n      };\r\n    }));\r\n  };\r\n\r\n  private changeProfilesData = (profileIds: string[], newData: Partial<IProfile>): void => {\r\n    mapAndSetProfilesList(profiles => profiles.map(profile => {\r\n      if (!profileIds.includes(profile.id)) {\r\n        return profile;\r\n      }\r\n\r\n      return {\r\n        ...profile,\r\n        ...newData,\r\n      };\r\n    }));\r\n  };\r\n\r\n  private normalizeData = (): void => {\r\n    mapAndSetProfilesList(profiles => normalizeProfilesData(profiles));\r\n    this.checkProfilesStatus();\r\n  };\r\n\r\n  checkProfilesStatus = (): Promise<void> => isElectron && ipcRenderer.invoke('check-profiles');\r\n\r\n  navigateToUpdatePage = (profileId: string): void => {\r\n    const tableProfileIdx = getBasicTableProfileById(profileId)?.idx;\r\n    const el = document.querySelector(`[data-row-key=\"${tableProfileIdx}\"]`) as HTMLElement | null;\r\n    if (!el) {\r\n      return;\r\n    }\r\n\r\n    const tableY = 224;\r\n    const rect = el.getBoundingClientRect();\r\n    const profileToScrollToY = el.offsetTop - (rect.top + window.scrollY) + tableY;\r\n\r\n    sessionStorage.setItem('profileToScrollY', `${profileToScrollToY}`);\r\n\r\n    history.push(`/update/${profileId}`);\r\n  };\r\n\r\n  private checkboxColumnStatus = (checkbox: ProfilesTableColumn, _columnName: string): JSX.Element | null => {\r\n    const column = this.state.columns.find((col: IProfilesTableColumn) => col.colName === checkbox);\r\n\r\n    if (!column) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <RowNameFolder\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={(): Promise<void> => this.checkState(column)}\r\n      >\r\n        <TextNameFolder>\r\n          {column.label}\r\n        </TextNameFolder>\r\n        <MarginIcon >\r\n          <Checkbox\r\n            checked={column.visible}\r\n          />\r\n        </MarginIcon>\r\n      </RowNameFolder>\r\n    );\r\n  };\r\n\r\n  renderSharing: RenderTableCellFn = (_, profile) => (\r\n    <SharingCell profileAtom={profile.atom} openShareModal={this.openShareModal} />\r\n  );\r\n\r\n  // LOGIC //\r\n\r\n  updateProfilesList = (): void => {\r\n    this.setState({ profilesLoading: true });\r\n    this.props.requestNewProfilesPage({ search: this.props.tableHeaderQuery }).then(() => {\r\n      this.normalizeData();\r\n\r\n      this.props.updateSelectedProfileIds([]);\r\n      this.setState({\r\n        profilesLoading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  private getCurrentStatus = (profileId: string): boolean => {\r\n    const profileRunStatus = getProfileRunStatus(profileId);\r\n\r\n    return ['profileStatuses.ready', 'profileStatuses.error'].includes(profileRunStatus.status);\r\n  };\r\n\r\n  updateProfileFingerprints = (updatedProfiles: IProfile[]): void => {\r\n    mapAndSetProfilesList(profiles => profiles.map((profile) => {\r\n      const updatedProfile = updatedProfiles.find(pp => profile.id === pp.id);\r\n\r\n      if (!updatedProfile) {\r\n        return profile;\r\n      }\r\n\r\n      return {\r\n        ...profile,\r\n        ...updatedProfile,\r\n        navigator: {\r\n          ...profile.navigator,\r\n          ...updatedProfile.navigator,\r\n        },\r\n      };\r\n    }));\r\n  };\r\n\r\n  private shouldLaunchAfterVersionCheck = async (options: ILaunchProfileOrbita, transaction: ITransactionObject): Promise<boolean> => {\r\n    const span = transaction.startChild({ op: 'check-browser-version-before-launch' });\r\n    const { profile } = options;\r\n    const { versionToDownload, pickedVersionIfSkipDownload } =\r\n      await ipcRenderer.invoke('check-supported-orbita', { key: 'userAgent', value: profile.navigator.userAgent });\r\n\r\n    const isBrowserVersionCompatible = await this.props.isOrbitaVersionCompatible(versionToDownload).catch(() => true);\r\n    if (!versionToDownload) {\r\n      span.finish();\r\n\r\n      return true;\r\n    }\r\n\r\n    const stateIfCompatible = {\r\n      versionToUpdate: versionToDownload,\r\n      launchProfileOpts: { ...options, skipOrbitaVersionCheck: true, pickedVersionIfSkipDownload },\r\n      isOrbitaUpdateModalVisible: true,\r\n    };\r\n\r\n    const stateIfIncompatible = { isOrbitaIncompatibleCannotRunModalVisible: true, launchProfileOpts: { pickedVersionIfSkipDownload } };\r\n    const stateToUpdate = this.state.isBrowserVersionCompatible === isBrowserVersionCompatible ? stateIfCompatible : stateIfIncompatible;\r\n    this.setState(stateToUpdate);\r\n    span.finish();\r\n\r\n    return false;\r\n  };\r\n\r\n  private launchProfileOrbita = async (options: ILaunchProfileOrbita): Promise<void | null> => {\r\n    const {\r\n      profile,\r\n      multipleLaunch = false,\r\n      updateStatusToSync = true,\r\n      skipOrbitaVersionCheck = false,\r\n      automation,\r\n      iconsStartData,\r\n      deepLinkProtocol,\r\n    } = options;\r\n\r\n    const { id: profileId } = profile;\r\n\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    const transaction = performanceObserverService.createProfileRunTransaction(profileId);\r\n\r\n    const isReady = this.getCurrentStatus(profileId);\r\n\r\n    // need to check `isLinkRun`, since `isReady` does not show the relevant status for profiles, that are not loaded in the table\r\n    if (!(deepLinkProtocol || isReady)) {\r\n      return;\r\n    }\r\n\r\n    if (!skipOrbitaVersionCheck) {\r\n      const browserIconsData = getParamsToGenerateIcons(profile);\r\n      const [shouldLaunch, iconsPngs] = await Promise.all([\r\n        this.shouldLaunchAfterVersionCheck(options, transaction),\r\n        generateBrowserIconsPromise(browserIconsData, transaction),\r\n      ]);\r\n\r\n      saveIconsToSessionStorage(profileId, iconsPngs, browserIconsData.iconDesignVersion);\r\n      if (!shouldLaunch) {\r\n        transaction.finish();\r\n\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const updateRunStatusSpan = transaction.startChild({ op: 'ui', description: 'update-run-status' });\r\n    const finalUpdateStatusToSync = !deepLinkProtocol && updateStatusToSync;\r\n    updateProfileStateAtLaunch(profile, finalUpdateStatusToSync);\r\n    updateRunStatusSpan?.finish();\r\n\r\n    const iconsData = iconsStartData || getIconsFromSessionStorage(profileId);\r\n    const startData = {\r\n      profileId,\r\n      proxyInfo: profile.proxy,\r\n      proxyEnabled: profile.proxyEnabled,\r\n      automation,\r\n      icons: iconsData,\r\n      traceId: transaction.traceId,\r\n      deepLinkProtocol,\r\n    };\r\n\r\n    removeIconsFromSessionStorage(profileId, iconsData.pngs.length >= 1);\r\n\r\n    const loadingResult = ipcRenderer && await ipcRenderer.invoke('start-profile', startData);\r\n    if (loadingResult === 'cantBeRunning' && !multipleLaunch) {\r\n      message.error('Profile cannot be running. Other users are using this profile now.');\r\n      this.checkProfilesStatus();\r\n      performanceObserverService.finishProfileRunTransaction(profileId);\r\n    }\r\n  };\r\n\r\n  handleDeepLinkRun = async (\r\n    _event: Electron.IpcRendererEvent|null,\r\n    args: { profileIdOrName: string; deepLinkProtocol: DeepLinkProtocol },\r\n  ): Promise<void> => {\r\n    const { profileIdOrName = '', deepLinkProtocol = 'custom' } = args;\r\n    let workspaceId = '';\r\n    try {\r\n      const workspaceInfoJson = localStorage.getItem('workspace') || '';\r\n      const workspaceInfo = JSON.parse(workspaceInfoJson);\r\n      workspaceId = workspaceInfo.id;\r\n    } catch {\r\n      return;\r\n    }\r\n\r\n    if (!(profileIdOrName && workspaceId)) {\r\n      const transactionName = 'profile-or-wid-in-open-link-is-falsy';\r\n      Sentry.captureException(new ReactError(transactionName.replaceAll('-', ' ')), (scope) => {\r\n        scope.setLevel('error');\r\n        scope.setTransactionName(transactionName);\r\n        scope.setFingerprint([transactionName]);\r\n\r\n        return scope;\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const profile = await getProfileForLink({\r\n      workspaceId,\r\n      profileIdOrName,\r\n      requestProfileFingerprint,\r\n      requestProfiles,\r\n    });\r\n\r\n    if (!profile) {\r\n      const transactionName = 'profile-in-open-link-not-found';\r\n      Sentry.captureException(new ReactError(transactionName.replaceAll('-', ' ')), (scope) => {\r\n        scope.setLevel('error');\r\n        scope.setTransactionName(transactionName);\r\n        scope.setFingerprint([transactionName]);\r\n\r\n        return scope;\r\n      });\r\n\r\n      return message.error(this.props.t('tableProfiles.notification.profileInUrlNotFound'));\r\n    }\r\n\r\n    await this.launchProfileOrbita({ profile, deepLinkProtocol }).catch(() => null);\r\n  };\r\n\r\n  closeModall = (): void => {\r\n    this.setState({ modalVisiblee: false });\r\n  };\r\n\r\n  cloneProfile = async (profileId: string): Promise<void> => {\r\n    sendActionAnalytics('clicked clone profile');\r\n\r\n    const { selectedFolder } = this.state;\r\n    const { lastWorkspaceId } = this.props;\r\n\r\n    const folder = (!NEW_FEATURES.header && selectedFolder === 'all') ? '' : selectedFolder;\r\n    if (NEW_FEATURES.workspaces) {\r\n      await cloneWorkspaceProfiles(lastWorkspaceId, [profileId]);\r\n    } else {\r\n      await cloneProfile(profileId, folder);\r\n    }\r\n\r\n    history.replace('/');\r\n  };\r\n\r\n  modifyProfilePin = async (profileId: string, setTo: 'pinned'|'unpinned'): Promise<void> => {\r\n    const pinOptions: IPinParams = { profileId };\r\n    if (NEW_FEATURES.workspaces) {\r\n      pinOptions.workspaceId = this.props.lastWorkspaceId;\r\n    }\r\n\r\n    const selectedFolderName = NEW_FEATURES.header ?\r\n      this.props.selectedFolderFromCtx :\r\n      this.state.selectedFolder;\r\n\r\n    if (selectedFolderName && selectedFolderName !== 'all') {\r\n      const selectedFolder = this.props.foldersList\r\n        .find(folder => folder?.name === selectedFolderName);\r\n\r\n      if (!selectedFolder) {\r\n        localStorage.removeItem('SelectedFolder');\r\n      }\r\n\r\n      pinOptions.folderId = selectedFolder?.id;\r\n    }\r\n\r\n    if (!pinOptions.folderId && NEW_FEATURES.dragAndDrop) {\r\n      pinOptions.folderId = this.props.allProfilesFolderId;\r\n    }\r\n\r\n    if (setTo === 'pinned') {\r\n      await pin(pinOptions);\r\n    } else {\r\n      await unpin(pinOptions);\r\n    }\r\n\r\n    history.replace('/');\r\n  };\r\n\r\n  pinProfile = (profileId: string): Promise<void> =>\r\n    this.modifyProfilePin(profileId, 'pinned');\r\n\r\n  unpinProfile = (profileId: string): Promise<void> =>\r\n    this.modifyProfilePin(profileId, 'unpinned');\r\n\r\n  toggleModalSharingOld = (state = false): void => this.setState({ modalVisibleSharing: state });\r\n\r\n  toggleModalSharing = (state = false, rowInfo: IProfile): void => {\r\n    if (state) {\r\n      openProfileTableModal(SHARE_MODAL_NAME, [rowInfo.id]);\r\n    } else {\r\n      closeProfileTableModal();\r\n    }\r\n  };\r\n\r\n  // COMPONENTS\r\n\r\n  private syncProfile = (profileId: string, onlyUpload?: boolean): void => {\r\n    ipcRenderer && ipcRenderer.invoke('retry-sync-profile', { profileId, onlyUpload });\r\n  };\r\n\r\n  private renderState: RenderTableCellFn = (_, profile) => {\r\n    const statusColData = (this.state.columns || []).find((col: IProfilesTableColumn) => col.colName === 'status');\r\n    const { width = 0 } = statusColData;\r\n    const statusTextWidth = width ? width : this.state.columnsSettings.status.width;\r\n\r\n    return (\r\n      <StatusCell\r\n        profileAtom={profile.atom}\r\n        syncProfile={this.syncProfile}\r\n        statusTextWidth={statusTextWidth}\r\n      />\r\n    );\r\n  };\r\n\r\n  private renderDate = (profile: IBasicTableProfile, field: DateCellField): JSX.Element => (\r\n    <DateCell\r\n      profileAtom={profile.atom}\r\n      field={field}\r\n      hasTooltip={field === 'lastActivity'}\r\n    />\r\n  );\r\n\r\n  private renderProxy: RenderTableCellFn = (_, profile) => <ProxyCell profileAtom={profile.atom} />;\r\n\r\n  private renderProxyParam = (profile: IBasicTableProfile, paramName: keyof IProxy): JSX.Element => (\r\n    <ProxyParamCell\r\n      profileAtom={profile.atom}\r\n      paramName={paramName}\r\n    />\r\n  );\r\n\r\n  modalSharingVisibleOn = (rowInfo: IProfile): void => {\r\n    if (!this.isNewShareProfileModal) {\r\n      return this.setState({ modalVisibleSharing: true });\r\n    }\r\n\r\n    openProfileTableModal(SHARE_MODAL_NAME, [rowInfo.id]);\r\n  };\r\n\r\n  private renderProxyType: RenderTableCellFn = (_, profile) => <ProxyTypeColumn profileAtom={profile.atom} />;\r\n  private renderOs: RenderTableCellFn = (_, profile) => <OsCell profileAtom={profile.atom} />;\r\n  private renderOrbitaVersion: RenderTableCellFn = (_, profile) => <OrbitaVersionCell profileAtom={profile.atom} />;\r\n\r\n  // TODO: move to tags file\r\n  private onTagsPopupOpen = (profileTagsCount: number, totalTagsCount: number): void => {\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    performanceObserverService.handleUserAction({\r\n      userAction: 'open-tags-popup',\r\n      profileTagsCount,\r\n      totalTagsCount,\r\n    });\r\n  };\r\n\r\n  private renderCustomStatus: RenderTableCellFn = (_, profile) => (\r\n    <CustomStatusCell\r\n      profileAtom={profile.atom}\r\n      addTag={this.props.addTag}\r\n      updateTag={this.props.updateTag}\r\n      removeProfileTag={this.props.removeProfileTag}\r\n      removeTag={this.props.removeTag}\r\n      onTagsPopupOpen={this.onTagsPopupOpen}\r\n    />\r\n  );\r\n\r\n  private renderTags: RenderTableCellFn = (_, profile) => (\r\n    <TagsCell\r\n      profileAtom={profile.atom}\r\n      addTag={this.props.addTag}\r\n      updateTag={this.props.updateTag}\r\n      removeProfileTag={this.props.removeProfileTag}\r\n      removeTag={this.props.removeTag}\r\n      onTagsPopupOpen={this.onTagsPopupOpen}\r\n      field='tags'\r\n    />\r\n  );\r\n\r\n  private renderNotes: RenderTableCellFn = (_, profile) => (\r\n    <NotesCell\r\n      profileAtom={profile.atom}\r\n      saveProfileNotes={this.saveProfileNotes}\r\n    />\r\n  );\r\n\r\n  private toggleCookiesListModal = (options: ICookiesListModal): void => {\r\n    const { visible, id, name } = options;\r\n    this.setState({\r\n      cookiesListModalVisible: visible,\r\n      idCookiesList: id,\r\n      nameCookiesList: name,\r\n    });\r\n  };\r\n\r\n  // TODO: move to separate file\r\n  private copyProxy = async (profileId: string): Promise<void> => {\r\n    const profileFingerprint = await requestProfileFingerprint(profileId);\r\n    const { proxy } = profileFingerprint;\r\n    const { host, port, username, password } = proxy;\r\n\r\n    let textClipboard = '';\r\n\r\n    if (host !== '') {\r\n      textClipboard = host + ':' + port;\r\n    }\r\n\r\n    if (username !== '') {\r\n      textClipboard = username + '@' + host + ':' + port;\r\n    }\r\n\r\n    if (password !== '') {\r\n      textClipboard = username + ':' + password + '@' + host + ':' + port;\r\n    }\r\n\r\n    navigator.clipboard.writeText(textClipboard);\r\n    message.success(this.props.t('base.copiedText'));\r\n  };\r\n\r\n  private showCopyProxy = (rowInfo: IProfile): JSX.Element | null => {\r\n    if (!(rowInfo.proxyType && rowInfo.proxyType !== 'none')) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Menu.Item\r\n        onClick={(): Promise<void> => this.copyProxy(rowInfo.id)}\r\n      >\r\n        {this.props.t('profiles.menu.copyProxy')}\r\n      </Menu.Item>\r\n    );\r\n  };\r\n\r\n  private updateProfileCookies = async (profileId: string): Promise<void> => {\r\n    const newCookiesList = await requestShortCookies(profileId);\r\n    mapAndSetProfilesList(profiles => profiles.map((profile) => {\r\n      if (profile.id !== profileId) {\r\n        return profile;\r\n      }\r\n\r\n      return {\r\n        ...profile,\r\n        cookies: newCookiesList,\r\n      };\r\n    }));\r\n  };\r\n\r\n  private getCookiesList = (): JSX.Element => {\r\n    const { idCookiesList: id, nameCookiesList: name, cookiesListModalVisible } = this.state;\r\n\r\n    return (\r\n      <CookiesList\r\n        id={id}\r\n        name={name}\r\n        cookiesListModalVisible={cookiesListModalVisible}\r\n        toggleCookiesListModal={this.toggleCookiesListModal}\r\n        onCookiesRequest={(): Promise<void> => this.updateProfileCookies(id)}\r\n      />\r\n    );\r\n  };\r\n\r\n  private showManageFoldersMenu = (profileId: string): JSX.Element | null => {\r\n    const loadedProfilesCount = this.props.basicTableProfiles.length;\r\n    if (!loadedProfilesCount) {\r\n      return null;\r\n    }\r\n\r\n    const openFoldersModal = (): void => {\r\n      const performanceObserverService = PerformanceObserverService.getInstance();\r\n      performanceObserverService.handleUserAction({ userAction: 'open-folders-modal' });\r\n      this.props.openFoldersModal([profileId]);\r\n    };\r\n\r\n    return (\r\n      <Menu.Item onClick={openFoldersModal}>\r\n        {this.props.t('folders.title')}\r\n      </Menu.Item>\r\n    );\r\n  };\r\n\r\n  checkState = async (column: IProfilesTableColumn): Promise<void> => {\r\n    const newColumns = this.state.columns.map((col: IProfilesTableColumn) => {\r\n      if (col.colName !== column.colName) {\r\n        return col;\r\n      }\r\n\r\n      const { sortField, visible } = col;\r\n      const sortFieldLocal = localStorage.getItem('sorterField');\r\n      if (sortFieldLocal === sortField && visible) {\r\n        this.removeSorting();\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        visible: !visible,\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      columns: newColumns,\r\n    });\r\n    const { columnsSettings } = this.updateProfilesTableSettingsState(newColumns);\r\n    if (NEW_FEATURES.workspaces) {\r\n      const {\r\n        lastWorkspaceId,\r\n      } = this.props;\r\n\r\n      await saveWorkspaceProfileTableColumns(lastWorkspaceId, columnsSettings);\r\n    } else {\r\n      await saveProfileTableColumns(columnsSettings);\r\n    }\r\n  };\r\n\r\n  removeSorting = (): void => {\r\n    this.setState({\r\n      sorterField: '',\r\n      sorterOrder: '',\r\n      profilesLoading: true,\r\n    });\r\n\r\n    localStorage.setItem('sorterField', '');\r\n    localStorage.setItem('sorterOrder', '');\r\n\r\n    this.props.requestNewProfilesPage({ search: this.props.tableHeaderQuery }).then(() => {\r\n      this.normalizeData();\r\n\r\n      this.setState({\r\n        profilesLoading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  saveLocalStorageValue = (nameTable: any, value: any, nameState: string): void => {\r\n    Boolean(value);\r\n    this.setState({\r\n      [nameState]: value,\r\n    });\r\n\r\n    localStorage.setItem(`${nameTable}`, `${value}`);\r\n    localStorage.setItem('profilesTableColumnsHasBeenEditing', 'true');\r\n  };\r\n\r\n  openHistoryModal = (id: string): void => {\r\n    this.setState({\r\n      isProfileHistoryModalOpened: true,\r\n      profileHistoryModalProfileId: id,\r\n    });\r\n  };\r\n\r\n  renderPinButtons = (profile: IProfile): JSX.Element => {\r\n    if (profile.isPinned) {\r\n      return (\r\n        <Menu.Item onClick={(): Promise<void> => this.unpinProfile(profile?.id)}>\r\n          {this.props.t('profiles.menu.unpin')}\r\n        </Menu.Item>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Menu.Item onClick={(): Promise<void> => this.pinProfile(profile?.id)}>\r\n        {this.props.t('profiles.menu.pin')}\r\n      </Menu.Item>\r\n    );\r\n  };\r\n\r\n  renderAppMenu = (rowInfo: any): JSX.Element => (\r\n    <Menu.Item onClick={(): Promise<void> => launchProfileWeb(rowInfo)}>\r\n      {this.props.t('profiles.menu.cloudRun')}\r\n    </Menu.Item>\r\n  );\r\n\r\n  private renderUpdateProfileButton = (rowInfo: any): JSX.Element | null => {\r\n    if (!rowInfo.suggestUpdateUA) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Menu.Item\r\n        onClick={(): void => this.openUpdateProfileModal(rowInfo.id)}\r\n      >\r\n        {this.props.t('base.update')}\r\n      </Menu.Item>\r\n    );\r\n  };\r\n\r\n  openShareModal = (profile: IProfile): void => {\r\n    if (!this.isNewShareProfileModal) {\r\n      this.toggleModalSharingOld(true);\r\n\r\n      return this.setState({ sharingProfile: profile });\r\n    }\r\n\r\n    this.toggleModalSharing(true, profile);\r\n  };\r\n\r\n  renderMenu = (rowInfo: IProfile & IProfileRunStatus): JSX.Element => (\r\n    <Menu mode='vertical'>\r\n      {this.renderPinButtons(rowInfo)}\r\n      <Menu.Item onClick={(): void => this.navigateToUpdatePage(rowInfo?.id)}>\r\n        {this.props.t('profiles.menu.editProfile')}\r\n      </Menu.Item>\r\n      <Menu.Item onClick={(): Promise<void> => this.cloneProfile(rowInfo.id)}>\r\n        {this.props.t('profiles.menu.clone')}\r\n      </Menu.Item>\r\n      <Menu.Item onClick={(): void => this.openShareModal(rowInfo)}>\r\n        {this.props.t('profiles.menu.sharing')}\r\n      </Menu.Item>\r\n      {NEW_FEATURES.workspaces ? (\r\n        <Menu.Item\r\n          onClick={(): void => {\r\n            this.openTransferProfileModal(rowInfo.id);\r\n          }}\r\n          disabled={!rowInfo.permissions?.transferProfile}\r\n        >\r\n          {this.props.t('tableProfiles.menu.transfer')}\r\n        </Menu.Item>\r\n      ) : null}\r\n      {this.showManageFoldersMenu(rowInfo.id)}\r\n      {/* {this.isElectron ? (\r\n        <Menu.Item>\r\n          <AutomationButtonText profileSelected={rowInfo} />\r\n        </Menu.Item>\r\n      ) : null} */}\r\n      <Menu.Divider />\r\n      {this.isElectron ? this.renderAppMenu(rowInfo) : null}\r\n      <Menu.Item\r\n        onClick={(): void => this.toggleCookiesListModal({ visible: true, id: rowInfo.id, name: rowInfo.name })}\r\n      >\r\n        {this.props.t('base.cookies')}\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        onClick={(): void => this.openHistoryModal(rowInfo.id)}\r\n      >\r\n        {this.props.t('profiles.menu.history')}\r\n      </Menu.Item>\r\n      {this.showCopyProxy(rowInfo)}\r\n      {this.renderUpdateProfileButton(rowInfo)}\r\n      <Menu.Divider />\r\n      <ReactCopyToClipboard text={rowInfo?.id} onCopy={(): any => message.success(this.props.t('base.copiedText'))}>\r\n        <Menu.Item>\r\n          {this.props.t('profiles.menu.copyProfileId')}\r\n        </Menu.Item>\r\n      </ReactCopyToClipboard>\r\n      <ReactCopyToClipboard\r\n        text={`${DEEP_LINKS_REDIRECT_ORIGIN}/${encodeURIComponent(rowInfo?.name)}`}\r\n        onCopy={(): any => message.success(this.props.t('base.copiedText'))}\r\n      >\r\n        <Menu.Item>\r\n          {this.props.t('tableProfiles.contextMenu.openLinkCopy')}\r\n        </Menu.Item>\r\n      </ReactCopyToClipboard>\r\n      <Menu.Divider />\r\n      {this.showButtonDelete(rowInfo)}\r\n    </Menu>\r\n  );\r\n\r\n  showButtonDelete = (rowInfo: IProfile & IProfileRunStatus): JSX.Element => {\r\n    const { status = '' } = rowInfo;\r\n    const isDelete = calculateProfileDeleteOrLeave(rowInfo) === 'delete';\r\n    if (isDelete) {\r\n      // Если профиль может быть запущен, и его статус \"error\" или \"ready\"\r\n      if (rowInfo.canBeRunning && ['profileStatuses.error', 'profileStatuses.ready'].includes(status)) {\r\n        // Даем возможность удалить профиль\r\n        return (\r\n          <Menu.Item onClick={(): void => openProfileTableModal('delete-or-leave-profile', [rowInfo.id])}>\r\n            {this.props.t('base.delete')}\r\n          </Menu.Item>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Menu.Item disabled={true}>\r\n          {this.props.t('base.delete')}\r\n        </Menu.Item>\r\n      );\r\n    }\r\n\r\n    // Если профиль принадлежит другому пользователю\r\n    if (['profileStatuses.error', 'profileStatuses.ready'].includes(status)) {\r\n      // Его статус не \"запущен\" и не \"синхронизация\"\r\n      return (\r\n        <Menu.Item onClick={(): void => openProfileTableModal('delete-or-leave-profile', [rowInfo.id])}>\r\n          {this.props.t('base.leave')}\r\n        </Menu.Item>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Menu.Item disabled={true}>\r\n        {this.props.t('base.leave')}\r\n      </Menu.Item>\r\n    );\r\n  };\r\n\r\n  renderDropDownMenu = (rowInfo: IProfile & IProfileRunStatus, isInDrawer?: boolean): JSX.Element => (\r\n    <Dropdown\r\n      overlay={(): JSX.Element => this.renderMenu(rowInfo)}\r\n      placement='bottomCenter'\r\n    >\r\n      {NEW_FEATURES.header ? (\r\n        <IconMeatballsContainer isInDrawer={!!isInDrawer}>\r\n          <IconMeatballs\r\n            padding={2}\r\n            styleType='activeGray'\r\n            iconColor='var(--98989F-profile-table)'\r\n            iconHoveredColor='var(--767676-profile-table)'\r\n          />\r\n        </IconMeatballsContainer>\r\n      ) : (\r\n        <DrawerDotsButton style={{ marginLeft: 10, marginBottom: 0, cursor: 'pointer' }}>\r\n          <IconDotsInButton />\r\n        </DrawerDotsButton>\r\n      )}\r\n    </Dropdown>\r\n  );\r\n\r\n  refreshPageByTimeout = (time: number, cb: () => void): void => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.changeSelectedFolder(this.state.selectedFolder);\r\n      this.setState({ loading: false });\r\n      cb();\r\n    }, time);\r\n  };\r\n\r\n  fetchMoreProfiles = async (): Promise<void> => {\r\n    const isMoreProfilesAvailable = getIsMoreProfilesAvailable();\r\n    if (this.state.isResizeMode || !isMoreProfilesAvailable) {\r\n      return;\r\n    }\r\n\r\n    await this.props.requestNewProfilesPage({\r\n      search: this.props.tableHeaderQuery,\r\n      getNewPage: true,\r\n    });\r\n\r\n    this.checkProfilesStatus();\r\n  };\r\n\r\n  resizeStart = (): void => {\r\n    this.setState({\r\n      isResizeMode: true,\r\n    });\r\n  };\r\n\r\n  resizeEnd = (): void => {\r\n    setTimeout(async () => {\r\n      this.setState({\r\n        isResizeMode: false,\r\n      });\r\n\r\n      const { columnsSettings } = this.updateProfilesTableSettingsState(this.state.columns);\r\n\r\n      if (NEW_FEATURES.workspaces) {\r\n        const {\r\n          lastWorkspaceId,\r\n        } = this.props;\r\n\r\n        await saveWorkspaceProfileTableColumns(lastWorkspaceId, columnsSettings);\r\n      } else {\r\n        await saveProfileTableColumns(columnsSettings);\r\n      }\r\n    });\r\n  };\r\n\r\n  closeUpdateProfileModal = (): void => {\r\n    this.setState({\r\n      updateProfilesModal: false,\r\n      updateProfileModalProfileId: '',\r\n    });\r\n  };\r\n\r\n  private handleOrbitaUpdateModalClose = (): void => this.setState({\r\n    isOrbitaUpdateModalVisible: false,\r\n    versionToUpdate: '',\r\n    launchProfileOpts: null,\r\n  });\r\n\r\n  private handleOrbitaUpdateModalClick = (): void =>  this.setState({\r\n    isOrbitaUpdateModalVisible: false,\r\n    areOrbitaModalButtonsDisabled: true,\r\n  });\r\n\r\n  private handleOrbitaUpdateModalCancel = async (): Promise<void> => {\r\n    this.handleOrbitaUpdateModalClick();\r\n    await this.launchProfileOrbita(this.state.launchProfileOpts).catch(() => null);\r\n  };\r\n\r\n  private handleOrbitaUpdateModalSubmit = async (): Promise<void> => {\r\n    this.handleOrbitaUpdateModalClick();\r\n    await this.props.downloadSpecificOrbitaVersion(this.state.versionToUpdate).catch(() => null);\r\n  };\r\n\r\n  private handleOrbitaUpdateModalAfterClose = (): void => this.setState({ areOrbitaModalButtonsDisabled: false });\r\n\r\n  openUpdateProfileModal = (profileId: string): void => {\r\n    this.setState({\r\n      updateProfileModalProfileId: profileId,\r\n      updateProfilesModal: true,\r\n    });\r\n  };\r\n\r\n  openTransferProfileModal = (profileId: string): void => {\r\n    this.setState({\r\n      transferModalProfileId: profileId,\r\n      transferProfileModal: true,\r\n    });\r\n  };\r\n\r\n  closeTransferProfileModal = (): void => {\r\n    this.setState({\r\n      transferProfileModal: false,\r\n      transferModalProfileId: '',\r\n    });\r\n  };\r\n\r\n  doTransferProfile = async ({\r\n    targetWorkspaceId,\r\n    selectedFolder,\r\n    email,\r\n    transferType,\r\n    workspace,\r\n    profilesIds,\r\n  }: ITransferParams): Promise<void> => {\r\n    const transferIds: string[] = this.state.transferModalProfileId ? [this.state.transferModalProfileId] : profilesIds || [];\r\n    const profilesCanTransfer = filterProfilesByPermission(transferIds, 'transferProfile');\r\n    const profileIds = profilesCanTransfer.map(profile => profile.id);\r\n    let transferredTo;\r\n\r\n    const { t: translation } = this.props;\r\n\r\n    const MAX_ENTRY_LENGTH = 12;\r\n\r\n    if (transferType === 'transfer') {\r\n      await transferProfile({ workspaceId: workspace.id, profileIds: transferIds, email });\r\n      transferredTo = email.length > MAX_ENTRY_LENGTH ? email.slice(0, MAX_ENTRY_LENGTH) + '...' : email;\r\n    }\r\n\r\n    if (transferType === 'transferToMyWorkspace') {\r\n      await transferToMyWorkspace({\r\n        fromWorkspaceId: workspace.id,\r\n        folderName: selectedFolder,\r\n        targetWorkspaceId,\r\n        instanceIds: transferIds,\r\n      });\r\n\r\n      const workspaceData = workspace.availableWorkspaces.find(availableWorkspace => availableWorkspace.id === targetWorkspaceId);\r\n      if (workspaceData) {\r\n        const { name } = workspaceData;\r\n        transferredTo = name.length > MAX_ENTRY_LENGTH ? name.slice(0, MAX_ENTRY_LENGTH) + '...' : name;\r\n      }\r\n    }\r\n\r\n    const youTransferred = translation('transferModal.successMessage.youTransferred');\r\n    const profilesText = getProfileNamesForNotifications(profileIds, translation);\r\n    const toText = translation('transferModal.successMessage.to');\r\n    message.success(\r\n      `${youTransferred} ${profilesText} ${toText} ${transferredTo}`,\r\n    );\r\n\r\n    const isTransferToSameWorkspace = transferType === 'transferToMyWorkspace' && workspace.id === targetWorkspaceId;\r\n    const shouldProfilesRemain = isTransferToSameWorkspace && ['', selectedFolder].includes(this.state.selectedFolder);\r\n    if (!shouldProfilesRemain) {\r\n      this.removeProfilesFromList(profileIds);\r\n      const selectedProfileIds = getProfilesTableSelectedIds();\r\n      const newSelectedProfiles = selectedProfileIds.filter((id: string) => !profileIds.includes(id));\r\n      updateProfilesTableSelectedIds(newSelectedProfiles);\r\n    } else {\r\n      this.replaceProfileFolders(profileIds, [selectedFolder]);\r\n    }\r\n\r\n    this.closeTransferProfileModal();\r\n  };\r\n\r\n  // TODO: move\r\n  removeProfilesFromList = (profileIds: string[]): void => {\r\n    mapAndSetProfilesList(profiles => profiles.filter(profile => !profileIds.includes(profile.id)));\r\n  };\r\n\r\n  // TODO: move\r\n  replaceProfileFolders = (profileIds: string[], newFolders: string[]): void => {\r\n    mapAndSetProfilesList(profiles => profiles.map(profile => profileIds.includes(profile.id) ?\r\n      { ...profile, folders: newFolders } :\r\n      profile,\r\n    ));\r\n  };\r\n\r\n  afterModalClose = (): void => {\r\n    if (document.getElementsByTagName('body')[0].hasAttribute('style')) {\r\n      document.getElementsByTagName('body')[0].removeAttribute('style');\r\n    }\r\n  };\r\n\r\n  setTableDataChanges = (pagination: any, filters: IFilter, sorter: ISorter): void => {\r\n    if (filters.status) {\r\n      this.setState({\r\n        filtersStatus: filters.status,\r\n      });\r\n\r\n      localStorage.setItem('filtersStatus', filters.status.join());\r\n    }\r\n\r\n    this.setState({\r\n      sorterField: sorter.field,\r\n      sorterOrder: sorter.order,\r\n      profilesLoading: true,\r\n    });\r\n\r\n    const sortedField = sorter.order ? sorter.field : '';\r\n    const sortedOrder = sorter.order ? sorter.order : '';\r\n    localStorage.setItem('sorterField', sortedField);\r\n    localStorage.setItem('sorterOrder', sortedOrder);\r\n\r\n    this.props.requestNewProfilesPage({ search: this.props.tableHeaderQuery }).then(() => {\r\n      this.normalizeData();\r\n\r\n      this.setState({\r\n        profilesLoading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  onSortChange: IGologinTableHeaderColumn['onSortChange'] = (newSortField, newSortOrder) => {\r\n    this.setTableDataChanges(0, {}, { field: newSortField || '', order: newSortOrder });\r\n  };\r\n\r\n  // TODO: move\r\n  saveProfileNotes = async (profileId: string, notes: string): Promise<void> => {\r\n    await updateProfileNotes({\r\n      id: profileId,\r\n      notes,\r\n    });\r\n\r\n    mapAndSetProfilesList(profiles => profiles.map((profile) => {\r\n      if (profile?.id === profileId) {\r\n        return {\r\n          ...profile,\r\n          notes,\r\n          defaultProps: {\r\n            ...profile?.defaultProps,\r\n            profileNotesIsDefault: false,\r\n          },\r\n        };\r\n      }\r\n\r\n      return profile;\r\n    }));\r\n  };\r\n\r\n  getSelectedFolderName = (): string => {\r\n    let selectedFolder = NEW_FEATURES.header ? this.props.selectedFolderFromCtx : localStorage.getItem('SelectedFolder');\r\n    if ((!NEW_FEATURES.header || NEW_FEATURES.workspaces) && selectedFolder === 'all') {\r\n      selectedFolder = '';\r\n    }\r\n\r\n    return selectedFolder || '';\r\n  };\r\n\r\n  quickCreateProfile = async (templateCtx: ITemplatesCtx): Promise<void> => {\r\n    const selectedFolderName = this.getSelectedFolderName();\r\n    await createQuickProfile({\r\n      workspaceId: this.props.lastWorkspaceId,\r\n      templateCtx,\r\n      folderName: selectedFolderName,\r\n      userLatestOrbitaVersion: this.props.userLatestOrbitaVersion,\r\n    });\r\n\r\n    this.checkProfilesStatus();\r\n  };\r\n\r\n  dragProps = {\r\n    onDragEnd: async (fromIndex: number, toIndex: number): Promise<void> => {\r\n      if (toIndex < 0) {\r\n        return;\r\n      }\r\n\r\n      const visibleColumns = this.state.columns.filter((col: IProfilesTableColumn) => col.visible);\r\n      const fixedColumnsCount = NEW_FEATURES.header ? 0 : 1;\r\n      const colToMove = visibleColumns[fromIndex + fixedColumnsCount];\r\n      const nextCol = visibleColumns[toIndex + fixedColumnsCount];\r\n      if (!nextCol || !colToMove) {\r\n        return;\r\n      }\r\n\r\n      let newFromIndex = 0;\r\n      let newToIndex = 0;\r\n      for (let idx = 0; idx < this.state.columns.length; idx += 1) {\r\n        const col = this.state.columns[idx];\r\n        if (col.colName === colToMove.colName) {\r\n          newFromIndex = idx;\r\n        } else if (col.colName === nextCol.colName) {\r\n          newToIndex = idx;\r\n        }\r\n      }\r\n\r\n      const newColumns = [...this.state.columns];\r\n      if ((!newFromIndex && newFromIndex !== 0) || (!newToIndex && newToIndex !== 0)) {\r\n        return;\r\n      }\r\n\r\n      const [item] = newColumns.splice(newFromIndex, 1);\r\n      newColumns.splice(newToIndex, 0, item);\r\n\r\n      this.setState({\r\n        columns: newColumns,\r\n      });\r\n\r\n      const { columnsOrder } = this.updateProfilesTableSettingsState(newColumns);\r\n      if (NEW_FEATURES.workspaces) {\r\n        const {\r\n          lastWorkspaceId,\r\n        } = this.props;\r\n\r\n        await saveWorkspaceProfileTableColumnsOrder(lastWorkspaceId, columnsOrder);\r\n      } else {\r\n        await saveProfileTableColumnsOrder(columnsOrder);\r\n      }\r\n    },\r\n    nodeSelector: 'th.draggable, .gologin-table-header-column.draggable',\r\n    handleSelector: '.dragHandler',\r\n    ignoreSelector: '.react-resizable-handle, .ant-table-selection-column, .no-drag',\r\n    lineClassName: NEW_FEATURES.header ? 'new-global-drag-line' : 'global-drag-line',\r\n  };\r\n\r\n  getInitialScrollY = (): number | undefined => {\r\n    const profileToScrollY = sessionStorage.getItem('profileToScrollY');\r\n    if (!profileToScrollY) {\r\n      return;\r\n    }\r\n\r\n    sessionStorage.removeItem('profileToScrollY');\r\n\r\n    return +profileToScrollY;\r\n  };\r\n\r\n  isNewShareProfileModal = !!(NEW_FEATURES.workspaces && NEW_FEATURES.header);\r\n\r\n  getLoader = (): JSX.Element|null => {\r\n    if (this.state.isResizeMode) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div style={{ fontSize: 32, textAlign: 'center' }}>\r\n        <Icon type='loading' />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render(): JSX.Element {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ fontSize: 32, textAlign: 'center' }}>\r\n          <Icon type='loading' />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const mergeColumns = this.state.columns.map((col: IProfilesTableColumn, index: number) => ({\r\n      ...col,\r\n      originalColumnIndex: index,\r\n      sorter: (col.sortField && !this.state.isResizeMode) ? (): 0 => 0 : false,\r\n      sortOrder: col.sortField && this.state.sorterField === col.sortField && this.state.sorterOrder,\r\n      onHeaderCell: (column: IProfilesTableColumn) => ({\r\n        width: column.width,\r\n        minWidth: column.minWidth,\r\n        onResize: this.handleResizeCol(index),\r\n        resizeStart: this.resizeStart,\r\n        resizeEnd: this.resizeEnd,\r\n      }),\r\n    })).filter((col: IProfilesTableColumn) => col.visible);\r\n\r\n    mergeColumns.push({\r\n      render: () => null,\r\n    });\r\n\r\n    let tableData = this.props.basicTableProfiles;\r\n    if (this.state.isResizeMode && this.props.basicTableProfiles.length) {\r\n      tableData = [this.props.basicTableProfiles[0]];\r\n    }\r\n\r\n    const tableProfileIndexes = getBasicTableProfiles().map(basicTableProfile => basicTableProfile.idx);\r\n\r\n    return (\r\n      <>\r\n        <ProfileDrawer\r\n          pinProfile={this.pinProfile}\r\n          unpinProfile={this.unpinProfile}\r\n          selectedFolder={this.state.selectedFolder}\r\n          launchProfileOrbita={this.launchProfileOrbita}\r\n          browserUpdating={this.props.browserUpdating}\r\n          foldersList={this.props.foldersList}\r\n          openFoldersModal={this.props.openFoldersModal}\r\n          foldersSelected={this.props.foldersSelected}\r\n          setFoldersSelected={this.props.setFoldersSelected}\r\n          addProfilesToFolder={this.props.addProfilesToFolder}\r\n          removeProfilesFromFolder={this.props.removeProfilesFromFolder}\r\n          manageProfileFoldersList={this.props.manageProfileFoldersList}\r\n          updateProfilesList={this.updateProfilesList}\r\n          openHistoryModal={this.openHistoryModal}\r\n          openUpdateProfileModal={this.openUpdateProfileModal}\r\n          saveProfileNotes={this.saveProfileNotes}\r\n          renderDropDownMenu={this.renderDropDownMenu}\r\n          toggleCookiesListModal={this.toggleCookiesListModal}\r\n          updateProfileFingerprints={this.updateProfileFingerprints}\r\n          changeProfilesData={this.changeProfileNames}\r\n          changeProfilesDataMany={this.changeProfilesData}\r\n        />\r\n        <ProfilesTabsContainer newStyle={!!NEW_FEATURES.header}>\r\n          {NEW_FEATURES.header ? null : (\r\n            <TabProfiles\r\n              foldersList={this.props.foldersList}\r\n              changeSelectedFolder={this.changeSelectedFolder}\r\n              defaultActiveTabKey={this.state.selectedFolder}\r\n            />\r\n          )}\r\n\r\n          {NEW_FEATURES.header ? null : (\r\n            <ContainerNameCol\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={(): void => {\r\n                this.setState({ modalVisiblee: true });\r\n                sendActionAnalytics('opened edit columns').catch(() => null);\r\n              }}\r\n            >\r\n              <div style={{ marginRight: 4 }}>\r\n                <IconSetting />\r\n              </div>\r\n            </ContainerNameCol>\r\n          )}\r\n        </ProfilesTabsContainer>\r\n        {this.state.profilesLoading ? (\r\n          <div style={{ fontSize: 32, textAlign: 'center' }}>\r\n            <Icon type='loading' />\r\n          </div>\r\n        ) : (\r\n          <ReactDragListView.DragColumn {...this.dragProps}>\r\n            <SortableContext\r\n              items={tableProfileIndexes}\r\n            >\r\n              <InfiniteScrollProfilesTable\r\n                dataLength={this.props.basicTableProfiles.length}\r\n                next={this.fetchMoreProfiles}\r\n                loader={this.getLoader()}\r\n                initialScrollY={this.getInitialScrollY()}\r\n              >\r\n                <div onClick={(event): void => event.stopPropagation()}>\r\n                  <ConfigProvider>\r\n                    <ProfilesMenu\r\n                      refreshPageByTimeout={this.refreshPageByTimeout}\r\n                      foldersList={this.props.foldersList}\r\n                      openFoldersModal={this.props.openFoldersModal}\r\n                      updateProfilesList={this.updateProfilesList}\r\n                      launchProfileOrbita={this.launchProfileOrbita}\r\n                      manageProfileFoldersList={this.props.manageProfileFoldersList}\r\n                      selectedFolder={this.state.selectedFolder}\r\n                      addTag={this.props.addTag}\r\n                      updateTag={this.props.updateTag}\r\n                      removeTag={this.props.removeTag}\r\n                      removeProfileTag={this.props.removeProfileTag}\r\n                      updateProfileFingerprints={this.updateProfileFingerprints}\r\n                      isBrowserUpdating={this.props.browserUpdating}\r\n                      versionLoadingNow={this.props.versionLoadingNow}\r\n                      onTransfer={this.doTransferProfile}\r\n                      changeProfilesData={this.changeProfilesData}\r\n                      getIsNewShareProfileModal={this.getIsNewShareProfileModal}\r\n                    />\r\n                    <div style={{ position: 'relative' }} onClick={(event): void => event.stopPropagation()}>\r\n                      {NEW_FEATURES.header ? (\r\n                        <ContainerSettings\r\n                          onClick={(): void => {\r\n                            this.setState({ modalVisiblee: true });\r\n                            sendActionAnalytics('opened edit columns').catch(() => null);\r\n                          }}\r\n                        >\r\n                          <div style={{ position: 'absolute', right: 16, top: 20 }}>\r\n                            <IconSetting />\r\n                          </div>\r\n                        </ContainerSettings>\r\n                      ) : null}\r\n                      {NEW_FEATURES.header ? (\r\n                        <GologinTable\r\n                          dataArray={tableData}\r\n                          columns={mergeColumns}\r\n                          rowSelection={ROW_SELECTION}\r\n                          onResize={this.handleResizeColumn}\r\n                          resizeStart={this.resizeStart}\r\n                          resizeEnd={this.resizeEnd}\r\n                          onSortChange={this.onSortChange}\r\n                        />\r\n                      ) : (\r\n                        <TableProfile\r\n                          newStyle={!!NEW_FEATURES.header}\r\n                          isMinWidth={innerWidth <= 1090}\r\n                          rowSelection={{\r\n                            type: 'checkbox',\r\n                            onChange: onUserChangeSelectedProfiles,\r\n                            selectedRowKeys: this.props.selectedProfileRowKeys,\r\n                            columnWidth: '34px',\r\n                          }}\r\n                          onRow={(record: any, rowIndex): any => ({\r\n                            onClick: (): void => {\r\n                              this.props.onProfilesTableRowClick(rowIndex);\r\n                            },\r\n                            onMouseLeave: (event: SyntheticEvent): void => {\r\n                              if (event.currentTarget.classList.contains('check-in-progress')) {\r\n                                return;\r\n                              }\r\n\r\n                              event.currentTarget.classList.remove('row-visible-dot');\r\n                            },\r\n                          })}\r\n                          pagination={false}\r\n                          rowKey='idx'\r\n                          dataSource={tableData}\r\n                          locale={{ emptyText: NEW_FEATURES.header ? null : <NoProfilesPlaceholder quickCreateProfile={this.quickCreateProfile} /> }}\r\n                          onChange={this.setTableDataChanges}\r\n                          className='profiles-table'\r\n                          tableLayout='fixed'\r\n                          components={{\r\n                            header: {\r\n                              cell: ResizableTitle,\r\n                            },\r\n                          }}\r\n                          columns={mergeColumns}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </ConfigProvider>\r\n                </div>\r\n              </InfiniteScrollProfilesTable>\r\n            </SortableContext>\r\n          </ReactDragListView.DragColumn>\r\n        )}\r\n        {(NEW_FEATURES.header && !this.props.basicTableProfiles.length) ? (\r\n          <NoProfilesPlaceholder quickCreateProfile={this.quickCreateProfile} />\r\n        ) : null}\r\n        <Modal\r\n          width={373}\r\n          visible={this.state.modalVisiblee}\r\n          onClose={this.closeModall}\r\n          title={this.props.t('profiles.profileFieldsEditor')}\r\n          footer={null}\r\n        >\r\n          {this.checkboxColumnStatus('status', this.props.t('profiles.tableColumns.status'))}\r\n          {this.checkboxColumnStatus('notes', this.props.t('profiles.tableColumns.notes'))}\r\n          {this.checkboxColumnStatus('tags', this.props.t('profiles.tableColumns.tags'))}\r\n          {this.checkboxColumnStatus('customStatus', this.props.t('profiles.tableColumns.customStatus'))}\r\n          {this.checkboxColumnStatus('lastUpdate', this.props.t('profiles.tableColumns.lastUpdate'))}\r\n          {this.checkboxColumnStatus('lastLaunch', this.props.t('profiles.tableColumns.lastLaunch'))}\r\n          {this.checkboxColumnStatus('createdAt', this.props.t('profiles.tableColumns.createdAt'))}\r\n          {this.checkboxColumnStatus('sharing', this.props.t('profiles.tableColumns.sharing'))}\r\n          {this.checkboxColumnStatus('proxyType', this.props.t('profiles.tableColumns.proxyType'))}\r\n          {this.checkboxColumnStatus('proxyPort', this.props.t('profiles.tableColumns.proxyPort'))}\r\n          {this.checkboxColumnStatus('proxyUsername', this.props.t('profiles.tableColumns.proxyUsername'))}\r\n          {this.checkboxColumnStatus('proxyPassword', this.props.t('profiles.tableColumns.proxyPassword'))}\r\n          {this.checkboxColumnStatus('proxy', this.props.t('profiles.tableColumns.proxy'))}\r\n          {this.checkboxColumnStatus('os', this.props.t('profiles.tableColumns.os'))}\r\n          {this.checkboxColumnStatus('orbitaVersion', this.props.t('profiles.tableColumns.orbitaVersion'))}\r\n        </Modal>\r\n        <div onClick={(event): void => event.stopPropagation()}>\r\n          {this.getCookiesList()}\r\n          {(!this.isNewShareProfileModal && this.state.sharingProfile) ? <ShareModal\r\n            profile={this.state.sharingProfile}\r\n            visible={this.state.modalVisibleSharing}\r\n            onClose={this.toggleModalSharingOld}\r\n          /> : null}\r\n          {this.state.transferProfileModal ? (\r\n            <TransferProfileModal\r\n              onTransfer={this.doTransferProfile}\r\n              visible={this.state.transferProfileModal}\r\n              onClose={this.closeTransferProfileModal}\r\n              profilesIds={[this.state.transferModalProfileId]}\r\n            />\r\n          ) : null}\r\n          <HistoryModal\r\n            visible={this.state.isProfileHistoryModalOpened}\r\n            onClose={(): void => this.setState({\r\n              isProfileHistoryModalOpened: false,\r\n              profileHistoryModalProfileId: '',\r\n            })}\r\n            profileId={this.state.profileHistoryModalProfileId}\r\n            afterClose={this.afterModalClose}\r\n          />\r\n          <UpdateProfilesModal\r\n            visible={this.state.updateProfilesModal}\r\n            onClose={this.closeUpdateProfileModal}\r\n            profileId={this.state.updateProfileModalProfileId}\r\n            afterClose={this.afterModalClose}\r\n          />\r\n          <OrbitaVersionModals.UpdateOrSkip\r\n            modalType='orbitaUpdateOrRun'\r\n            visible={this.state.isOrbitaUpdateModalVisible}\r\n            areButtonsDisabled={this.state.areOrbitaModalButtonsDisabled}\r\n            handleCancel={this.handleOrbitaUpdateModalCancel}\r\n            handleSubmit={this.handleOrbitaUpdateModalSubmit}\r\n            handleClose={this.handleOrbitaUpdateModalClose}\r\n            handleAfterClose={this.handleOrbitaUpdateModalAfterClose}\r\n            orbitaVersion={this.state.versionToUpdate}\r\n          />\r\n          <OrbitaVersionModals.IncompatibleCannotRun\r\n            visible={this.state.isOrbitaIncompatibleCannotRunModalVisible}\r\n            handleCancel={(): void => this.setState({ isOrbitaIncompatibleCannotRunModalVisible: false })}\r\n          />\r\n          {/* <AutomationManager renderButton={this.renderButtonType} /> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst PTableClassComponent = withTranslation()(PTableClass);\r\n\r\n// eslint-disable-next-line react/no-multi-comp\r\nexport const ProfilesTableQuick: React.FC<IProfilesTableQuick> = (props)  => {\r\n  const basicTableProfiles = useBasicTableProfiles();\r\n  const selectedRowKeys = useOldProfilesTableSelectedRowIndexes();\r\n\r\n  console.log({ selectedRowKeys });\r\n\r\n  const fetchMoreProfiles = async (): Promise<void> => {\r\n    const isMoreProfilesAvailable = getIsMoreProfilesAvailable();\r\n    if (basicTableProfiles.length < PAGE_SIZE && isMoreProfilesAvailable) {\r\n      await props.requestNewProfilesPage({\r\n        search: props.tableHeaderQuery,\r\n        getNewPage: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMoreProfiles();\r\n  }, [basicTableProfiles]);\r\n\r\n  return (\r\n    <PTableClassComponent\r\n      basicTableProfiles={basicTableProfiles}\r\n      selectedProfileRowKeys={selectedRowKeys}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfilesTableQuick;\r\n","// legacy\r\nexport const LOCAL_STORAGE_SELECTED_FOLDER = 'SelectedFolder';\r\n","export const getFolderSelectedOrAll = (): string => {\r\n  const folderSelected = localStorage.getItem('SelectedFolder');\r\n\r\n  return folderSelected || 'all';\r\n};\r\n","import { IProfile } from '../interfaces/profile.interface';\r\n\r\nexport const insertProfileToListByIndex = (profilesOriginal: IProfile[], profileToInsert: IProfile, index: number): IProfile[] => {\r\n  const profiles = [...profilesOriginal];\r\n  profiles.splice(index, 0, profileToInsert);\r\n\r\n  return profiles;\r\n};\r\n","import styled from '@emotion/styled/macro';\r\nimport { Add, Done } from '@material-ui/icons';\r\n\r\nexport const AddIcon = styled(Add)`\r\n  color: var(--C4C4C4);\r\n`;\r\n\r\nexport const DoneIcon = styled(Done)`\r\n  color: var(--00A987);\r\n`;\r\n\r\nexport const FolderRow = styled.div<{ selected?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 13px;\r\n  line-height: 15px;\r\n  padding: 8px;\r\n  color: ${({ selected }): string => (selected ? 'var(--00A987)' : 'var(--767676)')};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: var(--DEF7E9);\r\n    color: var(--00A987);\r\n\r\n    ${AddIcon} {\r\n      color: var(--00A987);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FolderNameContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FolderName = styled.span`\r\n  margin-left: 8px;\r\n  width: 264px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n","import { Folder as FolderIcon } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nimport { IFolder } from '../../../../../../interfaces';\r\nimport { IFolderChange } from '../../interfaces/folder-change.interface';\r\nimport { AddIcon, DoneIcon, FolderName, FolderNameContainer, FolderRow } from './styles';\r\n\r\ninterface IFolderItem extends IFolderChange, IFolder {\r\n  foldersSelected: string[];\r\n}\r\n\r\nexport const Folder: React.FC<IFolderItem> = (props) => {\r\n  const { name, foldersSelected, addProfilesToFolder, removeProfilesFromFolder } = props;\r\n\r\n  const handleClick: React.MouseEventHandler = () => foldersSelected.includes(name) ?\r\n    removeProfilesFromFolder(name) : addProfilesToFolder(name);\r\n\r\n  return (\r\n    <FolderRow\r\n      onClick={handleClick}\r\n      selected={foldersSelected.includes(name)}\r\n    >\r\n      <FolderNameContainer>\r\n        <FolderIcon />\r\n        <FolderName>\r\n          {name}\r\n        </FolderName>\r\n      </FolderNameContainer>\r\n      {foldersSelected.includes(name) ? <DoneIcon /> : <AddIcon />}\r\n    </FolderRow>\r\n  );\r\n};\r\n","import { Input } from 'antd';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IFolder } from '../../../../../interfaces';\r\nimport { IFolderChange } from '../interfaces/folder-change.interface';\r\nimport { IFoldersSelected } from '../interfaces/folders-selected.interface';\r\nimport { Folder } from './folder';\r\n\r\ninterface IFolders extends IFoldersSelected, IFolderChange {\r\n  folders: IFolder[];\r\n  searchFolderName: string;\r\n  handleSearchInputChange: React.FormEventHandler<HTMLInputElement>;\r\n}\r\n\r\nconst Folders: React.FC<IFolders> = (props) => {\r\n  const { folders, searchFolderName, handleSearchInputChange, foldersSelected, addProfilesToFolder, removeProfilesFromFolder } = props;\r\n  const { t: translation } = useTranslation();\r\n\r\n  const renderFolders = (): (JSX.Element | null)[] => folders.filter(Boolean).map((folder, index) => {\r\n    if (folder.shared || !folder.name?.includes(searchFolderName)) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Folder\r\n        {...folder}\r\n        foldersSelected={foldersSelected}\r\n        addProfilesToFolder={addProfilesToFolder}\r\n        removeProfilesFromFolder={removeProfilesFromFolder}\r\n        key={index}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        onChange={handleSearchInputChange}\r\n        placeholder={translation('foldersManagerModal.search.placeholder') || ''}\r\n        value={searchFolderName}\r\n        style={{ marginBottom: 7 }}\r\n      />\r\n      {renderFolders()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Folders;\r\n","import React from 'react';\r\n\r\nconst IconFolder = () => (\r\n  <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M35.7995 24.1379H10.7517C9.44563 24.1379 8.25149 23.4 7.66751 22.2317L5.1722 17.2414L7.66751 12.2512C8.25149 11.0828 9.44544 10.3449 10.7517 10.3449H35.7997C37.1058 10.3449 38.2999 11.0828 38.8839 12.2512L41.379 17.2414L38.8837 22.2317C38.2997 23.4 37.1058 24.1379 35.7995 24.1379Z\" fill=\"var(--FFC36E)\"/>\r\n    <path d=\"M35.7995 24.1379H10.7517C9.44563 24.1379 8.25149 23.4 7.66751 22.2317L5.1722 17.2414L7.66751 12.2512C8.25149 11.0828 9.44544 10.3449 10.7517 10.3449H35.7997C37.1058 10.3449 38.2999 11.0828 38.8839 12.2512L41.379 17.2414L38.8837 22.2317C38.2997 23.4 37.1058 24.1379 35.7995 24.1379Z\" fill=\"var(--FFC36E)\"/>\r\n    <path d=\"M94.8272 13.7932H5.17209C4.21995 13.7932 3.44788 14.5652 3.44788 15.5174V24.1381H96.5514V15.5172C96.5514 14.565 95.7793 13.7932 94.8272 13.7932Z\" fill=\"var(--EFF2FA)\"/>\r\n    <path d=\"M96.5514 20.6896H3.44788V24.1378H96.5514V20.6896Z\" fill=\"var(--E1E6F2)\"/>\r\n    <path d=\"M96.5518 17.2414H42.4449C41.792 17.2414 41.1949 17.6104 40.9029 18.1944L38.8842 22.2317C38.3002 23.4 37.1059 24.1379 35.8 24.1379H10.752C9.4459 24.1379 8.25176 23.4 7.66777 22.2317L5.64883 18.1944C5.35684 17.6104 4.75977 17.2414 4.10684 17.2414H3.44824C1.54375 17.2414 0 18.7852 0 20.6897V86.2069C0 88.1114 1.54375 89.6551 3.44824 89.6551H96.5518C98.4563 89.6551 100 88.1114 100 86.2069V20.6897C100 18.7852 98.4563 17.2414 96.5518 17.2414Z\" fill=\"var(--FFD782)\"/>\r\n    <path d=\"M94.8272 86.2069H5.17209C4.21995 86.2069 3.44788 85.4348 3.44788 84.4827C3.44788 83.5306 4.21995 82.7585 5.17209 82.7585H94.8272C95.7793 82.7585 96.5514 83.5306 96.5514 84.4827C96.5514 85.435 95.7793 86.2069 94.8272 86.2069Z\" fill=\"var(--FFC36E)\"/>\r\n    <path d=\"M63.7934 43.1035H89.6555C90.6076 43.1035 91.3797 42.3314 91.3797 41.3793V27.5861C91.3797 26.634 90.6076 25.8619 89.6555 25.8619H63.7934C62.8412 25.8619 62.0692 26.634 62.0692 27.5861V41.3793C62.0692 42.3314 62.8412 43.1035 63.7934 43.1035Z\" fill=\"var(--EFF2FA)\"/>\r\n    <path d=\"M86.2067 32.7586H67.2413C66.2891 32.7586 65.5171 31.9866 65.5171 31.0344C65.5171 30.0823 66.2891 29.3102 67.2413 29.3102H86.2067C87.1589 29.3102 87.9309 30.0823 87.9309 31.0344C87.9309 31.9868 87.1589 32.7586 86.2067 32.7586Z\" fill=\"var(--C7CFE2)\"/>\r\n    <path d=\"M86.2067 39.6551H67.2413C66.2891 39.6551 65.5171 38.883 65.5171 37.9309C65.5171 36.9787 66.2891 36.2066 67.2413 36.2066H86.2067C87.1589 36.2066 87.9309 36.9787 87.9309 37.9309C87.9309 38.8832 87.1589 39.6551 86.2067 39.6551Z\" fill=\"var(--D7DEED)\"/>\r\n    <path d=\"M35.7995 24.1379H10.7517C9.44563 24.1379 8.25149 23.4 7.66751 22.2317L5.1722 17.2414L7.66751 12.2512C8.25149 11.0828 9.44544 10.3449 10.7517 10.3449H35.7997C37.1058 10.3449 38.2999 11.0828 38.8839 12.2512L41.379 17.2414L38.8837 22.2317C38.2997 23.4 37.1058 24.1379 35.7995 24.1379Z\" fill=\"var(--FFC36E)\"/>\r\n    <path d=\"M35.7995 24.1379H10.7517C9.44563 24.1379 8.25149 23.4 7.66751 22.2317L5.1722 17.2414L7.66751 12.2512C8.25149 11.0828 9.44544 10.3449 10.7517 10.3449H35.7997C37.1058 10.3449 38.2999 11.0828 38.8839 12.2512L41.379 17.2414L38.8837 22.2317C38.2997 23.4 37.1058 24.1379 35.7995 24.1379Z\" fill=\"var(--95CEA1)\"/>\r\n    <path d=\"M94.8272 13.7932H5.17209C4.21995 13.7932 3.44788 14.5652 3.44788 15.5174V24.1381H96.5514V15.5172C96.5514 14.565 95.7793 13.7932 94.8272 13.7932Z\" fill=\"var(--EFF2FA)\"/>\r\n    <path d=\"M96.5514 20.6896H3.44788V24.1378H96.5514V20.6896Z\" fill=\"var(--E1E6F2)\"/>\r\n    <path d=\"M96.5518 17.2414H42.4449C41.792 17.2414 41.1949 17.6104 40.9029 18.1944L38.8842 22.2317C38.3002 23.4 37.1059 24.1379 35.8 24.1379H10.752C9.4459 24.1379 8.25176 23.4 7.66777 22.2317L5.64883 18.1944C5.35684 17.6104 4.75977 17.2414 4.10684 17.2414H3.44824C1.54375 17.2414 0 18.7852 0 20.6897V86.2069C0 88.1114 1.54375 89.6551 3.44824 89.6551H96.5518C98.4563 89.6551 100 88.1114 100 86.2069V20.6897C100 18.7852 98.4563 17.2414 96.5518 17.2414Z\" fill=\"var(--D9F1DE)\"/>\r\n    <path d=\"M94.8272 86.2069H5.17209C4.21995 86.2069 3.44788 85.4348 3.44788 84.4827C3.44788 83.5306 4.21995 82.7585 5.17209 82.7585H94.8272C95.7793 82.7585 96.5514 83.5306 96.5514 84.4827C96.5514 85.435 95.7793 86.2069 94.8272 86.2069Z\" fill=\"var(--95CEA1)\"/>\r\n    <path d=\"M63.7934 43.1035H89.6555C90.6076 43.1035 91.3797 42.3314 91.3797 41.3793V27.5861C91.3797 26.634 90.6076 25.8619 89.6555 25.8619H63.7934C62.8412 25.8619 62.0692 26.634 62.0692 27.5861V41.3793C62.0692 42.3314 62.8412 43.1035 63.7934 43.1035Z\" fill=\"var(--F0FFF3)\"/>\r\n    <path d=\"M86.2067 32.7586H67.2413C66.2891 32.7586 65.5171 31.9866 65.5171 31.0344C65.5171 30.0823 66.2891 29.3102 67.2413 29.3102H86.2067C87.1589 29.3102 87.9309 30.0823 87.9309 31.0344C87.9309 31.9868 87.1589 32.7586 86.2067 32.7586Z\" fill=\"var(--95CEA1)\"/>\r\n    <path d=\"M86.2067 39.6551H67.2413C66.2891 39.6551 65.5171 38.883 65.5171 37.9309C65.5171 36.9787 66.2891 36.2066 67.2413 36.2066H86.2067C87.1589 36.2066 87.9309 36.9787 87.9309 37.9309C87.9309 38.8832 87.1589 39.6551 86.2067 39.6551Z\" fill=\"var(--B9E4C2)\"/>\r\n    <path d=\"M63.7939 43.1035H89.656C90.6081 43.1035 91.3802 42.3314 91.3802 41.3793V27.5861C91.3802 26.6339 90.6081 25.8619 89.656 25.8619H63.7939C62.8417 25.8619 62.0696 26.6339 62.0696 27.5861V41.3793C62.0696 42.3314 62.8417 43.1035 63.7939 43.1035Z\" fill=\"var(--EFF2FA)\"/>\r\n    <path d=\"M86.2068 32.7586H67.2413C66.2892 32.7586 65.5171 31.9866 65.5171 31.0344C65.5171 30.0823 66.2892 29.3102 67.2413 29.3102H86.2068C87.1589 29.3102 87.931 30.0823 87.931 31.0344C87.931 31.9868 87.1589 32.7586 86.2068 32.7586Z\" fill=\"var(--C7CFE2)\"/>\r\n    <path d=\"M86.2068 39.6551H67.2413C66.2892 39.6551 65.5171 38.883 65.5171 37.9308C65.5171 36.9787 66.2892 36.2066 67.2413 36.2066H86.2068C87.1589 36.2066 87.931 36.9787 87.931 37.9308C87.931 38.8832 87.1589 39.6551 86.2068 39.6551Z\" fill=\"var(--D7DEED)\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconFolder;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const CreateFolderContainer = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding-top: 2px;\r\n`;\r\n\r\nexport const CreateFolderTxt = styled('div')`\r\n  font-family: Roboto;\r\n  width: 266px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  line-height: 19px;\r\n  color: var(--676767);\r\n  margin-bottom: 16px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nexport const CreateFolderBtn = styled('button')`\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  width: 248px;\r\n  height: 39px;\r\n  background: var(--64BA88);\r\n  color: var(--FFFFFF);\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 2px;\r\n  outline: none;\r\n`;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { history } from '../../../../../../services';\r\nimport IconFolder from '../../../../../../ui/icons/IconFolder';\r\nimport { CreateFolderBtn, CreateFolderContainer, CreateFolderTxt } from './styles';\r\n\r\nconst FolderCreate: React.FC = () => {\r\n  const { t: translation } = useTranslation();\r\n  const handleClick: React.MouseEventHandler = () => history.replace('/folders');\r\n\r\n  return (\r\n    <CreateFolderContainer>\r\n      <IconFolder />\r\n      <CreateFolderTxt>\r\n        {translation('foldersManagerModal.foldersLink.help')}\r\n      </CreateFolderTxt>\r\n      <CreateFolderBtn onClick={handleClick}>\r\n        {translation('foldersManagerModal.foldersLink.label')}\r\n      </CreateFolderBtn>\r\n    </CreateFolderContainer>\r\n  );\r\n};\r\n\r\nexport default FolderCreate;\r\n","import { Modal } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IFolder } from '../../../../interfaces';\r\nimport Folders from './folders';\r\nimport FolderCreate from './folders/folder-create';\r\nimport { IFolderChange } from './interfaces/folder-change.interface';\r\nimport { IFoldersSelected } from './interfaces/folders-selected.interface';\r\n\r\ninterface IFoldersManager extends IFoldersSelected, IFolderChange {\r\n  visible: boolean;\r\n  onClose: () => any;\r\n  afterClose?: () => void;\r\n  folders: IFolder[];\r\n}\r\n\r\nconst FoldersManager: React.FC<IFoldersManager> = (props) => {\r\n  const { visible, onClose, afterClose, folders = [], foldersSelected, setFoldersSelected, addProfilesToFolder, removeProfilesFromFolder } = props;\r\n  const [searchFolderName, setSearchFolderName] = useState('');\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleCancel = (): void => {\r\n    onClose();\r\n    setSearchFolderName('');\r\n    setFoldersSelected([]);\r\n  };\r\n\r\n  const handleSearchInputChange: React.FormEventHandler<HTMLInputElement> = (event) => setSearchFolderName(event.currentTarget.value);\r\n\r\n  return (\r\n    <Modal\r\n      bodyStyle={{\r\n        height: 253,\r\n        overflow: 'auto',\r\n        paddingTop: 16,\r\n        zIndex: 1001,\r\n      }}\r\n      afterClose={afterClose}\r\n      onCancel={handleCancel}\r\n      title={translation('foldersManagerModal.title')?.toUpperCase()}\r\n      visible={visible}\r\n      width={416}\r\n      footer={null}\r\n    >\r\n      {folders.length ? (\r\n        <Folders\r\n          folders={folders}\r\n          foldersSelected={foldersSelected}\r\n          setFoldersSelected={setFoldersSelected}\r\n          searchFolderName={searchFolderName}\r\n          handleSearchInputChange={handleSearchInputChange}\r\n          addProfilesToFolder={addProfilesToFolder}\r\n          removeProfilesFromFolder={removeProfilesFromFolder}\r\n        />\r\n      ) : <FolderCreate />}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FoldersManager;\r\n","import { IShareLink } from './interfaces';\r\nimport { API_BASE_URL } from '../../../../../../common/constants/constants';\r\nimport { ShareRole } from '../../../../../interfaces';\r\nimport { http } from '../../../../../services';\r\n\r\nexport const searchShareLinksForProfiles = async (profiles: { id: string }[]): Promise<IShareLink[]> =>\r\n  http(`${API_BASE_URL}/share-links/profiles/search`, { method: 'POST', body: JSON.stringify({ profiles }) })\r\n    .then(({ body }: { body: { links: IShareLink[] } }) => body.links).catch(() => []);\r\n\r\nexport const createProfileShareLinks = async (profiles: { id: string; name: string }[]): Promise<{ _id: string; url: string }> =>\r\n  http(`${API_BASE_URL}/share-links/profiles`, { method: 'POST', body: JSON.stringify({ profiles }) })\r\n    .then(({ body }: { body: { _id: string; url: string } }) => body).catch(() => ({ _id: '', url: '' }));\r\n\r\nexport const shareProfilesViaLink = async (profileName: string, linkId: string): Promise<string> =>\r\n  http(`${API_BASE_URL}/share-links/profiles/share`, { method: 'POST', body: JSON.stringify({ profileName, linkId }) })\r\n    .then(({ body }: { body: { id: string } }) => body.id);\r\n\r\ninterface IShareLinkUpdateParams {\r\n  profileIds: string[];\r\n  role?: ShareRole;\r\n  paused?: boolean;\r\n}\r\n\r\nexport const updateShareLink = async (id: string, { profileIds, role, paused }: IShareLinkUpdateParams): Promise<string> =>\r\n  http(`${API_BASE_URL}/share-links/${id}/profiles`, { method: 'PATCH', body: JSON.stringify({ role, paused, profileIds }) })\r\n    .then(({ body }: { body: { url: string; role: ShareRole } }) => body);\r\n\r\nexport const deleteShareLink = async (linkId: string, profileIds: string[]): Promise<void> =>\r\n  http(`${API_BASE_URL}/share-links/${linkId}/profiles`, { method: 'DELETE', body: JSON.stringify({ profileIds }) })\r\n    .then(() => null);\r\n","import styled from '@emotion/styled';\r\n\r\nimport { IconWrapperWithDescription } from '../../../../../../ui/gologin-header/icons/wrapper';\r\nimport { textFont } from '../../../../../../ui/style-templates';\r\n\r\nexport const ButtonWrapper = styled(IconWrapperWithDescription)`\r\n  width: fit-content;\r\n  padding: 0 12px 0 0;\r\n  margin: 8px 0 -8px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  ${textFont};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ButtonWrapper, Text } from './styles';\r\nimport { ShareRole } from '../../../../../../interfaces';\r\nimport { IconPlus } from '../../../../../../ui/gologin-header/icons';\r\nimport { createProfileShareLinks } from '../api';\r\nimport { IProfileToShare } from '../interfaces';\r\n\r\ninterface IAddLinkButton {\r\n  profiles: IProfileToShare[];\r\n  setShareLinks: React.Dispatch<React.SetStateAction<{ _id: string; url: string; role: ShareRole }[]>>;\r\n}\r\n\r\nexport const AddLinkButton: React.FC<IAddLinkButton> = (props) => {\r\n  const { profiles, setShareLinks } = props;\r\n\r\n  const [isEnabled, setIsEnabled] = useState(true);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleClick: React.MouseEventHandler<HTMLDivElement> = async (event) => {\r\n    event.preventDefault();\r\n    if (!isEnabled) {\r\n      return;\r\n    }\r\n\r\n    setIsEnabled(false);\r\n    if (profiles.length !== 1) {\r\n      return;\r\n    }\r\n\r\n    const { _id, url } = await createProfileShareLinks(profiles);\r\n    if (!url) {\r\n      return;\r\n    }\r\n\r\n    setShareLinks(shareLinksOld => [...shareLinksOld, { _id, url, role: 'guest' }]);\r\n  };\r\n\r\n  return (\r\n    <ButtonWrapper\r\n      onClick={handleClick}\r\n      iconType='stroke'\r\n      colorIconType='activeGray'\r\n      iconColor='var(--B5B5BA)'\r\n      iconHoveredColor='var(--222222)'\r\n      textColor='var(--81818A)'\r\n      textHoveredColor='var(--222222)'\r\n    >\r\n      <IconPlus padding={0} margin='0 10px 0 0' />\r\n      <Text>\r\n        {translation('newShareModal.links.addNewLinkButton')}\r\n      </Text>\r\n    </ButtonWrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nimport { IconWrapperWithDescription } from '../../../../../../../ui/gologin-header/icons/wrapper';\r\n\r\nexport const ShareLinkItemWrapper = styled(IconWrapperWithDescription)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const LinkTextWrapper = styled('div')`\r\n  padding: 8px 0;\r\n  margin: 0 8px 0 0;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  :hover > p {\r\n    color: var(--222222-modals-profile-share-modal);\r\n  }\r\n`;\r\n\r\nexport const LinkText = styled('p')<{ isPaused: boolean }>`\r\n  margin: 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  font: normal 14px 'Roboto';\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n\r\n  text-decoration-line: none;\r\n  color: ${({ isPaused }): string => isPaused ?\r\n    'var(--B5B5BA-share-links-url)' :\r\n    'var(--222222-modals-profile-share-modal)'};\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Icon, Menu } from 'antd';\r\n\r\nimport { ModernModal } from '../../../../ui/modern-modal';\r\n\r\nexport const Row = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const IconSharing = styled(Icon)`\r\n  font-size: 9px;\r\n  margin-top: 4px;\r\n  opacity: 0.5;\r\n  color: var(--000000-modals-profile-share-modal);\r\n  margin-right: 3px;\r\n  padding-top: 0;\r\n`;\r\n\r\nexport const ItemChangeRoleTitle = styled('p')`\r\n  font: normal 14px 'Roboto';\r\n  color: var(--000000-modals-profile-share-modal);\r\n\r\n  margin: 0;\r\n`;\r\n\r\nexport const TextSharing = styled('span')`\r\n  font-family: Roboto;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  color: var(--222222-modals-profile-share-modal);\r\n  \r\n  white-space: nowrap;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const RowSpaceBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const UserIconContainer = styled('div')`\r\n  margin-right: 4px;\r\n  margin-bottom: 0;\r\n  margin-top: 4px;\r\n`;\r\n\r\nexport const UserContainer = styled('div')`\r\n  display: contents;\r\n`;\r\n\r\nexport const TextEmail = styled('span')`\r\n  font-family: 'Roboto';\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  color: var(--222222-modals-profile-share-modal);\r\n\r\n  width: 220px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  padding: 4px;\r\n`;\r\n\r\nexport const TextMessageWrapper = styled('div')`\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  color: var(--767676-modals-profile-share-modal);\r\n  font-family: 'Roboto';\r\n`;\r\n\r\nexport const CustomMenu = styled(Menu)`\r\n  border-radius: 8px;\r\n  width: 264px;\r\n  padding: 8px 0;\r\n  \r\n  &.ant-menu-root.ant-menu-vertical {\r\n    box-shadow: 0 2px 8px var(--00000026-antd) !important;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const ShareProfileModal = styled(ModernModal)`\r\n  .ant-modal-header {\r\n    padding-bottom: 8px;\r\n  }\r\n\r\n  .ant-modal-body {\r\n    padding: 0 28px 32px;\r\n  }\r\n`;\r\n","import { MenuItem, Divider } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport RoleDescription from '../../../../../members/role-select/role-description';\r\nimport RoleTitle from '../../../../../members/role-select/role-title';\r\nimport { IShareActionsPropsBase } from '../../interfaces';\r\nimport { CustomMenu, ItemChangeRoleTitle } from '../../styles';\r\n\r\nconst ShareActionsDropdown: React.FC<IShareActionsPropsBase> = (props) => {\r\n  const { action, actionsGlobal, inviteId = [], handleActionSelect, email = '', disableSharing } = props;\r\n  const [actionFirst] = action;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  return (\r\n    <CustomMenu>\r\n      {actionsGlobal.map((actionGlobal) => {\r\n        const isShareLinksMenuNext = ['pause', 'resume'].includes(actionGlobal);\r\n\r\n        return (\r\n          <>\r\n            {isShareLinksMenuNext ? <Divider style={{ backgroundColor: 'var(--D9D9D9-antd)' }} /> : null}\r\n            <MenuItem\r\n              onClick={(): Promise<void> => handleActionSelect(actionGlobal, inviteId, email)}\r\n              key={actionGlobal}\r\n              style={{ padding: '8px 16px' }}\r\n            >\r\n              <div>\r\n                <RoleTitle role={actionGlobal} selectedRole={action.length === 1 ? actionFirst : 'varies'} />\r\n                <RoleDescription type='sharing' role={actionGlobal} />\r\n              </div>\r\n            </MenuItem>\r\n          </>\r\n        );\r\n      })}\r\n      {!disableSharing ? (\r\n        <MenuItem\r\n          onClick={(): Promise<void> => handleActionSelect('remove', inviteId, email)}\r\n          style={{ height: '36px', padding: '8px 16px' }}\r\n        >\r\n          <ItemChangeRoleTitle>\r\n            {translation('newShareModal.removeMember')}\r\n          </ItemChangeRoleTitle>\r\n        </MenuItem>\r\n      ) : null}\r\n    </CustomMenu>\r\n  );\r\n};\r\n\r\nexport default ShareActionsDropdown;\r\n","import { Dropdown } from 'antd';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport ShareActionsDropdown from './share-actions-dropdown';\r\nimport { ShareLinksAction, SharingSelectRole, getInviteActionText } from '../../../../../utils/roles-texts';\r\nimport { IShareActionsPropsBase } from '../interfaces';\r\nimport { IconSharing, TextSharing } from '../styles';\r\n\r\ninterface IShareActionsSelect extends IShareActionsPropsBase {\r\n  actionCurrent: SharingSelectRole|ShareLinksAction;\r\n  canEditRole: boolean;\r\n}\r\n\r\nconst ShareActionsSelect: React.FC<IShareActionsSelect> = (props) => {\r\n  const { action, actionCurrent, canEditRole } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const showInviteText = (): string => {\r\n    let localRole = actionCurrent;\r\n    if (action.length >= 2) {\r\n      localRole = 'varies';\r\n    }\r\n\r\n    if (localRole === 'pause') {\r\n      return translation('newShareModal.links.menuPauseStatus');\r\n    }\r\n\r\n    return getInviteActionText(localRole, translation);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={(): React.ReactNode => <ShareActionsDropdown {...props} />}\r\n      trigger={['hover']}\r\n      disabled={!canEditRole}\r\n    >\r\n      <span style={{ cursor: canEditRole ? 'pointer' : 'default', display: 'flex', marginLeft: '1px' }}>\r\n        <TextSharing style={{ marginRight: 6 }}>\r\n          {showInviteText()}\r\n        </TextSharing>\r\n        {canEditRole ? <IconSharing type='down' /> : <div style={{ width: 14 }} />}\r\n      </span>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default ShareActionsSelect;\r\n","import { DEEP_LINKS_REDIRECT_ORIGIN } from '../../../../../common/deep-links';\r\n\r\nexport const getHostAndOrigin = (): { host: string; origin: string } => {\r\n  const hostForElectron = DEEP_LINKS_REDIRECT_ORIGIN.replace('https://', '');\r\n\r\n  return { host: hostForElectron, origin: DEEP_LINKS_REDIRECT_ORIGIN };\r\n};\r\n","import { message } from 'antd';\r\nimport React, { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ShareLinkItemWrapper, LinkText, LinkTextWrapper } from './styles';\r\nimport { ShareRole } from '../../../../../../../interfaces';\r\nimport TooltipCustom from '../../../../../../../ui/tooltip-custom';\r\nimport { ShareLinksAction, SharingSelectRole } from '../../../../../../../utils/roles-texts';\r\nimport { sendActionAnalytics } from '../../../../../../common/api';\r\nimport ShareActionsSelect from '../../../share-actions-select';\r\nimport { deleteShareLink, updateShareLink } from '../../api';\r\nimport { IShareLink } from '../../interfaces';\r\nimport { getHostAndOrigin } from '../../utils';\r\n\r\nconst { host, origin } = getHostAndOrigin();\r\n\r\ninterface IShareLinkItem extends IShareLink {\r\n  setShareLinks: React.Dispatch<React.SetStateAction<IShareLink[]>>;\r\n}\r\n\r\nconst ShareLinkItem: React.FC<IShareLinkItem> = (props) => {\r\n  const { _id, url, role, paused = false, profileIds, setShareLinks } = props;\r\n\r\n  const [actionCurrent, setActionCurrent] = useState<SharingSelectRole|ShareLinksAction>(role);\r\n  const [isPaused, setIsPaused] = useState(paused);\r\n  const [anchorElTooltip, setAnchorElTooltip] = useState<HTMLElement|null>(null);\r\n\r\n  const tooltipRef = useRef(null);\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleClick: React.MouseEventHandler<HTMLDivElement> = (event) => {\r\n    event.preventDefault();\r\n    const href = `${origin}/share/${url}`;\r\n    navigator.clipboard.writeText(href);\r\n    message.success(translation('base.copiedText'));\r\n    sendActionAnalytics('copied share profile link', { profile: profileIds[0] });\r\n  };\r\n\r\n  const urlWithHost = `${host}/share/${url}`;\r\n  const pauseOrResume = isPaused ? 'resume' : 'pause';\r\n  const actionsGlobal: (SharingSelectRole|ShareLinksAction)[] = ['administrator', 'redactor', 'guest', pauseOrResume, 'delete'];\r\n\r\n  const handleActionSelect = async (selectedRole: SharingSelectRole|ShareLinksAction|'remove'): Promise<void> => {\r\n    if (selectedRole === 'varies' || selectedRole === 'remove') {\r\n      return;\r\n    }\r\n\r\n    const paramsToUpdate: { profileIds: string[]; role?: ShareRole; paused?: boolean } = { profileIds };\r\n    switch (true) {\r\n      case !['pause', 'resume', 'delete'].includes(selectedRole):\r\n        setActionCurrent(selectedRole);\r\n        paramsToUpdate.role = (selectedRole as ShareRole);\r\n        paramsToUpdate.paused = isPaused;\r\n        await updateShareLink(_id, paramsToUpdate);\r\n        break;\r\n      case selectedRole === 'delete':\r\n        setShareLinks(shareLinksOld => shareLinksOld.filter(link => link._id !== _id));\r\n        await deleteShareLink(_id, profileIds);\r\n        break;\r\n      default:\r\n        setIsPaused(selectedRole === 'pause');\r\n        paramsToUpdate.paused = selectedRole === 'pause';\r\n\r\n        await updateShareLink(_id, paramsToUpdate);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ShareLinkItemWrapper\r\n        iconType='stroke'\r\n        colorIconType='activeGray'\r\n      >\r\n        <LinkTextWrapper\r\n          onClick={handleClick}\r\n          onMouseEnter={(): void => setAnchorElTooltip(tooltipRef.current)}\r\n          onMouseLeave={(): void => setAnchorElTooltip(null)}\r\n        >\r\n          <LinkText ref={tooltipRef} isPaused={isPaused}>\r\n            {urlWithHost}\r\n          </LinkText>\r\n        </LinkTextWrapper>\r\n        <ShareActionsSelect\r\n          action={[actionCurrent]} // TODO make plural later\r\n          actionsGlobal={actionsGlobal}\r\n          actionCurrent={isPaused ? 'pause' : actionCurrent}\r\n          canEditRole={true} // TODO change naming later\r\n          handleActionSelect={handleActionSelect}\r\n          disableSharing={true} // TODO change naming later\r\n        />\r\n      </ShareLinkItemWrapper>\r\n      <TooltipCustom anchorEl={anchorElTooltip} value={translation('newShareModal.links.copy') || ''} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShareLinkItem;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListWrapper = styled.ul`\r\n  padding: 0;\r\n  margin: 0 0 -8px 0;\r\n`;\r\n","import React from 'react';\r\n\r\nimport ShareLinkItem from './share-link-item';\r\nimport { ListWrapper } from './styles';\r\nimport { IShareLink } from '../interfaces';\r\n\r\ninterface IShareLinksList {\r\n  profileIds: string[];\r\n  shareLinks: IShareLink[];\r\n  setShareLinks: React.Dispatch<React.SetStateAction<IShareLink[]>>;\r\n}\r\n\r\nconst ShareLinksList: React.FC<IShareLinksList> = (props) => {\r\n  const { profileIds, shareLinks, setShareLinks } = props;\r\n\r\n  return (\r\n    <ListWrapper>\r\n      {shareLinks.map(link => <ShareLinkItem {...{ ...link, profileIds, setShareLinks }} key={link.url} />)}\r\n    </ListWrapper>\r\n  );\r\n};\r\n\r\nexport default ShareLinksList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ShareLinkTitle = styled.h3`\r\n  margin: 24px 0 0;\r\n  font: normal 14px 'Roboto';\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  color: var(--767676-modals-profile-share-modal);\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { searchShareLinksForProfiles } from './api';\r\nimport { AddLinkButton } from './button-add-link';\r\nimport { IProfileToShareWithPermissions } from './interfaces';\r\nimport ShareLinksList from './share-links-list';\r\nimport { ShareLinkTitle } from './styles';\r\nimport { ShareRole } from '../../../../../interfaces';\r\n\r\ninterface IShareLinks {\r\n  profiles: IProfileToShareWithPermissions[];\r\n}\r\n\r\nconst ShareLinks: React.FC<IShareLinks> = (props) => {\r\n  const { profiles } = props;\r\n\r\n  const [shareLinks, setShareLinks] = useState<{ _id: string; url: string; role: ShareRole }[]>([]);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const isVisible = profiles.length === 1 && profiles.every(({ permissions }) => permissions?.viewShareLinks);\r\n\r\n  useEffect(() => {\r\n    if (!isVisible) {\r\n      return;\r\n    }\r\n\r\n    searchShareLinksForProfiles(profiles).then((links) => {\r\n      if (!links.length) {\r\n        return;\r\n      }\r\n\r\n      setShareLinks(links);\r\n    });\r\n  }, []);\r\n\r\n  if (!isVisible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ShareLinkTitle>\r\n        {translation('newShareModal.links.title')}\r\n      </ShareLinkTitle>\r\n      {shareLinks.length ?\r\n        <ShareLinksList profileIds={profiles.map(({ id }) => id)} shareLinks={shareLinks} setShareLinks={setShareLinks} /> :\r\n        <AddLinkButton profiles={profiles} setShareLinks={setShareLinks} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShareLinks;\r\n","import { Divider } from '@material-ui/core';\r\nimport React, { FC, memo, useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IUserInvite } from './interfaces';\r\nimport ShareActionsSelect from './share-actions-select';\r\nimport { Row, RowSpaceBetween, TextEmail, UserIconContainer } from './styles';\r\nimport { userContext } from '../../../../state';\r\nimport IconPerson from '../../../../ui/icons/IconPerson';\r\nimport { ShareLinksAction, SharingSelectRole } from '../../../../utils/roles-texts';\r\n\r\ninterface IUserProps extends IUserInvite {\r\n  changeUserRole: (ids: string[], role: SharingSelectRole|'remove', email: string) => Promise<void>;\r\n  disableSharing?: boolean;\r\n}\r\n\r\nconst UserRow: FC<IUserProps> = (props) => {\r\n  const { role, email, inviteId, changeUserRole, disableSharing } = props;\r\n  const [firstRole] = role;\r\n\r\n  const [currentRole, setCurrentRole] = useState<SharingSelectRole>(firstRole);\r\n\r\n  const { email: currentUserEmail } = useContext(userContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const canEditRole = !(email === currentUserEmail || currentRole === 'owner' || disableSharing);\r\n  const globalRoles: SharingSelectRole[] = ['administrator', 'redactor', 'guest'];\r\n\r\n  const handleActionSelect = async (action: SharingSelectRole|ShareLinksAction|'remove', ids: string[] = [], email = ''): Promise<void> => {\r\n    if (action === 'pause' || action === 'resume' || action === 'delete') {\r\n      return;\r\n    }\r\n\r\n    if (action !== 'remove') {\r\n      setCurrentRole(action);\r\n    }\r\n\r\n    changeUserRole(ids, action, email);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RowSpaceBetween style={{ height: 35 }}>\r\n        <Row style={{ width: 232, minWidth: 0 }}>\r\n          <UserIconContainer>\r\n            <IconPerson width={20} height={20} />\r\n          </UserIconContainer>\r\n          <TextEmail>\r\n            {email}\r\n            {' '}\r\n            {email === currentUserEmail ? translation('newShareModal.you') : ''}\r\n          </TextEmail>\r\n        </Row>\r\n        <ShareActionsSelect\r\n          action={role}\r\n          actionsGlobal={globalRoles}\r\n          actionCurrent={currentRole}\r\n          canEditRole={canEditRole}\r\n          inviteId={inviteId}\r\n          handleActionSelect={handleActionSelect}\r\n          disableSharing={disableSharing}\r\n        />\r\n      </RowSpaceBetween>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(UserRow);\r\n","import { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport { Icon, message, Modal } from 'antd';\r\nimport React, { FC, useContext, useEffect, useState } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\n\r\nimport { IUserInvite } from './interfaces';\r\nimport ShareLinks from './share-links';\r\nimport {\r\n  Row,\r\n  RowSpaceBetween,\r\n  ShareProfileModal,\r\n  TextMessageWrapper,\r\n  UserContainer,\r\n} from './styles';\r\nimport UserRow from './user-row';\r\nimport { IProfile, ShareInvitedRole } from '../../../../interfaces';\r\nimport { userContext, workspaceContext } from '../../../../state';\r\nimport { getProfileNamesForNotifications, mapAndSetProfilesList, useProfilesList } from '../../../../state/profiles-list.atom';\r\nimport {\r\n  SHARE_MODAL_NAME,\r\n  startClosingProfileTableModal,\r\n  useProfileTableModalIsVisible,\r\n  useProfilesTableModalProfiles,\r\n} from '../../../../state/profiles-table-modal.atom';\r\nimport { updateProfilesTableSelectedIds, useProfilesTableSelectedIds } from '../../../../state/profiles-table-selected-ids.atom';\r\nimport LabeledElement from '../../../../ui/LabeledElement';\r\nimport { GreenSubmitButton } from '../../../../ui/modern-modal';\r\nimport { filterEmailsByUser } from '../../../../utils/filterEmailsByUser';\r\nimport { SharingSelectRole } from '../../../../utils/roles-texts';\r\nimport { sendActionAnalytics } from '../../../common/api';\r\nimport { refreshCurrentWorkspaceData } from '../../../common/switch-workspace';\r\nimport RoleSelect from '../../../members/role-select';\r\nimport {\r\n  removeMultipleInvites,\r\n  requestProfilesInvites,\r\n  shareMultipleProfiles,\r\n  updateManyInviteRoles,\r\n} from '../../../quickProfiles/api';\r\nimport { EmailInput } from '../invite-members/email-input';\r\n\r\nconst MultiShareModal: React.FC = () => {\r\n  const isModalVisible = useProfileTableModalIsVisible(SHARE_MODAL_NAME);\r\n  const modalProfiles = useProfilesTableModalProfiles();\r\n\r\n  const profilesList = useProfilesList();\r\n  const selectedProfilesIds = useProfilesTableSelectedIds();\r\n  const selectedProfiles = profilesList.filter(profile => selectedProfilesIds.includes(profile.id));\r\n  const profiles = modalProfiles || selectedProfiles;\r\n  const profilesIds = profiles.map(({ id }) => id);\r\n  const disableSharing = selectedProfiles.some(({ permissions }) => !permissions?.shareProfile);\r\n\r\n  const isSharingMultipleProfiles = profiles.length > 1;\r\n\r\n  const [isLoadingInvites, setIsLoadingInvites] = useState(true);\r\n  const [emails, setEmails] = useState<string[]>([]);\r\n  const [invites, setInvites] = useState<IUserInvite[]>([]);\r\n  const [emailErrorText, setEmailErrorText] = useState<string>('');\r\n  const [selectedRole, setSelectedRole] = useState<SharingSelectRole>('guest');\r\n  const [isShowInvites, setIsShowInvites] = useState<boolean>(true);\r\n  const [isEmailInputFocused, setIsEmailInputFocused] = useState<boolean>(true);\r\n\r\n  const { email: userEmail } = useContext(userContext);\r\n  const workspace = useContext(workspaceContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const maxEmails = Number.POSITIVE_INFINITY;\r\n\r\n  const changeProfilesData = (profileIds: string[], newData: Partial<IProfile>): void => {\r\n    mapAndSetProfilesList(profilesOld => profilesOld.map(profile => {\r\n      if (!profileIds.includes(profile.id)) {\r\n        return profile;\r\n      }\r\n\r\n      return { ...profile, ...newData };\r\n    }));\r\n  };\r\n\r\n  const getInvites = async (): Promise<void> => {\r\n    const profiles = await requestProfilesInvites(profilesIds || []);\r\n    const profileIds: string[] = profilesIds.filter(profileId => !profiles.find(pp => pp.instanceId === profileId));\r\n    const setIds = [...new Set(profileIds)];\r\n    if (setIds.length) {\r\n      changeProfilesData(setIds, { isShared: false });\r\n    }\r\n\r\n    const dataInvites: IUserInvite[] = profiles.reduce<IUserInvite[]>((acc, share) => {\r\n      const userIndex = acc.findIndex(user => user.email === share.to.email);\r\n\r\n      if (userIndex !== -1) {\r\n        acc[userIndex].role = [...new Set([...acc[userIndex].role, share.role])];\r\n        acc[userIndex].inviteId = [...new Set([...acc[userIndex].inviteId, share.id])];\r\n      } else {\r\n        acc.push({\r\n          email: share.to.email,\r\n          role: [share.role],\r\n          inviteId: [share.id],\r\n        });\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    setInvites(dataInvites);\r\n    setIsLoadingInvites(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isModalVisible) {\r\n      getInvites();\r\n      sendActionAnalytics('visited share profile');\r\n    } else {\r\n      return () => {\r\n        setInvites([]);\r\n        setIsLoadingInvites(true);\r\n      };\r\n    }\r\n  }, [isModalVisible]);\r\n\r\n  const confirm = (email: string, ids: string[]): void => {\r\n    const modal = Modal.confirm({\r\n      title: translation('newShareModal.removeAccessConfirm.title'),\r\n      icon: <Icon type='question-circle' />,\r\n      content: email,\r\n      okText: translation('base.cancel'),\r\n      cancelText: translation('newShareModal.removeSuccessMessage.remove'),\r\n      className: 'deleteAccessSharing',\r\n      okButtonProps: { type: 'primary' },\r\n      cancelButtonProps: { type: 'default' },\r\n      onCancel: async () => {\r\n        modal.destroy();\r\n        await removeInvite(email, ids);\r\n      },\r\n      keyboard: false,\r\n      maskClosable: false,\r\n      width: 416,\r\n    });\r\n  };\r\n\r\n  const removeInvite = async (email: string, ids: string[]): Promise<void> => {\r\n    setIsLoadingInvites(true);\r\n    await removeMultipleInvites(ids);\r\n    if (isSharingMultipleProfiles) {\r\n      updateProfilesTableSelectedIds(profilesIds || []);\r\n    }\r\n\r\n    const MAX_EMAIL_LENGTH = 30;\r\n    email = email.length > MAX_EMAIL_LENGTH ? email.slice(0, MAX_EMAIL_LENGTH) + '...' : email;\r\n    message.success(\r\n      <TextMessageWrapper>\r\n        <span style={{ fontWeight: 700 }}>\r\n          {email}\r\n        </span>\r\n        &nbsp;\r\n        {translation('newShareModal.removeSuccessMessage.hasBeenRemoved')}\r\n      </TextMessageWrapper>,\r\n    );\r\n\r\n    await getInvites();\r\n  };\r\n\r\n  const changeUserRole = async (ids: string[], role: SharingSelectRole | 'remove', email: string): Promise<void> => {\r\n    if (['varies', 'owner', 'remove'].includes(role)) {\r\n      if (role === 'remove') {\r\n        confirm(email, ids);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    await updateManyInviteRoles({ inviteIds: ids, role: role as ShareInvitedRole })\r\n      .finally(() => setIsLoadingInvites(false));\r\n\r\n    await getInvites();\r\n  };\r\n\r\n  const sendShareSucessNotification = (profilesCount: number): void => {\r\n    message.success(\r\n      <TextMessageWrapper>\r\n        <Trans i18nKey='newShareModal.sharedSuccessMessage.youveShared' count={profilesCount} />\r\n      </TextMessageWrapper>,\r\n    );\r\n  };\r\n\r\n  const sendShare = async (role: SharingSelectRole): Promise<void> => {\r\n    if (['varies', 'owner'].includes(role)) {\r\n      return;\r\n    }\r\n\r\n    const emailsToShare = filterEmailsByUser(emails, userEmail, 'You can\\'t share with yourself');\r\n    if (!emailsToShare.length) {\r\n      setEmails([]);\r\n\r\n      return;\r\n    }\r\n\r\n    const sharedProfiles = await shareMultipleProfiles({\r\n      instanceIds: profilesIds || [],\r\n      role: role as ShareInvitedRole,\r\n      emails: emailsToShare,\r\n      workspaceId: workspace.id,\r\n    });\r\n\r\n    const profileIds = sharedProfiles.map(share => share.instanceId);\r\n    changeProfilesData(profileIds, { isShared: true });\r\n    sendShareSucessNotification(profileIds.length);\r\n\r\n    refreshCurrentWorkspaceData(workspace);\r\n    setIsShowInvites(true);\r\n  };\r\n\r\n  const sendInvite = async (): Promise<void> => {\r\n    if (!emails.length) {\r\n      message.error(translation('errorMessages.insertUserEmail'));\r\n\r\n      return;\r\n    }\r\n\r\n    setIsLoadingInvites(true);\r\n    await sendShare(selectedRole).finally(() => getInvites());\r\n    setEmails([]);\r\n  };\r\n\r\n  const getModalTitle = (): string => {\r\n    if (isSharingMultipleProfiles) {\r\n      return translation('sharingModal.title.text', { count: profilesIds?.length });\r\n    }\r\n\r\n    return translation('newShareModal.titleSingle') || '';\r\n  };\r\n\r\n  const closeModal = (): void => {\r\n    startClosingProfileTableModal();\r\n    setEmails([]);\r\n    setEmailErrorText('');\r\n  };\r\n\r\n  const renderInvitesHeader = (): JSX.Element => {\r\n    if (invites.length === 1) {\r\n      const [invite] = invites;\r\n\r\n      return (\r\n        <UserContainer key={invite.email}>\r\n          <UserRow\r\n            email={invite.email}\r\n            role={invite.role}\r\n            inviteId={invite.inviteId}\r\n            changeUserRole={changeUserRole}\r\n            disableSharing={disableSharing}\r\n          />\r\n        </UserContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row onClick={(): void => setIsShowInvites(!isShowInvites)} style={{ cursor: 'pointer' }}>\r\n        <span style={{ fontSize: '14px', lineHeight: '14px', color: 'var(--767676-modals-profile-share-modal)', marginRight: '4px', fontFamily: 'Roboto' }}>\r\n          {translation('newShareModal.sharedWith')}\r\n        </span>\r\n        <span style={{ opacity: 0.5, marginRight: '3px', fontFamily: 'Roboto', fontSize: '12px', lineHeight: '14px', color: 'var(--222222-modals-profile-share-modal)' }}>\r\n          {(!isLoadingInvites && profilesIds?.length === 1) ? (invites.length - 1) : invites.length}\r\n        </span>\r\n        {isShowInvites ? <ExpandLess htmlColor='var(--D2D2D2-modals-profile-share-modal)' /> : <ExpandMore htmlColor='var(--D2D2D2-modals-profile-share-modal)' />}\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ShareProfileModal\r\n      destroyOnClose={true}\r\n      visible={isModalVisible}\r\n      title={getModalTitle()}\r\n      onCancel={closeModal}\r\n      footer={null}\r\n      width={380}\r\n    >\r\n      <RowSpaceBetween>\r\n        <div\r\n          style={{ width: '100%', marginBottom: '24px' }}\r\n          onClick={(): void => setIsEmailInputFocused(true)}\r\n          onBlur={(): void => setIsEmailInputFocused(false)}\r\n        >\r\n          <EmailInput\r\n            emails={emails}\r\n            onChange={setEmails}\r\n            errorText={emailErrorText}\r\n            onErrorTextChange={setEmailErrorText}\r\n            maxEmails={maxEmails}\r\n            inputFocused={isEmailInputFocused}\r\n            placeholder={translation('newShareModal.emailInputPlaceholder')}\r\n            type='sharing'\r\n          />\r\n        </div>\r\n      </RowSpaceBetween>\r\n      <LabeledElement title={translation('newShareModal.selectRole')}>\r\n        <RowSpaceBetween style={{ marginBottom: 24 }}>\r\n          <RoleSelect\r\n            width='100%'\r\n            menuWidth='242px'\r\n            type='sharing'\r\n            role={selectedRole}\r\n            setRole={(role): void => setSelectedRole(role as SharingSelectRole)}\r\n            disabled={disableSharing}\r\n          />\r\n          <GreenSubmitButton\r\n            disabled={disableSharing}\r\n            onClick={sendInvite}\r\n            style={{ marginLeft: 12 }}\r\n          >\r\n            {translation('newShareModal.shareButton')}\r\n          </GreenSubmitButton>\r\n        </RowSpaceBetween>\r\n      </LabeledElement>\r\n      {renderInvitesHeader()}\r\n      {isLoadingInvites ? (\r\n        <div style={{ width: '100%', fontSize: '24px', textAlign: 'center' }}>\r\n          <Icon type='loading' />\r\n        </div>\r\n      ) : null}\r\n      {(isShowInvites && invites.length !== 1) ?\r\n        invites.map(invite => (\r\n          <UserContainer key={invite.email}>\r\n            <UserRow\r\n              email={invite.email}\r\n              role={invite.role}\r\n              inviteId={invite.inviteId}\r\n              changeUserRole={changeUserRole}\r\n              disableSharing={disableSharing}\r\n            />\r\n          </UserContainer>\r\n        )) : null}\r\n      <ShareLinks profiles={profiles} />\r\n    </ShareProfileModal>\r\n  );\r\n};\r\n\r\nexport default MultiShareModal;\r\n","import styled from '@emotion/styled';\r\n\r\nimport { theme } from '../../../proxy-helpers';\r\n\r\nexport const EmptyListEl = styled('section')`\r\n  background: var(--FFFFFF-proxy-manager-empty-list);\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n`;\r\n\r\nexport const EmptyListTitleEl = styled('div')`\r\n  text-align: center;\r\n  width: 100%;\r\n  color: var(--CDCDCD-proxy-manager-empty-list);\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n  letter-spacing: initial;\r\n  font-weight: 400;\r\n  margin-top: 91px;\r\n`;\r\n\r\nexport const EmptyListButtonsEl = styled('div')`\r\n  text-align: center;\r\n  width: 100%;\r\n  margin-top: 33px;\r\n`;\r\n\r\nexport const BtnIcon = styled('i')`\r\n  text-align: center;\r\n  color: var(--CDCDCD-proxy-manager-empty-list);\r\n  vertical-align: middle;\r\n  padding: 2px 0 0;\r\n  display: inline-block;\r\n  height: 20px;\r\n`;\r\n\r\nexport const BtnText = styled('span')`\r\n  margin-left: 9px;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const BtnAdd = styled('button')`\r\n  color: var(--222222-proxy-manager-empty-list);\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: none;\r\n  border: none;\r\n  padding: 0;\r\n  letter-spacing: 0.25px;\r\n  line-height: 20px;\r\n  padding: 5px 11px 5px 13px;\r\n  border: 1px solid var(--CDCDCD-proxy-manager-empty-list);\r\n  border-radius: 16px;\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n    border: 1px solid ${theme.colors.primary};\r\n\r\n    i {\r\n      color: ${theme.colors.primary};\r\n    }\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nimport { theme } from '../../../proxy-helpers';\r\n\r\nexport const ProxyListContainer = styled('div')`\r\n  width: 330px;\r\n  height: 278px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport const ProxyListHeaderBtnContainer = styled('div')`\r\n  width: 80px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n`;\r\n\r\nexport const ProxyListContentEl = styled('div')`\r\n  height: 278px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  position: relative;\r\n`;\r\n\r\nexport const ProxyListHeaderEl = styled('header')`\r\n  height: 56px;\r\n  padding: 16px 16px 0;\r\n  display: flex;\r\n  border-top: 1px solid var(--EBEBEB-proxy-manager-list);\r\n`;\r\n\r\nexport const ProxyListHeaderBtnLeft = styled('button')`\r\n  color: var(--767676-proxy-manager-list);\r\n  outline: none;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  margin-right: 11px;\r\n  background: none;\r\n  border: none;\r\n  padding: 1px 0 0;\r\n  width: 80px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n\r\n  &:focus,\r\n  &:visited {\r\n    color: var(--767676-proxy-manager-list);\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const ProxyListHeaderBtnRight = styled('a')`\r\n  color: var(--767676-proxy-manager-list);\r\n  outline: none;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  background: none;\r\n  border: none;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  padding-top: 1px;\r\n  padding-right: 5px;\r\n\r\n  &:focus,\r\n  &:visited {\r\n    color: var(--767676-proxy-manager-list);\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconPlusEmptyList: FC = () => (\r\n  <svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M6.5 0.5V12.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M0.5 6.5H12.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconPlusEmptyList;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { BtnAdd, BtnIcon, BtnText, EmptyListButtonsEl, EmptyListEl, EmptyListTitleEl } from './styles/empty-list';\r\nimport { ProxyListContentEl } from './styles/proxy-list';\r\nimport { openProxyManagerAddView } from '../../../../state/proxy-manager-modal-status.atom';\r\nimport IconPlusEmptyList from '../../../../ui/icons/IconPlusEmptyList';\r\n\r\nconst EmptyList: FC = () => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleAddClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\r\n    event.preventDefault();\r\n    openProxyManagerAddView();\r\n  };\r\n\r\n  return (\r\n    <ProxyListContentEl>\r\n      <EmptyListEl>\r\n        <EmptyListTitleEl>\r\n          {translation('proxies.noProxyFound')}\r\n        </EmptyListTitleEl>\r\n        <EmptyListButtonsEl>\r\n          <BtnAdd onClick={handleAddClick}>\r\n            <BtnIcon>\r\n              <IconPlusEmptyList />\r\n            </BtnIcon>\r\n            <BtnText>\r\n              {translation('proxies.addProxy')}\r\n            </BtnText>\r\n          </BtnAdd>\r\n        </EmptyListButtonsEl>\r\n      </EmptyListEl>\r\n    </ProxyListContentEl>\r\n  );\r\n};\r\n\r\nexport default EmptyList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ProxyCheckboxWrapperEl = styled('div')`\r\n  margin-right: 9px;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-top: -4px;\r\n\r\n  .ant-checkbox-wrapper {\r\n    line-height: 1.5;\r\n  }\r\n\r\n  & .ant-checkbox-inner {\r\n    width: 12px;\r\n    height: 12px;\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n","import { Checkbox } from 'antd';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox/Checkbox';\r\nimport React, { FC } from 'react';\r\n\r\nimport { useFilteredProxyList } from '../../../../state/proxy-list.atom';\r\nimport { useSelectedProxies } from '../../../../state/selected-proxies.atom';\r\nimport { IProxy } from '../../components/interfaces/IProxy';\r\nimport { selectProxyLI } from '../../proxy-helpers';\r\nimport { ProxyCheckboxWrapperEl } from './styles/proxy-item-checkbox';\r\n\r\ninterface IProps {\r\n  proxy: IProxy;\r\n}\r\n\r\nconst ProxyItemCheckbox: FC<IProps> = (props) => {\r\n  const { proxy } = props;\r\n  const { lastSelectedProxy, selectedProxies } = useSelectedProxies();\r\n  const filteredProxies = useFilteredProxyList();\r\n\r\n  const onCheck = (event: CheckboxChangeEvent): void => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    selectProxyLI({\r\n      shiftKey: event.nativeEvent.shiftKey,\r\n      selectedProxies,\r\n      filteredProxies,\r\n      proxy,\r\n      lastSelectedProxy,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ProxyCheckboxWrapperEl>\r\n      <Checkbox onChange={onCheck} checked={selectedProxies.includes(proxy._id)} />\r\n    </ProxyCheckboxWrapperEl>\r\n  );\r\n};\r\n\r\nexport default ProxyItemCheckbox;\r\n","import React, { FC } from 'react';\r\n\r\nimport ProxyItemCheckbox from './proxy-item-checkbox';\r\nimport { ProxyItemWrapperEl, ProxyTitleBlockEl, ProxyTitleWrapperEl } from './styles/proxy-item';\r\nimport { ProxyFlagBlockEl } from './styles/proxy-list-item';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { useProxyManagerState } from '../../../../state/proxy-manager-modal-status.atom';\r\nimport { selectProfileProxy } from '../../../../state/proxy-operations.commands';\r\nimport { useSharedProxyInfo } from '../../../../state/shared-proxy-info.atom';\r\nimport { saveProxy } from '../../api';\r\nimport CheckProxyBtn from '../../components/check-proxy-btn';\r\nimport { IProxy } from '../../components/interfaces/IProxy';\r\nimport { ISharedProxyInfo } from '../../components/interfaces/ISharedProxyInfo';\r\nimport ProxyFlag from '../../components/proxy-flag';\r\nimport { getProxyTitle } from '../../proxy-helpers';\r\n\r\ninterface IProps {\r\n  proxy?: IProxy;\r\n  currentProxy?: IProxy;\r\n  profileId?: string;\r\n  hideDot?: boolean;\r\n  isSharedProxy?: boolean;\r\n  showCheckbox?: boolean;\r\n  localProxyElementLocation: string | null;\r\n}\r\n\r\nconst ProxyItem: FC<IProps> = (props) => {\r\n  const {\r\n    proxy,\r\n    currentProxy,\r\n    profileId,\r\n    hideDot,\r\n    isSharedProxy,\r\n    showCheckbox,\r\n    localProxyElementLocation,\r\n  } = props;\r\n\r\n  const title = getProxyTitle(proxy);\r\n\r\n  const sharedProxyInfos = useSharedProxyInfo();\r\n\r\n  const { currentProfileId } = useProxyManagerState();\r\n\r\n  const saveProfileProxyStatus = async (): Promise<IProxy | undefined> => {\r\n    const isFromSharedProfile = (proxy && !proxy._id && proxy.id);\r\n\r\n    if (!proxy || proxy._id || isFromSharedProfile) {\r\n      return;\r\n    }\r\n\r\n    const proxyRes = await saveProxy({\r\n      proxyItem: proxy,\r\n      checkProxy: false,\r\n    }, currentProfileId || '');\r\n\r\n    selectProfileProxy(profileId, proxyRes);\r\n\r\n    return proxyRes;\r\n  };\r\n\r\n  if (!proxy) {\r\n    return null;\r\n  }\r\n\r\n  const isFailed = (proxy?.status === false);\r\n  const titleRes = title || '-';\r\n\r\n  let sharedProxyInfo: ISharedProxyInfo | undefined;\r\n  let { country } = proxy;\r\n  let checkProxy = proxy;\r\n  if (isSharedProxy) {\r\n    sharedProxyInfo = sharedProxyInfos.find((el) => el.profileId === profileId);\r\n    if (sharedProxyInfo) {\r\n      ({ country } = sharedProxyInfo);\r\n      checkProxy = {\r\n        ...proxy,\r\n        ...sharedProxyInfo,\r\n      };\r\n    }\r\n  }\r\n\r\n  const renderStatus = (): JSX.Element => {\r\n    if (showCheckbox) {\r\n      return <ProxyItemCheckbox proxy={proxy} />;\r\n    }\r\n\r\n    return (\r\n      <CheckProxyBtn\r\n        proxy={checkProxy}\r\n        currentProxy={currentProxy}\r\n        profileId={profileId}\r\n        hideDot={hideDot}\r\n        saveProfileProxyStatus={saveProfileProxyStatus}\r\n        isSharedProxy={isSharedProxy}\r\n        showTooltipCheckProxy={true}\r\n        localProxyElementLocation={localProxyElementLocation}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ProxyItemWrapperEl>\r\n      <ProxyFlagBlockEl newStyle={!!NEW_FEATURES.header} isFailed={isFailed} className='proxy-flag-block'>\r\n        {renderStatus()}\r\n        <ProxyFlag region={country} />\r\n      </ProxyFlagBlockEl>\r\n      <ProxyTitleWrapperEl newStyle={!!NEW_FEATURES.header}>\r\n        <ProxyTitleBlockEl className='proxy-title' isFailed={isFailed}>\r\n          <div className='nowrap'>\r\n            {titleRes}\r\n          </div>\r\n        </ProxyTitleBlockEl>\r\n      </ProxyTitleWrapperEl>\r\n    </ProxyItemWrapperEl>\r\n  );\r\n};\r\n\r\nexport default ProxyItem;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ProxyListItemProfilesCountEl = styled('div')`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.2px;\r\n  color: var(--CDCDCD-proxy-manager-profiles-count);\r\n  min-width: 6px;\r\n  height: 16px;\r\n  padding: 2px 0;\r\n`;\r\n\r\nexport const ProxyProfilesCountTooltipEl = styled('div')`\r\n  color: var(--222222-proxy-manager-profiles-count);\r\n  font-size: 12px;\r\n  padding: 6px 8px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.2px;\r\n`;\r\n","import { Tooltip } from 'antd';\r\nimport React, { FC, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ProxyListItemProfilesCountEl } from '../styles/proxy-profiles-count-block';\r\nimport { TooltipEl } from '../proxy-selector/styles';\r\n\r\ninterface IProps {\r\n  profilesCount: number;\r\n}\r\n\r\nconst ProxyProfilesCountBlock: FC<IProps> = (props) => {\r\n  const {\r\n    profilesCount,\r\n  } = props;\r\n\r\n  const [tooltipVisible, setTooltipVisible] = useState<boolean>(false);\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleVisibleChange = (visible: boolean): void => {\r\n    setTooltipVisible(visible);\r\n  };\r\n\r\n  return (\r\n    <Tooltip\r\n      title={(): JSX.Element => (\r\n        <TooltipEl>\r\n          <div>\r\n            {profilesCount}\r\n            {' '}\r\n            {(profilesCount === 1) ? translation('proxies.profileConnected') : translation('proxies.profilesConnected')}\r\n          </div>\r\n          <div>\r\n            {translation('proxies.toThisProxy')}\r\n          </div>\r\n        </TooltipEl>\r\n      )}\r\n      visible={tooltipVisible}\r\n      mouseEnterDelay={0.8}\r\n      onVisibleChange={handleVisibleChange}\r\n      getPopupContainer={(): HTMLElement => document.querySelector('.proxy-popper-container') || document.body}\r\n    >\r\n      <ProxyListItemProfilesCountEl>\r\n        {profilesCount}\r\n      </ProxyListItemProfilesCountEl>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ProxyProfilesCountBlock;\r\n","import React, { FC, SyntheticEvent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport PerformanceObserverService from '../../../../services/performance-observer/performance-observer.service';\r\nimport { IProxy } from '../../components/interfaces/IProxy';\r\nimport ProxyIconBtnWithTooltip from '../../components/proxy-icon-btn-with-tooltip';\r\nimport ProxyItem from './proxy-item';\r\nimport ProxyProfilesCountBlock from '../../components/proxy-profiles-count-block';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { useFilteredProxyList } from '../../../../state/proxy-list.atom';\r\nimport { closeProxyManager, openProxyManagerEditView, useProxyManagerState } from '../../../../state/proxy-manager-modal-status.atom';\r\nimport { selectProfileProxy, unselectProfileProxy } from '../../../../state/proxy-operations.commands';\r\nimport {\r\n  openProxyContextMenu,\r\n  updateProxySelectMenuPosition,\r\n  useIsSelectProxyModeOpened,\r\n} from '../../../../state/proxy-select-menu.atom';\r\nimport { updateSelectedProxies, updateSelectedProxiesList, useSelectedProxies } from '../../../../state/selected-proxies.atom';\r\nimport IconCheckCircle from '../../../../ui/icons/IconCheckCircle';\r\nimport IconCloseCurrentColor from '../../../../ui/icons/IconCloseCurrentColor';\r\nimport IconProxyPencil from '../../../../ui/icons/IconProxyPencil';\r\nimport { selectProxyLI } from '../../proxy-helpers';\r\nimport {\r\n  ProxyButtonEl,\r\n  ProxyButtonsContainerEl,\r\n  ProxyListItemEl,\r\n  ProxyListItemInnerEl,\r\n  RemoveButtonEl,\r\n} from './styles/proxy-list-item';\r\nimport { TooltipEl } from '../../proxy-selector/styles';\r\n\r\ninterface IProps {\r\n  proxy: IProxy;\r\n  isCurrent: boolean;\r\n  style: any;\r\n  localProxyElementLocation: string | null;\r\n}\r\n\r\nconst ProxyListItem: FC<IProps> = (props: IProps) => {\r\n  const {\r\n    proxy,\r\n    isCurrent,\r\n    style,\r\n    localProxyElementLocation,\r\n  } = props;\r\n\r\n  const { lastSelectedProxy, selectedProxies } = useSelectedProxies();\r\n  const isSelectProxyModeOpened = useIsSelectProxyModeOpened();\r\n  const filteredProxies = useFilteredProxyList();\r\n  const { currentProfileId } = useProxyManagerState();\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>): void => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    if (isSelectProxyModeOpened) {\r\n      updateSelectedProxiesList(proxy._id);\r\n\r\n      selectProxyLI({\r\n        shiftKey: event.shiftKey,\r\n        selectedProxies,\r\n        filteredProxies,\r\n        proxy,\r\n        lastSelectedProxy,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (currentProfileId) {\r\n      const performanceObserverService = PerformanceObserverService.getInstance();\r\n      performanceObserverService.handleUserAction({ userAction: 'select-proxy-manager-proxy' });\r\n\r\n      selectProfileProxy(currentProfileId, proxy);\r\n      closeProxyManager();\r\n    }\r\n  };\r\n\r\n  const handleUpdateClick = async (event: SyntheticEvent): Promise<void> => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    openProxyManagerEditView(proxy._id);\r\n  };\r\n\r\n  const showBtns = ['http', 'socks4', 'socks5', 'geolocation'].includes(proxy.mode);\r\n\r\n  const handleNoProxyClick = (event: SyntheticEvent): void => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (currentProfileId) {\r\n      unselectProfileProxy(currentProfileId);\r\n      closeProxyManager();\r\n    }\r\n  };\r\n\r\n  let currentProxy: IProxy | undefined;\r\n  if (isCurrent) {\r\n    currentProxy = proxy;\r\n  }\r\n\r\n  return (\r\n    <ProxyListItemEl\r\n      onClick={handleClick}\r\n      style={style}\r\n      onContextMenu={(event): void => {\r\n        event.preventDefault();\r\n        updateSelectedProxies({ selectedProxy: proxy });\r\n        updateProxySelectMenuPosition({\r\n          x: event.pageX,\r\n          y: event.pageY,\r\n        });\r\n\r\n        openProxyContextMenu();\r\n      }}\r\n    >\r\n      <ProxyListItemInnerEl newStyle={!!NEW_FEATURES.header}>\r\n        <ProxyItem\r\n          proxy={proxy}\r\n          currentProxy={currentProxy}\r\n          profileId={currentProfileId}\r\n          hideDot={false}\r\n          showCheckbox={!!(proxy._id && isSelectProxyModeOpened)}\r\n          localProxyElementLocation={localProxyElementLocation}\r\n        />\r\n        {(proxy?.profilesCount) ? (\r\n          <ProxyProfilesCountBlock profilesCount={proxy.profilesCount} />\r\n        ) : null}\r\n      </ProxyListItemInnerEl>\r\n\r\n      <ProxyButtonsContainerEl onClick={(event: SyntheticEvent): void => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }}>\r\n        {(showBtns) ? (\r\n          <ProxyIconBtnWithTooltip tooltipContent={(\r\n            <TooltipEl>\r\n              {translation('proxies.editProxy')}\r\n            </TooltipEl>\r\n          )}>\r\n            <ProxyButtonEl className='proxy-update-btn' onClick={handleUpdateClick}>\r\n              <IconProxyPencil />\r\n            </ProxyButtonEl>\r\n          </ProxyIconBtnWithTooltip>\r\n        ) : null}\r\n\r\n        {(isCurrent) ? (\r\n          <>\r\n            <ProxyButtonEl className='proxy-selected'>\r\n              <IconCheckCircle />\r\n            </ProxyButtonEl>\r\n\r\n            <ProxyIconBtnWithTooltip tooltipContent={(\r\n              <TooltipEl>\r\n                {translation('proxies.unlinkProxy')}\r\n              </TooltipEl>\r\n            )}>\r\n              <RemoveButtonEl className='proxy-update-btn' onClick={handleNoProxyClick}>\r\n                <IconCloseCurrentColor />\r\n              </RemoveButtonEl>\r\n            </ProxyIconBtnWithTooltip>\r\n          </>\r\n        ) : null}\r\n      </ProxyButtonsContainerEl>\r\n    </ProxyListItemEl>\r\n  );\r\n};\r\n\r\nexport default ProxyListItem;\r\n","import React, { FC, memo } from 'react';\r\nimport { areEqual } from 'react-window';\r\n\r\nimport { checkIsCurrent } from '../../proxy-helpers';\r\nimport { IProfileProxy } from '../../components/interfaces/IProfileProxy';\r\nimport { IProxy } from '../../components/interfaces/IProxy';\r\nimport ProxyListItem from './proxy-list-item';\r\n\r\ninterface IProps {\r\n  data: {\r\n    filteredProxies: (IProxy|null)[];\r\n    currentProxy?: IProfileProxy;\r\n    onProxySelect: (proxy: IProxy, profileId?: string) => Promise<void>;\r\n    onSetNoProxy: (profileId: string) => Promise<void>;\r\n    localProxyElementLocation: string | null;\r\n  };\r\n  index: number;\r\n  style: any;\r\n}\r\n\r\nconst ProxyRow: FC<IProps> = (props) => {\r\n  const { data, index, style } = props;\r\n\r\n  const {\r\n    filteredProxies,\r\n    currentProxy,\r\n    localProxyElementLocation,\r\n  } = data;\r\n\r\n  const proxy: IProxy = filteredProxies[index] as IProxy;\r\n\r\n  if (!proxy) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <ProxyListItem\r\n      key={[\r\n        proxy.mode,\r\n        proxy.host,\r\n        proxy.port,\r\n        proxy.username,\r\n        proxy.password,\r\n        proxy.autoProxyRegion,\r\n        proxy.torProxyRegion,\r\n        proxy._id,\r\n      ].join('_')}\r\n      proxy={proxy}\r\n      isCurrent={checkIsCurrent(proxy, currentProxy)}\r\n      style={style}\r\n      localProxyElementLocation={localProxyElementLocation}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(ProxyRow, areEqual);\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const ProxyContextMenuEl = styled('div')<{ top: number; left: number }>`\r\n  position: absolute;\r\n  width: 214px;\r\n  background: var(--FFFFFF-proxy-manager-context-menu);\r\n  box-shadow: var(--proxy-manager-context-menu-shadow);\r\n  border-radius: 4px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  z-index: 1150;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    top: ${props.top}px;\r\n    left: ${props.left}px;\r\n  `}\r\n\r\n  ul {\r\n    padding: 5px;\r\n    margin: 0;\r\n    list-style: none;\r\n\r\n    li {\r\n      padding: 6px 16px;\r\n      border-radius: 4px;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: var(--F2F2F2-proxy-manager-context-menu);\r\n      }\r\n    }\r\n\r\n  }\r\n`;\r\n\r\nexport const DividerEl = styled('div')`\r\n  background: var(--EBEBEB-proxy-manager-context-menu);\r\n  height: 1px;\r\n  margin: 5px 0;\r\n`;\r\n","import { message } from 'antd';\r\nimport React, { FC, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { useFilteredProxyList } from '../../../state/proxy-list.atom';\r\nimport {\r\n  switchConfirmBlockVisible,\r\n  switchIsSelectProxyModeOpened,\r\n  useIsSelectProxyModeOpened,\r\n  useProxySelectMenuPosition,\r\n  useIsProxyContextMenuVisible, hideProxyContextMenu,\r\n} from '../../../state/proxy-select-menu.atom';\r\nimport { setSelectedAllProxies, updateSelectedProxies, updateSelectedProxiesList, useSelectedProxies } from '../../../state/selected-proxies.atom';\r\nimport { copyProxies } from '../proxy-helpers';\r\nimport { DividerEl, ProxyContextMenuEl } from '../styles/context-menu';\r\n\r\nconst ContextMenu: FC = () => {\r\n  const isProxyContextMenuVisible = useIsProxyContextMenuVisible();\r\n  const isSelectProxyModeOpened = useIsSelectProxyModeOpened();\r\n  const position = useProxySelectMenuPosition();\r\n  const { selectedProxy, selectedProxies } = useSelectedProxies();\r\n\r\n  const filteredProxies = useFilteredProxyList();\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const handleClick = (): void => {\r\n      hideProxyContextMenu();\r\n    };\r\n\r\n    const handleOpenContextMenu = (event: MouseEvent): void => {\r\n      const profilesTableEl = document.querySelector('.proxy-popper-container');\r\n      if (profilesTableEl && !profilesTableEl.contains(event.target as Node)) {\r\n        hideProxyContextMenu();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('contextmenu', handleOpenContextMenu);\r\n    document.addEventListener('click', handleClick);\r\n\r\n    return (): void => {\r\n      document.removeEventListener('click', handleClick);\r\n      document.removeEventListener('contextmenu', handleOpenContextMenu);\r\n    };\r\n  }, []);\r\n\r\n  if (!(isProxyContextMenuVisible && selectedProxy)) {\r\n    return null;\r\n  }\r\n\r\n  const areActionsAllowed = ['http', 'socks4', 'socks5', 'geolocation'].includes(selectedProxy.mode);\r\n\r\n  const handleSelectProxy = (): void => {\r\n    updateSelectedProxiesList(selectedProxy._id);\r\n    updateSelectedProxies({\r\n      lastSelectedProxy: selectedProxy._id,\r\n    });\r\n\r\n    if (!isSelectProxyModeOpened) {\r\n      switchIsSelectProxyModeOpened(true);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProxy = (): void => {\r\n    switchConfirmBlockVisible(true);\r\n  };\r\n\r\n  const copyProxy = (): void => {\r\n    copyProxies([selectedProxy]);\r\n    message.success(translation('base.copiedText'));\r\n  };\r\n\r\n  const handleSelectAll = (): void => {\r\n    const proxies = filteredProxies.filter((el) => !!el.host);\r\n\r\n    if (selectedProxies.length === proxies.length) {\r\n      updateSelectedProxies({\r\n        selectedProxies: [],\r\n      });\r\n    } else {\r\n      setSelectedAllProxies();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <ProxyContextMenuEl left={position.x} top={position.y}>\r\n      <ul>\r\n        {(areActionsAllowed) ? (\r\n          <>\r\n            <li onClick={handleSelectProxy}>\r\n              {translation('proxies.selectProxy')}\r\n            </li>\r\n            {/*\r\n            TODO: check proxy\r\n            <li>\r\n              {t('proxies.checkProxy')}\r\n            </li>\r\n            */}\r\n            <li onClick={copyProxy}>\r\n              {translation('proxies.copyProxy')}\r\n            </li>\r\n            <li onClick={handleDeleteProxy}>\r\n              {translation('proxies.deleteProxy')}\r\n            </li>\r\n            <DividerEl />\r\n          </>\r\n        ) : null}\r\n        <li onClick={handleSelectAll}>\r\n          {translation('proxies.selectAllProxies')}\r\n        </li>\r\n      </ul>\r\n    </ProxyContextMenuEl>,\r\n    document.body,\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconBasket: FC = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M2.5 6.5V13.5C2.5 14.605 3.395 15.5 4.5 15.5H12.5C13.605 15.5 14.5 14.605 14.5 13.5V6.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M1.5 3.5H15.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M6.5 3.5V0.5H10.5V3.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M8.5 7.5V12.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M11.5 7.5V12.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M5.5 7.5V12.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconBasket;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconProxyClose: FC = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M13.5 2.5L2.5 13.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    <path d=\"M2.5 2.5L13.5 13.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n  </svg>\r\n);\r\n\r\nexport default IconProxyClose;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconProxyCopy: FC = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0_11433_144975)\">\r\n      <path d=\"M14.5 5.5H8.5C7.94772 5.5 7.5 5.94772 7.5 6.5V14.5C7.5 15.0523 7.94772 15.5 8.5 15.5H14.5C15.0523 15.5 15.5 15.0523 15.5 14.5V6.5C15.5 5.94772 15.0523 5.5 14.5 5.5Z\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n      <path d=\"M4.5 13.5H1.5C0.947715 13.5 0.5 13.0523 0.5 12.5V1.5C0.5 0.947715 0.947715 0.5 1.5 0.5H10.5C11.0523 0.5 11.5 0.947715 11.5 1.5V2.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_11433_144975\">\r\n        <rect width=\"16\" height=\"16\" fill=\"var(--FFFFFF)\"/>\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nexport default IconProxyCopy;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconSelectAll: FC = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0_11476_141511)\">\r\n      <path d=\"M4.5 5.5L4.5 14.5C4.5 15.0523 4.94771 15.5 5.5 15.5L14.5 15.5C15.0523 15.5 15.5 15.0523 15.5 14.5L15.5 5.5C15.5 4.94772 15.0523 4.5 14.5 4.5L5.5 4.5C4.94771 4.5 4.5 4.94771 4.5 5.5Z\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n      <path d=\"M11.5 2.5L11.5 1.5C11.5 0.947715 11.0523 0.5 10.5 0.5L1.5 0.5C0.947715 0.5 0.5 0.947715 0.5 1.5L0.5 10.5C0.5 11.0523 0.947715 11.5 1.5 11.5L2.5 11.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n      <path d=\"M7 10L8.83333 12L13 8\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_11476_141511\">\r\n        <rect width=\"16\" height=\"16\" fill=\"var(--FFFFFF)\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n\r\n);\r\n\r\nexport default IconSelectAll;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ProxyListMenuEl = styled('div')`\r\n  position: absolute;\r\n  height: 44px;\r\n  left: 0;\r\n  bottom: 0;\r\n  background: var(--FFFFFF-proxy-manager-list-menu);\r\n  border-top: 1px solid var(--EBEBEB-proxy-manager-list-menu);\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n`;\r\n\r\nexport const ButtonsContainerEl = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport { Radio } from 'antd';\r\n\r\nimport { theme } from '../../proxy-helpers';\r\n\r\nexport const ProxyUpdateFormHeaderEl = styled('footer')`\r\n  height: 44px;\r\n  padding: 10px 20px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid var(--EBEBEB-proxy-manager-update-form);\r\n`;\r\n\r\nexport const ProxyFormContent = styled('div')`\r\n  height: 234px;\r\n  overflow-y: auto;\r\n\r\n  padding: 21px ${theme.spacing(5)}px 0;\r\n`;\r\n\r\nexport const ProxyFormInputsBlock = styled('div')`\r\n  padding: 8px 0;\r\n`;\r\n\r\nexport const RadioButton = styled(Radio.Button)`\r\n  width: 33.33%;\r\n  height: 32px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  text-transform: uppercase;\r\n  padding: 8px 0;\r\n`;\r\n\r\nexport const ProxyFormRowEl = styled('div')`\r\n  clear: both;\r\n  margin-bottom: 19px;\r\n`;\r\n\r\nexport const ProxyFormLeft = styled('div')`\r\n  float: left;\r\n  width: 74px;\r\n  letter-spacing: 0.25px;\r\n  line-height: 20px;\r\n`;\r\n\r\nexport const ProxyFormRight = styled('div')`\r\n  margin-left: 82px;\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nexport const ProxyFormInputEl = styled('input')<{ inputWidth?: number }>`\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  max-width: 100%;\r\n  padding: 0;\r\n  height: 21px;\r\n  font-size: 14px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  letter-spacing: 0.25px;\r\n  line-height: 20px;\r\n\r\n  ${(props): SerializedStyles => css`\r\n    width: ${props.inputWidth || 206}px\r\n  `}\r\n\r\n  &:focus {\r\n    outline: none !important;\r\n    box-shadow: none;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: var(--CDCDCD-proxy-manager-update-form);\r\n  }\r\n`;\r\n\r\nexport const HostPortSplitter = styled('div')`\r\n  width: 12px;\r\n  text-align: center;\r\n  margin: 0 3px;\r\n`;\r\n\r\nexport const FormButtonsContainer = styled('div')`\r\n  padding-bottom: ${theme.spacing(5)}px;\r\n`;\r\n\r\nexport const DeleteProxyBtn = styled('button')`\r\n  color: var(--F5222D-proxy-manager-update-form);\r\n  outline: none;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  background: none;\r\n  border: none;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &:focus,\r\n  &:visited {\r\n    color: var(--F5222D-proxy-manager-update-form);\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const FooterBtnsContainer = styled('div')`\r\n  width: 90px;\r\n`;\r\n\r\nexport const FooterMidBtnsContainer = styled('div')`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: -11px;\r\n`;\r\n\r\nexport const FooterBtn = styled('button')`\r\n  color: var(--CDCDCD-proxy-manager-update-form);\r\n  outline: none;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 23px;\r\n  letter-spacing: 0.44px;\r\n  margin: 0 7px;\r\n  background: none;\r\n  border: none;\r\n  padding: 4px;\r\n  width: 24px;\r\n  height: 24px;\r\n  text-align: center;\r\n\r\n  &:focus,\r\n  &:visited {\r\n    color: var(--CDCDCD-proxy-manager-update-form);\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${theme.colors.primary};\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import { message } from 'antd';\r\nimport { TooltipTrigger } from 'antd/lib/tooltip';\r\nimport React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport ProxyIconBtnWithTooltip from './proxy-icon-btn-with-tooltip';\r\nimport { useFilteredProxyList } from '../../../state/proxy-list.atom';\r\nimport { switchConfirmBlockVisible, switchIsSelectProxyModeOpened, useIsSelectProxyModeOpened } from '../../../state/proxy-select-menu.atom';\r\nimport { setSelectedAllProxies, updateSelectedProxies, useSelectedProxies } from '../../../state/selected-proxies.atom';\r\nimport IconBasket from '../../../ui/icons/IconBasket';\r\nimport IconProxyClose from '../../../ui/icons/IconProxyClose';\r\nimport IconProxyCopy from '../../../ui/icons/IconProxyCopy';\r\nimport IconSelectAll from '../../../ui/icons/IconSelectAll';\r\nimport { copyProxies } from '../proxy-helpers';\r\nimport { ButtonsContainerEl, ProxyListMenuEl } from '../styles/proxy-list-menu';\r\nimport { TooltipEl } from '../proxy-selector/styles';\r\nimport { FooterBtn } from '../proxy-manager/proxy-manager-edit-view/styles';\r\n\r\nconst ProxyListMenu: FC = () => {\r\n  const { selectedProxies } = useSelectedProxies();\r\n  const isSelectProxyModeOpened = useIsSelectProxyModeOpened();\r\n  const filteredProxies = useFilteredProxyList();\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleCancel = (): void => {\r\n    updateSelectedProxies({\r\n      selectedProxy: null,\r\n      selectedProxies: [],\r\n    });\r\n    switchIsSelectProxyModeOpened(false);\r\n  };\r\n\r\n  const handleSelectAll = (): void => {\r\n    const proxies = filteredProxies.filter((el) => !!el.host);\r\n\r\n    if (selectedProxies.length === proxies.length) {\r\n      updateSelectedProxies({\r\n        selectedProxies: [],\r\n      });\r\n    } else {\r\n      setSelectedAllProxies();\r\n    }\r\n  };\r\n\r\n  const handleDelete = (): void => {\r\n    if (!selectedProxies.length) {\r\n      message.error(translation('proxies.noSelectedProxies'));\r\n\r\n      return;\r\n    }\r\n\r\n    updateSelectedProxies({\r\n      selectedProxy: null,\r\n    });\r\n    switchConfirmBlockVisible(true);\r\n  };\r\n\r\n  const handleCopy = (): void => {\r\n    const proxies = filteredProxies.filter((el) => selectedProxies.includes(el._id));\r\n\r\n    if (proxies.length) {\r\n      copyProxies(proxies);\r\n      message.success(translation('base.copiedText'));\r\n    }\r\n  };\r\n\r\n  const footerButtons = [{\r\n    title: translation('proxies.selectAllProxies'),\r\n    onClick: handleSelectAll,\r\n    icon: <IconSelectAll />,\r\n  }, {\r\n  /*\r\n    TODO: check proxies\r\n    title: t('proxies.checkProxies'),\r\n    onClick: () => {},\r\n    icon: <IconReload />,\r\n  }, {\r\n  */\r\n    title: (selectedProxies) ? translation('proxies.copyProxy') : translation('proxies.selectProxiesToCopy'),\r\n    onClick: handleCopy,\r\n    icon: <IconProxyCopy />,\r\n    tooltipTrigger: (selectedProxies) ? 'hover' : 'click',\r\n  }, {\r\n    title: (selectedProxies) ? translation('proxies.deleteProxies') : translation('proxies.selectProxiesToDelete'),\r\n    onClick: handleDelete,\r\n    icon: <IconBasket />,\r\n    tooltipTrigger: (selectedProxies) ? 'hover' : 'click',\r\n  }, {\r\n    title: translation('proxies.cancel'),\r\n    onClick: handleCancel,\r\n    icon: <IconProxyClose />,\r\n  }];\r\n\r\n  if (!isSelectProxyModeOpened) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ProxyListMenuEl>\r\n      <ButtonsContainerEl>\r\n        {footerButtons.map((button): JSX.Element => (\r\n          <ProxyIconBtnWithTooltip\r\n            key={button.title}\r\n            tooltipContent={(\r\n              <TooltipEl>\r\n                {button.title}\r\n              </TooltipEl>\r\n            )}\r\n            tooltipTrigger={button.tooltipTrigger as TooltipTrigger}\r\n          >\r\n            <FooterBtn onClick={button.onClick} type=\"button\">\r\n              {button.icon}\r\n            </FooterBtn>\r\n          </ProxyIconBtnWithTooltip>\r\n        ))}\r\n      </ButtonsContainerEl>\r\n    </ProxyListMenuEl>\r\n  );\r\n};\r\n\r\nexport default ProxyListMenu;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RemovingConfirmEl = styled('section')`\r\n  background: var(--FFFFFF-proxy-manager-removing-confirm);\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const RemovingConfirmContentEl = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const RemovingConfirmTitleEl = styled('div')`\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const RemovingConfirmButtonsEl = styled('div')`\r\n  text-align: center;\r\n  width: 100%;\r\n  margin-top: 16px;\r\n`;\r\n\r\nexport const BtnDelete = styled('button')`\r\n  color: var(--767676-proxy-manager-removing-confirm);\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: none;\r\n  border: none;\r\n  padding: 0;\r\n  letter-spacing: 0.25px;\r\n  line-height: 20px;\r\n  margin: 0 8px;\r\n  padding: 3px 12px;\r\n  border: 1px solid var(--CDCDCD-proxy-manager-removing-confirm);\r\n  border-radius: 14px;\r\n\r\n  &:hover {\r\n    color: var(--F5222D-proxy-manager-removing-confirm);\r\n    border: 1px solid var(--F5222D-proxy-manager-removing-confirm);\r\n  }\r\n`;\r\n\r\nexport const BtnCancel = styled('button')`\r\n  color: var(--CDCDCD-proxy-manager-removing-confirm);\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: none;\r\n  border: none;\r\n  letter-spacing: 0.25px;\r\n  line-height: 20px;\r\n  margin: 0 8px;\r\n  padding: 3px 0;\r\n\r\n  &:hover {\r\n    color: var(--222222-proxy-manager-removing-confirm);\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { deleteProxies } from '../../../state/proxy-operations.commands';\r\nimport { switchConfirmBlockVisible, useConfirmBlockVisible, useIsSelectProxyModeOpened } from '../../../state/proxy-select-menu.atom';\r\nimport { updateSelectedProxies, useSelectedProxies } from '../../../state/selected-proxies.atom';\r\nimport { deleteProxiesRequest } from '../api';\r\nimport {\r\n  BtnDelete,\r\n  BtnCancel,\r\n  RemovingConfirmContentEl,\r\n  RemovingConfirmEl,\r\n  RemovingConfirmTitleEl,\r\n  RemovingConfirmButtonsEl,\r\n} from '../styles/removing-confirm';\r\n\r\nconst RemovingConfirm: FC = () => {\r\n  const { selectedProxy, selectedProxies } = useSelectedProxies();\r\n  const isSelectProxyModeOpened = useIsSelectProxyModeOpened();\r\n  const confirmBlockVisible = useConfirmBlockVisible();\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  if (!confirmBlockVisible) {\r\n    return null;\r\n  }\r\n\r\n  const handleDelete = (): void => {\r\n    let proxiesToDelete: string[];\r\n\r\n    if (selectedProxy) {\r\n      proxiesToDelete = [selectedProxy._id];\r\n    } else {\r\n      proxiesToDelete = selectedProxies;\r\n    }\r\n\r\n    deleteProxiesRequest(proxiesToDelete);\r\n    deleteProxies(proxiesToDelete);\r\n    switchConfirmBlockVisible(false);\r\n  };\r\n\r\n  const handleCancel = (): void => {\r\n    switchConfirmBlockVisible(false);\r\n\r\n    if (!isSelectProxyModeOpened) {\r\n      updateSelectedProxies({\r\n        selectedProxies: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  const translateKey = (selectedProxy || selectedProxies.length === 1) ? 'proxies.deleteProxyPermanently' : 'proxies.deleteProxiesPermanently';\r\n\r\n  return (\r\n    <RemovingConfirmEl>\r\n      <RemovingConfirmContentEl>\r\n        <RemovingConfirmTitleEl>\r\n          {translation(translateKey, {\r\n            count: (selectedProxy) ? 1 : selectedProxies.length,\r\n          })}\r\n        </RemovingConfirmTitleEl>\r\n        <RemovingConfirmButtonsEl>\r\n          <BtnDelete onClick={handleDelete}>\r\n            {translation('proxies.delete')}\r\n          </BtnDelete>\r\n          <BtnCancel onClick={handleCancel}>\r\n            {translation('proxies.cancel')}\r\n          </BtnCancel>\r\n        </RemovingConfirmButtonsEl>\r\n      </RemovingConfirmContentEl>\r\n    </RemovingConfirmEl>\r\n  );\r\n};\r\n\r\nexport default RemovingConfirm;\r\n","import React, { FC, useEffect, useRef } from 'react';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nimport EmptyList from './empty-list';\r\nimport ProxyRow from './proxy-row';\r\nimport { ProxyListContentEl } from './styles/proxy-list';\r\nimport { useFilteredProxyList } from '../../../../state/proxy-list.atom';\r\nimport { getProxyManagerState, setProxyManagerState } from '../../../../state/proxy-manager-modal-status.atom';\r\nimport {\r\n  switchIsSelectProxyModeOpened,\r\n  useConfirmBlockVisible,\r\n  useIsSelectProxyModeOpened,\r\n  useIsProxyContextMenuVisible, hideProxyContextMenu,\r\n} from '../../../../state/proxy-select-menu.atom';\r\nimport { useSelectedProxies } from '../../../../state/selected-proxies.atom';\r\nimport ContextMenu from '../../components/context-menu';\r\nimport { IProfileProxy } from '../../components/interfaces/IProfileProxy';\r\nimport { IProxy } from '../../components/interfaces/IProxy';\r\nimport ProxyListMenu from '../../components/proxy-list-menu';\r\nimport RemovingConfirm from '../../components/removing-confirm';\r\n\r\ninterface IProps {\r\n  currentProxy?: IProfileProxy;\r\n  localProxyElementLocation: string | null;\r\n}\r\n\r\nconst ProxyList: FC<IProps> = (props: IProps) => {\r\n  const {\r\n    currentProxy,\r\n    localProxyElementLocation,\r\n  } = props;\r\n\r\n  const width = 330;\r\n\r\n  const isSelectProxyModeOpened = useIsSelectProxyModeOpened();\r\n  const confirmBlockVisible = useConfirmBlockVisible();\r\n  const isProxyContextMenuVisible = useIsProxyContextMenuVisible();\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const filteredProxies = useFilteredProxyList();\r\n  const { selectedProxies } = useSelectedProxies();\r\n\r\n  useEffect(() => {\r\n    if (currentProxy?.mode !== 'none') {\r\n      const proxyManagerState = getProxyManagerState();\r\n      setProxyManagerState({ ...proxyManagerState, currentProxy });\r\n    }\r\n\r\n    return () => {\r\n      const proxyManagerState = getProxyManagerState();\r\n      setProxyManagerState({ ...proxyManagerState, currentProxy: null });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!selectedProxies.length) {\r\n      switchIsSelectProxyModeOpened(false);\r\n    }\r\n  }, [selectedProxies]);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (): void => {\r\n      hideProxyContextMenu();\r\n    };\r\n\r\n    if (ref?.current) {\r\n      if (isProxyContextMenuVisible) {\r\n        ref.current.addEventListener('scroll', handleScroll);\r\n      } else {\r\n        ref.current.removeEventListener('scroll', handleScroll);\r\n      }\r\n    }\r\n\r\n    return (): void => {\r\n      if (ref?.current) {\r\n        ref.current.removeEventListener('scroll', handleScroll);\r\n      }\r\n    };\r\n  }, [isProxyContextMenuVisible]);\r\n\r\n  let proxiesRes: Array<IProxy|null> = filteredProxies.filter(proxy => !proxy.isInvisible);\r\n  proxiesRes = isSelectProxyModeOpened ? [...proxiesRes, null] : proxiesRes;\r\n\r\n  const renderConfirm = (): JSX.Element | null => {\r\n    if (!confirmBlockVisible) {\r\n      return null;\r\n    }\r\n\r\n    return <RemovingConfirm />;\r\n  };\r\n\r\n  if (!proxiesRes.length) {\r\n    return <EmptyList />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ProxyListContentEl>\r\n        <div style={{ width }}>\r\n          <FixedSizeList\r\n            height={278}\r\n            width={width}\r\n            itemCount={proxiesRes.length}\r\n            itemData={{\r\n              filteredProxies: proxiesRes,\r\n              currentProxy,\r\n              localProxyElementLocation,\r\n            }}\r\n            itemSize={41}\r\n            outerRef={ref}\r\n          >\r\n            {ProxyRow}\r\n          </FixedSizeList>\r\n        </div>\r\n        <ProxyListMenu />\r\n      </ProxyListContentEl>\r\n      <ContextMenu />\r\n      {renderConfirm()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProxyList;\r\n","import React from 'react';\r\n\r\nconst IconBack = () => (\r\n  <svg width=\"6\" height=\"11\" viewBox=\"0 0 6 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M5.5 1L1 5.5L5.5 10\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconBack;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconClean: FC = () => (\r\n  <svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0_10669_103111)\">\r\n      <path d=\"M14.9996 0.5L9.51562 6.898\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M8.5 6.5C8.89782 6.5 9.27936 6.65804 9.56066 6.93934C9.84196 7.22064 10 7.60218 10 8C9.97715 8.22819 9.92574 8.45261 9.847 8.668C9.35596 9.75196 9.13124 10.9376 9.19161 12.1261C9.25197 13.3146 9.59566 14.4714 10.194 15.5H1C1 10.529 3.529 6.5 8.5 6.5Z\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M13 9.5H16\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M12 12.5H16\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M13 15.5H16\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M6.63833 6.71387C6.50735 7.08867 6.46862 7.48952 6.52541 7.88247C6.58219 8.27542 6.73283 8.6489 6.96456 8.97128C7.1963 9.29367 7.5023 9.55547 7.85667 9.73451C8.21104 9.91356 8.60333 10.0046 9.00033 9.99987C9.1369 9.99746 9.27303 9.98375 9.40733 9.95887\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M4.13981 12.5C3.97789 13.4919 3.95265 14.5013 4.06481 15.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M6.79863 12.5C6.74398 13.5114 6.8558 14.5249 7.12963 15.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_10669_103111\">\r\n        <rect width=\"16\" height=\"16\" fill=\"var(--FFFFFF)\" transform=\"translate(0.5)\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nexport default IconClean;\r\n","import React, { FC } from 'react';\r\n\r\nconst IconCopyProxy: FC = () => (\r\n  <svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0_10669_103279)\">\r\n      <path d=\"M15 5.5H9C8.44772 5.5 8 5.94772 8 6.5V14.5C8 15.0523 8.44772 15.5 9 15.5H15C15.5523 15.5 16 15.0523 16 14.5V6.5C16 5.94772 15.5523 5.5 15 5.5Z\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n      <path d=\"M5 13.5H2C1.44772 13.5 1 13.0523 1 12.5V1.5C1 0.947715 1.44772 0.5 2 0.5H11C11.5523 0.5 12 0.947715 12 1.5V2.5\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_10669_103279\">\r\n        <rect width=\"16\" height=\"16\" fill=\"var(--FFFFFF)\" transform=\"translate(0.5)\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nexport default IconCopyProxy;\r\n","import React, { FC, MouseEvent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { FooterBtn, FooterMidBtnsContainer, ProxyUpdateFormHeaderEl } from './styles';\r\nimport { closeProxyManager } from '../../../../state/proxy-manager-modal-status.atom';\r\nimport IconBack from '../../../../ui/icons/IconBack';\r\nimport IconClean from '../../../../ui/icons/IconClean';\r\nimport IconCopyProxy from '../../../../ui/icons/IconCopyProxy';\r\nimport IconPasteProxy from '../../../../ui/icons/IconPasteProxy';\r\nimport ProxyIconBtnWithTooltip from '../../components/proxy-icon-btn-with-tooltip';\r\nimport { TooltipEl } from '../../proxy-selector/styles';\r\nimport { ProxyListHeaderBtnContainer, ProxyListHeaderBtnLeft, ProxyListHeaderBtnRight } from '../proxy-list/styles/proxy-list';\r\n\r\ninterface IProps {\r\n  clearForm: () => void;\r\n  copyProxy: () => void;\r\n  handlePasteProxy: () => Promise<void|true>;\r\n}\r\n\r\nconst ProxyUpdateFormHeader: FC<IProps> = (props: IProps) => {\r\n  const { clearForm, copyProxy, handlePasteProxy } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const handleCancelClick = (event: MouseEvent): void => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    closeProxyManager();\r\n  };\r\n\r\n  return (\r\n    <ProxyUpdateFormHeaderEl>\r\n      <ProxyListHeaderBtnContainer>\r\n        <ProxyListHeaderBtnLeft type=\"submit\">\r\n          <div style={{ marginRight: 10 }}>\r\n            <IconBack />\r\n          </div>\r\n          {translation('proxies.done')}\r\n        </ProxyListHeaderBtnLeft>\r\n      </ProxyListHeaderBtnContainer>\r\n\r\n      <FooterMidBtnsContainer>\r\n        <ProxyIconBtnWithTooltip tooltipContent={(\r\n          <TooltipEl>\r\n            {translation('proxies.pasteProxy')}\r\n          </TooltipEl>\r\n        )}>\r\n          <FooterBtn onClick={handlePasteProxy} type=\"button\">\r\n            <IconPasteProxy />\r\n          </FooterBtn>\r\n        </ProxyIconBtnWithTooltip>\r\n\r\n        <ProxyIconBtnWithTooltip tooltipContent={(\r\n          <TooltipEl>\r\n            {translation('proxies.clearForm')}\r\n          </TooltipEl>\r\n        )}>\r\n          <FooterBtn onClick={clearForm} type=\"button\">\r\n            <IconClean />\r\n          </FooterBtn>\r\n        </ProxyIconBtnWithTooltip>\r\n\r\n        <ProxyIconBtnWithTooltip tooltipContent={(\r\n          <TooltipEl>\r\n            {translation('proxies.copyProxy')}\r\n          </TooltipEl>\r\n        )}>\r\n          <FooterBtn onClick={copyProxy} type=\"button\">\r\n            <IconCopyProxy />\r\n          </FooterBtn>\r\n        </ProxyIconBtnWithTooltip>\r\n      </FooterMidBtnsContainer>\r\n\r\n      <ProxyListHeaderBtnContainer>\r\n        <ProxyListHeaderBtnRight onClick={handleCancelClick}>\r\n          {translation('proxies.cancel')}\r\n        </ProxyListHeaderBtnRight>\r\n      </ProxyListHeaderBtnContainer>\r\n    </ProxyUpdateFormHeaderEl>\r\n  );\r\n};\r\n\r\nexport default ProxyUpdateFormHeader;\r\n","export const isString = (val: any): boolean => typeof val === 'string';\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RadioButtonEl = styled('div')`\r\n  padding: 1px 7px;\r\n  text-transform: uppercase;\r\n  white-space: nowrap;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  outline: none;\r\n  letter-spacing: 0.2px;\r\n  border: 1px solid var(--EBEBEB-proxy-manager-radio-buttons);\r\n  border-radius: 10px;\r\n  color: var(--CDCDCD-proxy-manager-radio-buttons);\r\n  line-height: 16px;\r\n\r\n  &:hover {\r\n    color: var(--222222-proxy-manager-radio-buttons);\r\n    border-color: var(--767676-proxy-manager-radio-buttons);\r\n  }\r\n`;\r\n\r\nexport const InputRadioEl = styled('input')`\r\n  display: none;\r\n\r\n  &:checked + div {\r\n    color: var(--222222-proxy-manager-radio-buttons);\r\n    border-color: var(--767676-proxy-manager-radio-buttons);\r\n  }\r\n`;\r\n\r\nexport const RadioContainerEl = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: relative;\r\n  top: -1px;\r\n`;\r\n\r\nexport const RadioLabelEl = styled('label')`\r\n  cursor: pointer;\r\n  padding: 0;\r\n  margin-right: 4px;\r\n  height: 20px;\r\n  display: flex;\r\n\r\n  &:last-child div {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n","import React, { ChangeEvent, FC } from 'react';\r\n\r\nimport { InputRadioEl, RadioButtonEl, RadioContainerEl, RadioLabelEl } from '../styles/radio-buttons';\r\n\r\ninterface IOption {\r\n  value: string | number;\r\n  label: string;\r\n}\r\n\r\ninterface IProps {\r\n  options: IOption[];\r\n  value: string | number;\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst RadioButtons: FC<IProps> = (props) => {\r\n  const {\r\n    options,\r\n    value,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <RadioContainerEl>\r\n      {options.map((option) => (\r\n        <RadioLabelEl key={option.value}>\r\n          <InputRadioEl checked={value === option.value} onChange={onChange} type='radio' value={option.value} />\r\n          <RadioButtonEl>\r\n            {option.label}\r\n          </RadioButtonEl>\r\n        </RadioLabelEl>\r\n      ))}\r\n    </RadioContainerEl>\r\n  );\r\n};\r\n\r\nexport default RadioButtons;\r\n","import { message } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { FC, useState, ChangeEvent, useEffect, SyntheticEvent, ClipboardEvent, MouseEvent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport ProxyUpdateFormHeader from './proxy-update-form-header';\r\nimport {\r\n  DeleteProxyBtn,\r\n  FormButtonsContainer,\r\n  HostPortSplitter,\r\n  ProxyFormContent,\r\n  ProxyFormInputEl,\r\n  ProxyFormLeft,\r\n  ProxyFormRight,\r\n  ProxyFormRowEl,\r\n} from './styles';\r\nimport { NEW_FEATURES } from '../../../../../../feature-toggle';\r\nimport { useProxyList } from '../../../../state/proxy-list.atom';\r\nimport { openProxyManagerListView, useProxyManagerState } from '../../../../state/proxy-manager-modal-status.atom';\r\nimport { switchConfirmBlockVisible } from '../../../../state/proxy-select-menu.atom';\r\nimport { updateSelectedProxies } from '../../../../state/selected-proxies.atom';\r\nimport { isString } from '../../../../utils/is-string';\r\nimport { parseMultipleProxies, proxyFromClipboard } from '../../../../utils/proxy-string';\r\nimport { isProxyDataValid } from '../../../../utils/proxy.validation-message';\r\nimport { sendActionAnalytics } from '../../../common/api';\r\nimport { saveProxy } from '../../api';\r\nimport CheckProxyBtn from '../../components/check-proxy-btn';\r\nimport { IProxy } from '../../components/interfaces/IProxy';\r\nimport ProxyFlag from '../../components/proxy-flag';\r\nimport RadioButtons from '../../components/radio-buttons';\r\nimport { FORM_VALUES_DEFAULT } from '../../constants';\r\nimport { copyProxies, IStatusParams, proxyModes, getProxyStatusParams } from '../../proxy-helpers';\r\nimport { ProxyFlagBlockEl } from '../proxy-list/styles/proxy-list-item';\r\n\r\ninterface IProps {\r\n  currentProxy?: IProxy;\r\n  localProxyElementLocation: string | null;\r\n}\r\n\r\nconst ProxyManagerEditView: FC<IProps> = (props) => {\r\n  const { currentProxy, localProxyElementLocation } = props;\r\n  const [formValues, setFormValues] = useState<IProxy>(FORM_VALUES_DEFAULT);\r\n  const [isChecking, setIsChecking] = useState(false);\r\n\r\n  const { modalView, modalEditingProxyId, currentProfileId } = useProxyManagerState();\r\n  const proxyList = useProxyList();\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const fillForm = async (): Promise<void> => {\r\n      let selectedProxy;\r\n      if (modalView === 'proxy-edit' && modalEditingProxyId) {\r\n        selectedProxy = proxyList.find((el) => el._id === modalEditingProxyId);\r\n      } else if (modalView === 'proxy-paste') {\r\n        selectedProxy = await proxyFromClipboard();\r\n      }\r\n\r\n      if (selectedProxy) {\r\n        setFormValues({\r\n          _id: selectedProxy._id || '',\r\n          customName: selectedProxy.customName || '',\r\n          mode: selectedProxy.mode || 'http',\r\n          host: selectedProxy.host || '',\r\n          port: (selectedProxy.port) ? selectedProxy.port : '',\r\n          username: selectedProxy.username || '',\r\n          password: selectedProxy.password || '',\r\n          changeIpUrl: selectedProxy.changeIpUrl || '',\r\n          status: selectedProxy.status || false,\r\n          country: selectedProxy.country,\r\n          city: selectedProxy.city,\r\n          error: selectedProxy.error,\r\n          checkDate: selectedProxy.checkDate,\r\n        });\r\n      } else {\r\n        setFormValues(FORM_VALUES_DEFAULT);\r\n      }\r\n    };\r\n\r\n    fillForm();\r\n  }, [modalEditingProxyId, modalView]);\r\n\r\n  const handleChangeMode = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setFormValues({\r\n      ...formValues,\r\n      mode: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event: SyntheticEvent): Promise<void> => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      customName,\r\n      mode,\r\n      host,\r\n      port,\r\n      username,\r\n      password,\r\n      changeIpUrl,\r\n    } = formValues;\r\n\r\n    if (!host && !port && !username && !password) {\r\n      openProxyManagerListView();\r\n\r\n      return;\r\n    }\r\n\r\n    const isProxyValid = isProxyDataValid({ host, port: port.toString(), translation });\r\n    if (!isProxyValid) {\r\n      return;\r\n    }\r\n\r\n    const proxyItem = {\r\n      mode,\r\n      customName: (customName || '').trim(),\r\n      host: host.replaceAll(' ', ''),\r\n      port: parseInt(`${port}`.replaceAll(' ', ''), 10),\r\n      username: (username || '').replaceAll(' ', ''),\r\n      password: (password || '').replaceAll(' ', ''),\r\n      changeIpUrl: (changeIpUrl || '').replaceAll(' ', ''),\r\n    };\r\n\r\n    const proxyId = modalEditingProxyId;\r\n\r\n    if (modalEditingProxyId && modalView === 'proxy-edit') {\r\n      const selectedProxy = proxyList.find((el) => el._id === modalEditingProxyId);\r\n\r\n      if (\r\n        selectedProxy &&\r\n        selectedProxy.mode === proxyItem.mode &&\r\n        selectedProxy.customName === proxyItem.customName &&\r\n        selectedProxy.host === proxyItem.host &&\r\n        selectedProxy.port === proxyItem.port &&\r\n        selectedProxy.username === proxyItem.username &&\r\n        selectedProxy.password === proxyItem.password &&\r\n        selectedProxy.changeIpUrl === proxyItem.changeIpUrl\r\n      ) {\r\n        openProxyManagerListView();\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsChecking(true);\r\n\r\n    await saveProxy(\r\n      { proxyId, proxyItem, checkProxy: true },\r\n      currentProfileId || '',\r\n    )\r\n      .catch(() => null)\r\n      .finally(() => setIsChecking(false));\r\n\r\n    openProxyManagerListView();\r\n  };\r\n\r\n  const pasteProxyText = async (clipboardText: string): Promise<IStatusParams | undefined>  => {\r\n    const proxies = await parseMultipleProxies(clipboardText);\r\n    if (!proxies?.length) {\r\n      return;\r\n    }\r\n\r\n    const [parsedProxy] = proxies;\r\n\r\n    if (!parsedProxy) {\r\n      return;\r\n    }\r\n\r\n    const newProxy = {\r\n      _id: '',\r\n      mode: (isString(parsedProxy.mode)) ? parsedProxy.mode : formValues.mode,\r\n      customName: (isString(parsedProxy.customName)) ? parsedProxy.customName : formValues.customName,\r\n      host: (isString(parsedProxy.host)) ? parsedProxy.host : formValues.host,\r\n      port: parsedProxy.port || formValues.port,\r\n      username: (isString(parsedProxy.username)) ? parsedProxy.username : formValues.username,\r\n      password: (isString(parsedProxy.password)) ? parsedProxy.password : formValues.password,\r\n      changeIpUrl: (isString(parsedProxy.changeIpUrl)) ? parsedProxy.changeIpUrl : formValues.changeIpUrl,\r\n      checkInProgress: true,\r\n      showInfoAfterCheck: true,\r\n    };\r\n\r\n    setFormValues(newProxy);\r\n\r\n    const statusParams = await getProxyStatusParams({\r\n      ...newProxy,\r\n      showInfoAfterCheck: true,\r\n    });\r\n\r\n    setFormValues({\r\n      ...newProxy,\r\n      ...statusParams,\r\n      checkDate: moment().toDate(),\r\n      checkInProgress: false,\r\n    });\r\n\r\n    sendActionAnalytics('pasted proxy from buffer');\r\n\r\n    return statusParams;\r\n  };\r\n\r\n  const handlePaste = async (event: ClipboardEvent<HTMLInputElement>): Promise<void | true> => {\r\n    const clipboardText = event.clipboardData.getData('Text');\r\n    const pasteProxyRes = await pasteProxyText(clipboardText);\r\n\r\n    if (pasteProxyRes) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handlePasteChangeIpUrl = async (event: ClipboardEvent<HTMLInputElement>): Promise<void> => {\r\n    const clipboardText = event.clipboardData.getData('Text');\r\n    const isPossibleUrl = clipboardText.startsWith('http://') || clipboardText.startsWith('https://');\r\n    if (isPossibleUrl) {\r\n      // without event.preventDefault - pastes into field, without parsing\r\n      return;\r\n    }\r\n\r\n    const pasteProxyRes = await pasteProxyText(clipboardText);\r\n    if (pasteProxyRes) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handlePasteProxy = async (): Promise<void | true> => {\r\n    const clipboardText = await navigator.clipboard.readText();\r\n    await pasteProxyText(clipboardText);\r\n  };\r\n\r\n  const deleteProxy = (event: MouseEvent): void => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    const proxyToDelete = proxyList.find((el) => el._id === modalEditingProxyId);\r\n    updateSelectedProxies({ selectedProxy: proxyToDelete || null });\r\n    openProxyManagerListView();\r\n    switchConfirmBlockVisible(true);\r\n  };\r\n\r\n  const clearForm = (): void => {\r\n    setFormValues(FORM_VALUES_DEFAULT);\r\n  };\r\n\r\n  const copyProxy = (): void => {\r\n    copyProxies([formValues]);\r\n    message.success(translation('base.copiedText'));\r\n  };\r\n\r\n  const renderFormFields = (): JSX.Element => (\r\n    <>\r\n      <ProxyFormRowEl style={{ paddingTop: 1 }}>\r\n        <ProxyFormLeft>\r\n          {translation('proxies.formFields.type')}\r\n        </ProxyFormLeft>\r\n        <ProxyFormRight>\r\n          <RadioButtons\r\n            options={proxyModes}\r\n            value={formValues.mode}\r\n            onChange={handleChangeMode}\r\n          />\r\n        </ProxyFormRight>\r\n      </ProxyFormRowEl>\r\n      <ProxyFormRowEl>\r\n        <ProxyFormLeft>\r\n          {translation('proxies.formFields.customName')}\r\n        </ProxyFormLeft>\r\n        <ProxyFormRight>\r\n          <ProxyFormInputEl\r\n            value={formValues.customName}\r\n            name=\"customName\"\r\n            onChange={handleChange}\r\n            onPaste={handlePaste}\r\n            placeholder={translation('proxies.formFields.customNamePlaceholder') || ''}\r\n          />\r\n        </ProxyFormRight>\r\n      </ProxyFormRowEl>\r\n      <ProxyFormRowEl>\r\n        <ProxyFormLeft style={{ width: 40 }}>\r\n          {translation('proxies.formFields.host')}\r\n        </ProxyFormLeft>\r\n        <ProxyFormRight style={{ marginLeft: NEW_FEATURES.header ? 82 : 57 }}>\r\n          <ProxyFlagBlockEl\r\n            newStyle={!!NEW_FEATURES.header}\r\n            style={{\r\n              opacity: (formValues.host && formValues.port) ? 1 : 0,\r\n            }}\r\n          >\r\n            <CheckProxyBtn\r\n              proxy={{ ...formValues, checkInProgress: isChecking }}\r\n              currentProxy={currentProxy}\r\n              updateInForm={(proxyData): void => {\r\n                setFormValues({\r\n                  ...formValues,\r\n                  ...proxyData,\r\n                });\r\n              }}\r\n              profileId={currentProfileId}\r\n              showTooltipCheckProxy={true}\r\n              localProxyElementLocation={localProxyElementLocation}\r\n            />\r\n            {(formValues.country) ? <ProxyFlag region={formValues.country} /> : null}\r\n          </ProxyFlagBlockEl>\r\n          <ProxyFormInputEl\r\n            value={formValues.host}\r\n            name=\"host\"\r\n            onChange={handleChange}\r\n            onPaste={handlePaste}\r\n            placeholder={translation('proxies.formFields.hostPlaceholder') || ''}\r\n            inputWidth={111}\r\n          />\r\n          <HostPortSplitter>\r\n            :\r\n          </HostPortSplitter>\r\n          <ProxyFormInputEl\r\n            value={formValues.port}\r\n            name=\"port\"\r\n            onChange={handleChange}\r\n            onPaste={handlePaste}\r\n            placeholder={translation('proxies.formFields.portPlaceholder') || ''}\r\n            inputWidth={58}\r\n          />\r\n        </ProxyFormRight>\r\n      </ProxyFormRowEl>\r\n      <ProxyFormRowEl>\r\n        <ProxyFormLeft>\r\n          {translation('proxies.formFields.username')}\r\n        </ProxyFormLeft>\r\n        <ProxyFormRight>\r\n          <ProxyFormInputEl\r\n            value={formValues.username}\r\n            autoComplete=\"new-password\"\r\n            name=\"username\"\r\n            onChange={handleChange}\r\n            onPaste={handlePaste}\r\n            placeholder={translation('proxies.formFields.usernamePlaceholder') || ''}\r\n          />\r\n        </ProxyFormRight>\r\n      </ProxyFormRowEl>\r\n      <ProxyFormRowEl>\r\n        <ProxyFormLeft>\r\n          {translation('proxies.formFields.password')}\r\n        </ProxyFormLeft>\r\n        <ProxyFormRight>\r\n          <ProxyFormInputEl\r\n            value={formValues.password}\r\n            autoComplete=\"new-password\"\r\n            name=\"password\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            onPaste={handlePaste}\r\n            placeholder={translation('proxies.formFields.passwordPlaceholder') || ''}\r\n            data-lpignore=\"true\"\r\n          />\r\n        </ProxyFormRight>\r\n      </ProxyFormRowEl>\r\n      <ProxyFormRowEl>\r\n        <ProxyFormLeft>\r\n          {translation('proxies.formFields.changeIpUrl')}\r\n        </ProxyFormLeft>\r\n        <ProxyFormRight>\r\n          <ProxyFormInputEl\r\n            value={formValues.changeIpUrl}\r\n            name=\"changeIpUrl\"\r\n            onChange={handleChange}\r\n            onPaste={handlePasteChangeIpUrl}\r\n            placeholder={translation('proxies.formFields.changeIpUrlPlaceholder') || ''}\r\n          />\r\n        </ProxyFormRight>\r\n      </ProxyFormRowEl>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete='off'>\r\n      <ProxyFormContent>\r\n        {renderFormFields()}\r\n        {(modalEditingProxyId) ? (\r\n          <FormButtonsContainer>\r\n            <DeleteProxyBtn onClick={deleteProxy} type='button'>\r\n              {translation('proxies.deleteProxy')}\r\n            </DeleteProxyBtn>\r\n          </FormButtonsContainer>\r\n        ) : null}\r\n      </ProxyFormContent>\r\n      <ProxyUpdateFormHeader\r\n        clearForm={clearForm}\r\n        copyProxy={copyProxy}\r\n        handlePasteProxy={handlePasteProxy}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProxyManagerEditView;\r\n","import css, { SerializedStyles } from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { flagIcons } from '../../../../flag-icons';\r\nimport { ProxyWrapperSectionEl } from '../proxy-selector/styles';\r\nimport { CheckProxyBtnContainerEl } from '../styles/check-proxy-btn';\r\n\r\nexport const ProxyPopper = styled('div')`\r\n  ${flagIcons}\r\n`;\r\n\r\nexport const ProxyManagerContainer = styled('div')<{ isDarkTheme: boolean }>`\r\n  background: var(--FFFFFF-proxy-manager-popup);\r\n  border-radius: 8px;\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  line-height: 20px;\r\n  letter-spacing: 0.25px;\r\n  overflow: hidden;\r\n\r\n  ${(props): SerializedStyles => props.isDarkTheme ? css`\r\n    box-shadow: -2px 0 8px var(--00000026-antd);\r\n  ` : css`\r\n    box-shadow: 0px 4px 8px var(--0000001F-proxy-manager-popup), 0px 6px 12px var(--0000001F-proxy-manager-popup), 0px 1px 16px var(--0000001F-proxy-manager-popup);\r\n  `}\r\n`;\r\n\r\nexport const ProxyManagerContent = styled('div')<{ newStyle: boolean }>`\r\n  width: 330px;\r\n  position: relative;\r\n\r\n  ${(props): SerializedStyles|null => props.newStyle ? css`\r\n    ${CheckProxyBtnContainerEl} {\r\n      display: flex;\r\n    }\r\n    \r\n    ${ProxyWrapperSectionEl} {\r\n      z-index: 104;\r\n    }\r\n  ` : null}\r\n`;\r\n","import Popper from '@material-ui/core/Popper';\r\nimport React, { FC, memo, useCallback, useEffect } from 'react';\r\n\r\nimport ProxyList from './proxy-list';\r\nimport ProxyManagerEditView from './proxy-manager-edit-view';\r\nimport { ProxyManagerContainer, ProxyManagerContent, ProxyPopper } from './styles';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { useProfilesList } from '../../../state/profiles-list.atom';\r\nimport { closeProxyManager, useProxyManagerState } from '../../../state/proxy-manager-modal-status.atom';\r\nimport { useCurrentTheme } from '../../../state/theme.atom';\r\nimport getSelectedThemeColor from '../../../utils/get-selected-theme-color';\r\nimport RemovingConfirm from '../components/removing-confirm';\r\nimport { EMPTY_PROXY } from '../proxy-helpers';\r\n\r\nconst ProxyManager: FC = () => {\r\n  const { modalView, containerElement, currentProfileId } = useProxyManagerState();\r\n  const profilesList = useProfilesList();\r\n  const currentProfile = profilesList.find(profile => profile.id === currentProfileId);\r\n  const currentProxy = currentProfile?.proxy || EMPTY_PROXY;\r\n  const theme = useCurrentTheme();\r\n  const isDarkTheme = getSelectedThemeColor(theme) === 'dark';\r\n\r\n  const handleGlobalKeyDown = useCallback((event: KeyboardEvent): void => {\r\n    if (event.key === 'Escape') {\r\n      closeProxyManager();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleGlobalKeyDown, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleGlobalKeyDown, true);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Popper\r\n      open={!!containerElement}\r\n      anchorEl={containerElement}\r\n      style={{\r\n        zIndex: 1060,\r\n        margin: '0 16px 0 -16px',\r\n      }}\r\n      disablePortal={false}\r\n      placement='bottom-start'\r\n      modifiers={{\r\n        preventOverflow: {\r\n          enabled: true,\r\n          boundariesElement: 'window',\r\n        },\r\n        offset: {\r\n          enabled: true,\r\n        },\r\n      }}\r\n    >\r\n      <ProxyPopper className='proxy-popper'>\r\n        <ProxyManagerContainer className='proxy-popper-container' isDarkTheme={isDarkTheme}>\r\n          <ProxyManagerContent newStyle={!!NEW_FEATURES.header}>\r\n            {modalView === 'proxy-list' ? (\r\n              <ProxyList\r\n                currentProxy={currentProxy}\r\n                localProxyElementLocation='no-location'\r\n              />\r\n            ) : (\r\n              <ProxyManagerEditView\r\n                currentProxy={currentProxy}\r\n                localProxyElementLocation='no-location'\r\n              />\r\n            )}\r\n            <RemovingConfirm />\r\n          </ProxyManagerContent>\r\n        </ProxyManagerContainer>\r\n      </ProxyPopper>\r\n    </Popper>\r\n  );\r\n};\r\n\r\nexport default memo(ProxyManager);\r\n","import * as Sentry from '@sentry/react';\r\n\r\nimport { findProxyInList } from './find-proxy-in-list';\r\nimport { ReactError } from '../../../utils/sentry-parameters/custom-errors';\r\nimport { IProfilesResponse } from '../../quickProfiles/api';\r\nimport { IProxy } from '../components/interfaces/IProxy';\r\nimport { PROFILES_OFFSET_TAG, PROXIES_LOADED_COUNT_TAG, PROXIES_NOT_FOUND_COUNT, PROXY_LOADING_DELAYED_WARNING, PROXY_MODE_TAG } from '../constants';\r\n\r\nconst captureProxyLoadingDelayed = ({\r\n  mainProxiesLength = 0,\r\n  proxiesNotFoundCount = 0,\r\n  offset = 0,\r\n}: {\r\n  mainProxiesLength: number;\r\n  proxiesNotFoundCount: number;\r\n  offset: number;\r\n}): void => {\r\n  Sentry.captureException(new ReactError(PROXY_LOADING_DELAYED_WARNING), (scope) => {\r\n    scope.setLevel('warning');\r\n    scope.setTransactionName(PROXY_LOADING_DELAYED_WARNING);\r\n    scope.setFingerprint([PROXY_LOADING_DELAYED_WARNING]);\r\n    scope.setTag(PROXIES_LOADED_COUNT_TAG, mainProxiesLength);\r\n    scope.setTag(PROFILES_OFFSET_TAG, offset);\r\n    scope.setTag(PROXIES_NOT_FOUND_COUNT, proxiesNotFoundCount);\r\n\r\n    return scope;\r\n  });\r\n};\r\n\r\n/*\r\n * Using a Promise here to perform this operation in a non-blocking manner, similar to how Sentry handles tasks.\r\n * Why? Even though we are only iterating through 30 items currently,\r\n * it is important to be cautious.\r\n * Page sizes may increase in the future, and slower machines could be less efficient with a blocking operation like this.\r\n */\r\nexport const compareProxyInProfilesWithProxyList = async (\r\n  offset = 0,\r\n  profilesReq: Partial<IProfilesResponse>,\r\n  proxyList: IProxy[],\r\n): Promise<null> => new Promise<null>((resolve) => {\r\n  if (!profilesReq.profiles) {\r\n    return resolve(null);\r\n  }\r\n\r\n  const proxiesInProfiles = profilesReq.profiles\r\n    .filter(({ proxyEnabled, proxy }) => proxyEnabled && proxy.mode && proxy.mode !== 'none')\r\n    .map(({ proxy }) => proxy);\r\n\r\n  const proxiesNotFoundCount = proxiesInProfiles.reduce((acc, proxy) => {\r\n    if (!proxy.mode || ['gologin', 'tor', 'none'].includes(proxy.mode)) {\r\n      return acc;\r\n    }\r\n\r\n    // TODO: fix this any when all the interfaces get finally fixed\r\n    const proxyFoundInList = findProxyInList(proxy as IProxy, proxyList);\r\n    if (!proxyFoundInList) {\r\n      acc++;\r\n    }\r\n\r\n    return acc;\r\n  }, 0);\r\n\r\n  if (proxiesNotFoundCount) {\r\n    captureProxyLoadingDelayed({ mainProxiesLength: proxyList.length, proxiesNotFoundCount, offset });\r\n  }\r\n\r\n  resolve(null);\r\n});\r\n","import React from 'react';\r\n\r\nconst IconRename = () => (\r\n  <svg width=\"16\" height=\"15\" viewBox=\"0 0 16 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M10 2.5L13 5.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    <path d=\"M12 0.5L15 3.5L5 13.5L1 14.5L2 10.5L12 0.5Z\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n  </svg>\r\n);\r\n\r\nexport default IconRename;\r\n","import css from '@emotion/css';\r\nimport styled from '@emotion/styled';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport React, { FC, useContext, useRef, useState } from 'react';\r\n\r\nimport TagsColors from './tag-colors';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { tagsContext, workspaceContext } from '../../../state';\r\nimport IconBack from '../../../ui/icons/IconBack';\r\nimport IconRename from '../../../ui/icons/IconRename';\r\nimport { ITag, ITagBase } from '../interfaces/tag.interface';\r\n\r\nconst TextTableName = styled('div')`\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 23px;\r\n  color: var(--000000-tags-title);\r\n  padding-left: 14px;\r\n  padding-right: 14px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  max-width: 400px;\r\n  margin-bottom: 14px;\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst InputContainer = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst IconContainer = styled('div')<{ isOpen?: boolean }>`\r\n  cursor: pointer;\r\n  margin-top: 1px;\r\n  margin-bottom: 14px;\r\n  width: 19px;\r\n  height: 20px;\r\n  text-align: right;\r\n  color: var(--767676-tags-title);\r\n\r\n  ${(props): any => css`\r\n    ${(props.isOpen) ? `\r\n      color: var(--00A987-tags-title);\r\n    ` : ''}\r\n  `}\r\n\r\n  :hover {\r\n    color: var(--00A987-tags-title);\r\n  }\r\n`;\r\n\r\nconst TagsColorContainer = styled('div')`\r\n  position: relative;\r\n  left: -41px;\r\n  top: -31px;\r\n  margin-left: 14px;\r\n  margin-top: 8px;\r\n`;\r\n\r\ninterface IProps {\r\n  updateTag: (tag: ITagBase) => Promise<void>;\r\n  removeTag: (tagId: string, isInSuggest: boolean) => Promise<void>;\r\n}\r\n\r\nconst TitleTag: FC<IProps> = (props) => {\r\n  const { updateTag, removeTag } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = useState<HTMLElement|null>(null);\r\n\r\n  const titleBlock = useRef<HTMLInputElement>(null);\r\n\r\n  const { selectedTag, setSelectedTag } = useContext(tagsContext);\r\n  const tag = selectedTag as ITag;\r\n\r\n  const {\r\n    permissions,\r\n  } = React.useContext(workspaceContext);\r\n\r\n  let allowRemove = true;\r\n  let allowEditTags = true;\r\n\r\n  if (NEW_FEATURES.workspaces) {\r\n    allowRemove = permissions.removeTags;\r\n    allowEditTags = permissions.editTags;\r\n  }\r\n\r\n  const editorOpen = Boolean(anchorEl);\r\n\r\n  const handleBackClick = async (event: React.SyntheticEvent): Promise<void> => {\r\n    event.preventDefault();\r\n    setSelectedTag(null);\r\n  };\r\n\r\n  const handleClick = async (): Promise<void> => {\r\n    setAnchorEl((anchorEl) ? null : titleBlock.current);\r\n  };\r\n\r\n  const onTagRemove = (): Promise<void> => removeTag(tag.id, false);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 6 }}>\r\n      <InputContainer>\r\n        <IconContainer style={{ marginTop: 0, zIndex: 100, paddingLeft: 4, textAlign: 'left' }} onClick={handleBackClick}>\r\n          <IconBack />\r\n        </IconContainer>\r\n        <TextTableName ref={titleBlock}>\r\n          {selectedTag?.title}\r\n        </TextTableName>\r\n        {(allowEditTags) ? (\r\n          <>\r\n            <IconContainer onClick={handleClick} isOpen={editorOpen} style={{ lineHeight: '22px' }}>\r\n              <IconRename />\r\n            </IconContainer>\r\n\r\n            <Popper\r\n              open={editorOpen}\r\n              anchorEl={anchorEl}\r\n              style={{ zIndex: 200 }}\r\n              placement='bottom-start'\r\n              disablePortal={true}\r\n            >\r\n              <ClickAwayListener onClickAway={(): void => {\r\n                setAnchorEl(null);\r\n              }}>\r\n                <TagsColorContainer>\r\n                  <TagsColors\r\n                    tag={tag}\r\n                    updateTag={updateTag}\r\n                    close={(): void => {\r\n                      setAnchorEl(null);\r\n                    }}\r\n                    removeTag={onTagRemove}\r\n                    allowChangeTitle={true}\r\n                    allowRemove={allowRemove}\r\n                  />\r\n                </TagsColorContainer>\r\n              </ClickAwayListener>\r\n            </Popper>\r\n          </>\r\n        ) : null}\r\n      </InputContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleTag;\r\n","/* eslint-disable max-lines */\r\nimport styled from '@emotion/styled';\r\nimport { Button, Icon, Input, InputNumber, message, Radio, Select, Switch, Table, Tooltip } from 'antd';\r\nimport React from 'react';\r\nimport CopyToClipBoard from 'react-copy-to-clipboard';\r\nimport { TransProps, withTranslation } from 'react-i18next';\r\n\r\nimport { TooltipText } from './styles';\r\nimport { DEVICE_MEMORY, HARDWARE_CONCURRENCY } from '../../../interfaces';\r\nimport Modal from '../../../ui/Modal/index';\r\nimport { getFontsList } from '../../../utils/fonts-list';\r\nimport ProfileLanguagesInputBlock from '../../common/components/profile-langs-input-block';\r\nimport ResolutionManager from '../../common/resolution-manager';\r\nimport FontsManager from '../../modalsComponents/components/fonts-manager';\r\nimport LocalesManager from '../../modalsComponents/components/locales-manager';\r\n\r\nlet ipcRenderer: Electron.IpcRenderer;\r\n\r\nif (window.require) {\r\n  ({ ipcRenderer } = window.require('electron'));\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst FontEditBtn = styled(Button)`\r\n  font-size: 12px;\r\n  max-height: 30px;\r\n`;\r\n\r\nconst Container = styled('div')`\r\n  color: var(--000000-update-profile-advanced);\r\n`;\r\n\r\nconst Cent = styled('div')`\r\n  align-atems: center;\r\n`;\r\n\r\nconst Component = styled('div')`\r\n  margin-top: 23px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst Row = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Title = styled('div')`\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  padding: 10px 0;\r\n  border-bottom: 0.6px solid var(--E7E7E7-update-profile-advanced);\r\n`;\r\n\r\nconst SubTitle = styled('span')`\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  padding-bottom: 10px;\r\n  width: auto;\r\n`;\r\n\r\nconst EditLanguagesSpan = styled(SubTitle)`\r\n  cursor: pointer;\r\n  margin-left: 8px;\r\n  color: var(--006CBA-update-profile-advanced);\r\n`;\r\n\r\nconst SwitchTitle = styled(SubTitle)`\r\n  margin-left: 10px;\r\n  margin-top: 5px;\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n`;\r\n\r\nconst Link = styled(SwitchTitle)`\r\n  color: var(--006CBA-update-profile-advanced);\r\n  cursor: pointer;\r\n  margin-left: 0;\r\n`;\r\n\r\nconst InputText = styled(Input)`\r\n  width: 350px;\r\n  @media screen and (max-width: 450px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst SelectAdvanced = styled(Select)`\r\nwidth: 350px;\r\n@media screen and (max-width: 450px) {\r\n  width: 100%;\r\n}\r\n`;\r\n\r\nconst ShortInput = styled(InputNumber)`\r\n  width: 57px;\r\n`;\r\n\r\nconst FontParagr = styled('p')`\r\n  margin: 0;\r\n`;\r\n\r\nconst RadioButton = styled(Radio.Button)`\r\n  height: 30px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  line-height: 29px;\r\n  align-items: center;\r\n  justify-content: 'center;\r\n`;\r\n\r\nconst CustomDNSInput = styled(InputText)`\r\n  margin-bottom: 80px;\r\n`;\r\n\r\ndeclare interface IAdvancedTab extends TransProps {\r\n  updateProfileInfo: (value: any) => any;\r\n  profileInfo: any;\r\n  setUpdatedField: (field: string) => any;\r\n}\r\n\r\nclass AdvancedTab extends React.Component<IAdvancedTab> {\r\n  state = {\r\n    webGlModalVisible: false,\r\n    fontsModalVisible: false,\r\n    showAllFonts: false,\r\n    localesModalVisible: false,\r\n    fonts: [],\r\n  };\r\n\r\n  componentDidMount(): void {\r\n    const { fonts = {}, os = 'win' } = this.props.profileInfo;\r\n    const families = fonts.families || [];\r\n    getFontsList(os, families).then(resultFonts => {\r\n      this.setState({ fonts: resultFonts });\r\n    });\r\n  }\r\n\r\n  updateNavigator = (field: string, value: any) => {\r\n    this.props.updateProfileInfo({\r\n      navigator: {\r\n        ...this.props.profileInfo.navigator,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`navigator.${field}`);\r\n  };\r\n\r\n  private updateFonts(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      fonts: {\r\n        ...this.props.profileInfo.fonts,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`fonts.${field}`);\r\n  }\r\n\r\n  private updateMedia(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      mediaDevices: {\r\n        ...this.props.profileInfo.mediaDevices,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`mediaDevices.${field}`);\r\n  }\r\n\r\n  private updateCanvas(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      canvas: {\r\n        ...this.props.profileInfo.canvas,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`canvas.${field}`);\r\n  }\r\n\r\n  private updateAudioCtx(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      audioContext: {\r\n        ...this.props.profileInfo.audioContext,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`audioContext.${field}`);\r\n  }\r\n\r\n  private updateWebGl(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      webGL: {\r\n        ...this.props.profileInfo.webGL,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`webgl.${field}`);\r\n  }\r\n\r\n  private updateClientRects(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      clientRects: {\r\n        ...this.props.profileInfo.clientRects,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`clientRects.${field}`);\r\n  }\r\n\r\n  private updateWebGlMetadata(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      webGLMetadata: {\r\n        ...this.props.profileInfo.webGLMetadata,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`webglMetadata.${field}`);\r\n  }\r\n\r\n  private updateStorage(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      storage: {\r\n        ...this.props.profileInfo.storage,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`storage.${field}`);\r\n  }\r\n\r\n  private updatePlugins(field: string, value: any) {\r\n    this.props.updateProfileInfo({\r\n      plugins: {\r\n        ...this.props.profileInfo.plugins,\r\n        [field]: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField(`plugins.${field}`);\r\n  }\r\n\r\n  private updateResolution = (value: string): void => {\r\n    this.props.updateProfileInfo({\r\n      navigator: {\r\n        ...this.props.profileInfo.navigator,\r\n        resolution: value,\r\n      },\r\n    });\r\n\r\n    this.props.setUpdatedField('navigator.resolution');\r\n  };\r\n\r\n  threadList = HARDWARE_CONCURRENCY.map(hardware => ({\r\n    title: hardware.toString(),\r\n    value: hardware.toString(),\r\n  }));\r\n\r\n  deviceMemoryList = DEVICE_MEMORY.map(memory => ({\r\n    title: memory.toString(),\r\n    value: memory.toString(),\r\n  }));\r\n\r\n  public getCanvasContent = () => {\r\n    const { canvas = {} } = this.props.profileInfo;\r\n    const { mode } = canvas;\r\n    if (mode === 'off') {\r\n      return (\r\n        <>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('canvas.off.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4,\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (mode === 'block') {\r\n      return (\r\n        <>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('canvas.block.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4,\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Tooltip\r\n          title={(\r\n            <TooltipText>\r\n              {this.props.t('canvas.noise.help')}\r\n            </TooltipText>\r\n          )}\r\n          overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n          placement='rightBottom'\r\n          arrowPointAtCenter={true}\r\n        >\r\n          <Icon\r\n            style={{\r\n              marginTop: 7,\r\n              marginLeft: 5,\r\n              marginBottom: 7,\r\n              opacity: 0.4,\r\n            }}\r\n            type='info-circle'\r\n          />\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };\r\n\r\n  public getAudionContextContent = () => {\r\n    const { audioContext = {} } = this.props.profileInfo;\r\n    const { mode } = audioContext;\r\n    if (mode === 'off') {\r\n      return (\r\n        <>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('audioContext.off.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4,\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Tooltip\r\n          title={(\r\n            <TooltipText>\r\n              {this.props.t('audioContext.noise.help')}\r\n            </TooltipText>\r\n          )}\r\n          overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n          placement='rightBottom'\r\n          arrowPointAtCenter={true}\r\n        >\r\n          <Icon\r\n            style={{\r\n              marginTop: 7,\r\n              marginLeft: 5,\r\n              marginBottom: 7,\r\n              opacity: 0.4,\r\n            }}\r\n            type='info-circle'\r\n          />\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };\r\n\r\n  public getWebGlImageContent = () => {\r\n    const { webGL = {} } = this.props.profileInfo;\r\n    const { mode } = webGL;\r\n    if (mode === 'off') {\r\n      return (\r\n        <>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('webgl.image.off.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4,\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Tooltip\r\n          title={(\r\n            <TooltipText>\r\n              {this.props.t('webgl.image.noise.help')}\r\n            </TooltipText>\r\n          )}\r\n          overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n          placement='rightBottom'\r\n          arrowPointAtCenter={true}\r\n        >\r\n          <Icon\r\n            style={{\r\n              marginTop: 7,\r\n              marginLeft: 5,\r\n              marginBottom: 7,\r\n              opacity: 0.4,\r\n            }}\r\n            type='info-circle'\r\n          />\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };\r\n\r\n  public getWebGlMetadata = () => {\r\n    const { webGLMetadata = {} } = this.props.profileInfo;\r\n    const { mode } = webGLMetadata;\r\n    if (mode === 'off') {\r\n      return (\r\n        <Row>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('webgl.metadata.off.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4,\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Tooltip\r\n          title={(\r\n            <TooltipText>\r\n              {this.props.t('webgl.metadata.mask.help')}\r\n            </TooltipText>\r\n          )}\r\n          overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n          placement='rightBottom'\r\n          arrowPointAtCenter={true}\r\n        >\r\n          <Icon\r\n            style={{\r\n              marginTop: 7,\r\n              marginLeft: 5,\r\n              marginBottom: 7,\r\n              opacity: 0.4,\r\n            }}\r\n            type='info-circle'\r\n          />\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };\r\n\r\n  public toggleWebGlModal = (boolean: boolean) => {\r\n    this.setState({\r\n      webGlModalVisible: boolean,\r\n    });\r\n  };\r\n\r\n  public toggleFontsModal = (boolean: boolean) => {\r\n    this.setState({\r\n      fontsModalVisible: boolean,\r\n    });\r\n  };\r\n\r\n  public toggleLocalesListModal = (save: boolean, autoLang = true, newLanguage?: string): void => {\r\n    if (save) {\r\n      this.updateNavigator('language', newLanguage);\r\n      this.props.setUpdatedField('language');\r\n      this.props.updateProfileInfo({ autoLang });\r\n      this.props.setUpdatedField('autoLang');\r\n    }\r\n\r\n    this.setState({\r\n      localesModalVisible: false,\r\n    });\r\n  };\r\n\r\n  public setFontsState = (fonts: any[]) => this.setState({ fonts });\r\n\r\n  public webGParamsTable = () => {\r\n    const webGLParams = this.props.profileInfo.webglParams || {};\r\n    const glParamValues = webGLParams.glParamValues || [];\r\n    const filteredParams = glParamValues.filter((obj:any) => obj.value !== 'n/a');\r\n    const dataSource = filteredParams.map((obj:any) => {\r\n      const { name } = obj;\r\n      const { value } = obj;\r\n      let resultValue = [value];\r\n      if (value === Object(value)) {\r\n        resultValue = [];\r\n        for (const index in value) {\r\n          resultValue.push(value[index]);\r\n        }\r\n      }\r\n\r\n      return {\r\n        key: name,\r\n        extension: 'webgl',\r\n        name,\r\n        value: resultValue,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <Table\r\n        dataSource={dataSource}\r\n        pagination={false}\r\n        size='small'\r\n      >\r\n        <Table.Column title={this.props.t('base.extension')} key='extension' dataIndex='extension' />\r\n        <Table.Column title={this.props.t('base.name')} key='name' dataIndex='name' ellipsis={true} render={(name: string) => (<Tooltip title={name}>\r\n          {name}\r\n        </Tooltip>)} />\r\n        <Table.Column title={this.props.t('base.code')} key='code' dataIndex='code'  />\r\n        <Table.Column\r\n          title={this.props.t('base.value')}\r\n          key='value'\r\n          dataIndex='value'\r\n          render={(arr: any[]) => (\r\n            <>\r\n              <p>\r\n                {arr.join(', ')}\r\n              </p>\r\n            </>\r\n          )}\r\n        />\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  public cancelFontsModal() {\r\n    this.toggleFontsModal(false);\r\n  }\r\n\r\n  public saveFontsModal() {\r\n    const checkedFontsObjs = this.state.fonts.filter(\r\n      (fontElem: any) => fontElem.checked,\r\n    );\r\n\r\n    const checkedFonts = checkedFontsObjs.map(\r\n      (fontElem: any) => fontElem.value,\r\n    );\r\n\r\n    this.updateFonts('families', checkedFonts);\r\n    this.toggleFontsModal(false);\r\n  }\r\n\r\n  private getFontsSetting = () => {\r\n    const os = this.props.profileInfo.os || 'win';\r\n\r\n    let androidNotificationComponent = null;\r\n    if (os === 'android') {\r\n      androidNotificationComponent = (\r\n        <SubTitle\r\n          style={{ marginTop: '8px' }}\r\n        >\r\n          {this.props.t('fonts.androidNotifyText')}\r\n        </SubTitle>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              disabled={os === 'android'}\r\n              checked={this.props.profileInfo.fonts.enableMasking}\r\n              onChange={e => this.updateFonts('enableMasking', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('fonts.switchLabel')}\r\n            </SwitchTitle>\r\n          </Row>\r\n        </Component>\r\n        {androidNotificationComponent}\r\n      </>\r\n    );\r\n  };\r\n\r\n  private getFontsContent = () => {\r\n    const { fonts = {}, os = 'win' } = this.props.profileInfo;\r\n    const { enableMasking } = fonts;\r\n    if (os === 'android' || !enableMasking) {\r\n      return '';\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Component>\r\n          <Row>\r\n            <SubTitle style={{ marginTop: '5px' }}>\r\n              {this.props.t('fonts.subtitle')}\r\n              :\r\n            </SubTitle>\r\n          </Row>\r\n        </Component>\r\n        {this.renderUserFonts()}\r\n        <Component>\r\n          <Row>\r\n            <FontEditBtn\r\n              type='primary'\r\n              onClick={() => this.toggleFontsModal(true)}\r\n            >\r\n              {this.props.t('base.edit')}\r\n            </FontEditBtn>\r\n          </Row>\r\n        </Component>\r\n      </>\r\n    );\r\n  };\r\n\r\n  public renderUserFonts = () => {\r\n    const { showAllFonts } = this.state;\r\n    const usersFontsCountToRender = 8;\r\n    const families = (this.state.fonts || []).filter((fontElem: any) => fontElem.checked);\r\n    const checkedFontsNames = families.map((elem: any, index: number) => (\r\n      <FontParagr key={index}>\r\n        {elem.name}\r\n      </FontParagr>\r\n    ));\r\n\r\n    const arrayToRender = checkedFontsNames.slice(0, usersFontsCountToRender);\r\n\r\n    const fontLength = checkedFontsNames.length;\r\n    if (showAllFonts) {\r\n      checkedFontsNames.push(\r\n        <Link onClick={() => this.setState({ showAllFonts: false })}>\r\n          {this.props.t('base.edit')}\r\n        </Link>,\r\n      );\r\n    } else if (fontLength > usersFontsCountToRender) {\r\n      const diff = fontLength - usersFontsCountToRender;\r\n\r\n      // TODO: Connect localization\r\n      arrayToRender.push(\r\n        <Link onClick={() => this.setState({ showAllFonts: true })}>\r\n          ...and\r\n          {' '}\r\n          {diff}\r\n          {' '}\r\n          more\r\n        </Link>,\r\n      );\r\n    }\r\n\r\n    if (!arrayToRender.length) {\r\n      return '';\r\n    } else if (showAllFonts) {\r\n      return (<Component>\r\n        {checkedFontsNames}\r\n      </Component>);\r\n    }\r\n\r\n    return (<Component>\r\n      {arrayToRender}\r\n    </Component>);\r\n  };\r\n\r\n  public getMaskMediaDevices = () => {\r\n    const { profileInfo } = this.props;\r\n    const { mediaDevices = {} } = profileInfo;\r\n    const { enableMasking } = mediaDevices;\r\n    if (!enableMasking) {\r\n      return '';\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Component>\r\n          <Row>\r\n            <Cent>\r\n              <SubTitle style={{ width: 100 }}>\r\n                {this.props.t('mediaDevices.videoInTitle')}\r\n              </SubTitle>\r\n              <ShortInput\r\n                style={{ marginLeft: 25 }}\r\n                maxLength={1}\r\n                max={9}\r\n                min={0}\r\n                value={profileInfo.mediaDevices.videoInputs}\r\n                onChange={e => this.updateMedia('videoInputs', e || 0)}\r\n              />\r\n            </Cent>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Cent>\r\n              <SubTitle style={{ width: 100 }}>\r\n                {this.props.t('mediaDevices.audioInTitle')}\r\n              </SubTitle>\r\n              <ShortInput\r\n                style={{ marginLeft: 25 }}\r\n                maxLength={1}\r\n                max={9}\r\n                min={0}\r\n                value={profileInfo.mediaDevices.audioInputs}\r\n                onChange={e => this.updateMedia('audioInputs', e || 0)}\r\n              />\r\n            </Cent>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Cent>\r\n              <SubTitle style={{ width: 100 }}>\r\n                {this.props.t('mediaDevices.audioOutTitle')}\r\n              </SubTitle>\r\n              <ShortInput\r\n                style={{ marginLeft: 25 }}\r\n                maxLength={1}\r\n                max={9}\r\n                min={0}\r\n                value={profileInfo.mediaDevices.audioOutputs}\r\n                onChange={e => this.updateMedia('audioOutputs', e || 0)}\r\n              />\r\n            </Cent>\r\n          </Row>\r\n        </Component>\r\n      </>\r\n    );\r\n  };\r\n\r\n  private getAndroidTouchPoints = () => {\r\n    if (this.props.profileInfo.os !== 'android') {\r\n      return null;\r\n    }\r\n\r\n    const { profileInfo } = this.props;\r\n\r\n    return (\r\n      <Component>\r\n        <SubTitle>\r\n          {this.props.t('base.maxTouchPoints')}\r\n        </SubTitle>\r\n        <InputText\r\n          maxLength={1}\r\n          max={9}\r\n          min={1}\r\n          type='number'\r\n          value={profileInfo.navigator.maxTouchPoints}\r\n          onChange={e => this.updateNavigator('maxTouchPoints', e.target.value)}\r\n        />\r\n      </Component>\r\n    );\r\n  };\r\n\r\n  public render() {\r\n    const { profileInfo } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        {/* *** Navigator *** */}\r\n        <Component>\r\n          <Title>\r\n            {this.props.t('base.navigator')}\r\n          </Title>\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('base.useragent')}\r\n          </SubTitle>\r\n          <Row>\r\n            <InputText\r\n              value={profileInfo.navigator.userAgent}\r\n              placeholder={this.props.t('base.useragent')}\r\n              onChange={e => this.updateNavigator('userAgent', e.target.value)}\r\n            />\r\n            <CopyToClipBoard text={profileInfo.navigator.userAgent} onCopy={() => message.success(this.props.t('base.copiedText'))}>\r\n              <Icon type='copy' style={{ fontSize: 17, opacity: 0.4, marginTop: 6, marginLeft: 5 }} />\r\n            </CopyToClipBoard>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('base.screenResolution')}\r\n          </SubTitle>\r\n          <ResolutionManager\r\n            updateResolution={this.updateResolution}\r\n            isDisabled={this.props.profileInfo.os === 'android'}\r\n            oldStyle={true}\r\n            resolution={this.props.profileInfo.navigator.resolution}\r\n          />\r\n        </Component>\r\n        <Component>\r\n          <div>\r\n            <SubTitle>\r\n              {this.props.t('base.languages')}\r\n            </SubTitle>\r\n            {!this.props.profileInfo.autoLang ? (\r\n              <EditLanguagesSpan\r\n                onClick={(): void => this.setState({ localesModalVisible: true })}\r\n              >\r\n                {this.props.t('base.edit')}\r\n              </EditLanguagesSpan>\r\n            ) : null}\r\n          </div>\r\n          <ProfileLanguagesInputBlock\r\n            mode='editProfile'\r\n            autoLang={this.props.profileInfo.autoLang}\r\n            language={this.props.profileInfo.navigator.language}\r\n            updateProfileInfo={this.props.updateProfileInfo}\r\n            updateNavigator={this.updateNavigator}\r\n            setUpdatedField={this.props.setUpdatedField}\r\n          />\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('base.platform')}\r\n          </SubTitle>\r\n          <InputText\r\n            disabled={true}\r\n            value={profileInfo.navigator.platform}\r\n            placeholder={this.props.t('base.platform')}\r\n            onChange={e => this.updateNavigator('platform', e.target.value)}\r\n          />\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('editProfile.advanced.cpu.title')}\r\n          </SubTitle>\r\n          <SelectAdvanced\r\n            value={profileInfo.navigator.hardwareConcurrency}\r\n            onChange={(e: any) =>\r\n              this.updateNavigator('hardwareConcurrency', e)}\r\n          >\r\n            {this.threadList.map(\r\n              elem => (\r\n                <Option key={elem.value} value={elem.value}>\r\n                  {elem.title}\r\n                </Option>\r\n              ),\r\n            )}\r\n          </SelectAdvanced>\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('editProfile.advanced.ram.title')}\r\n          </SubTitle>\r\n          <SelectAdvanced\r\n            value={profileInfo.navigator.deviceMemory}\r\n            onChange={(e: any) =>\r\n              this.updateNavigator('deviceMemory', e)}\r\n          >\r\n            {this.deviceMemoryList.map(\r\n              elem => (\r\n                <Option key={elem.value} value={elem.value}>\r\n                  {elem.title}\r\n                </Option>\r\n              ),\r\n            )}\r\n          </SelectAdvanced>\r\n        </Component>\r\n        {this.getAndroidTouchPoints()}\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.navigator.doNotTrack}\r\n              onChange={e => this.updateNavigator('doNotTrack', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('editProfile.advanced.doNotTrack.switchLabel')}\r\n            </SwitchTitle>\r\n          </Row>\r\n        </Component>\r\n\r\n        {/* *** Fonts *** */}\r\n        <Component>\r\n          <Title>\r\n            {this.props.t('fonts.title')}\r\n          </Title>\r\n        </Component>\r\n        {this.getFontsSetting()}\r\n        {this.getFontsContent()}\r\n\r\n        {/* *** Media Devices *** */}\r\n        <Component>\r\n          <Title>\r\n            {this.props.t('mediaDevices.switchLabel')}\r\n          </Title>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.mediaDevices.enableMasking}\r\n              onChange={e => this.updateMedia('enableMasking', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('mediaDevices.switchLabel')}\r\n            </SwitchTitle>\r\n          </Row>\r\n        </Component>\r\n        {this.getMaskMediaDevices()}\r\n\r\n        {/* *** Hardware *** */}\r\n        <Component>\r\n          <Title>\r\n            {this.props.t('base.hardware')}\r\n          </Title>\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('canvas.title')}\r\n          </SubTitle>\r\n          <Row>\r\n            <Radio.Group\r\n              value={profileInfo.canvas.mode}\r\n              onChange={e => this.updateCanvas('mode', e.target.value)}\r\n            >\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('canvas.noise.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='topRight'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='noise'>\r\n                  {this.props.t('base.noise')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('canvas.off.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='off'>\r\n                  {this.props.t('base.off')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('canvas.block.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton\r\n                  style={{\r\n                    borderTopRightRadius: 5,\r\n                    borderBottomRightRadius: 5,\r\n                  }}\r\n                  value='block'\r\n                >\r\n                  {this.props.t('base.block')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n            </Radio.Group>\r\n            {this.getCanvasContent()}\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('clientRects.title')}\r\n          </SubTitle>\r\n          <Row>\r\n            <Radio.Group\r\n              value={profileInfo.clientRects.mode}\r\n              onChange={e => this.updateClientRects('mode', e.target.value)}\r\n            >\r\n              <RadioButton value='noise'>\r\n                {this.props.t('base.noise')}\r\n              </RadioButton>\r\n              <RadioButton value='off'>\r\n                {this.props.t('base.off')}\r\n              </RadioButton>\r\n            </Radio.Group>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('clientRects.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('audioContext.title')}\r\n          </SubTitle>\r\n          <Row>\r\n            <Radio.Group\r\n              value={profileInfo.audioContext.mode}\r\n              onChange={e => this.updateAudioCtx('mode', e.target.value)}\r\n            >\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('audioContext.noise.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='topRight'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='noise'>\r\n                  {this.props.t('base.noise')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('audioContext.off.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='off'>\r\n                  {this.props.t('base.off')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n            </Radio.Group>\r\n            {this.getAudionContextContent()}\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('webgl.image.title')}\r\n          </SubTitle>\r\n          <Row>\r\n            <Radio.Group\r\n              value={profileInfo.webGL.mode}\r\n              onChange={e => this.updateWebGl('mode', e.target.value)}\r\n            >\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('webgl.image.noise.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='topRight'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='noise'>\r\n                  {this.props.t('base.noise')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('webgl.image.off.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='off'>\r\n                  {this.props.t('base.off')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n            </Radio.Group>\r\n            {this.getWebGlImageContent()}\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <SubTitle>\r\n            {this.props.t('webgl.metadata.title')}\r\n          </SubTitle>\r\n          <Row>\r\n            <Radio.Group\r\n              value={profileInfo.webGLMetadata.mode}\r\n              onChange={e => this.updateWebGlMetadata('mode', e.target.value)}\r\n            >\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('webgl.metadata.mask.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='topRight'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='mask'>\r\n                  {this.props.t('base.mask')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('webgl.metadata.off.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='off'>\r\n                  {this.props.t('base.off')}\r\n                </RadioButton>\r\n              </Tooltip>\r\n            </Radio.Group>\r\n            {this.getWebGlMetadata()}\r\n          </Row>\r\n          {this.props.profileInfo.webGLMetadata.mode !== 'off' && (\r\n            <>\r\n              <Component>\r\n                <SubTitle>\r\n                  {this.props.t('webgl.vendor.title')}\r\n                </SubTitle>\r\n                <InputText\r\n                  disabled={profileInfo.isM1}\r\n                  placeholder={this.props.t('webgl.vendor.manualInputPlaceholder')}\r\n                  value={this.props.profileInfo.webGLMetadata.vendor}\r\n                  onChange={e =>\r\n                    this.updateWebGlMetadata('vendor', e.target.value)}\r\n                />\r\n              </Component>\r\n              <Component>\r\n                <SubTitle>\r\n                  {this.props.t('webgl.renderer.title')}\r\n                </SubTitle>\r\n                <InputText\r\n                  disabled={profileInfo.isM1}\r\n                  value={this.props.profileInfo.webGLMetadata.renderer}\r\n                  onChange={e =>\r\n                    this.updateWebGlMetadata('renderer', e.target.value)}\r\n                />\r\n              </Component>\r\n              <Component>\r\n                <Link onClick={() => this.toggleWebGlModal(true)}>\r\n                  {this.props.t('webgl.otherParametersTxt')}\r\n                </Link>\r\n              </Component>\r\n            </>\r\n          )}\r\n        </Component>\r\n\r\n        {/* *** Storage *** */}\r\n        <Component>\r\n          <Title>\r\n            {this.props.t('storage.title')}\r\n          </Title>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.storage.local}\r\n              onChange={e => this.updateStorage('local', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('storage.localStorage.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('storage.localStorage.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.storage.indexedDb}\r\n              onChange={e => this.updateStorage('indexedDb', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('storage.indexedDb.switchLabel')}\r\n            </SwitchTitle>\r\n\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('storage.indexedDb.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.storage.extensions}\r\n              onChange={e => this.updateStorage('extensions', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('storage.extension.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('storage.extension.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n\r\n        {/* *** Browser Plugins *** */}\r\n        <Component>\r\n          <Title>\r\n            {this.props.t('plugins.title')}\r\n          </Title>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.plugins.enableVulnerable}\r\n              onChange={e => this.updatePlugins('enableVulnerable', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('plugins.vulnerablePlugins.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('plugins.vulnerablePlugins.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Title>\r\n            {this.props.t('base.other')}\r\n          </Title>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.lockEnabled}\r\n              onChange={e => {\r\n                this.props.updateProfileInfo({ lockEnabled: e });\r\n                this.props.setUpdatedField('lockEnabled');\r\n              }}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('editProfile.advanced.activeSession.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('editProfile.advanced.activeSession.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.googleServicesEnabled}\r\n              onChange={e => {\r\n                this.props.updateProfileInfo({ googleServicesEnabled: e });\r\n                this.props.setUpdatedField('googleServicesEnabled');\r\n              }}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('editProfile.advanced.googleServices.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('newProfile.advanced.googleServices.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.storage.bookmarks}\r\n              onChange={e => this.updateStorage('bookmarks', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('editProfile.advanced.bookmarks.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('editProfile.advanced.bookmarks.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 7,\r\n                  marginLeft: 5,\r\n                  marginBottom: 11,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.storage.history}\r\n              onChange={e => this.updateStorage('history', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('editProfile.advanced.history.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('editProfile.advanced.history.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.storage.passwords}\r\n              onChange={e => this.updateStorage('passwords', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('editProfile.advanced.password.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('editProfile.advanced.password.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.storage.session}\r\n              onChange={e => this.updateStorage('session', e)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('editProfile.advanced.session.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('editProfile.advanced.session.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <Switch\r\n              checked={profileInfo.storage.enableExternalExtensions}\r\n              onChange={(value): void => this.updateStorage('enableExternalExtensions', value)}\r\n            />\r\n            <SwitchTitle>\r\n              {this.props.t('extensions.external.switchLabel')}\r\n            </SwitchTitle>\r\n            <Tooltip\r\n              title={(\r\n                <span style={{ fontSize: 12, opacity: 0.6 }}>\r\n                  {this.props.t('extensions.external.help')}\r\n                </span>\r\n              )}\r\n              overlayStyle={{ backgroundColor: '#fff', color: '#000' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 6,\r\n                  marginLeft: 5,\r\n                  marginBottom: 6,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n        <Component>\r\n          <InputText\r\n            placeholder={this.props.t('editProfile.advanced.startUrl.inputPlaceholder')}\r\n            value={profileInfo.startUrl}\r\n            onChange={e => {\r\n              this.props.updateProfileInfo({ startUrl: e.target.value });\r\n              this.props.setUpdatedField('startUrl');\r\n            }}\r\n          />\r\n        </Component>\r\n        <Component>\r\n          <Row>\r\n            <CustomDNSInput\r\n              placeholder={this.props.t('editProfile.advanced.dns.inputPlaceholder')}\r\n              value={profileInfo.dns}\r\n              onChange={e => {\r\n                this.props.updateProfileInfo({ dns: e.target.value });\r\n                this.props.setUpdatedField('dns');\r\n              }}\r\n            />\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('editProfile.advanced.dns.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-advanced)', color: 'var(--000000-update-profile-advanced)' }}\r\n              placement='rightBottom'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  marginTop: 10,\r\n                  marginLeft: 5,\r\n                  marginBottom: 10,\r\n                  opacity: 0.4,\r\n                }}\r\n                type='info-circle'\r\n              />\r\n            </Tooltip>\r\n          </Row>\r\n        </Component>\r\n\r\n        <Modal\r\n          visible={this.state.webGlModalVisible}\r\n          onClose={() => this.toggleWebGlModal(false)}\r\n          title='WebGL parameters'\r\n          footer={null}\r\n        >\r\n          {this.webGParamsTable()}\r\n        </Modal>\r\n        <FontsManager\r\n          fonts={this.state.fonts}\r\n          fontsModalVisible={this.state.fontsModalVisible}\r\n          updateFontsList={(fonts: any[]) => this.setFontsState(fonts)}\r\n          onCancel={() => this.cancelFontsModal()}\r\n          onOk={() => this.saveFontsModal()}\r\n        />\r\n        <LocalesManager\r\n          languages={profileInfo.navigator.language}\r\n          localesModalVisible={this.state.localesModalVisible}\r\n          toggleLocalesListModal={this.toggleLocalesListModal}\r\n          autoLang={this.props.profileInfo.autoLang}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(AdvancedTab);\r\n","import styled from '@emotion/styled';\r\nimport { Radio } from 'antd';\r\n\r\nexport const TooltipText = styled('span')`\r\n  font-size: 12px;\r\n  color: var(--000000-antd-tooltip-opacity);\r\n`;\r\n\r\nexport const ElementContainer = styled('div')`\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const RadioButton = styled(Radio.Button)`\r\n  min-width: 100px;\r\n  height: 30px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  line-height: 29px;\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Layout } from 'antd';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { borderRadiusContainer } from '../../../ui/style-templates';\r\n\r\nconst { Content } = Layout;\r\n\r\ndeclare interface IBodyContainer {}\r\n\r\nconst Container = styled(Content)<{ newStyle: boolean }>`\r\n  ${props => props.newStyle && borderRadiusContainer()};\r\n  background-color: var(--FFFFFF-update-profile);\r\n`;\r\n\r\nconst BodyContaine: FunctionComponent<IBodyContainer> = ({ children }) => (\r\n  <Container newStyle={!!NEW_FEATURES.header}>{children}</Container>\r\n);\r\n\r\nexport default BodyContaine;\r\n","import { SerializedStyles } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\nimport { Layout } from 'antd';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { borderRadiusContainer } from '../../../ui/style-templates';\r\n\r\ndeclare interface IContainerDashboard {}\r\n\r\nconst Container = styled(Layout)<{ newStyle: boolean }>`\r\n  height: 100%;\r\n  ${(props): SerializedStyles|null => props.newStyle ? borderRadiusContainer() : null}\r\n`;\r\n\r\nconst ContainerDashboard: FunctionComponent<IContainerDashboard> = ({\r\n  children\r\n}) => <Container newStyle={!!NEW_FEATURES.header}>{children}</Container>;\r\n\r\nexport default ContainerDashboard;\r\n","import React, { Component } from 'react';\r\nimport { Input, Slider } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport { TransProps, withTranslation } from 'react-i18next';\r\n\r\nconst InputDiv = styled('div')`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst IpInput = styled(Input)`\r\n  width: 30%;\r\n`;\r\n\r\n// TODO: BUG FIX UPDATE PROFILE\r\n// TODO: УБРАТЬ margin-bottom\r\nconst SliderDiv = styled('div')`\r\n  margin-bottom: 80px;\r\n  display: inline-block;\r\n  width: 30%;\r\n`;\r\n\r\nconst SubTitle = styled('span')`\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\ndeclare interface IGeolocationManager extends TransProps {\r\n  updateProfileInfo: any;\r\n  profileInfo: any;\r\n}\r\n\r\nclass GeolocationManager extends Component<IGeolocationManager> {\r\n  state = {\r\n    latitude: this.props.profileInfo.geolocation.latitude,\r\n    longitude: this.props.profileInfo.geolocation.longitude,\r\n    accuracy: this.props.profileInfo.geolocation.accuracy || 10,\r\n  };\r\n\r\n  private changeGeolocationParam(field: string, e: any) {\r\n    const regex = /^-?\\d*\\.?\\d*$/;\r\n    const value = e.target.value;\r\n    if (!regex.test(value)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      [field]: e.target.value,\r\n    });\r\n    this.props.updateProfileInfo({\r\n      geolocation: {\r\n        ...this.props.profileInfo.geolocation,\r\n        [field]: e.target.value,\r\n      }\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <InputDiv>\r\n          <SubTitle>{this.props.t('base.latitude')}</SubTitle>\r\n          <IpInput\r\n            size='small'\r\n            onChange={(e: any) => this.changeGeolocationParam('latitude', e)}\r\n            value={this.state.latitude}\r\n          />\r\n        </InputDiv>\r\n        <InputDiv>\r\n          <SubTitle>{this.props.t('base.longitude')}</SubTitle>\r\n          <IpInput\r\n            size='small'\r\n            onChange={(e: any) => this.changeGeolocationParam('longitude', e)}\r\n            value={this.state.longitude}\r\n          />\r\n        </InputDiv>\r\n        <InputDiv>\r\n          <SubTitle\r\n            style={{ paddingBottom: 0 }}\r\n          >\r\n            {this.props.t('base.accuracy')} ({this.props.t('base.meters')?.toLowerCase()}) {this.state.accuracy}\r\n          </SubTitle>\r\n          <SliderDiv>\r\n            <Slider\r\n              step={10}\r\n              min={10}\r\n              value={this.state.accuracy}\r\n              dots={true}\r\n              tooltipVisible={false}\r\n              onChange={(e: any) => this.changeGeolocationParam('accuracy', { target: { value: e } })}\r\n            />\r\n          </SliderDiv>\r\n        </InputDiv>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(GeolocationManager);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Radio, Tooltip, Icon } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport GeolocationManager from \"./geolocation-manager\";\r\nimport { TransProps, withTranslation } from 'react-i18next';\r\nimport { TooltipText } from './styles';\r\n\r\nconst ElementContainer = styled('div')`\r\n  margin-top: 27px;\r\n`;\r\n\r\nconst Row = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\nconst Col = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Subtitle = styled('span')`\r\n  font-size: 12px;\r\n  color: var(--000000-update-profile-geolocation);\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst RadioButton = styled(Radio.Button)`\r\n  width: 100px;\r\n  height: 30px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  line-height: 29px;\r\n`;\r\n\r\ninterface IGeolocationTab extends TransProps {\r\n  updateProfileInfo: any;\r\n  profileInfo: any;\r\n  setUpdatedField: (field: string) => any;\r\n}\r\nclass GeolocationTab extends Component<IGeolocationTab> {\r\n  private setMode = (e: any) => {\r\n    const { geolocation = {} } = this.props.profileInfo;\r\n\r\n    this.props.updateProfileInfo({\r\n      geolocation: {\r\n        ...geolocation,\r\n        mode: e.target.value\r\n      }\r\n    });\r\n\r\n    this.props.setUpdatedField('geolocation.mode');\r\n  };\r\n\r\n  private fillBasedOnIp = (isEnabled: boolean) => {\r\n    const { geolocation = {} } = this.props.profileInfo;\r\n\r\n    this.props.updateProfileInfo({\r\n      geolocation: {\r\n        ...geolocation,\r\n        fillBasedOnIp: isEnabled\r\n      }\r\n    });\r\n\r\n    this.props.setUpdatedField('geolocation.fillBasedOnIp');\r\n  };\r\n\r\n  public getWebgeolocation = () => {\r\n    const { geolocation = {} } = this.props.profileInfo;\r\n    const mode = geolocation.mode;\r\n    if (mode === 'allow') {\r\n      return (\r\n        <>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('geolocation.allow.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-geolocation)', color: 'var(--000000-update-profile-geolocation)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </>\r\n      );\r\n    } else if (mode === 'block') {\r\n      return (\r\n        <>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('geolocation.block.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-geolocation)', color: 'var(--000000-update-profile-geolocation)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('geolocation.prompt.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-geolocation)', color: 'var(--000000-update-profile-geolocation)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  public geoOptionContainer = () => (\r\n    <ElementContainer>\r\n      <Col>\r\n        <Row>\r\n          <Switch\r\n            checked={this.props.profileInfo.geolocation.fillBasedOnIp}\r\n            onChange={this.fillBasedOnIp}\r\n          />\r\n          <Subtitle>{this.props.t('geolocation.fillBasedOnIpText')}</Subtitle>\r\n        </Row>\r\n        {!this.props.profileInfo.geolocation.fillBasedOnIp && (\r\n          <GeolocationManager {...this.props}/>\r\n        )}\r\n      </Col>\r\n    </ElementContainer>\r\n  );\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <ElementContainer>\r\n          <Row>\r\n            <Radio.Group\r\n              value={this.props.profileInfo.geolocation.mode}\r\n              onChange={this.setMode}\r\n            >\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('geolocation.prompt.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-geolocation)', color: 'var(--000000-update-profile-geolocation)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='prompt'>{this.props.t('base.prompt')}</RadioButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('geolocation.allow.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-geolocation)', color: 'var(--000000-update-profile-geolocation)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='allow'>{this.props.t('base.allow')}</RadioButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title={(\r\n                  <TooltipText>\r\n                    {this.props.t('geolocation.block.help')}\r\n                  </TooltipText>\r\n                )}\r\n                overlayStyle={{ backgroundColor: 'var(--FFFFFF-update-profile-geolocation)', color: 'var(--000000-update-profile-geolocation)' }}\r\n                placement='top'\r\n                arrowPointAtCenter={true}\r\n              >\r\n                <RadioButton value='block'>{this.props.t('base.block')}</RadioButton>\r\n              </Tooltip>\r\n            </Radio.Group>\r\n            {this.getWebgeolocation()}\r\n          </Row>\r\n          {this.props.profileInfo.geolocation.mode !== 'block' && (\r\n            <>{this.geoOptionContainer()}</>\r\n          )}\r\n        </ElementContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(GeolocationTab);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Select } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport TIMEZONES from '../../common/timezones';\r\nimport { TransProps, withTranslation } from 'react-i18next';\r\n\r\nconst { Option } = Select;\r\n\r\nconst ElementContainer = styled('div')`\r\n  margin-top: 35px;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst Row = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Subtitle = styled('span')`\r\n  font-size: 12px;\r\n  color: var(--000000-update-profile-timezone);\r\n  margin-left: 13px;\r\n`;\r\n\r\ninterface ITimezoneTab extends TransProps {\r\n  updateProfileInfo: any;\r\n  profileInfo: any;\r\n  setUpdatedField: (field: string) => any;\r\n}\r\nclass TimezoneTab extends Component<ITimezoneTab> {\r\n  private changeFillTimezone = (isEnabled: boolean) => {\r\n    const { timezone = {} } = this.props.profileInfo;\r\n\r\n    this.props.updateProfileInfo({\r\n      timezone: {\r\n        ...timezone,\r\n        fillBasedOnIp: isEnabled\r\n      }\r\n    });\r\n\r\n    this.props.setUpdatedField('timezone.fillBasedOnIp');\r\n  };\r\n\r\n  private updateTimezone = (value: string) => {\r\n    const { timezone = {} } = this.props.profileInfo;\r\n\r\n    this.props.updateProfileInfo({\r\n      timezone: {\r\n        ...timezone,\r\n        timezone: value\r\n      }\r\n    });\r\n\r\n    this.props.setUpdatedField('timezone.timezone');\r\n  };\r\n\r\n  private getTimezoneContent = () => {\r\n    const { timezone = {} } = this.props.profileInfo;\r\n    const fillBasedOnIp = timezone.fillBasedOnIp;\r\n    if (fillBasedOnIp) {\r\n      return '';\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ElementContainer>\r\n          <Select\r\n            showSearch={true}\r\n            value={this.props.profileInfo.timezone.timezone}\r\n            onSelect={this.updateTimezone}\r\n            style={{ width: 320 }}\r\n          >\r\n            {TIMEZONES.sort((a, b) => a.name.localeCompare(b.name)).map(\r\n              elem => {\r\n                const timezoneName = elem.name;\r\n                const offset = elem.offset;\r\n\r\n                // TODO: Localize timezones\r\n                return (\r\n                  <Option key={timezoneName} value={timezoneName}>\r\n                    {timezoneName} ({offset})\r\n                  </Option>\r\n                );\r\n              }\r\n            )}\r\n          </Select>\r\n        </ElementContainer>\r\n      </>\r\n    );\r\n  };\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <ElementContainer>\r\n          <Row>\r\n            <Switch\r\n              checked={this.props.profileInfo.timezone.fillBasedOnIp}\r\n              onChange={this.changeFillTimezone}\r\n            />\r\n\r\n            <Subtitle>{this.props.t('editProfile.timezone.fillBasedOnIp')}</Subtitle>\r\n          </Row>\r\n        </ElementContainer>\r\n        {this.getTimezoneContent()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(TimezoneTab);\r\n","import { Icon, Radio, Tooltip } from 'antd';\r\nimport React, { ChangeEvent, Component } from 'react';\r\nimport { TransProps, withTranslation } from 'react-i18next';\r\n\r\nimport { ElementContainer, RadioButton, TooltipText } from './styles';\r\n\r\ndeclare interface IWebRTCTab extends TransProps {\r\n  updateProfileInfo: any;\r\n  profileInfo: any;\r\n  setUpdatedField: (field: string) => any;\r\n  t: (key: string) => string;\r\n}\r\nclass WebRTCTab extends Component<IWebRTCTab> {\r\n  private setMode = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    const { props } = this;\r\n    const { webRTC = {} } = props.profileInfo;\r\n\r\n    props.updateProfileInfo({\r\n      webRTC: {\r\n        ...webRTC,\r\n        enable: event.target.value,\r\n      },\r\n    });\r\n\r\n    props.setUpdatedField('webrtc.mode');\r\n  };\r\n\r\n  public getWebIcon = (): JSX.Element => {\r\n    const { webRTC = {} } = this.props.profileInfo;\r\n    const { enable } = webRTC;\r\n\r\n    if (!enable) {\r\n      return (\r\n        <>\r\n          <Tooltip\r\n            title={(\r\n              <TooltipText>\r\n                {this.props.t('webrtc.disabled.help')}\r\n              </TooltipText>\r\n            )}\r\n            overlayStyle={{ backgroundColor: 'var(--FFFFFF-create-profile-webrtc)', color: 'var(--000000-create-profile-webrtc)' }}\r\n            placement='rightBottom'\r\n            arrowPointAtCenter={true}\r\n          >\r\n            <Icon\r\n              style={{\r\n                marginTop: 7,\r\n                marginLeft: 5,\r\n                marginBottom: 7,\r\n                opacity: 0.4,\r\n              }}\r\n              type='info-circle'\r\n            />\r\n          </Tooltip>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Tooltip\r\n          title={(\r\n            <TooltipText>\r\n              {this.props.t('profileSettings.webrtc.enabledInfo')}\r\n            </TooltipText>\r\n          )}\r\n          overlayStyle={{ backgroundColor: 'var(--FFFFFF-create-profile-webrtc)', color: 'var(--000000-create-profile-webrtc)' }}\r\n          placement='rightBottom'\r\n          arrowPointAtCenter={true}\r\n        >\r\n          <Icon\r\n            style={{\r\n              marginTop: 7,\r\n              marginLeft: 5,\r\n              marginBottom: 7,\r\n              opacity: 0.4,\r\n            }}\r\n            type='info-circle'\r\n          />\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <ElementContainer>\r\n          <Radio.Group\r\n            value={this.props.profileInfo.webRTC.enable}\r\n            onChange={this.setMode}\r\n          >\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('profileSettings.webrtc.enabledInfo')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-create-profile-webrtc)', color: 'var(--000000-create-profile-webrtc)' }}\r\n              placement='topRight'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <RadioButton value={true}>{this.props.t('profileSettings.webrtc.enabled')}</RadioButton>\r\n            </Tooltip>\r\n            <Tooltip\r\n              title={(\r\n                <TooltipText>\r\n                  {this.props.t('webrtc.disabled.help')}\r\n                </TooltipText>\r\n              )}\r\n              overlayStyle={{ backgroundColor: 'var(--FFFFFF-create-profile-webrtc)', color: 'var(--000000-create-profile-webrtc)' }}\r\n              placement='top'\r\n              arrowPointAtCenter={true}\r\n            >\r\n              <RadioButton value={false}>{this.props.t('profileSettings.webrtc.disabled')}</RadioButton>\r\n            </Tooltip>\r\n          </Radio.Group>\r\n          {this.getWebIcon()}\r\n        </ElementContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(WebRTCTab);\r\n","/* eslint-disable max-lines */\r\nimport styled from '@emotion/styled';\r\nimport { Button, Input, Tabs, Tooltip } from 'antd';\r\nimport moment from 'moment';\r\nimport React, { Component } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { TransProps, withTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport AdvancedTab from './advanced-tab';\r\nimport BodyContainer from './body-container';\r\nimport ContainerDashboard from './container-dashboard';\r\nimport GeolocationTab from './geolocation-tab';\r\nimport OverviewTab from './overview-tab';\r\nimport TimezoneTab from './timezone-tab';\r\nimport WebRTCTab from './webrtc-tab';\r\nimport { IProfile } from '../../../interfaces';\r\nimport { ITemplatesCtx, templatesContext } from '../../../state';\r\nimport { editProfilesListFields } from '../../../state/profiles-list.atom';\r\nimport { getProxyRequest, setProxyStatuses } from '../../../state/proxies.context/api';\r\nimport { incrementProxyProfilesCount, updateProxyItem, updateProxyList, useProxyList } from '../../../state/proxy-list.atom';\r\nimport Header from '../../../ui/Header';\r\nimport { isProxyDataValid } from '../../../utils/proxy.validation-message';\r\nimport { UpdateProfile } from '../../common/actions';\r\nimport { requestFingerprint } from '../../common/api';\r\nimport { getBrowserVersionCurrent } from '../../common/orbita-browser';\r\nimport BookmarksTab from '../../common/tabs/bookmarks';\r\n// import { IProxy } from '../../modalsComponents/components/proxy-manager/interfaces/Proxy';\r\nimport ExtensionsTab from '../../profileSettingsComponents/extensionsTab/extensions-tab';\r\nimport ProxyTab from '../../profileSettingsComponents/proxyTab';\r\nimport { IProxy } from '../../proxy/components/interfaces/IProxy';\r\nimport { getProxyStatusParams } from '../../proxy/proxy-helpers';\r\nimport { requestProfileInfo, sendAnalytics, updateProfile } from '../api';\r\nimport { initialState } from '../reducer';\r\n\r\nconst ContainerContent = styled('div')`\r\n  margin: 30px 86px;\r\n  color: var(--000000-update-profile);\r\n  font-family: Roboto;\r\n  @media screen and (max-width: 500px) {\r\n    margin: 4% 5%;\r\n  }\r\n  @media screen and (max-width: 325px) {\r\n    margin: 4% 2%;\r\n  }\r\n`;\r\n\r\nconst ColumnsContainer = styled('div')`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst LeftColumnContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 450px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst RightColumnContainer = styled('div')`\r\n  max-width: 207px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 450px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst PageTitle = styled('h1')`\r\n  margin: 0 !important;\r\n  color: var(--000000-update-profile);\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 20px;\r\n  line-height: 23px;\r\n`;\r\n\r\nconst ButtonDiv = styled('div')`\r\n  position: fixed;\r\n  left: 0;\r\n  width: 100%;\r\n  bottom: 0;\r\n  z-index: 999;\r\n  padding: 1em;\r\n  background-color: var(--FFFFFF-update-profile);\r\n  box-shadow: 0 -4px 15px 0px var(--0000001A-update-profile);;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst SaveButton = styled(Button)`\r\n  font-size: 12px;\r\n  max-width: 102px;\r\n  max-height: 30px;\r\n  margin-top: 5px;\r\n  margin-bottom: 7px;\r\n  margin-left: 75px;\r\n  text-shadow: none;\r\n  @media screen and (max-width: 450px) {\r\n    margin-left: 0;\r\n  }\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Subtitle = styled('span')`\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  margin-bottom: 10px;\r\n  display: block;\r\n`;\r\n\r\nconst ProfileSummaryContainer = styled('div')`\r\n  background-color: var(--F6F6F6-update-profile);\r\n  width: 207px;\r\n`;\r\n\r\nconst ProfileSummaryContent = styled('div')`\r\n  margin: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 10px;\r\n  line-height: 10px;\r\n  text-indent: 3px;\r\n  opacity: 0.9;\r\n\r\n  & span {\r\n    padding: 5px 0;\r\n  }\r\n`;\r\n\r\nconst ContentBrowserName = styled('div')`\r\n  width: 278px;\r\n  margin-top: 35px;\r\n`;\r\n\r\nconst ContentTabs = styled('div')`\r\n  margin-top: 43px;\r\n  width: 100%;\r\n  max-width: 570px;\r\n  @media screen and (max-width: 450px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst GreenText = styled('span')`\r\n  color: var(--2A5A2B-update-profile);\r\n  margin-left: 4px;\r\n`;\r\n\r\nconst CancelButton = styled(Button)`\r\n  color: var(--1FC47D-update-profile);\r\n  border-color: var(--1FC47D-update-profile);\r\n  font-size: 12px;\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n  max-width: 102px;\r\n  max-height: 30px;\r\n  margin-top: 5px;\r\n  margin-bottom: 7px;\r\n  margin-left: 15px;\r\n  text-shadow: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst updatedFields: any = {};\r\nlet oldName = '';\r\n\r\ninterface IUpdateProfilePageProps extends TransProps {\r\n  UpdateProfile: any;\r\n  profileInfo: any;\r\n  history: any;\r\n  location: Location;\r\n  proxyList: IProxy[];\r\n}\r\n\r\ninterface IUpdateProfilePageState {\r\n  showFingerPrint: boolean;\r\n  buttonProxy: boolean;\r\n  GetProxyAnswer: number;\r\n  loading: boolean;\r\n  disabledSaveButton: boolean;\r\n  loadingSaveButton: boolean;\r\n  updateNoises: boolean;\r\n  isGeolocationScreen: boolean;\r\n  defaultLanguages: string;\r\n}\r\n\r\nclass UpdateProfilePageClass extends Component<IUpdateProfilePageProps, IUpdateProfilePageState> {\r\n  state = {\r\n    showFingerPrint: false,\r\n    buttonProxy: false,\r\n    GetProxyAnswer: 4,\r\n    loading: false,\r\n    disabledSaveButton: true,\r\n    loadingSaveButton: false,\r\n    updateNoises: false,\r\n    isGeolocationScreen: false,\r\n    defaultLanguages: '',\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.getProfileInfo();\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.props.UpdateProfile(initialState);\r\n  }\r\n\r\n  private setUpdatedField(field: string) {\r\n    updatedFields[field] = (updatedFields[field] || 0) + 1;\r\n  }\r\n\r\n  private ShowButtonFingerprint = () => {\r\n    this.setState({\r\n      showFingerPrint: true,\r\n    });\r\n  };\r\n\r\n  private setIsGeolocationScreen = (state: boolean) => this.setState({ isGeolocationScreen: state });\r\n\r\n  private CloseButtonFingerprint = () => {\r\n    this.setState({\r\n      showFingerPrint: false,\r\n    });\r\n  };\r\n\r\n  public updateFingerprint = async (templatesCtx: ITemplatesCtx) => {\r\n    const {\r\n      os = 'win',\r\n      isM1 = false,\r\n      webRTC = {},\r\n      webGL: defaultWebGL = {},\r\n      webGLMetadata: defaultWebGLMetadata = {},\r\n      canvas: defaultCanvas,\r\n      fonts: defaultFonts = {},\r\n      navigator: defaultNavigator = {},\r\n      mediaDevices: defaultMediaDevices = {},\r\n      plugins: defaultPlugins = {},\r\n      timezone: defaultTimezone = {},\r\n      webglParams: defaultWebglParams = {},\r\n      clientRects: defaultClientRects = {},\r\n      osSpec,\r\n    } = this.props.profileInfo;\r\n\r\n    const browserVersionCurrent = getBrowserVersionCurrent(defaultNavigator.userAgent);\r\n    const fingerprint =\r\n      await requestFingerprint({ os, osSpec, template: templatesCtx.selectedTemplate.id, browserVersionCurrent })\r\n        .catch(() => ({}));\r\n\r\n    const {\r\n      navigator,\r\n      plugins,\r\n      canvas,\r\n      mediaDevices,\r\n      webGLMetadata = {},\r\n      webglParams = {},\r\n      webGL = {},\r\n      os: fprintOS,\r\n      fonts,\r\n      timezone = {},\r\n      devicePixelRatio,\r\n      clientRects = {},\r\n    } = fingerprint;\r\n\r\n    // Если пользователь накликал много раз и мы получили много ответов под разные ОС\r\n    if (os !== fprintOS) {\r\n      return null;\r\n    }\r\n\r\n    let deviceMemory = navigator.deviceMemory || 2;\r\n    if (deviceMemory > 8) {\r\n      deviceMemory = 8;\r\n    }\r\n\r\n    if (deviceMemory < 1) {\r\n      deviceMemory = 1;\r\n    }\r\n\r\n    this.setState({ updateNoises: true });\r\n\r\n    this.props.UpdateProfile({\r\n      name: `${this.props.profileInfo.name}`,\r\n      fonts: {\r\n        ...defaultFonts,\r\n        families: fonts,\r\n      },\r\n      webGL: {\r\n        ...defaultWebGL,\r\n        mode:\r\n          webGL.mode === 'noise' || webGL.mode === 'off'\r\n            ? webGL.mode\r\n            : defaultWebGL.mode,\r\n      },\r\n      clientRects: {\r\n        ...defaultClientRects,\r\n        mode:\r\n          clientRects.mode === 'noise' || clientRects.mode === 'off'\r\n            ? clientRects.mode\r\n            : defaultClientRects.mode,\r\n      },\r\n      webGLMetadata: {\r\n        ...defaultWebGLMetadata,\r\n        mode:\r\n          webGLMetadata.mode && webGLMetadata.mode === 'off'\r\n            ? webGLMetadata.mode\r\n            : 'mask',\r\n        vendor: webGLMetadata.vendor || 'Google Inc.',\r\n        renderer: webGLMetadata.renderer || '',\r\n      },\r\n      webRTC,\r\n      mediaDevices: {\r\n        ...defaultMediaDevices,\r\n        audioInputs: mediaDevices.audioInputs || 0,\r\n        audioOutputs: mediaDevices.audioOutputs || 0,\r\n        videoInputs: mediaDevices.videoInputs || 0,\r\n      },\r\n      canvas: {\r\n        ...defaultCanvas,\r\n        mode:\r\n          canvas.mode === 'noise' ||\r\n          canvas.mode === 'off' ||\r\n          canvas.mode === 'block'\r\n            ? canvas.mode\r\n            : defaultCanvas.mode,\r\n      },\r\n      plugins: {\r\n        ...defaultPlugins,\r\n        ...plugins,\r\n      },\r\n      navigator: {\r\n        ...defaultNavigator,\r\n        ...navigator,\r\n        deviceMemory,\r\n      },\r\n      timezone: {\r\n        ...defaultTimezone,\r\n        ...timezone,\r\n      },\r\n      webglParams: {\r\n        ...defaultWebglParams,\r\n        ...webglParams,\r\n      },\r\n      devicePixelRatio,\r\n      osSpec,\r\n    });\r\n  };\r\n\r\n  changeButton = (item:any) => {\r\n    this.setState({\r\n      buttonProxy: item,\r\n    });\r\n  };\r\n\r\n  private getProfileIdFromLocation = (): string => this.props.location.pathname.replace('/update/', '');\r\n\r\n  private getProfileInfo = async () => {\r\n    const fingerprint = await requestProfileInfo(\r\n      this.getProfileIdFromLocation(),\r\n    );\r\n\r\n    oldName = fingerprint.name;\r\n\r\n    const {\r\n      audioContext = { mode: 'noise' },\r\n      browserType = 'chrome',\r\n      canvas = { mode: 'noise' },\r\n      clientRects = { mode: 'noise' },\r\n      dns = '',\r\n      extensions = { enabled: true, names: [] },\r\n      fonts = { families: [] },\r\n      devicePixelRatio = 1,\r\n      geolocation = {\r\n        customize: true,\r\n        enabled: true,\r\n        fillBasedOnIp: true,\r\n        mode: 'prompt',\r\n      },\r\n      bookmarks,\r\n      isBookmarksSynced,\r\n      autoLang = true,\r\n      googleServicesEnabled = false,\r\n      lockEnabled = false,\r\n      mediaDevices = { videoInputs: 1, audioInputs: 1, audioOutputs: 1 },\r\n      name = '',\r\n      navigator,\r\n      notes = '',\r\n      os = 'win',\r\n      osSpec = 'win',\r\n      isM1 = false,\r\n      plugins = { enableVulnerable: true, enableFlash: true },\r\n      proxy = { mode: 'none', host: '', port: 80, username: '', password: '', autoProxyRegion: 'us', torProxyRegion: 'us' },\r\n      proxyEnabled = false,\r\n      startUrl = '',\r\n      storage = {\r\n        local: true,\r\n        extensions: true,\r\n        bookmarks: true,\r\n        history: true,\r\n        passwords: true,\r\n        session: true,\r\n        indexedDb: true,\r\n        enableExternalExtensions: false,\r\n      },\r\n      timezone = {\r\n        enabled: true,\r\n        fillBasedOnIp: true,\r\n        timezone: '',\r\n      },\r\n      webGL = { mode: 'real' },\r\n      webGLMetadata = { mode: 'mask', vendor: 'Google Inc.' },\r\n      webglParams = { glParamValues: [] },\r\n      webRTC,\r\n      chromeExtensions = [],\r\n      userChromeExtensions = [],\r\n    } = fingerprint;\r\n\r\n    this.props.UpdateProfile({\r\n      audioContext,\r\n      browserType,\r\n      canvas,\r\n      dns,\r\n      extensions,\r\n      fonts,\r\n      geolocation: {\r\n        ...this.props.profileInfo.geolocation,\r\n        ...geolocation,\r\n      },\r\n      googleServicesEnabled,\r\n      bookmarks,\r\n      isBookmarksSynced,\r\n      autoLang,\r\n      lockEnabled,\r\n      mediaDevices,\r\n      name,\r\n      navigator,\r\n      notes,\r\n      os,\r\n      osSpec,\r\n      isM1,\r\n      plugins,\r\n      proxy,\r\n      proxyEnabled,\r\n      startUrl,\r\n      storage: {\r\n        ...storage,\r\n        indexedDb: storage.indexedDb ?? true,\r\n      },\r\n      timezone,\r\n      webGL,\r\n      webGLMetadata,\r\n      webglParams,\r\n      clientRects,\r\n      devicePixelRatio,\r\n      webRTC,\r\n      chromeExtensions,\r\n      userChromeExtensions,\r\n    });\r\n    this.setState({\r\n      disabledSaveButton: false,\r\n      defaultLanguages: this.props.profileInfo.navigator.language,\r\n    });\r\n  };\r\n\r\n  private updateProfileName = (e: any) => {\r\n    this.props.UpdateProfile({\r\n      name: e.target.value,\r\n    });\r\n\r\n    this.setUpdatedField('name');\r\n  };\r\n\r\n  private getWebRtcMode = (enabled: boolean): string => {\r\n    if (enabled) {\r\n      return 'based on ip';\r\n    }\r\n\r\n    return 'off';\r\n  };\r\n\r\n  private saveProfile = async (): Promise<void> => {\r\n    const proxyDataForValidation = this.props.profileInfo.proxy;\r\n    const isNeedValidationProxy =\r\n      ['http', 'socks4', 'socks5'].includes(this.props.profileInfo.proxy.mode?.toLowerCase()) &&\r\n      proxyDataForValidation.host &&\r\n      proxyDataForValidation.port;\r\n\r\n    if (isNeedValidationProxy) {\r\n      const isProxyValid = isProxyDataValid({\r\n        host: proxyDataForValidation.host,\r\n        port: proxyDataForValidation.port,\r\n        translation: this.props.t,\r\n      });\r\n\r\n      if (!isProxyValid) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const profileId = this.getProfileIdFromLocation();\r\n\r\n    this.setState({\r\n      loadingSaveButton: true,\r\n    });\r\n\r\n    if (this.state.isGeolocationScreen && !this.props.profileInfo.proxy.host) {\r\n      return;\r\n    }\r\n\r\n    const { name = '' } = this.props.profileInfo;\r\n    if (!name.trim()) {\r\n      await this.props.UpdateProfile({\r\n        name: oldName,\r\n      });\r\n    }\r\n\r\n    if (!(['none', 'geolocation', 'gologin', 'tor'].includes(this.props.profileInfo.proxy.mode) || this.props.profileInfo.proxy.host)) {\r\n      await this.props.UpdateProfile({\r\n        proxyEnabled: false,\r\n        proxy: {\r\n          autoProxyRegion: 'us',\r\n          host: '',\r\n          mode: 'none',\r\n          password: '',\r\n          port: 80,\r\n          torProxyRegion: 'us',\r\n          username: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    if (!this.props.profileInfo.navigator.language.trim()) {\r\n      await this.props.UpdateProfile({\r\n        navigator: {\r\n          ...this.props.profileInfo.navigator,\r\n          language: this.state.defaultLanguages,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (this.props.profileInfo.proxy.mode === 'geolocation') {\r\n      await this.props.UpdateProfile({\r\n        proxy: {\r\n          ...this.props.profileInfo.proxy,\r\n          changeIpUrl: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    // Sending analytics at updatedFields\r\n    sendAnalytics(profileId, updatedFields);\r\n\r\n    const { proxyList } = this.props;\r\n\r\n    let newProfileData: IProfile|null;\r\n    try {\r\n      newProfileData = await updateProfile({\r\n        profileId,\r\n        profileData: this.props.profileInfo,\r\n        updateNoises: this.state.updateNoises,\r\n      });\r\n\r\n      if (!newProfileData) {\r\n        return;\r\n      }\r\n\r\n      let resProxy: IProxy;\r\n\r\n      const proxyInList = proxyList.find((el: IProxy) => el._id === newProfileData?.proxy?.id);\r\n\r\n      if (!proxyInList && newProfileData?.proxy?.id) {\r\n        const newProxy = await getProxyRequest(newProfileData.proxy.id);\r\n        if (newProxy) {\r\n          resProxy = newProxy;\r\n          const newProxyList = [\r\n            newProxy,\r\n            ...proxyList,\r\n          ];\r\n\r\n          updateProxyList(newProxyList);\r\n        }\r\n      } else {\r\n        resProxy = proxyInList;\r\n        incrementProxyProfilesCount(proxyInList?._id);\r\n      }\r\n\r\n      if (resProxy?._id && newProfileData?.proxy?.id) {\r\n        setTimeout(async (): Promise<void> => {\r\n          updateProxyItem({\r\n            ...resProxy,\r\n            _id: resProxy._id,\r\n            checkInProgress: true,\r\n          });\r\n\r\n          const statusParams = await getProxyStatusParams(resProxy);\r\n\r\n          updateProxyItem({\r\n            ...resProxy,\r\n            ...statusParams,\r\n            _id: resProxy._id,\r\n            checkDate: moment().toDate(),\r\n            checkInProgress: false,\r\n          });\r\n\r\n          const checkParams = {\r\n            _id: resProxy._id,\r\n            status: statusParams.status,\r\n            country: statusParams.country || resProxy.country,\r\n            city: statusParams.city || resProxy.city,\r\n            error: statusParams.error || null,\r\n            checkDate: moment().unix(),\r\n            lastIp: statusParams.origin,\r\n          };\r\n\r\n          await setProxyStatuses([checkParams]).catch(() => null);\r\n        }, 0);\r\n      }\r\n\r\n      const profileInfo = { ...this.props.profileInfo };\r\n      delete profileInfo.webglParams;\r\n\r\n      editProfilesListFields([profileId], profileInfo);\r\n    } finally {\r\n      this.setState({ loadingSaveButton: false });\r\n    }\r\n\r\n    // Setting default values for state\r\n    await this.props.UpdateProfile(initialState);\r\n    this.props.history.push('/profileList');\r\n  };\r\n\r\n  public render(): JSX.Element {\r\n    const { disabledSaveButton } = this.state;\r\n    const { loadingSaveButton } = this.state;\r\n\r\n    return (\r\n      <ContainerDashboard>\r\n        <Header />\r\n        <BodyContainer>\r\n          <ContainerContent>\r\n            <ColumnsContainer>\r\n              <LeftColumnContainer>\r\n                <PageTitle>\r\n                  {this.props.t('editProfile.title')}\r\n                </PageTitle>\r\n                <ContentBrowserName>\r\n                  <Subtitle>\r\n                    {this.props.t('editProfile.profileNameLabel')}\r\n                  </Subtitle>\r\n                  <Input\r\n                    size='small'\r\n                    style={{ height: 32 }}\r\n                    value={this.props.profileInfo.name}\r\n                    onChange={this.updateProfileName}\r\n                    disabled={this.state.disabledSaveButton}\r\n                  />\r\n                </ContentBrowserName>\r\n                <ContentTabs>\r\n                  <Tabs\r\n                    defaultActiveKey='2'\r\n                    size='small'\r\n                    onTabClick={(key: any) => {\r\n                      if (key === '1') {\r\n                        this.ShowButtonFingerprint();\r\n                      } else {\r\n                        this.CloseButtonFingerprint();\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Tabs.TabPane key='1' tab={this.props.t('base.overview')}>\r\n                      <templatesContext.Consumer>\r\n                        {templatesCtx => (\r\n                          <OverviewTab\r\n                            setUpdatedField={this.setUpdatedField}\r\n                            profileInfo={this.props.profileInfo}\r\n                            updateProfileInfo={this.props.UpdateProfile}\r\n                            updateFingerprint={() => this.updateFingerprint(templatesCtx)}\r\n                          />\r\n                        )}\r\n                      </templatesContext.Consumer>\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane key='2' tab={this.props.t('proxy.title')}>\r\n                      <ProxyTab\r\n                        showButton={{\r\n                          buttonProxy: this.state.GetProxyAnswer,\r\n                          changeButton: this.changeButton.bind(this),\r\n                          status: this.state.loading,\r\n                        }}\r\n                        profileInfo={this.props.profileInfo}\r\n                        profileId={this.getProfileIdFromLocation()}\r\n                        updateProfileInfo={this.props.UpdateProfile}\r\n                        setUpdatedField={this.setUpdatedField}\r\n                        isSaveButtonPressed={this.state.loadingSaveButton}\r\n                        setIsGeolocationScreen={this.setIsGeolocationScreen}\r\n                        saveProfile={this.saveProfile}\r\n                        isCreateProfile={false}\r\n                      />\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane key='3' tab={this.props.t('base.timezone')}>\r\n                      <TimezoneTab\r\n                        profileInfo={this.props.profileInfo}\r\n                        updateProfileInfo={this.props.UpdateProfile}\r\n                        setUpdatedField={this.setUpdatedField}\r\n                      />\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane key='4' disabled={this.state.disabledSaveButton} tab={this.props.t('base.chromeExtensions')}>\r\n                      <ExtensionsTab\r\n                        updateProfileInfo={this.props.UpdateProfile}\r\n                        setUpdatedField={this.setUpdatedField}\r\n                        profileInfo={this.props.profileInfo}\r\n                        isSaveButtonPressed={this.state.loadingSaveButton}\r\n                      />\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane key='5' tab={this.props.t('personalArea.defaultProfile.bookmarks')}>\r\n                      <BookmarksTab\r\n                        profileInfo={this.props.profileInfo}\r\n                        updateProfileInfo={this.props.UpdateProfile}\r\n                        setUpdatedField={this.setUpdatedField}\r\n                      />\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane key='6' tab={this.props.t('base.webrtc')}>\r\n                      <WebRTCTab\r\n                        profileInfo={this.props.profileInfo}\r\n                        updateProfileInfo={this.props.UpdateProfile}\r\n                        setUpdatedField={this.setUpdatedField}\r\n                      />\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane key='7' tab={this.props.t('geolocation.title')}>\r\n                      <GeolocationTab\r\n                        profileInfo={this.props.profileInfo}\r\n                        updateProfileInfo={this.props.UpdateProfile}\r\n                        setUpdatedField={this.setUpdatedField}\r\n                      />\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane key='8' tab={this.props.t('base.advanced')}>\r\n                      <AdvancedTab\r\n                        profileInfo={this.props.profileInfo}\r\n                        updateProfileInfo={this.props.UpdateProfile}\r\n                        setUpdatedField={this.setUpdatedField}\r\n                      />\r\n                    </Tabs.TabPane>\r\n                  </Tabs>\r\n                </ContentTabs>\r\n                <ButtonDiv>\r\n                  <SaveButton\r\n                    type='primary'\r\n                    onClick={this.saveProfile}\r\n                    disabled={disabledSaveButton}\r\n                    loading={loadingSaveButton}\r\n                  >\r\n                    {this.props.t('base.save')}\r\n                  </SaveButton>\r\n                  <CancelButton\r\n                    onClick={(): void => {\r\n                      this.props.history.push('/profileList');\r\n                    }}\r\n                  >\r\n                    {this.props.t('base.cancel')}\r\n                  </CancelButton>\r\n                </ButtonDiv>\r\n              </LeftColumnContainer>\r\n              <RightColumnContainer>\r\n                <Subtitle>\r\n                  {this.props.t('base.profileSummary')}\r\n                </Subtitle>\r\n                <ProfileSummaryContainer>\r\n                  <ProfileSummaryContent>\r\n                    <span style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis',overflow: 'hidden' }}>\r\n                      {this.props.t('base.profileName')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.name}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('proxy.title')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.proxy.mode}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('editProfile.profileSummary.browser')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.browserType}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.os')}\r\n                      ::\r\n                      <GreenText>\r\n                        {this.props.profileInfo.os}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.useragent')}\r\n                      :\r\n                      <Tooltip\r\n                        title={this.props.profileInfo.navigator.userAgent}\r\n                      >\r\n                        <GreenText>\r\n                          {this.props.profileInfo.navigator.userAgent\r\n                            .toString()\r\n                            .slice(0, 8) + '...'}\r\n                        </GreenText>\r\n                      </Tooltip>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.resolution')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.navigator.resolution}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.languages')}\r\n                      :\r\n                      <Tooltip\r\n                        title={this.props.profileInfo.navigator.language}\r\n                      >\r\n                        <GreenText>\r\n                          {this.props.profileInfo.navigator.language\r\n                            .toString()\r\n                            .slice(0, 10) + '...'}\r\n                        </GreenText>\r\n                      </Tooltip>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.platform')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.navigator.platform}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.timezone')}\r\n                      :\r\n                      <GreenText>\r\n                        {\r\n                          this.props.profileInfo.timezone.fillBasedOnIp\r\n                            ? 'based on ip'\r\n                            : this.props.profileInfo.timezone.timezone.length < 15\r\n                              ? this.props.profileInfo.timezone.timezone\r\n                              : <Tooltip title={this.props.profileInfo.timezone.timezone}>\r\n                                {' '}\r\n                                {this.props.profileInfo.timezone.timezone.slice(0, 15)}\r\n                                ...\r\n                              </Tooltip>\r\n                        }\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('geolocation.title')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.geolocation.mode}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.webrtc')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.getWebRtcMode(this.props.profileInfo.webRTC.enable)}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('canvas.title')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.canvas.mode}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('clientRects.title')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.clientRects.mode}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('webgl.metadata.title')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.webGLMetadata.mode}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('webgl.image.title')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.webGL.mode}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('audioContext.title')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.audioContext.mode}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('fonts.title')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.fonts.families.length}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('mediaDevices.title')}\r\n                      :\r\n                      <Tooltip title='( videoIn | audioIn | audioOut )'>\r\n                        <GreenText>\r\n                          (\r\n                          {this.props.profileInfo.mediaDevices.videoInputs}\r\n                          |\r\n                          {this.props.profileInfo.mediaDevices.audioInputs}\r\n                          |\r\n                          {this.props.profileInfo.mediaDevices.audioOutputs}\r\n                          )\r\n                        </GreenText>\r\n                      </Tooltip>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.localStorage')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.storage.local.toString()}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('editProfile.profileSummary.extStorage')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.storage.extensions.toString()}\r\n                      </GreenText>\r\n                    </span>\r\n                    <span>\r\n                      {this.props.t('base.plugins')}\r\n                      :\r\n                      <GreenText>\r\n                        {this.props.profileInfo.plugins.enableVulnerable.toString()}\r\n                      </GreenText>\r\n                    </span>\r\n                  </ProfileSummaryContent>\r\n                </ProfileSummaryContainer>\r\n              </RightColumnContainer>\r\n            </ColumnsContainer>\r\n          </ContainerContent>\r\n        </BodyContainer>\r\n        <Helmet>\r\n          {/* @ts-ignore */}\r\n          <title>\r\n            Edit Browser Profile GoLogin&nbsp;\r\n            {window.gologinAppVersion || ''}\r\n          </title>\r\n        </Helmet>\r\n      </ContainerDashboard>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  profileInfo: state.updateProfile,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  UpdateProfile,\r\n};\r\n\r\nconst UpdateProfilePageClassComponent = withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(withTranslation()(UpdateProfilePageClass)),\r\n);\r\n\r\n// eslint-disable-next-line react/no-multi-comp\r\nexport const UpdateProfilePage: React.FC = ()  => {\r\n  const proxyList = useProxyList();\r\n\r\n  return (\r\n    <UpdateProfilePageClassComponent proxyList={proxyList} />\r\n  );\r\n};\r\n\r\nexport default UpdateProfilePage;\r\n","import React, { FC, memo, useContext } from 'react';\r\n\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { IUser, userContext, workspaceContext } from '../../../state';\r\nimport { updatePricingData, usePricingData } from '../../../state/pricing-data.atom';\r\nimport { closeQuickPricing, useIsQuickPricingVisible } from '../../../state/quick-pricing.atom';\r\nimport { IconCloseV2 } from '../../../ui/icons/icon-close-v2';\r\nimport { postSelectedTrialPlan } from '../../pricing/api';\r\nimport PricingPage from '../../pricing/components';\r\nimport { PricingModal } from '../components/styles';\r\n\r\nconst QuickPricing: FC = () => {\r\n  const { firstPlanSelected, plan: userPlan, updateUser } = useContext(userContext);\r\n  const { planId: workspacePlanId } = useContext(workspaceContext);\r\n\r\n  const preloadedPricingData = usePricingData();\r\n  const isQuickPricingVisibleAtom = useIsQuickPricingVisible();\r\n\r\n  const onQuickPricingCancel = async (): Promise<void> => {\r\n    closeQuickPricing();\r\n    if (firstPlanSelected) {\r\n      return;\r\n    }\r\n\r\n    let planId = workspacePlanId;\r\n    if (!NEW_FEATURES.workspaces) {\r\n      planId = userPlan.id;\r\n    }\r\n\r\n    const updateObj: Partial<IUser> = {\r\n      hasTrial: true,\r\n      firstPlanSelected: true,\r\n    };\r\n\r\n    updateUser(updateObj);\r\n    if (planId) {\r\n      await postSelectedTrialPlan(planId).catch((error: any) => console.log(error.body?.message || error.message));\r\n      preloadedPricingData.userData.firstPlanSelected = true;\r\n      updatePricingData(preloadedPricingData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PricingModal\r\n      visible={isQuickPricingVisibleAtom}\r\n      onCancel={onQuickPricingCancel}\r\n      footer={null}\r\n      style={{ padding: 0, overflow: 'hidden' }}\r\n      closeIcon={<IconCloseV2 padding={0} iconColor={'var(--696973-new-pricing)'} />}\r\n      bodyStyle={{ padding: 0, overflow: 'hidden' }}\r\n    >\r\n      <PricingPage isPopup={true} />\r\n    </PricingModal>\r\n  );\r\n};\r\n\r\nexport default memo(QuickPricing);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const DraggedProfilesContainer = styled('div')`\r\n  background: var(--FFFFFF-profile-table);\r\n  opacity: 0.6;\r\n  padding: 14px;\r\n  margin-left: 26px;\r\n\r\n  cursor: grabbing;\r\n\r\n  border: 1px solid var(--EBEBEB);\r\n  border-radius: 8px;\r\n\r\n  position: absolute;\r\n  z-index: 1000;\r\n\r\n  width: fit-content;\r\n\r\n  font: 14px / 24px Roboto;\r\n  font-weight: 500;\r\n`;\r\n","import { DragOverlay } from '@dnd-kit/core';\r\nimport React, { FC } from 'react';\r\n\r\nimport { DraggedProfilesContainer } from './styles';\r\nimport { useDraggingProfilesState } from '../../../state/dragging-profiles-state.atom';\r\n\r\nconst DraggingProfilesOverlay: FC = () => {\r\n  const { draggingProfiles, overlayElement } = useDraggingProfilesState();\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (overlayElement) {\r\n      return (\r\n        <div ref={(node): void => {\r\n          if (node) {\r\n            node.replaceWith(overlayElement);\r\n          }\r\n        }} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <DraggedProfilesContainer>\r\n        {draggingProfiles[0]?.name}\r\n      </DraggedProfilesContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DragOverlay dropAnimation={null}>\r\n      {renderContent}\r\n    </DragOverlay>\r\n  );\r\n};\r\n\r\nexport default DraggingProfilesOverlay;\r\n","/* eslint-disable max-lines */\r\nimport { css } from '@emotion/core';\r\nimport styled from '@emotion/styled';\r\nimport * as Sentry from '@sentry/react';\r\nimport { Icon, message } from 'antd';\r\nimport React, { FC, useCallback, useContext, useEffect, useRef, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nimport BodyContainer from './body-container';\r\nimport ContainerDashboard from './container-dashboard';\r\nimport { IProfilesTableSettings } from './interfaces/app-settings.interface';\r\nimport { IGetProfiles, IUpdateProfilesList } from './interfaces/get-profiles.interface';\r\nimport { INewTagActionSubscription } from './interfaces/new-tag-action-subscription.interface';\r\nimport { IProfilesTableSummary } from './interfaces/profiles-table-summary.interface';\r\nimport { addTagToProfiles, findProfilesWithTag, IAddTagToProfiles, removeCustomStatusesFromProfiles, removeTagFromProfiles, updateTagInProfiles } from './manage-profile-tags';\r\nimport PageOverlay from './page-overlay';\r\nimport ProfilesTableQuick from './profiles-table';\r\nimport { NEW_FEATURES } from '../../../../../feature-toggle';\r\nimport { PROFILE_SHARED_KEY_NAME } from '../../../../common/constants/constants';\r\nimport { PROFILE_SHARE_DEEP_LINK_EVENT_NAME } from '../../../../common/constants/events';\r\nimport { LOCAL_STORAGE_SELECTED_FOLDER } from '../../../../common/constants/local-storage';\r\nimport { useQuery } from '../../../hooks';\r\nimport { IFolder, IProfile } from '../../../interfaces';\r\nimport PerformanceObserverService from '../../../services/performance-observer/performance-observer.service';\r\nimport {\r\n  browserUpdaterContext,\r\n  importFilesContext,\r\n  IUser,\r\n  profilesContext,\r\n  tagsContext,\r\n  userContext,\r\n  workspaceContext,\r\n  useSearchQuery,\r\n} from '../../../state';\r\nimport { getIsMoreProfilesAvailable, setIsMoreProfilesAvailable } from '../../../state/is-more-profiles-available.atom';\r\nimport { upsertProfileRunStatuses } from '../../../state/profile-run-statuses.atom';\r\nimport {\r\n  getProfilesList,\r\n  mapAndSetProfilesList,\r\n  setProfilesList,\r\n} from '../../../state/profiles-list.atom';\r\nimport { closeProfilesSettings, openProfilesSettingsOfSelectedIds } from '../../../state/profiles-settings-atom';\r\nimport {\r\n  getProfilesTableSelectedIds,\r\n  resetProfilesTableSelectedIds,\r\n  updateProfilesTableSelectedIds,\r\n  useProfilesTableSelectedIds,\r\n} from '../../../state/profiles-table-selected-ids.atom';\r\nimport { onProfilesTableRowClick } from '../../../state/profiles-table.commands';\r\nimport { checkProxyList, useProxyList } from '../../../state/proxy-list.atom';\r\nimport Header from '../../../ui/Header';\r\nimport { getFolderSelectedOrAll } from '../../../utils/get-folder-selected-or-all';\r\nimport { insertProfileToListByIndex } from '../../../utils/insert-profile-to-list-by-index';\r\nimport { getProfileFromStorage, handleShareViaLinkFromEvent, handleShareViaLinkFromStorage } from '../../common/deep-links';\r\nimport { manageProfilesInFolder, manageProfilesInWorkspaceFolder } from '../../folders/api';\r\nimport FoldersManager from '../../modalsComponents/components/folders-manager';\r\nimport MultiShareModal from '../../modalsComponents/components/multi-share-modal';\r\nimport RemoveProfileModal from '../../modalsComponents/components/remove-profile-modal';\r\nimport { postSelectedTrialPlan } from '../../pricing/api';\r\nimport ProxyManager from '../../proxy/proxy-manager';\r\nimport { compareProxyInProfilesWithProxyList } from '../../proxy/utils/sentry-utils';\r\nimport { addTagRequest, deleteProfilesTag, deleteTag, getAllTags, normalizeTags, updateTagRequest } from '../../tags/api';\r\nimport TitleTag from '../../tags/components/title-tag';\r\nimport { IAddTag, IAddTagMethod, ITag, ITagBase } from '../../tags/interfaces/tag.interface';\r\nimport UpdateProfilePage from '../../updateProfile/components/update-profile-page';\r\nimport { getProfilesTableSummaryInfo, getWorkspaceProfileTableSettings, IProfilesResponse, requestProfiles } from '../api';\r\nimport { normalizeProfilesData } from '../normalize-profiles-data';\r\nimport QuickPricing from '../quick-pricing';\r\nimport DraggingProfilesOverlay from '../dragging-profiles-overlay';\r\nimport { setSelectedFolderId } from '../../../state/selected-folder.atom';\r\nimport { callProfilesTableRowMeasurer } from '../../../state/profiles-table-row-measurers.atom';\r\n\r\nconst COUNT_TO_SCROLL = 30;\r\nconst ALL_PROFILES_FOLDER = 'all';\r\n\r\nconst ContainerContent = styled('div')<{ newStyle: boolean }>`\r\n  ${props => props.newStyle ? css `\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n  ` : css `\r\n    padding: 30px 86px;\r\n\r\n    @media screen and (max-width: 500px) {\r\n      padding: 5% 1%;\r\n    }\r\n    @media screen and (max-width: 325px) {\r\n      padding: 5% 0;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst ContainerPreTable = styled('div')`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nconst ContainerTableName = styled('div')`\r\n@media screen and (max-width: 420px) {\r\n  width: 50%;\r\n}\r\n`;\r\n\r\nconst SpinnerContainer = styled('div')`\r\n  font-size: 20px;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin-top: 150px;\r\n`;\r\n\r\nconst TextTableName = styled('p')`\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 20px;\r\n  line-height: 23px;\r\n  color: var(--000000-profile-table);\r\n  @media screen and (max-width: 500px) {\r\n    padding-left: 7%;\r\n  }\r\n  @media screen and (max-width: 325px) {\r\n    padding-left: 4%;\r\n  }\r\n`;\r\n\r\nlet ipcRenderer: Electron.IpcRenderer;\r\nconst isElectron = !!window.require;\r\n\r\nif (isElectron) {\r\n  ipcRenderer = window.require('electron').ipcRenderer;\r\n}\r\n\r\nconst ProfilesListPage: FC = () => {\r\n  const userCtx = useContext(userContext);\r\n  const {\r\n    _id,\r\n    profilesCountWithShares = 0,\r\n    selectedFolder: selectedFolderFromCtx,\r\n    defaultWorkspace = '',\r\n    updateSelectedFolder,\r\n    folders: foldersListFromCtx,\r\n    firstPlanSelected,\r\n  } = userCtx;\r\n\r\n  const [isLoading, changeLoading] = useState(true);\r\n  const [profilesCount, setProfilesCount] = useState<number>(profilesCountWithShares);\r\n  const [tableHeaderQuery, setTableHeaderQuery] = useState<string>('');\r\n  const [profilesUAChecking, setProfilesUAChecking] = useState<boolean>(false);\r\n  const [currentOrbitaMajorV, setCurrentOrbitaMajorV] = useState<string>('');\r\n  const [currentBrowserV, setCurrentBrowserV] = useState<string>('');\r\n  const [userOrbitaV, setUserOrbitaV] = useState<string>('0.0.0');\r\n  const [profilesTableSettings, setProfilesTableSettings] = useState<IProfilesTableSettings|null>(null);\r\n  const [tableSettingsLoaded, setTableSettingsLoaded] = useState<boolean>(false);\r\n  const [foldersList, setFoldersList] = useState<IFolder[]>([]);\r\n  const [foldersSelected, setFoldersSelected] = useState<string[]>([]);\r\n  const [isFoldersManagerVisible, setIsFoldersManagerVisible] = useState<boolean>(false);\r\n  const [profilesToGetFolders, setProfilesToGetFolders] = useState<string[]>(['']);\r\n\r\n  const newTagActionSubscription = useRef<INewTagActionSubscription|null>(null);\r\n  const prevTag = useRef<string|null>(null);\r\n\r\n  const proxyList = useProxyList();\r\n\r\n  const {\r\n    selectedTag,\r\n    setSelectedTag,\r\n    tags,\r\n    setTags,\r\n    setProfileInEditTagsMode,\r\n    newAddedTag,\r\n    setNewAddedTag,\r\n    addNewTagToList,\r\n  } = React.useContext(tagsContext);\r\n\r\n  const { versionLoadingNow, browserUpdating, updateBrowserUpdater, isOrbitaVersionCompatible } = useContext(browserUpdaterContext);\r\n  const { updateFullProfilesMap, refreshFullProfile } = useContext(profilesContext);\r\n  const {\r\n    selectedProfileIds: selectedProfileIdsFromCtx,\r\n    dropFileStep,\r\n    setDropFileStep,\r\n    setSelectedProfileIds: setSelectedProfileIdsFromCTX,\r\n    setNeedParseName,\r\n    errorImportMessage,\r\n    setErrorImportMessage,\r\n  } = useContext(importFilesContext);\r\n\r\n  const workspaceCtx = useContext(workspaceContext);\r\n  const {\r\n    id: workspaceId,\r\n    isLoaded: workspaceIsLoaded,\r\n    allProfilesFolderId,\r\n  } = workspaceCtx;\r\n\r\n  const query = useQuery();\r\n  const routeUpdateObj = useRouteMatch('/update/:profileId');\r\n  const isUpdatePage = routeUpdateObj?.isExact;\r\n  const searchQuery = useSearchQuery();\r\n  const { t: translation } = useTranslation();\r\n\r\n  const setProfilesFnWithRef = useCallback((set: (prevProfiles: IProfile[]) => IProfile[]): void => {\r\n    mapAndSetProfilesList(prevProfiles => {\r\n      const newProfiles = set(prevProfiles);\r\n      updateFullProfilesMap(newProfiles);\r\n\r\n      return newProfiles;\r\n    });\r\n  }, [setProfilesList, updateFullProfilesMap]);\r\n\r\n  useEffect(() => {\r\n    if (dropFileStep === 'loading') {\r\n      initPage();\r\n    }\r\n\r\n    if (dropFileStep === 'loaded') {\r\n      const selectedProfileIds = getProfilesTableSelectedIds();\r\n      const profiles = getProfilesList();\r\n\r\n      const newProfiles = profiles.filter(profile => selectedProfileIds.includes(profile.id));\r\n      const profileIds = newProfiles.map(profile => profile.id);\r\n      const profilesProxy = newProfiles.map(profile => ({ ...profile.proxy, _id: profile.proxy.id }));\r\n\r\n      checkProxyList(profilesProxy);\r\n      updateProfilesTableSelectedIds(profileIds);\r\n      openProfilesSettingsOfSelectedIds();\r\n      setSelectedProfileIdsFromCTX([]);\r\n      setDropFileStep(null);\r\n\r\n      if (errorImportMessage) {\r\n        setErrorImportMessage('');\r\n        setTimeout(() => message.error(errorImportMessage), 4000);\r\n      }\r\n    }\r\n  }, [dropFileStep, getProfilesList]);\r\n\r\n  useEffect(() => {\r\n    const updateExtensionsOnClose = (_: unknown, res: { profileId: string; extensionsIds: string[] }): any => {\r\n      mapAndSetProfilesList(profiles => profiles.map(profile => {\r\n        if (profile.id === res.profileId) {\r\n          profile.chromeExtensions = res.extensionsIds;\r\n        }\r\n\r\n        return profile;\r\n      }));\r\n    };\r\n\r\n    ipcRenderer?.on('update-extensions-on-close', updateExtensionsOnClose);\r\n\r\n    return () => {\r\n      ipcRenderer?.removeListener('update-extensions-on-close', updateExtensionsOnClose);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if ((NEW_FEATURES.workspaces && !workspaceIsLoaded) || searchQuery === null) {\r\n      return;\r\n    }\r\n\r\n    changeLoading(true);\r\n\r\n    if (NEW_FEATURES.workspaces) {\r\n      loadWorkspaceProfileTableSettings();\r\n    }\r\n\r\n    initPage();\r\n  }, [selectedTag?.id, workspaceIsLoaded, workspaceId, searchQuery]);\r\n\r\n  const loadWorkspaceProfileTableSettings = async (): Promise<void> => {\r\n    if (!(profilesTableSettings && profilesTableSettings.workspace === workspaceId)) {\r\n      const tableSettings = await getWorkspaceProfileTableSettings(workspaceId);\r\n      tableSettings.workspace = workspaceId;\r\n      if (tableSettings) {\r\n        setProfilesTableSettings(tableSettings);\r\n      }\r\n    }\r\n\r\n    setTableSettingsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (NEW_FEATURES.workspaces) {\r\n      return;\r\n    }\r\n\r\n    const appVersion: string = window.gologinAppVersion || '';\r\n    const fetchProfilesTableSummaryInfo = async (): Promise<void> => {\r\n      const {\r\n        profileTableSettings,\r\n        tags: requestedTags,\r\n        folders,\r\n      }: IProfilesTableSummary = await getProfilesTableSummaryInfo(appVersion).catch(() => ({}) as IProfilesTableSummary);\r\n\r\n      const rawCachedFolders = localStorage.getItem('folders-order');\r\n      const cachedFolders: any[] = rawCachedFolders ? JSON.parse(rawCachedFolders) : [];\r\n\r\n      const newOrderedFolders = processReceivedFolders(folders, cachedFolders);\r\n\r\n      localStorage.setItem('folders-order', JSON.stringify(newOrderedFolders));\r\n      setFoldersList(newOrderedFolders);\r\n\r\n      if (profileTableSettings) {\r\n        setProfilesTableSettings(profileTableSettings);\r\n      }\r\n\r\n      if (requestedTags?.success) {\r\n        const normalizedTags = normalizeTags(requestedTags.tags);\r\n        setTags(normalizedTags);\r\n      }\r\n\r\n      setTableSettingsLoaded(true);\r\n    };\r\n\r\n    if (!_id) {\r\n      return;\r\n    }\r\n\r\n    fetchProfilesTableSummaryInfo();\r\n\r\n    return () => setSelectedTag(null);\r\n  }, [_id]);\r\n\r\n  useEffect(() => {\r\n    const profiles = getProfilesList();\r\n    const [profileToGetFolders] = profilesToGetFolders;\r\n    const profileFoldersSelected = profiles.find(profile => profile.id === profileToGetFolders)?.folders || [];\r\n    setFoldersSelected(profileFoldersSelected);\r\n  }, [profilesToGetFolders, getProfilesList]);\r\n\r\n  useEffect(() => {\r\n    if (!ipcRenderer) {\r\n      return;\r\n    }\r\n\r\n    const profileSharedViaLinkJson = sessionStorage.getItem(PROFILE_SHARED_KEY_NAME) || '';\r\n    if (profileSharedViaLinkJson) {\r\n      const profileSharedViaLink = getProfileFromStorage(profileSharedViaLinkJson);\r\n      if (profileSharedViaLink) {\r\n        addProfileFirstToList(profileSharedViaLink);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    ipcRenderer.on(PROFILE_SHARE_DEEP_LINK_EVENT_NAME, async (_event, args) => {\r\n      const {\r\n        message: errorMessage = '',\r\n        profile = null,\r\n        isUpdatePage: isUpdatePageRoute = false,\r\n      }: { message: string; profile: IProfile|null; isUpdatePage?: boolean } = args;\r\n\r\n      if (errorMessage) {\r\n        return message.error(translation(errorMessage));\r\n      }\r\n\r\n      await handleShareViaLinkFromEvent({\r\n        profile,\r\n        defaultWorkspace,\r\n        addProfileFirstToList,\r\n        updateSelectedFolder,\r\n        userCtx,\r\n        workspaceCtx,\r\n        isUpdatePageRoute,\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      ipcRenderer.removeAllListeners(PROFILE_SHARE_DEEP_LINK_EVENT_NAME);\r\n    };\r\n  }, [isUpdatePage]);\r\n\r\n  // temporary hack to update selected folder in the atom\r\n  // but it should be done from the places where folder changes and not here\r\n  useEffect(() => {\r\n    if (!NEW_FEATURES.dragAndDrop) {\r\n      return;\r\n    }\r\n\r\n    let folderId = allProfilesFolderId;\r\n    const selectedFolderName = selectedFolderFromCtx;\r\n    if (selectedFolderName && selectedFolderName !== ALL_PROFILES_FOLDER) {\r\n      const selectedFolder = foldersListFromCtx.find(folder => folder.name === selectedFolderName);\r\n\r\n      folderId = selectedFolder?.id;\r\n    }\r\n\r\n    setSelectedFolderId(folderId || null);\r\n  }, [selectedFolderFromCtx, foldersListFromCtx]);\r\n\r\n  const updateOnSearch = (queryString: string): void => {\r\n    changeLoading(true);\r\n    setTableHeaderQuery(queryString);\r\n    updateProfilesList({ search: queryString });\r\n  };\r\n\r\n  const saveProfilesDeletedToSessionStorage = (profileDeletedIds: string[]): void => {\r\n    const profilesDeleted = getProfilesList()\r\n      .map((profileObject, profileIndex) => ({ profileObject, profileIndex }))\r\n      .filter(({ profileObject }) => profileDeletedIds.includes(profileObject.id));\r\n\r\n    try {\r\n      const profileJson = JSON.stringify(profilesDeleted);\r\n      sessionStorage.setItem('profilesDeleted', profileJson);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getProfileDeletedFromSessionStorage = (): { profileObject: IProfile; profileIndex: number }[] => {\r\n    const profilesDeletedJson = sessionStorage.getItem('profilesDeleted');\r\n    if (!profilesDeletedJson) {\r\n      return [];\r\n    }\r\n\r\n    try {\r\n      return JSON.parse(profilesDeletedJson);\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const addProfileFirstToList = (profile: IProfile): void => mapAndSetProfilesList((prevProfiles) => {\r\n    let profilesToUpdate: IProfile[];\r\n    const profileExistingIndex = prevProfiles.findIndex(({ id }) => id === profile.id);\r\n    if (profileExistingIndex < 0) {\r\n      profilesToUpdate = [...prevProfiles];\r\n      profilesToUpdate.unshift(profile);\r\n    } else {\r\n      profilesToUpdate = insertProfileToListByIndex(prevProfiles, profile, profileExistingIndex);\r\n    }\r\n\r\n    updateFullProfilesMap(profilesToUpdate);\r\n\r\n    return profilesToUpdate;\r\n  });\r\n\r\n  const addProfileToList = (): void => {\r\n    const profilesDeleted = getProfileDeletedFromSessionStorage();\r\n    mapAndSetProfilesList((prevProfiles) => {\r\n      let profilesUpdated = prevProfiles;\r\n      profilesDeleted.forEach(({ profileObject, profileIndex }) => {\r\n        profilesUpdated = insertProfileToListByIndex(profilesUpdated, profileObject, profileIndex);\r\n      });\r\n\r\n      updateFullProfilesMap(profilesUpdated);\r\n\r\n      return profilesUpdated;\r\n    });\r\n\r\n    sessionStorage.removeItem('profilesDeleted');\r\n  };\r\n\r\n  const removeProfilesFromList = (profilesIds: string[]): void => {\r\n    saveProfilesDeletedToSessionStorage(profilesIds);\r\n    if (!profilesIds.length) {\r\n      return;\r\n    }\r\n\r\n    mapAndSetProfilesList((profilesPrev) => {\r\n      const newProfilesList = profilesPrev.filter(({ id }) => !profilesIds.includes(id));\r\n      updateFullProfilesMap(newProfilesList);\r\n\r\n      return newProfilesList;\r\n    });\r\n  };\r\n\r\n  const addProfilesToFolder = async (folderName: string, profilesIds = profilesToGetFolders): Promise<void> => {\r\n    setFoldersSelected([...new Set([...foldersSelected, folderName])]);\r\n\r\n    const action = 'add';\r\n    manageProfileFoldersList(profilesIds, folderName, action);\r\n    if (NEW_FEATURES.workspaces) {\r\n      await manageProfilesInWorkspaceFolder({\r\n        workspaceId,\r\n        name: folderName,\r\n        profiles: profilesIds,\r\n        action,\r\n      });\r\n    } else {\r\n      await manageProfilesInFolder(folderName, profilesIds, action);\r\n    }\r\n\r\n    const folderSelected = getFolderSelectedOrAll();\r\n    if (folderSelected === folderName) {\r\n      addProfileToList();\r\n    }\r\n  };\r\n\r\n  const removeProfilesFromFolder = async (folderName: string, profilesIds = profilesToGetFolders): Promise<void> => {\r\n    const newFoldersSelected = [...foldersSelected];\r\n    newFoldersSelected.splice(foldersSelected.indexOf(folderName), 1);\r\n    setFoldersSelected(newFoldersSelected);\r\n\r\n    const action = 'remove';\r\n    if (NEW_FEATURES.workspaces) {\r\n      await manageProfilesInWorkspaceFolder({\r\n        workspaceId,\r\n        name: folderName,\r\n        profiles: profilesIds,\r\n        action,\r\n      });\r\n    } else {\r\n      await manageProfilesInFolder(folderName, profilesIds, action);\r\n    }\r\n\r\n    manageProfileFoldersList(profilesIds, folderName, action);\r\n\r\n    const folderSelected = getFolderSelectedOrAll();\r\n    folderSelected === folderName && removeProfilesFromList(profilesIds);\r\n  };\r\n\r\n  const onCloseFolderModal = (): void => {\r\n    setIsFoldersManagerVisible(false);\r\n    sessionStorage.removeItem('profilesDeleted');\r\n    setProfilesToGetFolders([]);\r\n  };\r\n\r\n  const openFoldersModal = (profileIds: string[] = []): void => {\r\n    setIsFoldersManagerVisible(true);\r\n    setProfilesToGetFolders(profileIds);\r\n  };\r\n\r\n  const initPage = async (): Promise<void> => {\r\n    const search: string = (NEW_FEATURES.header ? searchQuery : query.get('q')) || '';\r\n    await updateProfilesList({ search });\r\n  };\r\n\r\n  const processReceivedFolders = (folders: any[], localFolders: any[]): any[] => {\r\n    const sharedFolders = folders.filter((folderObj: any) => folderObj.shared);\r\n    const orderedFolders: any[] = folders\r\n      .filter((folderObj: any) => !folderObj.shared)\r\n      .map((elem: any, index: number) => ({ order: index + 1, ...elem }));\r\n\r\n    const nonSharedFoldersLength = orderedFolders.length;\r\n    sharedFolders.forEach((folderObj: any, index: number) => {\r\n      const localFolderObj = localFolders.find((elem: any) => elem.name === folderObj.name);\r\n      orderedFolders.push({\r\n        ...folderObj,\r\n        order: localFolderObj?.order ?? nonSharedFoldersLength + index + 1,\r\n      });\r\n    });\r\n\r\n    orderedFolders.sort((a, b) => a.order - b.order);\r\n\r\n    return orderedFolders;\r\n  };\r\n\r\n  const updateProfilesList = async ({\r\n    search = '',\r\n    ...getProfilesParams\r\n  }: IUpdateProfilesList): Promise<void> => {\r\n    const resultSearch = (NEW_FEATURES.header ? searchQuery : search || query.get('q')) || '';\r\n    const selector: IGetProfiles['selector'] = { search: resultSearch };\r\n    const { id: currentSelectedTag = null, hasLocalId: isTemporaryTag = false } = selectedTag || {};\r\n    if (currentSelectedTag) {\r\n      selector.tag = currentSelectedTag;\r\n    }\r\n\r\n    if (currentSelectedTag !== prevTag.current) {\r\n      if (isTemporaryTag) {\r\n        // user chose just created tag, so we do not load any profiles\r\n        // until tag is actually created, and this function called again\r\n        changeLoading(true);\r\n        prevTag.current = currentSelectedTag;\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    prevTag.current = currentSelectedTag;\r\n\r\n    const selectedFolderName = localStorage.getItem(LOCAL_STORAGE_SELECTED_FOLDER);\r\n    if (NEW_FEATURES.dragAndDrop && selectedFolderName && selectedFolderName !== ALL_PROFILES_FOLDER) {\r\n      const allFolders = NEW_FEATURES.workspaces || NEW_FEATURES.header ? foldersListFromCtx : foldersList;\r\n      const selectedFolder = allFolders.find(folder => folder.name === selectedFolderName);\r\n\r\n      selector.folderId = selectedFolder?.id;\r\n    } else if (NEW_FEATURES.dragAndDrop) {\r\n      selector.folderId = allProfilesFolderId;\r\n    }\r\n\r\n    if (!selector.folderId) {\r\n      if (selectedFolderName && selectedFolderName !== ALL_PROFILES_FOLDER) {\r\n        selector.folder = encodeURIComponent(selectedFolderName);\r\n      }\r\n    }\r\n\r\n    return getProfiles({\r\n      selector,\r\n      ...getProfilesParams,\r\n    });\r\n  };\r\n\r\n  const checkProfilesUA = async (\r\n    receivedProfiles: IProfile[],\r\n    browserV: string = currentBrowserV,\r\n    orbitaMajorV: string = currentOrbitaMajorV,\r\n    currentUserOrbitaV: string = userOrbitaV,\r\n  ): Promise<void> => {\r\n    if (profilesUAChecking || !isElectron) {\r\n      return;\r\n    }\r\n\r\n    setProfilesUAChecking(true);\r\n\r\n    if (currentUserOrbitaV === '0.0.0') {\r\n      currentUserOrbitaV = await ipcRenderer.invoke('get-orbita-browser-version') || '0.0.0';\r\n      setUserOrbitaV(currentUserOrbitaV);\r\n    }\r\n\r\n    if (currentUserOrbitaV === '0.0.0' || !browserV) {\r\n      return;\r\n    }\r\n\r\n    const [currentUserOrbitaMajorV] = currentUserOrbitaV.split('.');\r\n    const [browserMajorV] = browserV.split('.');\r\n    receivedProfiles.forEach((profileObj: any) => {\r\n      const profileUA = profileObj.navigator?.userAgent;\r\n      if (profileObj.updateUALastChosenBrowserV === browserV || !profileUA) {\r\n        return;\r\n      }\r\n\r\n      const profileUAMatch = profileUA.match(/Chrome\\/(\\d+\\.\\d+\\.\\d+\\.\\d+)\\s/);\r\n      const [_, matchRes = ''] = profileUAMatch || [];\r\n      const [profileUAMajorV] = matchRes.split('.');\r\n\r\n      const [intBrowserMajorV, intProfileUAMajorV, intCurrentUserOrbitaMajorV, intOrbitaMajorV] =\r\n        [browserMajorV, profileUAMajorV, currentUserOrbitaMajorV, orbitaMajorV].map(Number);\r\n\r\n      if (\r\n        intCurrentUserOrbitaMajorV !== intOrbitaMajorV ||\r\n        intProfileUAMajorV >= intBrowserMajorV\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      profileObj.suggestUpdateUA = true;\r\n    });\r\n\r\n    setProfilesUAChecking(false);\r\n  };\r\n\r\n  const getProfiles = async ({\r\n    selector,\r\n    getNewPage = false,\r\n  }: IGetProfiles): Promise<void> => {\r\n    const profiles = getProfilesList();\r\n    const isMoreProfilesAvailable = getIsMoreProfilesAvailable();\r\n    if (getNewPage && !isMoreProfilesAvailable) {\r\n      return;\r\n    }\r\n\r\n    selector.offset = 0;\r\n    if (getNewPage) {\r\n      selector.offset = profiles.length;\r\n    }\r\n\r\n    if (NEW_FEATURES.workspaces) {\r\n      selector.workspaceId = workspaceId;\r\n    }\r\n\r\n    const transaction = Sentry.startTransaction({ name: 'load-profiles-table' });\r\n    selector.transaction = transaction;\r\n\r\n    const profilesReq = await requestProfiles(selector).catch(() => ({} as Partial<IProfilesResponse>));\r\n\r\n    const performanceObserverService = PerformanceObserverService.getInstance();\r\n    const findProxyInListSpan = transaction.startChild({ op: 'find-proxy-in-list' });\r\n    compareProxyInProfilesWithProxyList(selector.offset, profilesReq, proxyList).catch(console.info);\r\n    findProxyInListSpan.finish();\r\n\r\n    const responseStatesSpan = transaction.startChild({ op: 'handle-response-states' });\r\n\r\n    const {\r\n      profiles: receivedProfiles = [],\r\n      total: allProfilesCount = 0,\r\n      currentOrbitaMajorV = '',\r\n      currentBrowserV = '',\r\n      isFolderDeleted = false,\r\n      isMoreProfilesAvailable: receivedIsMoreProfilesAvailable = false,\r\n    } = profilesReq;\r\n\r\n    setIsMoreProfilesAvailable(receivedIsMoreProfilesAvailable);\r\n    if (isFolderDeleted) {\r\n      const selectedFolder = NEW_FEATURES.header ? selectedFolderFromCtx : localStorage.getItem('SelectedFolder');\r\n      updateSelectedFolder('');\r\n      localStorage.setItem(LOCAL_STORAGE_SELECTED_FOLDER, ALL_PROFILES_FOLDER);\r\n      const newFoldersList = foldersList.filter(folder => folder.name !== selectedFolder);\r\n      setFoldersList(newFoldersList);\r\n    }\r\n\r\n    setProfilesCount(allProfilesCount);\r\n    setCurrentBrowserV(currentBrowserV);\r\n    setCurrentOrbitaMajorV(currentOrbitaMajorV);\r\n\r\n    responseStatesSpan.finish();\r\n    const checkUaSpan = transaction.startChild({ op: 'check-profiles-ua' });\r\n    await checkProfilesUA(receivedProfiles, currentBrowserV, currentOrbitaMajorV);\r\n    checkUaSpan.finish();\r\n    const setProfilesSpan = transaction.startChild({ op: 'ui', description: 'set-profiles' });\r\n    performanceObserverService.setProfilesMark(transaction);\r\n\r\n    let updateType = 'reset';\r\n    let resultProfilesArray = receivedProfiles;\r\n    if (getNewPage) {\r\n      updateType = 'append';\r\n      resultProfilesArray = profiles.concat(receivedProfiles);\r\n    } else if (dropFileStep === 'loading') {\r\n      updateType = 'drop-loading';\r\n    }\r\n\r\n    if (!(getNewPage || dropFileStep === 'loading')) {\r\n      resetProfilesTableSelectedIds();\r\n    }\r\n\r\n    performanceObserverService.setLoadProfilesTags({ transaction, selector, prevProfiles: profiles, receivedProfiles, updateType });\r\n\r\n    const profileSharedViaLinkJson = sessionStorage.getItem(PROFILE_SHARED_KEY_NAME) || '';\r\n    resultProfilesArray = handleShareViaLinkFromStorage(resultProfilesArray, profileSharedViaLinkJson);\r\n    const profilesNormalized = normalizeProfilesData([...new Set(resultProfilesArray)]);\r\n    updateFullProfilesMap(profilesNormalized);\r\n    setProfilesList(profilesNormalized);\r\n\r\n    setProfilesSpan.finish();\r\n\r\n    const initRunStatusesSpan = transaction.startChild({ op: 'ui', description: 'init-run-statuses' });\r\n    upsertProfileRunStatuses(profilesNormalized.map(profile => ({ id: profile.id, status: 'profileStatuses.ready' })));\r\n    initRunStatusesSpan.finish();\r\n\r\n    const removeLoadingSpan = transaction.startChild({ op: 'ui', description: 'remove-loading' });\r\n\r\n    if (dropFileStep === 'loading') {\r\n      setDropFileStep('loaded');\r\n    }\r\n\r\n    setNeedParseName(false);\r\n    changeLoading(false);\r\n    checkProfilesStatus();\r\n\r\n    removeLoadingSpan.finish();\r\n  };\r\n\r\n  const checkProfilesStatus = (): Promise<void> => isElectron && ipcRenderer.invoke('check-profiles');\r\n\r\n  const manageProfileFoldersList = (profilesIds: string[], folderName: string, action: string): void => {\r\n    mapAndSetProfilesList((profilesPrev) => profilesPrev.map((profileObj) => {\r\n      if (!profilesIds.includes(profileObj.id)) {\r\n        return profileObj;\r\n      }\r\n\r\n      if (action === 'add') {\r\n        if (profileObj.folders && !profileObj.folders.includes(folderName)) {\r\n          profileObj.folders.push(folderName);\r\n        } else if (!profileObj.folders) {\r\n          profileObj.folders = [folderName];\r\n        }\r\n      }\r\n\r\n      if (action === 'remove' && profileObj.folders && profileObj.folders.includes(folderName)) {\r\n        profileObj.folders = profileObj.folders.map((el: any) => el !== folderName ? el : null).filter(Boolean);\r\n      }\r\n\r\n      if (profileObj.folders) {\r\n        profileObj.folders = profileObj.folders.sort();\r\n      }\r\n\r\n      refreshFullProfile(profileObj);\r\n\r\n      return profileObj;\r\n    }));\r\n  };\r\n\r\n  const updateTag = (tag: ITagBase): Promise<void> => {\r\n    const profiles = getProfilesList();\r\n    const profilesBackup: IProfile[] = [...profiles];\r\n    let newSelectedTagBackup: ITag|null = null;\r\n\r\n    if (selectedTag && tag.id === selectedTag.id) {\r\n      newSelectedTagBackup = {\r\n        ...selectedTag,\r\n      };\r\n    }\r\n\r\n    const tagsBackup = [...tags];\r\n    mapAndSetProfilesList(prevProfiles => {\r\n      const { newProfiles, updateRequired } = updateTagInProfiles({ profiles, tag });\r\n\r\n      return updateRequired ? newProfiles : prevProfiles;\r\n    });\r\n\r\n    profiles.forEach(profile => callProfilesTableRowMeasurer(profile.id));\r\n\r\n    if (selectedTag && tag.id === selectedTag.id) {\r\n      setSelectedTag(tag);\r\n    }\r\n\r\n    const updateTags = (currentTags: ITag[]): ITag[] => currentTags.map(currentTag => {\r\n      if (currentTag.id !== tag.id) {\r\n        return currentTag;\r\n      }\r\n\r\n      return {\r\n        ...currentTag,\r\n        ...tag,\r\n      };\r\n    });\r\n\r\n    setTags(updateTags);\r\n\r\n    const doUpdateTagRequest = async (newTag: ITag): Promise<void> => updateTagRequest(workspaceId, newTag)\r\n      .catch(() => {\r\n        setProfilesList(profilesBackup);\r\n        setTags(tagsBackup);\r\n\r\n        if (selectedTag && selectedTag.id === tag.id) {\r\n          setSelectedTag(newSelectedTagBackup);\r\n        }\r\n      });\r\n\r\n    const isUpdatingNewAddedTag = newAddedTag?.id === tag.id && newAddedTag.hasLocalId;\r\n    if (!isUpdatingNewAddedTag) {\r\n      return doUpdateTagRequest(tag);\r\n    }\r\n\r\n    newTagActionSubscription.current = { tag, doUpdateTagRequest };\r\n    setNewAddedTag(prev => ({\r\n      ...tag,\r\n      hasLocalId: prev?.hasLocalId,\r\n      field: prev?.field || 'tags',\r\n    }));\r\n\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const addTag = async (params: IAddTag): Promise<void> => {\r\n    const profiles = getProfilesList();\r\n\r\n    const {\r\n      profileIds,\r\n      title,\r\n      color,\r\n      tagId,\r\n      isNewAdded,\r\n      lastTempId,\r\n      field,\r\n    } = params;\r\n\r\n    const preparedTitle = title.trim();\r\n    const tempTag: ITag = {\r\n      id: `${new Date().getTime()}`,\r\n      title: preparedTitle,\r\n      color,\r\n      hasLocalId: true,\r\n      field,\r\n    };\r\n\r\n    if (!tagId) {\r\n      const tagInList = tags.find(tagItem => tagItem.title === preparedTitle && tagItem.field === field);\r\n      if (tagInList) {\r\n        tempTag.color = tagInList.color;\r\n      } else {\r\n        setNewAddedTag({\r\n          ...tempTag,\r\n          isNewAdded: true,\r\n        });\r\n      }\r\n    }\r\n\r\n    const shouldRemoveCustomStatuses = field === 'custom-status' && !isNewAdded;\r\n    const profilesBackup = [...profiles];\r\n    const tagsBackup = [...tags];\r\n    mapAndSetProfilesList(prevProfiles => {\r\n      let newProfiles: IProfile[];\r\n      let updateRequired: boolean;\r\n      let profilesToChange = prevProfiles;\r\n\r\n      if (shouldRemoveCustomStatuses) {\r\n        profilesToChange = removeCustomStatusesFromProfiles(prevProfiles, workspaceId, profileIds);\r\n      }\r\n\r\n      const tagChange: IAddTagToProfiles = {\r\n        profiles: profilesToChange,\r\n        targetProfileIds: profileIds,\r\n        tag: tempTag,\r\n        compareBy: 'title',\r\n      };\r\n\r\n      if (tagId) {\r\n        const newTag: ITag = { id: tagId, title, color, isNewAdded, field };\r\n        ({ newProfiles, updateRequired } = updateTagInProfiles({\r\n          ...tagChange,\r\n          tag: newTag,\r\n          appendIfNotFound: !isNewAdded,\r\n          compareBy: isNewAdded ? 'title' : 'id',\r\n        }));\r\n      } else {\r\n        ({ newProfiles, updateRequired } = addTagToProfiles(tagChange));\r\n      }\r\n\r\n      return updateRequired ? newProfiles : profilesToChange;\r\n    });\r\n\r\n    profileIds.forEach(profileId => callProfilesTableRowMeasurer(profileId));\r\n\r\n    if (tagId && isNewAdded) {\r\n      const newTag: ITag = {\r\n        id: tagId,\r\n        title: preparedTitle,\r\n        color,\r\n        field,\r\n      };\r\n\r\n      addNewTagToList(newTag);\r\n      if (lastTempId === prevTag.current) {\r\n        setSelectedTag(newTag);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const requestParams: IAddTagMethod = {\r\n      browserIds: profileIds,\r\n      title,\r\n      color,\r\n      field,\r\n    };\r\n\r\n    if (workspaceId) {\r\n      requestParams.workspace = workspaceId;\r\n    }\r\n\r\n    const addTagResponse = await addTagRequest(requestParams).catch<{ success: false }>(() => {\r\n      setProfilesList(profilesBackup);\r\n      setTags(tagsBackup);\r\n\r\n      return { success: false };\r\n    });\r\n\r\n    if (!addTagResponse.success || tagId) {\r\n      return;\r\n    }\r\n\r\n    const { id: apiTagId, isNewAdded: isTagCreated } = addTagResponse;\r\n    let { title: tagTitle, color: tagColor, field: tagField } = addTagResponse;\r\n    if (isTagCreated) {\r\n      if (newTagActionSubscription.current && !tagId) {\r\n        const { tag: tagFromSub, doUpdateTagRequest } = newTagActionSubscription.current;\r\n        ({ title: tagTitle, color: tagColor, field: tagField } = tagFromSub);\r\n        newTagActionSubscription.current = null;\r\n        doUpdateTagRequest({\r\n          id: apiTagId,\r\n          title: tagTitle,\r\n          color: tagColor,\r\n          field: tagField,\r\n        });\r\n      }\r\n\r\n      setNewAddedTag({\r\n        id: apiTagId,\r\n        title: tagTitle,\r\n        color: tagColor,\r\n        hasLocalId: false,\r\n        field: tagField,\r\n      });\r\n    }\r\n\r\n    await addTag({\r\n      profileIds,\r\n      title: tagTitle,\r\n      color: tagColor,\r\n      field: tagField,\r\n      tagId: apiTagId,\r\n      isNewAdded: isTagCreated,\r\n      lastTempId: tempTag.id,\r\n    }).catch(() => {\r\n      setProfilesList(profilesBackup);\r\n      setTags(tagsBackup);\r\n    });\r\n  };\r\n\r\n  const removeTag = async (tagId: string, isInSuggest: boolean): Promise<void> => {\r\n    const profiles = getProfilesList();\r\n\r\n    if (!isInSuggest) {\r\n      changeLoading(true);\r\n    }\r\n\r\n    if (selectedTag && selectedTag.id === tagId) {\r\n      setSelectedTag(null);\r\n      setProfileInEditTagsMode(null);\r\n    }\r\n\r\n    const tagsBackup = [...tags];\r\n    let profilesBackup: IProfile[];\r\n    mapAndSetProfilesList(prevProfiles => {\r\n      profilesBackup = [...prevProfiles];\r\n\r\n      return removeTagFromProfiles(profiles, tagId);\r\n    });\r\n\r\n    profiles.forEach(profile => callProfilesTableRowMeasurer(profile.id));\r\n\r\n    const updateTags = (currentTags: ITag[]): ITag[] => [\r\n      ...currentTags,\r\n    ].filter(tag => tag.id !== tagId);\r\n\r\n    setTags(updateTags);\r\n\r\n    await deleteTag(tagId, workspaceId).catch(() => {\r\n      if (!isInSuggest) {\r\n        changeLoading(false);\r\n      }\r\n\r\n      setProfilesList(profilesBackup);\r\n      setTags(tagsBackup);\r\n    });\r\n  };\r\n\r\n  const removeProfileTag = async (profileIds: string[], tagId: string): Promise<void> => {\r\n    let profilesBackup: IProfile[];\r\n    mapAndSetProfilesList(prevProfiles => {\r\n      profilesBackup = [...prevProfiles];\r\n      let newProfiles = removeTagFromProfiles(prevProfiles, tagId, profileIds);\r\n      let skipUpdateProfilesList = false;\r\n      if (selectedTag) {\r\n        newProfiles = findProfilesWithTag(newProfiles, selectedTag.id);\r\n        if (!newProfiles.length) {\r\n          skipUpdateProfilesList = true;\r\n          setSelectedTag(null);\r\n          setProfileInEditTagsMode(null);\r\n        }\r\n      }\r\n\r\n      return skipUpdateProfilesList ? prevProfiles : newProfiles;\r\n    });\r\n\r\n    profileIds.forEach(profileId => callProfilesTableRowMeasurer(profileId));\r\n\r\n    await deleteProfilesTag(profileIds, tagId, workspaceId).catch(() => {\r\n      setProfilesList(profilesBackup);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!workspaceId) {\r\n      return;\r\n    }\r\n\r\n    const fetchTags = async (): Promise<void> => {\r\n      const userTagsResponse = await getAllTags(workspaceId);\r\n\r\n      if (userTagsResponse.tags) {\r\n        setTags(userTagsResponse.tags);\r\n      }\r\n    };\r\n\r\n    fetchTags();\r\n\r\n    return () => {\r\n      setSelectedTag(null);\r\n    };\r\n  }, [workspaceIsLoaded, workspaceId]);\r\n\r\n  const downloadSpecificOrbitaVersion = async (orbitaVersion: string): Promise<void> => {\r\n    if (!orbitaVersion) {\r\n      return;\r\n    }\r\n\r\n    updateBrowserUpdater({\r\n      initialized: true,\r\n      browserUpdating: true,\r\n      showOrbitaDialog: false,\r\n    });\r\n\r\n    ipcRenderer && ipcRenderer.invoke('download-browser', { orbitaVersion });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (browserUpdating || isLoading || !isElectron) {\r\n      return;\r\n    }\r\n\r\n    ipcRenderer.invoke('get-orbita-browser-version')\r\n      .then((currentUserOrbitaV = '0.0.0') => {\r\n        setUserOrbitaV(currentUserOrbitaV);\r\n        const newProfiles = [...getProfilesList()];\r\n        checkProfilesUA(newProfiles, currentBrowserV, currentOrbitaMajorV, currentUserOrbitaV);\r\n        setProfilesList(newProfiles);\r\n        updateFullProfilesMap(newProfiles);\r\n      });\r\n  }, [browserUpdating, getProfilesList]);\r\n\r\n  if (isUpdatePage) {\r\n    return <UpdateProfilePage />;\r\n  }\r\n\r\n  const isNewShareProfileModal = !!(NEW_FEATURES.workspaces && NEW_FEATURES.header);\r\n\r\n  return (\r\n    <>\r\n      <ContainerDashboard\r\n        closeDrawer={closeProfilesSettings}\r\n      >\r\n        <Header\r\n          onSearch={updateOnSearch}\r\n        />\r\n        <BodyContainer>\r\n          <ContainerContent newStyle={!!NEW_FEATURES.header}>\r\n            {NEW_FEATURES.header ? null : (\r\n              <ContainerPreTable>\r\n                {\r\n                  (!selectedTag) ?\r\n                    (\r\n                      <ContainerTableName>\r\n                        <TextTableName>\r\n                          {translation('profiles.title')}\r\n                        </TextTableName>\r\n                      </ContainerTableName>\r\n                    ) : (\r\n                      <>\r\n                        <ContainerTableName>\r\n                          <TitleTag\r\n                            updateTag={updateTag}\r\n                            removeTag={removeTag}\r\n                          />\r\n                        </ContainerTableName>\r\n                      </>\r\n                    )\r\n                }\r\n              </ContainerPreTable>\r\n            )}\r\n            {isLoading || !tableSettingsLoaded || dropFileStep ? (\r\n              <SpinnerContainer>\r\n                <Icon type='loading' style={{ fontSize: 32, marginBottom: 16 }} />\r\n                {dropFileStep === 'importing' ? translation('profiles.importing.text') : null}\r\n                {dropFileStep === 'multipleCreating' ? translation('base.tableProfile.loading') : null}\r\n              </SpinnerContainer>\r\n            ) : (\r\n              <ProfilesTableQuick\r\n                profilesTableSettings={profilesTableSettings}\r\n                setProfilesTableSettings={setProfilesTableSettings}\r\n                setProfiles={setProfilesFnWithRef}\r\n                requestNewProfilesPage={updateProfilesList}\r\n                profilesCount={profilesCount}\r\n                foldersList={NEW_FEATURES.workspaces || NEW_FEATURES.header ? foldersListFromCtx : foldersList}\r\n                allProfilesFolderId={allProfilesFolderId}\r\n                manageProfileFoldersList={manageProfileFoldersList}\r\n                openFoldersModal={openFoldersModal}\r\n                browserUpdating={browserUpdating}\r\n                versionLoadingNow={versionLoadingNow}\r\n                countToScroll={COUNT_TO_SCROLL}\r\n                tableHeaderQuery={tableHeaderQuery}\r\n                addProfileToList={addProfileToList}\r\n                addProfilesToFolder={addProfilesToFolder}\r\n                removeProfilesFromFolder={removeProfilesFromFolder}\r\n                updateTag={updateTag}\r\n                removeTag={removeTag}\r\n                addTag={addTag}\r\n                removeProfileTag={removeProfileTag}\r\n                downloadSpecificOrbitaVersion={downloadSpecificOrbitaVersion}\r\n                selectedFolderFromCtx={selectedFolderFromCtx}\r\n                isOrbitaVersionCompatible={isOrbitaVersionCompatible}\r\n                lastWorkspaceId={workspaceId}\r\n                dropFileStep={dropFileStep}\r\n                updateSelectedProfileIds={updateProfilesTableSelectedIds}\r\n                onProfilesTableRowClick={onProfilesTableRowClick}\r\n                userLatestOrbitaVersion={userOrbitaV}\r\n              />\r\n            )}\r\n          </ContainerContent>\r\n        </BodyContainer>\r\n        <Helmet>\r\n          <title>\r\n            {translation('profiles.title')}\r\n            {' '}\r\n            - GoLogin\r\n            {' '}\r\n            {window.gologinAppVersion || ''}\r\n          </title>\r\n        </Helmet>\r\n      </ContainerDashboard>\r\n      <PageOverlay />\r\n      <FoldersManager\r\n        visible={isFoldersManagerVisible}\r\n        onClose={onCloseFolderModal}\r\n        folders={NEW_FEATURES.workspaces || NEW_FEATURES.header ? foldersListFromCtx : foldersList}\r\n        foldersSelected={foldersSelected}\r\n        setFoldersSelected={setFoldersSelected}\r\n        addProfilesToFolder={addProfilesToFolder}\r\n        removeProfilesFromFolder={removeProfilesFromFolder}\r\n      />\r\n      {!firstPlanSelected ? <QuickPricing /> : null}\r\n      <RemoveProfileModal />\r\n      <ProxyManager />\r\n      {isNewShareProfileModal ? <MultiShareModal /> : null}\r\n      <DraggingProfilesOverlay />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilesListPage;\r\n","import { getProfileFromStorage } from './get-profile-from-storage';\r\nimport { IProfile } from '../../../interfaces';\r\n\r\nexport const handleShareViaLinkFromStorage = (profilesOld: IProfile[], profileJson: string): IProfile[] => {\r\n  if (!profileJson) {\r\n    return profilesOld;\r\n  }\r\n\r\n  const profileSharedViaLink = getProfileFromStorage(profileJson);\r\n  if (!profileSharedViaLink) {\r\n    return profilesOld;\r\n  }\r\n\r\n  const profilesNew = [...profilesOld];\r\n  const profileExistingIndex = profilesOld.findIndex(({ id }) => id === profileSharedViaLink.id);\r\n  if (profileExistingIndex >= 0) {\r\n    profilesNew.splice(profileExistingIndex, 1);\r\n  }\r\n\r\n  profilesNew.unshift(profileSharedViaLink);\r\n\r\n  return profilesNew;\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const AddFirstProfileTitle = styled.span`\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n  color: var(--B5B5BA-profile-table);\r\n`;\r\n\r\nexport const FirstProfileButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 6px 12px;\r\n  gap: 8px;\r\n  width: fit-content;\r\n  height: 32px;\r\n  border: 1px solid var(--EBEBEB-profile-table);\r\n  border-radius: 16px;\r\n  margin: 32px auto auto;\r\n  cursor: pointer;\r\n`;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface IIconProfile {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst IconPerson: FunctionComponent<IIconProfile> = (props) => (\r\n  <div>\r\n    <svg width={props.width || '20'} height={props.height || '20'} viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <circle cx=\"10\" cy=\"10\" r=\"7.5\" stroke=\"var(--767676-icon-person)\"/>\r\n      <circle cx=\"10\" cy=\"9\" r=\"2.5\" stroke=\"var(--767676-icon-person)\"/>\r\n      <mask id=\"path-3-inside-1_4627_22403\" fill=\"var(--FFFFFF-icon-person)\">\r\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.798 15.5085C14.3404 17.0431 12.2803 18 9.99667 18C7.71306 18 5.65294 17.0431 4.19531 15.5085C5.21491 14.1448 7.42924 13.2 9.99667 13.2C12.5641 13.2 14.7784 14.1448 15.798 15.5085Z\"/>\r\n      </mask>\r\n      <path d=\"M15.798 15.5085L16.5231 16.1972L17.1041 15.5855L16.5989 14.9097L15.798 15.5085ZM4.19531 15.5085L3.39441 14.9097L2.88919 15.5855L3.47026 16.1972L4.19531 15.5085ZM15.073 14.8199C13.7963 16.164 11.9949 17 9.99667 17V19C12.5656 19 14.8845 17.9223 16.5231 16.1972L15.073 14.8199ZM9.99667 17C7.99841 17 6.19705 16.164 4.92037 14.8199L3.47026 16.1972C5.10882 17.9223 7.42772 19 9.99667 19V17ZM4.99621 16.1073C5.76223 15.0828 7.61785 14.2 9.99667 14.2V12.2C7.24063 12.2 4.66758 13.2069 3.39441 14.9097L4.99621 16.1073ZM9.99667 14.2C12.3755 14.2 14.2311 15.0828 14.9971 16.1073L16.5989 14.9097C15.3257 13.2069 12.7527 12.2 9.99667 12.2V14.2Z\" fill=\"var(--767676-icon-person)\" mask=\"url(#path-3-inside-1_4627_22403)\"/>\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nexport default IconPerson;\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","props","newStyle","css","_templateObject2","borderRadiusContainer","_ref","children","React","NEW_FEATURES","onClick","closeDrawer","updateTagInProfiles","_ref2","profiles","tag","targetProfileIds","compareBy","appendIfNotFound","updateRequired","newProfiles","map","profile","find","profileId","id","foundInProfile","profileTags","tags","newProfileTags","profileTag","field","_objectSpread","removeTagFromProfiles","tagId","arguments","length","undefined","filter","defaultColumnsSettings","name","visible","width","status","Boolean","localStorage","getItem","notes","customStatus","lastUpdate","lastLaunch","createdAt","sharing","proxyType","proxy","proxyPort","proxyUsername","proxyPassword","os","orbitaVersion","getDefaultColumnsSettings","columnsSettings","showNotes","showStatus","showProxy","isMoreProfilesAvailableAtom","atom","getIsMoreProfilesAvailable","getDefaultStore","get","InfiniteScrollProfilesTable","dataLength","initialScrollY","loader","next","isMoreProfilesAvailable","useAtomValue","InfiniteScroll","hasMore","style","overflow","scrollableTarget","TAG_FIELDS","addTagRequest","_asyncToGenerator","params","http","concat","API_BASE_URL","method","body","JSON","stringify","_x","apply","updateTagRequest","workspaceId","toSend","workspace","_x2","_x3","deleteTag","_ref3","query","URLSearchParams","_x4","_x5","deleteProfilesTag","_ref4","profileIds","browserIds","_x6","_x7","_x8","normalizeTags","_id","searchTags","_ref5","text","q","_x9","_x10","getAllTags","_ref6","_x11","height","viewBox","fill","xmlns","d","stroke","strokeLinecap","strokeLinejoin","marginRight","marginTop","pink","fontColor","borderColor","yellow","green","blue","lightgrey","peach","lime","turquoise","lilac","grey","ColorContainer","allowRemove","isDarkTheme","ColorWrapper","_templateObject3","_templateObject4","ColorBlock","_templateObject5","_templateObject6","color","RemoveColorBtn","_templateObject7","Checkmark","_templateObject8","TitleForm","_templateObject9","TitleInput","_templateObject10","removeTag","close","updateTag","allowChangeTitle","title","setTitle","theme","useCurrentTheme","t","translation","useTranslation","getSelectedThemeColor","setTagColor","newColor","handleInputChange","event","target","value","handleSubmit","preventDefault","trim","handleBlur","className","onSubmit","maxLength","onChange","onBlur","Object","entries","colors","key","colorObject","handleClick","marginLeft","IconRemove","TagItemBody","isAddMode","inAllProfiles","TagItemContainer","RemoveBtn","handleMouseEnter","handleMouseLeave","innerRef","tagColors","onMouseEnter","onMouseLeave","ref","e","stopPropagation","TagSuggest","TagSuggestItemLeft","EditTagBtn","isOpen","CheckIconBlock","TagsColorContainer","alreadyAdded","removeProfileTag","addTag","closeTagsPopup","setTagEditorVisible","tagsContext","permissions","workspaceContext","allowEditTags","removeTags","editTags","wrapperRef","anchorEl","setAnchorEl","editorOpen","currentTarget","handleClickOutside","current","contains","document","addEventListener","removeEventListener","onSuggestClick","TagListItem","IconCheck","IconDotsHorizontal","Popper","open","zIndex","placement","TagsColors","AddNewTagBtn","isBulkMode","tagsSuggestsLength","TagInput","SuggestContainer","NewTagTitle","AllProfilesSuggestTitle","TagsContainer","Form","_templateObject11","TagsSizingContainer","_templateObject12","isBulkOperation","currentTags","allGlobalTags","newAddedTag","setNewAddedTag","setProfileInEditTagsMode","useMemo","input","containerElement","setColor","removeTagMode","setRemoveTagMode","tagsSuggests","setTagsSuggests","timerId","setTimerId","callAddTag","newTagTitle","resetState","focus","currentTagsSuggests","globalTag","addNewTextKey","clearTimeout","val","setTimeout","suggestions","foundTags","suggestedTag","currentTagsList","tagsStartsWith","otherTags","preparedVal","toLocaleLowerCase","el","startsWith","push","handleKeyDown","handleKeyUp","lastTag","slice","addPlaceholderKey","placeholder","onFocus","onKeyDown","onKeyUp","disablePortal","modifiers","preventOverflow","enabled","TagSuggestItem","tagSuggest","_Icon","type","TagInfoContainer","TagInfoBlock","TagInfo","profilesList","profilesWithTag","setSelectedTag","anchorColorEl","setAnchorColorEl","anchorInfoEl","setAnchorInfoEl","tagUsage","setTagUsage","colorOpen","infoOpen","tagBlock","handleClickAway","tagInfoText","tagTitle","profilesCount","ClickAwayListener","onClickAway","EditModeTagsWrapper","index","Tag","isLastTag","AddTag","TitleEditTags","profileList","selectedRows","filteredProfiles","filteredProfilesArr","reduce","acc","profileFromList","tagsArr","inAllProfilesTags","resTag","tagItem","arrName","EditModeTags","isProcessing","ButtonLine","Row","MultipleOperationBtnText","useProfilesList","anchorEditTagsEl","setAnchorEditTagsEl","useState","isPopperOpen","disabled","MultipleTagsPopper","editModeProfileIdAtom","proxyElementLocationAtom","setProxyElementLocation","set","updateEditModeProfileId","openProxyManagerListView","resetSelectedProxies","checkCompetitorsForMigration","migrationData","ipcRenderer","checkResult","invoke","catch","isDolphinChecked","requestBody","updateMigrationData","strokeWidth","cx","cy","r","version","x","y","Item","CloseBtnContainer","profileProxyComponent","profileName","onDelete","memo","createProxyRequest","getWorkspaceIdFromStorage","url","URL","searchParams","append","toString","createProxiesRequest","proxies","updateProxyRequest","deleteProxiesRequest","saveProxy","_ref7","newProxy","proxyId","proxyItem","checkProxy","error","handleProxiesLimitError","upsertOneProxy","statusParams","getProxyStatusParams","updateProxyItem","checkDate","moment","toDate","checkInProgress","setProxyStatuses","country","city","unix","lastIp","origin","addMultipleProxies","proxyList","addedProxies","newProxies","upsertedProxies","_loop","existingProxy","err","console","log","updatedProxies","showInfo","_loop2","proxyWasChanged","showInfoAfterCheck","unshift","updateProxyList","_loop3","_newProxy","updateProxies","profilesProxies","ProfilesContainer","SubmitBtn","_Button","TextArea","_Input","AutoProxyForm","selectedProfiles","setSelectedProfilesIds","closeModal","setProxyList","isLoading","setIsLoading","proxyListData","useProxyList","renderInsertedProxy","includes","proxyRenderer","proxyMode","mode","username","password","host","port","arr","proxyRegion","toUpperCase","join","renderBaseProxy","normalizeProxyInTextarea","parsedProxies","proxyFromText","savedProxies","toLowerCase","validProfilesProxy","_selectedProfiles$ind","profilesIdsWithoutProxy","invalidProfilesIds","forEach","p","profilesForSetting","_","history","_message","tNotification","profilesForUpdate","normalizedProxyList","ProfileProxy","selectedProfilesAfterDelete","i","proxyListAfterProfileDelete","onProfileDelete","rows","formattedValue","replace","proxyArray","split","_Divider","loading","MultipleProxyManager","selectedProfileIds","useProfilesTableSelectedIds","onClose","_Modal","footer","onCancel","updateProfilesTableSelectedIds","DEFAULT_BORDER_COLOR","SaveButton","CancelButton","profilesIds","profileBookmarks","setProfileBookmarks","handleOnBookmarksTextChange","saveBookmarks","newBookmarks","parseBookmarksTxtToObj","editProfilesListFields","bookmarks","updateBookmarksMultipleProfiles","ModernModal","BookmarksTextArea","display","justifyContent","Col","IconSharing","IconUser","TextSharing","RowSpaceBetween","UserIconContainer","CloseIconContainer","UserContainer","ButtonSharing","TextEmail","shareProps","loadingInvites","changeInvitesLoading","invites","setInvites","selectedRole","changeSelectedRole","hasTrial","plan","useContext","userContext","insertedEmail","changeInsertedEmail","getInvites","shareMultipleProfiles","requestProfileInvites","useEffect","removeInvite","removeProfileInvite","then","finally","changeUserRole","role","updateInviteRole","sendInvite","Promise","resolve","shareMultipleProfilesToOneUser","shareProfile","User","GetRole","changeGetRole","email","menuChangeRole","_Menu","inviteId","_Dropdown","overlay","trigger","cursor","paddingTop","showIcon","menu","priceForMonth","_Tooltip","destroyOnClose","afterClose","marginBottom","fontSize","textAlign","to","RadioGroup","_Radio","RadioButton","ErrorText","InputEmail","TransferModal","ConfirmTitleText","ConfirmContentText","ConfirmBlock","transferOkButtonProps","padding","position","bottom","right","transferCancelButtonProps","onTransfer","workspaceCtx","userId","targetEmail","setTargetEmail","emailErrorText","setEmailErrorText","transferType","setTransferType","selectedWorkspaceId","setSelectedWorkspaceId","selectedFolder","setSelectedFolder","getFolders","sendActionAnalytics","updateAvailableWorkspacesFolders","sendTransfer","targetWorkspaceId","count","bodyStyle","paddingBottom","size","defaultValue","LabeledElement","SelectWorkspace","isOwnerOnly","needFoldersList","GreenSubmitButton","margin","isEmailValid","confirmText","modal","icon","content","okText","cancelText","okButtonProps","cancelButtonProps","destroy","keyboard","maskClosable","transferConfirm","requestProfileInfo","updateProfile","profileData","updateNoises","updateMultipleFingerprints","updateData","isElectron","window","require","launchProfileWeb","rowInfo","sendUserEventToServer","upsertProfileRunStatuses","localWorkspace","localWorkspaceId","parse","remoteOrbitaUrl","statusMessage","startContainer","isWeb","stopProfileOrbita","WINDOW_REFERENCES","getWindowReference","profileIdToFind","referenceObject","reference","closed","openCloudBrowserUrlInSingleTab","windowReference","addWindowReference","stopProfileWeb","isMultiple","getProfilesTableSelectedIds","selectedProfileId","closeCloudBrowserUrlInSingleTab","stopContainer","__ANT_BUTTON","BlockLine","isVisible","isProxyManagerVisible","ButtonLineRed","MarginBlock","isOpenProfileSSettings","BlockEnd","LoaderDiv","isProfilesSettingsOpen","useIsProfilesSettingsOpen","selectedProfilesIds","selectedProfilesActions","getProfilesTableSelectedProfilesActions","runningProfilesCount","runningProfilesCountAtom","showSharingModal","changeShowSharingModal","showTransferModal","changeShowTransferModal","changeProcessing","showExportPayPopUp","setShowExportPayPopUp","isShowProxyManager","setIsShowProxyManager","disableSharing","changeDisableSharing","extensionsModalVisible","setExtensionsModalVisible","isShowBookmarksManager","setIsShowBookmarksManager","isShowImportDolphinModal","setIsShowImportDolphinModal","multipleLaunched","setMultipleLaunched","launchProfileOrbita","refreshPageByTimeout","isNewShareProfileModal","hasSuccessPayment","isQuickSettingsEnabled","editModeProfileId","selectedTemplate","templatesContext","isUnpaid","workspaceIsUnpaid","paymentIsTrial","workspaceIsTrial","setManyProfilesName","setNeedOpenSpintaxPopup","importFilesContext","EscapePressListener","on","removeAllListeners","prev","resetProfilesTableSelectedIds","closeProfilesSettings","deleteOrLeaveMultipleProfiles","promises","profileIdsToDelete","getSelectedProfilesByAction","deleteWorkspaceProfiles","deleteProfiles","profilesForLeave","removeMultipleInvites","shareId","removedProfileIds","profileSettingsState","getProfilesSettingsState","removedProfileId","all","updateProfilesList","cloneProfile","cloneWorkspaceProfiles","cloneProfileMulti","exportProfile","canExportProfiles","filterProfilesByPermission","response","exportWorkspaceProfiles","profilesExport","saveFileElement","createElement","outputFile","Blob","date","utc","format","href","createObjectURL","download","click","redirectToSite","openWebsitePricing","isShowPaymentMethods","updateFingerprints","resolution","screen","newProfilesData","instanceIds","template","updateProfileFingerprints","toggleModalTransfer","state","doTransferProfiles","transferParams","toggleModalSharing","canShareProfiles","openProfileTableModal","SHARE_MODAL_NAME","closeProfileTableModal","limitForLaunch","isStartDisabled","getBrowserMajorVersionCurrent","userAgent","getBrowserVersionCurrent","majorVersion","filterOrbitasVersionsAvailable","majorVersions","isProfileAvailableToRun","profileRunStatus","getProfileRunStatus","canBeRunning","chromeVersionMatch","navigator","match","Number","versionLoadingNow","isProfileVersionLoading","getAvailableToRunProfiles","_ref8","transaction","span","startChild","op","availableToRunProfiles","profilesMajorVersions","profilesMajorVersionsUnique","Set","orbitasVersionsAvailable","finish","startProfiles","_ref9","Sentry","spanUpdateState","getProfilesList","profilesSelected","_ref10","iconsStartDataMassOps","generateBrowserIconsMassOpsPromise","multipleLaunch","updateStatusToSync","skipOrbitaVersionCheck","iconsStartData","buttonMassRun","onClickAction","renderButtonMassRun","IconAddMembersGreen","openFoldersModal","IconAddFolder","EditTagsMenuBtn","_Popconfirm","onConfirm","IconFinger","IconDeleteProfile","isBrowserUpdating","_document$getElementB","openProfilesSettingsOfSelectedIds","rename","DEFAULT_MANY_PROFILE_NAME","getElementById","ShareModal","TransferProfileModal","ExtensionsModal","updateProfileInfo","changeProfilesData","ProfileBookmarksModal","ImportDolphinProfilesModal","onResize","resizeStart","minWidth","resizeEnd","restProps","_objectWithoutProperties","_excluded","Resizable","minConstraints","handle","onResizeStart","onResizeStop","draggableOpts","enableUserSelectHack","IconMeatballsContainer","_styled","label","isInDrawer","DrawerDotsButton","styles","PricingModal","opacity","TabsFolder","_Tabs","changeTab","changeSelectedFolder","foldersList","activeKey","defaultActiveTabKey","tab","folderElem","shared","CheckProxyBtnContainerEl","hideDot","tooltipVisible","ProxyStatusDot","FormIcon","TooltipEl","TooltipWrapperEl","ProxyFormContainerEl","addMaxWidth","isEditProxy","ProxyFormEl","ProxyButtonsContainerEl","editProxyMode","ProxySearchInputEl","newDrawer","truncate","isTransparent","ProxyWidthLimitterEl","takeAllWidth","ProxyWrapperSectionEl","flagIcons","ProxyWrapperEl","isNoProxy","ProxyHeightLimitterEl","ProxyAreaEl","TableProfile","_Table","textFont","isError","GologinTableContainer","GologinTableItemList","GologinTableItemCell","GologinTableHeaderContainer","ResizableHandle","GologinTableHeaderColumnContainer","GologinTableHeaderColumnContent","CheckboxContainer","hasPadding","TagPlaceholder","AddTagTxt","showPlaceholder","setIsAddMode","NotesContainer","AddNotesContainer","ContainerNameCol","isProxy","ContainerSettings","SharedValueContainer","IconWrapperWithDescription","RowNameFolder","TextNameFolder","MarginIcon","ProfilesTabsContainer","RawProfileRow","dropPosition","isDragging","TextCell","profileAtom","proxyRes","_proxyMode$","getFormatProxyMode","torProxyRegion","autoProxyRegion","renderProxy","paramName","PROFILE_RUN_DEEP_LINK_EVENT_NAME","PROFILE_SHARE_DEEP_LINK_EVENT_NAME","onProfilesTableRowClick","rowIndex","_getDefaultStore$get","_profilesList$rowInde","basicTableProfile","getBasicTableProfiles","rowProfileId","currentProfileId","profileIdToOpen","openProfilesSettings","updateProfileStatus","newProfileStatus","message","onUserChangeSelectedProfiles","newSelectedRowKeys","selectedProfilesCount","PerformanceObserverService","handleUserAction","userAction","newSelectedProfileIds","idx","transform","getProfileForLink","profileIdOrName","requestProfileFingerprint","requestProfiles","search","offset","decodeURIComponent","SHARE_LINK_PROFILE_STRINGIFY_ERROR","SELECTED_FOLDER_KEY","DEFAULT_FOLDER_VALUE","handleShareViaLinkFromEvent","defaultWorkspace","addProfileFirstToList","updateSelectedFolder","userCtx","isUpdatePageRoute","sessionStorage","setItem","PROFILE_SHARED_KEY_NAME","PROFILE_LIST_PAGE","workspaceIdInStorage","workspaceInfoJson","querySelector","ReactError","replaceAll","scope","setLevel","setTransactionName","setFingerprint","switchWorkspace","getProfileFromStorage","profileJson","profileSharedViaLink","removeItem","DEEP_LINKS_REDIRECT_ORIGIN","updateProfileName","info","updateProfileNotes","updateProfileProxy","updateProfileGeolocation","geolocation","updateProfileTimezone","timezone","refreshFingerprintRequest","browsersIds","_x12","_x13","fetchPatchProfileLanguage","_ref14","language","autoLang","fetchBody","_x18","_x19","_x20","updateProfileResolution","_ref15","_x21","_x22","DrawerProfileHeaderButtons","NewStyleText","DrawerTrustworthy","DrawerBackdropContainer","useProxyManagerState","profileInEditTagsMode","closeProxyManager","IconContainer","strokeMiterlimit","LoaderContainer","LoaderLabel","Loader","IconSpinnerAutosave","IconSuccessAutosave","timeout","loaderStatusTimeout","ArrowDrawer","InputDiv","IpInput","SliderDiv","SubTitle","ElementContainer","TitleContainer","TittleSetting","Subtitle","GEOLOCATION_SETTINGS","latitude","longitude","accuracy","fillBasedOnIp","DrawerGeolocation","loaderStatus","setLoaderStatus","_props$profileInfo","_props$profileInfo$ge","_props$profileInfo2","_props$profileInfo2$g","_props$profileInfo3","_props$profileInfo3$g","_props$profileInfo4","_props$profileInfo4$g","_props$profileInfo5","_props$profileInfo5$g","profileInfo","_props$profileInfo13","_props$profileInfo13$","_props$profileInfo14","_props$profileInfo14$","_props$profileInfo15","_props$profileInfo15$","_props$profileInfo16","_props$profileInfo16$","_props$profileInfo17","_props$profileInfo17$","_props$profileInfo18","_props$profileInfo18$","_props$profileInfo19","_props$profileInfo19$","_props$profileInfo8","_props$profileInfo8$g","save","_props$profileInfo6","_props$profileInfo7","updateTimeout","onModeChange","onLatitudeChange","onLongitudeChange","geoOptionContainer","_props$profileInfo9","_props$profileInfo9$g","_props$profileInfo10","_props$profileInfo10$","_props$profileInfo11","_props$profileInfo11$","_props$profileInfo12","_props$profileInfo12$","_Col","_Row","_Switch","defaultChecked","checked","fontWeight","changeVisibility","overlayStyle","backgroundColor","arrowPointAtCenter","_Slider","step","min","dots","v","ProfileButton","ButtonStop","ButtonRun","DrawerButtonRun","DrawerButtonStop","browserUrl","focusOrbita","_window","appVersion","gologinAppVersion","shell","openExternal","sendStats","onProfileLaunched","ButtonRunProfile","_profile$navigator","automation","browserUpdating","isOldDrawer","useProfileRunStatus","onRunClick","ViewProfileButton","background","borderRadius","minHeight","alignItems","BtnRunProfile","renderDropDownMenu","trustworthyPopover","fontFamily","RunProfileButton","colorIconType","iconColor","iconHoveredColor","textColor","textHoveredColor","iconType","IconSettings2","_Popover","IconShield","styleType","IconTrustworthy","TittleSettingSave","TableLanguage","DrawerLanguage","dataSource","rowSelection","selectedRowKeys","rowKey","pagination","scroll","dataIndex","sorter","a","b","sortAlphabet","IconCopyProxyInDrawerStyle","saveTimeout","ProxyCheckResultDiv","CountryFlagContainer","IconClearForm","TitleTooltipIcon","TitleTooltipIconClear","ContainerTooltipIconClear","TittleInput","_templateObject13","ContainerIcon","_templateObject14","PROXY_CHECKED_INIT","PROXY_SETTINGS","changeIpUrl","wasSaved","proxyUpdateCounter","DrawerProxy","changeLoading","checkButtonDisabled","setCheckButtonDisabled","proxyChecked","setProxyChecked","modeState","setModeState","setUsername","setPassword","setChangeIpUrl","setHost","setPort","isProxyCheckInterrupted","setIsProxyCheckInterrupted","result","getCheckProxy","clearProxy","setPasteProxy","dataProxy","updateProfileInfoProxy","updateSaveTimeout","onModeChanged","onHostChanged","onPortChanged","onUsernameChanged","onPasswordChanged","onChangeIpUrlChanged","onAutoProxyRegionChanged","selectedRegionGologin","onTorProxyRegionChanged","selectedRegionTor","_props$profileInfo$pr","_props$profileInfo2$p","_props$profileInfo3$p","_props$profileInfo4$p","_props$profileInfo5$p","_props$profileInfo6$p","_props$profileInfo7$p","_props$profileInfo8$p","_props$profileInfo9$p","flexDirection","_Select","IconCopyProxyInDrawer","showProxyManager","IconSelectProxyInDrawer","compact","borderLeft","pointerEvents","onSelect","getUnicodeFlagIcon","Option","TIMEZONE_SETTINGS","DrawerTimezone","_props$profileInfo7$t","onTimezoneChange","tz","_props$profileInfo3$t","_props$profileInfo4$t","_props$profileInfo5$t","_props$profileInfo6$t","showSearch","optionFilterProp","TIMEZONES","localeCompare","elem","timezoneName","IconRemoveFolderFromRowStyle","cookiesTxt","setCookiesTxt","cookiesBorderColor","setCookiesBorderColor","DEFAULT_COOKIES_BORDER_COLOR","setPlaceholder","cookiesButtonDisabled","setCookiesButtonDisabled","cookiesModalVisible","toggleCookiesManagerModal","toggleCookiesListModal","onDragOver","handleDrop","files","dataTransfer","parseFileList","file","parseFile","reader","FileReader","readAsText","onload","cookiesButtonDisabledToggle","cookiesBorderColorToggle","getFormattedCookies","onerror","closeCookiesModal","saveProfileCookies","cookiesJson","updateProfileCookies","cookiesLength","hiddenFileInput","handleUploadClick","_hiddenFileInput$curr","handleUploadChange","filesUploaded","CookiesManagerModal","saveCookies","cookiesSettings","JsonTitleTxt","DrugAndDropCookiesContainer","onDrop","IconCookiesDrop","CookiesTextArea","txt","changeCookiesTxt","cookiesList","setCookiesList","cookiesManagerModalVisible","setCookiesManagerModalVisible","cookiesListModalVisible","onCookiesRequest","getCookiesList","getCookiesListRequest","getProfileCookies","left","modalOpenImport","removeCookies","cleanCookies","showTable","exportCookies","fullCookies","renderTitle","wrapClassName","ButtonImport","paddingLeft","ghost","locale","emptyText","render","expirationDate","CookiesManager","ProfileSettingsDrawer","_Drawer","ContentContainer","SettingsSectionsContainer","GreyDarkTextContainer","hasCursorPointer","ContainerParams","ContainerParamsColumn","ContainerSpaceBetween","SelectArrowContainer","SeparatedContainer","ContainerParamsNote","AreaNoteBorder","parentHeight","DrawerNameParams","DrawerNameParamsContainer","DrawerParams","ContainerWebGLData","SubContainerWebGL","ContainerUserAgentData","FingerprintResultContainer","FontsSpan","ProfileNameContainer","shouldWrapText","SortableItemWrapper","ContainerSubRow","hasGap","hasMarginTop","SectionName","ArrowContainer","CollapseContainer","animation","isAlwaysOpen","shouldMount","setShouldMount","useRef","requestIdleCallback","PINNED_SETTINGS","OVERVIEW_SETTINGS","BROWSER_SETTINGS","STORAGE_SETTINGS","HARDWARE_SETTINGS","ANDROID_HARDWARE_SETTINGS","SECTIONS_TITLE","DEFAULT_SECTIONS","pinned","items","overview","browser","storage","hardware","sectionId","section","toggleSection","IconArrow","settings","setting","useProfilesSettingsState","isMultiProfileSettings","settingKey","item","localSettingId","localProxySelectorLocation","localisationKeys","folders","cookies","fingerprint","webRTCPublic","customDns","useragent","startUrl","extensions","fonts","activeSessionLock","sessionSaving","browserHistorySaving","browserBookmarkSaving","googleServices","passwordSaving","localStorageAndIndexedDB","browserPlugins","extensionStorage","externalExtensions","deviceMemory","hardwareConcurrency","mediaDevices","canvas","webglImage","webglMetadata","audioContext","maxTouchPoints","Draggable","draggableId","provide","dragHandleProps","onOpen","IconPlusFill","NOTES_COLORS","lightNote","darkNote","replaceNotesColors","useCallback","beforeColor","afterColor","formats","handleLinebreak","selection","this","quill","getSelection","insertText","setSelection","modules","toolbar","container","handlers","bindings","linebreak1","shortKey","handler","linebreak2","shiftKey","enter","blur","isEditing","quillRef","ReactQuill","defaultOptions","ALLOWED_TAGS","ALLOWED_ATTR","html","options","divProps","_extends","dangerouslySetInnerHTML","__html","DOMPurify","NOTES_PROPS","SanitizeHTML","stripTags","str","elementRef","setHeight","resizeObserver","ResizeObserver","entry","contentRect","observe","disconnect","Notes","profileNotes","saveProfileNotes","location","isDefaultNotes","onHeightPossibleChange","defaultState","setNotes","notesStatus","setNotesStatus","notesContainerRef","notesContainerHeight","useElementHeight","useNotesColorReplace","areNotesPresent","defaultNotes","_quillRef$current","_quillRef$current$edi","editor","root","setAttribute","useLayoutEffect","_quillRef$current2","_quillRef$current2$ed","classList","remove","handleFocus","prevNotesStatus","_quillRef$current3","_quillRef$current3$ed","add","handleDivBlur","relatedTarget","strippedString","resValue","toggleHover","prevStatus","onMouseOver","AddNotesPlaceholder","getEditor","StaticNotes","QuillNotes","prevProps","nextProps","StyledSwitch","Switch","StyledFormControlLabel","FormControlLabel","control","afterChecked","labelPlacement","ActiveSessionLock","changeSetting","lockEnabled","ModernSwitch","Resolution","selectedResolution","isAndroidProfile","selectItems","ANDROID_RESOLUTIONS","RESOLUTIONS","ModernSelect","currentValue","itemList","onSelected","popoverWidth","popoverMaxHeight","onSelectOpen","Canvas","titleSelect","noise","off","block","CANVAS_MODES","canvasMode","DescriptionContainer","IconPasteContainer","LanguageParamContainer","Language","profileLanguage","profileAutoLang","isFreeOrTorProxy","localUserDevice","useLocalUserDevice","languages","realLocalLanguages","realLocalCountry","isLocalesManagerVisible","setIsLocalesManagerVisible","languagesBasedOnIp","setLanguagesBasedOnIp","anchorElTooltip","setAnchorElTooltip","proxyFromCtx","proxyFromList","getData","languagesByBasedIp","getLanguageByBasedIp","refreshLocalUserDevice","separatedLanguages","checkDoesLangExist","onPasteLanguage","languageFromClipboard","clipboard","readText","currentLang","order","lastIndex","combinedLanguages","doesLangExist","orderLang","endsWith","lang","textOverflow","IconPaste","TooltipCustom","LocalesManager","localesModalVisible","toggleLocalesListModal","getUserFonts","families","getFontsList","Fonts","profileFonts","setFonts","fontsModalVisible","setFontsModalVisible","systemFonts","setSystemFonts","resultFonts","getSystemFonts","resultSystemFonts","updateFonts","newFonts","fontsDataLength","enableMasking","FontsManager","updateFontsList","onOk","newFontFamilies","fontElem","AudioContext","AUDIO_CONTEXT_MODES","audioContextMode","BrowserBookmarkSaving","BrowserHistorySaving","BrowserPlugins","enableVulnerable","plugins","NoCookiesSpan","CookiesWrapper","CookieItemContainer","CookieCountContainer","Cookies","cookiesLoading","showModalCookies","cookie","FINGERPRINT_REFRESH_TIMEOUT","SettingsInput","ContainerCloseIcon","InputTitle","InputContainer","CustomDns","dns","userDns","setUserDns","isEdit","setIsEdit","inputRef","handleHotkey","_inputRef$current","onKeyPress","select","autoFocus","DeviceMemory","DEVICE_MEMORY","memory","ExtensionStorage","ExternalExtensions","enableExternalExtensions","IconCheckFingerprint","IconWrapper","Fingerprint","isFingerprintResult","setIsFingerprintResult","isFingerprintRefreshing","setIsFingerprintRefreshing","updateStateProfile","refreshFingerprint","propsToFingerprint","newFingerprints","newFingerprint","webGLMetadata","webGLMetadataMode","vendor","renderer","IconSpin","hasSpin","groupTitle","isSearchIgnored","GEOLOCATION_SELECT_DATA","Geolocation","profileGeolocation","data","setData","setGeolocation","timezoneLocation","getTimezoneByBasedIp","automaticTitle","hasOpenCoordinates","isCustomCoordinates","saveGeolocation","minAccuracy","onKeyPressInput","currentValueFromSelectItems","_GEOLOCATION_DATA$fin","profileLatitude","profileLongitude","selectedCity","GEOLOCATION_DATA","isBasedOnIp","countryByIp","cityByIp","selectTitle","subItem","subValue","renderSelectTitle","selectedLocation","latitudeFromFoundLocation","longitudeFromFoundLocation","hasSearch","maxWidth","_selectItems$find","descriptions","renderDescription","_geolocation$type","charAt","test","onGeolocationChanged","renderGeolocationData","GoogleServices","googleServicesEnabled","HardwareConcurrency","HARDWARE_CONCURRENCY","LocalStorageAndIndexedDB","indexedDb","local","MaxTouchPoints","MAX_TOUCH_POINTS","maxTouchPoint","defaultDevice","videoInputs","audioInputs","audioOutputs","userDeviceInfo","MediaDevices","profileMediaDevices","isEditModeOpened","setIsEditModeOpened","setMediaDevices","getUserMedia","userMediaDevices","enumerateDevices","allDevice","device","kind","saveMediaInfo","flexWrap","renderMediaInfo","inputsData","onMediaDeviceChanged","renderInputMediaDevices","PasswordSaving","passwords","sendPastedProxies","clipboardText","profileInEditProxyMode","parseMultipleProxies","deleteProxies","proxyIdsToDelete","proxyIds","removeProxiesFromList","mapAndSetProfilesList","prevProfiles","proxyEnabled","PROXY_EMPTY","updateSelectedProxies","selectedProxies","selectedProxy","selectProfileProxy","_profileInfo$proxy","prevProfileProxyId","noNeedToUpdate","incrementProxyProfilesCount","decrementProxyProfilesCount","prevProfilesList","customName","setProfilesList","unselectProfileProxy","EMPTY_PROXY","pasteProxies","getProxyManagerState","getProxyList","pastedProxy","tooltipContent","tooltipTrigger","setTooltipVisible","mouseEnterDelay","onVisibleChange","ProxyInfoContainerEl","ProxyInfoButtonsEl","ProxyInfoRowEl","ProxyInfoUpdatedAgoEl","danger","ProxyStatusDotContainerEl","ProxyStatusIconEl","ChangeIpBtn","RemoveBtnContainerEl","ReadMoreBtnEl","IconArrawDown","ErrorTextEl","ErrorDetailsEl","ErrorDetailsListEl","ErrorDetailsListItemEl","ReadMoreBlockEl","readMore","setReadMore","errorTranslation","howToFixList","ProxyListItemEl","ProxyListItemInnerEl","ProxyButtonEl","success","RemoveButtonEl","ProxyFlagBlockEl","isFailed","currentProxy","closeTooltip","isInForm","setIsChecking","updateProxyStatus","localProxyElementLocation","isSharedProxy","onProxyInfoEditClick","noProxyBtnVisible","setNoProxyBtnVisible","freeProxies","useFreeProxies","shouldShowEditButton","isInvisible","i18n","checkedAgo","fromNow","_proxy$torProxyRegion","countryString","proxyCountry","_proxy$autoProxyRegio","countries","code","handleEditClick","openProxyManagerEditView","changeIp","sendChangeIpRequest","handleNoProxyClick","isCurrent","checkIsCurrent","isTorOrFree","freeProxy","region","getProxyStatus","IconWarningTr","renderCheckDate","ProxyInfoError","ProxyIconBtnWithTooltip","IconCloseCurrentColor","IconCheckCircle","IconProxyPencil","updateInForm","saveProfileProxyStatus","isInTable","showTooltipCheckProxy","setShowTooltipCheckProxy","btnVisible","setBtnVisible","isChecking","setShowInfoAfterCheck","tooltipRef","showSpinner","openTooltip","skipRowNode","_rowNode","_rowNode2","rowNode","closest","savingResult","updateParams","shouldAddInvisible","updateParamsSharedProxy","updateSharedProxyInfo","checkParams","setSharedProxyStatuses","hideDotResult","spin","renderDot","ProxyInfo","EmptyFlagEl","IconEmptyFlag","regionLowercase","ProxyTitleBlockEl","ProxyItemWrapperEl","ProxyTitleWrapperEl","noProxy","ProxyForm","searchValue","setSearchValue","inputChanged","setInputChanged","sharedProxyInfos","useSharedProxyInfo","filterProxyList","inputWidth","sharedProxyInfo","handlePaste","persist","getProxyTitle","CheckProxyBtn","ProxyFlag","onPaste","ProxyPlaceholderText","lineHeight","defaultShouldMount","IconBtn","isInNewDrawer","useDelayedMount","handlePasteClick","openProxyManagerAddView","IconPlus","IconPasteProxy","findProxyInList","proxyFound","proxyListItem","proxyInList","proxy2","proxy1","ProxySelector","isInTableOrNewDrawer","propProxy","proxyManagerProfileId","proxySelectorLocation","shouldProxyTakeAllWidth","openProxyManager","proxyAreaClassName","ProxyPlaceholder","ProxySelectorButtons","Proxy","useProfilesSettingsProfile","SessionSaving","session","onClickIconClose","isDisabled","hasAutoFocus","IconSmallClose","StartUrl","urlsList","setUrlsList","containerRef","normalizeUrlsList","cleanedUrls","newStartUrl","onStartURLInputBlur","renderStartURLInput","CloseableInput","updatedUrlsList","onStartUrlChange","_urlsList$index","inputs","querySelectorAll","addStartUrl","hotkeyHandler","onStartUrlDelete","some","renderAddStartUrl","firstValue","secondValue","parsedValueA","parseInt","parsedValueB","sortTimezonesByOffset","hint","Timezone","renderTitleSelect","nameFromList","UserAgent","profileUserAgent","isActive","setIsActive","setUserAgent","areaHeight","setAreaHeight","areaRef","hiddenDivRef","_hiddenDivRef$current","innerText","scrollHeight","nameAreaActive","_hiddenDivRef$current2","_areaRef$current","overflowY","WebglMetadata","webglParams","webGlModalVisible","setWebGlModalVisible","setVendor","setRenderer","maskActive","setMaskActive","getContext","rendererWebGL","getExtension","isRealWebGl","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","isModeOff","isEmptyDeviceMetadata","isEmptyProfileMetadata","saveWebglMetadata","onChangeWebGL","renderInputs","Modal","glParamValues","obj","resultValue","keys","extension","ellipsis","WebRTCPublic","webRTCMode","webRTC","enable","ProfileName","previousProfileName","defaultProps","isAutoGenerated","setProfileName","nameRef","setVariables","defaultProfileName","profileNameIsDefault","parseTranslatedKey","spellCheck","newProfileName","randomWords","_nameRef$current","ModalConfirmCustom","centered","ModalCloseContainer","IconClose","ModalTitle","ModalDescription","ModalButton","ModalButtonConfirm","requestFullProfileInfo","renameProfileNameMany","newNameProfiles","ContainerFolderList","Mixed","colorText","MixedProfileName","needParseName","setNeedParseName","manyProfilesName","needOpenSpintaxPopup","oldProfileName","setOldProfileName","isPopupSpintaxVisible","setIsPopupSpintaxVisible","isEditMode","setIsEditMode","modalConfirmVisible","setModalConfirmVisible","isPinnedSection","spintaxList","getSpintaxList","selectedProfile","_selectedProfile$face","facebookAccountData","onClickMixed","isMultiProfilesSettings","drawer","getElementsByClassName","transitionEndEvent","onTransition","drawerEvent","defaultSpintax","DEFAULT_PROFILE_NAME","onApply","formattingParams","nameFormat","parseNameFormatting","renamedProfiles","iconWithInput","inputInactive","InputProfileName","onAreaChange","propsForRenderOptions","pasteSpintax","newText","inputElem","InputWithPopover","popupSlot","renderOptions","slotInputDecoration","slotInputInactive","optionsVisible","setOptionsVisible","renderContent","ModalCancelConfirm","FolderList","profileFolders","foldersFromCtx","profileFolderList","folderName","folder","WebglImage","WEBGL_IMAGE_MODES","webglImageMode","webGL","Bookmarks","setIsEditing","bookmarksText","setBookmarksText","bookmarksCount","setBookmarksCount","parsedBookmarksObjectToTxt","parseBookmarksObjToTxt","parsedBookmarksObject","getCountBookmarks","changeBookmarks","greyInformers","blackMain","Extensions","fullProfile","chromeExtensions","userChromeExtensions","profileExtensions","setProfileExtensions","isLoadingExtensions","updateExtensionsMap","getExtensions","extensionsContext","fetchProfileExtensions","extensionList","getExtensionList","extId","userExtensionsTab","setUserExtensionsExtensionsTab","MixedBookmarks","MixedExtensions","changeProfilesDataMany","newProfileData","MixedProxy","SettingsSections","sections","setSections","zeroProfileBookmarks","propsProxyComponent","propsProfileNameComponent","propsFolderListComponent","propsFingerprint","propsNotes","profileNotesIsDefault","propsLanguage","mixedParams","settingsParam","sectionsTmp","sectionName","DragDropContext","onDragEnd","SectionHeader","Droppable","droppableId","isDropDisabled","provided","droppableProps","Collapse","SettingRow","getProfileInfo","setCookiesLoading","prototype","hasOwnProperty","call","requestShortCookies","DEFAULT_PROFILE_DATA","isFullProfile","fullProfileAtom","getProfileSettingsFullProfile","setProfileSettingsFullProfile","newFullProfile","refreshFullProfile","getProfile","updateFullProfilesMap","profilesContext","currentProfile","newData","updateProfileData","saveProfileData","buildProfile","profileSettingsFullProfile","newProfile","updatedProfile","HeaderContainer","HeaderButtonsContainer","IconDoubleArrow","HeaderRightPart","isShowDrawer","maskStyle","mask","closable","drawerStyle","ProfileSettingsHeader","ProfileSettingsContent","PageOverlay","DrawerProfileHeader","DrawerProfileName","DrawerCancel","DrawerProfileBody","ContainerParamsFingerprint","DrawerProxyParams","DrawerLanguageParams","_templateObject15","DrawerLanguageParamsRegion","_templateObject16","DrawerLanguageParamsDomain","_templateObject17","DrawerCookiesParams","_templateObject18","_templateObject19","DrawerCookiesParamUrl","_templateObject20","DrawerCookiesParamCount","_templateObject21","DrawerFolderName","_templateObject22","DrawerRemoveProfileFromFolder","_templateObject23","FingerprintText","_templateObject24","DrawerDivider","_templateObject25","ResultFingerprint","_templateObject26","_templateObject27","ButtonFingerprint","_templateObject28","_templateObject29","_templateObject30","DrawerContainerProfileName","_templateObject31","AreaProfileName","_templateObject32","_templateObject33","_templateObject34","PROFILE_NAME","PROFILE_NOTES","PROXY_MODES","tor","gologin","socks4","socks5","none","ProfileDrawer","_profileData$navigato","_proxyRes","_profileData$navigato4","isProfileDrawerOpen","profileDrawerProxyVisible","setProfileDrawerProxyVisible","profileDrawerLanguageVisible","setProfileDrawerLanguageVisible","profileDrawerTimezoneVisible","setProfileDrawerTimezoneVisible","profileDrawerGeolocationVisible","setProfileDrawerGeolocationVisible","changeProfileName","setChangeProfileName","setCookies","isCookiesListModalVisible","setIsCookiesListModalVisible","proxyManagerVisible","setProxyManagerVisible","isResolutionEditOpen","setIsResolutionEditOpen","profileProxy","proxyProfileFromCtx","requestCookiesProfile","cookiesData","profileNameElement","setSelectionRange","noteElement","range","createRange","sel","setStart","childNodes","setEnd","removeAllRanges","addRange","ProfileSettings","proxyFromClipboard","proxyObj","updateProfileProxyRequest","saveProfileName","currentProfileData","changeProfileResolution","_profileData$folders","folderNameEmoji","substr","removeProfilesFromFolder","IconRemoveFolderFromRow","showProfileDrawerChild","Child","closeProfileDrawerСhildren","profileTimezone","timezones","_profileData$timezone","renderLanguages","_locales$language","_locales$language$rep","locales","renderLanguageItem","contentDrawer","_profileData$timezone2","_profileData$geolocat","_profileData$navigato2","_profileData$navigato3","autoSize","minRows","maxRows","ChangeProfileName","DrawerHeaderButtons","ResolutionManager","updateResolution","autoOpen","drawerProxy","afterModalClose","getElementsByTagName","hasAttribute","removeAttribute","DrawerBackdrop","CookiesList","boolean","requestProfileHistory","cloneS3Profile","keyId","indexOf","ContainerLoader","DescriptionModalTxt","HistoryModal","profileUploads","setProfileUploads","updateProfileHistory","profileHistory","clonedProfile","removeProperty","Trans","i18nKey","record","Date","toFixed","updateProfilesUA","opts","updateAllProfiles","updateUaToNewBrowserV","testOrbita","currentWorkspace","InformationTxt","CustomCheckbox","_Checkbox","updateAll","setUpdateAll","buttonsDisabled","setButtonsDisabled","updateProfilesUAHandleClick","res","updatedTo","suggestUpdateUA","_e$body","TagsWrapper","isFirefox","isPlaceholder","TagsListBlock","TagsCell","onTagsPopupOpen","profileRawTags","tagEditorVisible","currentTagField","setCurrentTagField","globalTags","rawTag","totalTagsCount","profileTagsCount","handleHideDropdown","AddTagPlaceholder","NameColText","SorterCol","sorterField","sortType","sortCurrentCol","iconProps","IconSortUp","IconSortDown","IconSort","TagsBackBtnIcon","TagsBackBtn","selectedTag","showAllKey","isShowAllTagsButtonShown","IconArrowBack","LineStyle","CircleStyle","IconPlusInCircleStyle","rx","createProfile","tooltipText","setTooltipText","templateCtx","onSend","IconPlusInCircle","column","enableDrag","hasSort","quickCreateProfile","containerClassName","ShowAllTagsBtn","ButtonQuickCreateProfile","CustomStatusCell","DateCell","hasTooltip","tooltipValue","setTooltipValue","isTooltipShown","Wrapper","TextEllipsis","clipPath","isM1","OSIcons","mac","IconAppleM1","lin","top","IconLinuxProfileTable","android","win","isPinned","isShared","isNewProfile","IconUser2","IconPin","IconCircle","TooltipOsIcon","fadeIn","keyframes","ProfileSettingsBtnWrapper","Text","zoomBigIn","InfoContainer","InfoBlock","Info","ProfileSettingsBtn","openProfileSettings","isTooltipVisible","setIsTooltipVisible","IconProfileSettingsBtnArrow","ProfileSettingsBtnTooltip","ContainerTable","ContainerName","ContainerButtons","NameCellCore","sharedEmails","lastActivity","handleProfileSettings","toggleProfilesTableProfileSettings","SharingIcon","IconNewProfile","ProfileNameIcons","Input","setProfiles","inputValue","setInputValue","_ref$current","getTrimmedOrRandomName","profileFromTheList","profilesTableEditingProfileNameAtom","useIsEditingProfileName","setProfilesTableEditingProfileName","newEditingProfileNameId","RunButtonCell","shouldMountDropDown","setShouldMountDropDown","profileWithRunStatus","NameCell","isEditingName","ProfileEdit","IconCopy","AddFirstProfileTitle","FirstProfileButtonContainer","Link","normalizeProfilesData","_profile$order","NotesCell","hasNotes","onNotesChange","callProfilesTableRowMeasurer","getMajorVersionByUa","osToDisplay","osSpec","hasProxy","createQuickProfile","userLatestOrbitaVersion","profilesLoaded","setTag","prepareSpan","dropFiles","singleProfileQuick","getParsedName","userOs","getUserOS","updateTemplateProfileName","requestSpan","description","quickCreateBrowser","spec","updateSpan","newProfilesList","countPinnedProfiles","splice","activateNameEditSpan","getBasicTableProfileIds","SharingCell","openShareModal","sharesCount","ProfileStatusRow","StatusWidthLimitterEl","ErrorTooltip","TooltipTextError","ResyncButton","syncProfile","errorType","errorMessage","prefix","somethingWentWrongKey","translatedErrorType","IconResyncProfile","statusColor","default","processing","StatusCell","statusTextWidth","renderedStatus","profileStatus","getStatusTypeOfProfile","StatusMessage","processingStatusesElement","IconEllipse","_Badge","dot","defaultVisible","useSelectionStatus","toggleAllRowsSelection","allRowsSelectionStatus","isSelected","isIndeterminate","indeterminate","columnIndex","onSortChange","colName","sortField","leftPadding","contentClassName","AllRowsSelection","useAllProfilesSelectionStatus","toggleAllProfilesSelected","_column$originalColum","originalColumnIndex","currSortField","currSortOrder","DEFAULT_SORT_FIELD","DEFAULT_SORT_ORDER","actionsSlot","GologinTableHeader","columns","columnProps","GologinTableHeaderColumn","rowIdx","baseClassName","attributes","listeners","setNodeRef","relativeDropPosition","_draggingProfiles$","draggingProfiles","useDraggingProfilesState","draggingProfileIdx","isOver","useSortable","useProfileSortable","tabIndex","GologinTableRow","dataItem","useIsSelected","elemKey","measure","cells","setProfilesTableRowMeasurer","ProfileRow","onToggle","isShiftActive","nativeEvent","isChecked","cellCount","overscanCellsCount","startIndex","stopIndex","overscanStartIndex","Math","max","overscanStopIndex","setWidth","cellMeasurerCache","CellMeasurerCache","defaultHeight","fixedWidth","GologinTable","dataArray","tableContainerRef","tableContainerWidth","useElementWidth","selectionColumn","GologinTableRowSelectionCell","useIsProfileSelected","handleToggleProfileIsSelectedByIdx","columnWidth","shownColumns","totalWidth","columnsWidth","rowRenderer","rowProps","parent","CellMeasurer","cache","rootElem","WindowScroller","scrollElement","isScrolling","onChildScroll","scrollTop","List","autoHeight","onScroll","rowCount","deferredMeasurementCache","rowHeight","overscanRowCount","overscanIndicesGetter","profileStatusUpdateIntervalId","ROW_SELECTION","PTableClass","Component","constructor","context","_this","_localStorage$getItem","_onDragEnd","super","_defineProperty","setState","windowWidth","innerWidth","flatProfileRunStatuses","getFlatProfileRunStatuses","profilesRunningInWeb","updateRunStatus","isNewRoute","isPinging","shouldSendAnalytics","updateProfileRunStatusesForWeb","args","performanceObserverService","profileStatusSpan","createProfileRunSpan","finalStatus","updateProfileStateAtFinish","finishProfileRunTransaction","onUpdateProfileStatus","urlCurrent","deepLinkProtocol","handleDeepLinkRun","setInterval","updateProfilesRunningInWeb","normalizeData","handleResize","clearInterval","columnsOrder","setProfilesTableSettings","newColumns","checkProfilesStatus","_getBasicTableProfile","tableProfileIdx","getBasicTableProfileById","rect","getBoundingClientRect","profileToScrollToY","offsetTop","scrollY","checkbox","_columnName","col","checkState","profilesLoading","requestNewProfilesPage","tableHeaderQuery","updateSelectedProfileIds","updatedProfiles","pp","versionToDownload","pickedVersionIfSkipDownload","isBrowserVersionCompatible","isOrbitaVersionCompatible","stateIfCompatible","versionToUpdate","launchProfileOpts","isOrbitaUpdateModalVisible","stateIfIncompatible","isOrbitaIncompatibleCannotRunModalVisible","stateToUpdate","createProfileRunTransaction","isReady","getCurrentStatus","browserIconsData","getParamsToGenerateIcons","shouldLaunch","iconsPngs","shouldLaunchAfterVersionCheck","generateBrowserIconsPromise","saveIconsToSessionStorage","iconDesignVersion","updateRunStatusSpan","profileToUpdate","updateProfileStateAtLaunch","iconsData","getIconsFromSessionStorage","startData","proxyInfo","icons","traceId","removeIconsFromSessionStorage","pngs","_event","_unused","transactionName","modalVisiblee","lastWorkspaceId","_ref11","setTo","pinOptions","selectedFolderName","selectedFolderFromCtx","folderId","allProfilesFolderId","pin","unpin","modifyProfilePin","modalVisibleSharing","onlyUpload","statusColData","ProxyCell","ProxyParamCell","ProxyTypeColumn","OsCell","OrbitaVersionCell","idCookiesList","nameCookiesList","_ref12","profileFingerprint","textClipboard","writeText","copyProxy","_ref13","newCookiesList","basicTableProfiles","removeSorting","updateProfilesTableSettingsState","saveWorkspaceProfileTableColumns","saveProfileTableColumns","_x14","sorterOrder","nameTable","nameState","isProfileHistoryModalOpened","profileHistoryModalProfileId","unpinProfile","pinProfile","openUpdateProfileModal","toggleModalSharingOld","sharingProfile","_rowInfo$permissions","renderPinButtons","navigateToUpdatePage","openTransferProfileModal","transferProfile","showManageFoldersMenu","renderAppMenu","openHistoryModal","showCopyProxy","renderUpdateProfileButton","ReactCopyToClipboard","onCopy","encodeURIComponent","showButtonDelete","calculateProfileDeleteOrLeave","renderMenu","IconMeatballs","IconDotsInButton","time","cb","isResizeMode","getNewPage","updateProfilesModal","updateProfileModalProfileId","areOrbitaModalButtonsDisabled","handleOrbitaUpdateModalClick","downloadSpecificOrbitaVersion","transferModalProfileId","transferProfileModal","_ref20","_ref19","transferredTo","transferIds","transferToMyWorkspace","fromWorkspaceId","workspaceData","availableWorkspaces","availableWorkspace","youTransferred","profilesText","getProfileNamesForNotifications","toText","replaceProfileFolders","removeProfilesFromList","newSelectedProfiles","closeTransferProfileModal","_x15","newFolders","filters","filtersStatus","sortedField","sortedOrder","newSortField","newSortOrder","setTableDataChanges","_ref21","_x16","_x17","_ref22","getSelectedFolderName","fromIndex","toIndex","visibleColumns","fixedColumnsCount","colToMove","nextCol","newFromIndex","newToIndex","saveWorkspaceProfileTableColumnsOrder","saveProfileTableColumnsOrder","nodeSelector","handleSelector","ignoreSelector","lineClassName","profileToScrollY","profileNameRef","profilesTableSettings","previousSelectedFolder","settingsRes","columnsList","ColumnHeader","renderState","renderNotes","onCellClick","renderTags","renderCustomStatus","renderDate","renderSharing","renderProxyType","renderProxyParam","renderOs","renderOrbitaVersion","componentDidUpdate","_this2","mergeColumns","sortOrder","onHeaderCell","handleResizeCol","tableData","tableProfileIndexes","foldersSelected","setFoldersSelected","addProfilesToFolder","manageProfileFoldersList","changeProfileNames","TabProfiles","IconSetting","ReactDragListView","dragProps","SortableContext","fetchMoreProfiles","getLoader","getInitialScrollY","_ConfigProvider","ProfilesMenu","doTransferProfile","getIsNewShareProfileModal","handleResizeColumn","isMinWidth","selectedProfileRowKeys","onRow","NoProfilesPlaceholder","tableLayout","components","header","cell","ResizableTitle","closeModall","checkboxColumnStatus","UpdateProfilesModal","closeUpdateProfileModal","OrbitaVersionModals","modalType","areButtonsDisabled","handleCancel","handleOrbitaUpdateModalCancel","handleOrbitaUpdateModalSubmit","handleClose","handleOrbitaUpdateModalClose","handleAfterClose","handleOrbitaUpdateModalAfterClose","PTableClassComponent","withTranslation","useBasicTableProfiles","useOldProfilesTableSelectedRowIndexes","_ref23","PAGE_SIZE","LOCAL_STORAGE_SELECTED_FOLDER","getFolderSelectedOrAll","insertProfileToListByIndex","profilesOriginal","profileToInsert","AddIcon","Add","DoneIcon","Done","FolderRow","selected","FolderNameContainer","FolderName","Folder","FolderIcon","searchFolderName","handleSearchInputChange","_folder$name","CreateFolderContainer","CreateFolderTxt","CreateFolderBtn","IconFolder","_translation","setSearchFolderName","Folders","FolderCreate","searchShareLinksForProfiles","links","createProfileShareLinks","updateShareLink","paused","deleteShareLink","linkId","ButtonWrapper","AddLinkButton","setShareLinks","isEnabled","setIsEnabled","shareLinksOld","ShareLinkItemWrapper","LinkTextWrapper","LinkText","isPaused","ItemChangeRoleTitle","TextMessageWrapper","CustomMenu","ShareProfileModal","action","actionsGlobal","handleActionSelect","actionFirst","actionGlobal","isShareLinksMenuNext","Divider","MenuItem","RoleTitle","RoleDescription","localRole","actionCurrent","canEditRole","ShareActionsDropdown","getInviteActionText","setActionCurrent","setIsPaused","urlWithHost","paramsToUpdate","link","ShareActionsSelect","ListWrapper","shareLinks","ShareLinkItem","ShareLinkTitle","every","viewShareLinks","ShareLinksList","UserRow","firstRole","currentRole","setCurrentRole","currentUserEmail","ids","IconPerson","isModalVisible","useProfileTableModalIsVisible","modalProfiles","useProfilesTableModalProfiles","isSharingMultipleProfiles","isLoadingInvites","setIsLoadingInvites","emails","setEmails","setSelectedRole","isShowInvites","setIsShowInvites","isEmailInputFocused","setIsEmailInputFocused","userEmail","maxEmails","POSITIVE_INFINITY","profilesOld","requestProfilesInvites","instanceId","setIds","dataInvites","share","userIndex","findIndex","user","_onCancel","confirm","updateManyInviteRoles","inviteIds","sendShare","emailsToShare","filterEmailsByUser","refreshCurrentWorkspaceData","startClosingProfileTableModal","EmailInput","errorText","onErrorTextChange","inputFocused","RoleSelect","menuWidth","setRole","invite","ExpandLess","htmlColor","ExpandMore","renderInvitesHeader","ShareLinks","EmptyListEl","EmptyListTitleEl","EmptyListButtonsEl","BtnIcon","BtnText","BtnAdd","ProxyListHeaderBtnContainer","ProxyListContentEl","ProxyListHeaderBtnLeft","ProxyListHeaderBtnRight","IconPlusEmptyList","ProxyCheckboxWrapperEl","lastSelectedProxy","useSelectedProxies","filteredProxies","useFilteredProxyList","selectProxyLI","showCheckbox","isFromSharedProfile","titleRes","ProxyItemCheckbox","ProxyListItemProfilesCountEl","getPopupContainer","isSelectProxyModeOpened","useIsSelectProxyModeOpened","handleUpdateClick","showBtns","updateSelectedProxiesList","onContextMenu","updateProxySelectMenuPosition","pageX","pageY","openProxyContextMenu","ProxyItem","ProxyProfilesCountBlock","ProxyRow","ProxyListItem","areEqual","ProxyContextMenuEl","DividerEl","isProxyContextMenuVisible","useIsProxyContextMenuVisible","useProxySelectMenuPosition","hideProxyContextMenu","handleOpenContextMenu","profilesTableEl","areActionsAllowed","ReactDOM","switchIsSelectProxyModeOpened","copyProxies","switchConfirmBlockVisible","setSelectedAllProxies","ProxyListMenuEl","ButtonsContainerEl","ProxyUpdateFormHeaderEl","ProxyFormContent","ProxyFormRowEl","ProxyFormLeft","ProxyFormRight","ProxyFormInputEl","HostPortSplitter","FormButtonsContainer","DeleteProxyBtn","FooterMidBtnsContainer","FooterBtn","footerButtons","IconSelectAll","IconProxyCopy","IconBasket","IconProxyClose","button","RemovingConfirmEl","RemovingConfirmContentEl","RemovingConfirmTitleEl","RemovingConfirmButtonsEl","BtnDelete","BtnCancel","confirmBlockVisible","useConfirmBlockVisible","translateKey","proxiesToDelete","proxyManagerState","setProxyManagerState","handleScroll","proxiesRes","FixedSizeList","itemCount","itemData","itemSize","outerRef","ProxyListMenu","ContextMenu","RemovingConfirm","EmptyList","clearForm","handlePasteProxy","IconBack","IconClean","IconCopyProxy","isString","RadioButtonEl","InputRadioEl","RadioContainerEl","RadioLabelEl","option","formValues","setFormValues","FORM_VALUES_DEFAULT","modalView","modalEditingProxyId","fillForm","handleChangeMode","handleChange","isProxyDataValid","pasteProxyText","parsedProxy","clipboardData","handlePasteChangeIpUrl","autoComplete","RadioButtons","proxyModes","proxyData","proxyToDelete","ProxyUpdateFormHeader","ProxyPopper","ProxyManagerContainer","ProxyManagerContent","ProxyManager","handleGlobalKeyDown","boundariesElement","ProxyList","ProxyManagerEditView","captureProxyLoadingDelayed","mainProxiesLength","proxiesNotFoundCount","PROXY_LOADING_DELAYED_WARNING","PROXIES_LOADED_COUNT_TAG","PROFILES_OFFSET_TAG","PROXIES_NOT_FOUND_COUNT","compareProxyInProfilesWithProxyList","profilesReq","proxiesInProfiles","TextTableName","titleBlock","handleBackClick","IconRename","TooltipText","FontEditBtn","Cent","Title","EditLanguagesSpan","SwitchTitle","InputText","SelectAdvanced","ShortInput","_InputNumber","FontParagr","CustomDNSInput","AdvancedTab","showAllFonts","setUpdatedField","newLanguage","updateNavigator","androidNotificationComponent","renderUserFonts","toggleFontsModal","checkedFontsNames","arrayToRender","fontLength","diff","updateMedia","componentDidMount","updateCanvas","updateAudioCtx","updateWebGl","updateClientRects","clientRects","updateWebGlMetadata","updateStorage","updatePlugins","cancelFontsModal","saveFontsModal","checkedFonts","_this3","CopyToClipBoard","oldStyle","ProfileLanguagesInputBlock","platform","threadList","deviceMemoryList","getAndroidTouchPoints","doNotTrack","getFontsSetting","getFontsContent","getMaskMediaDevices","borderTopRightRadius","borderBottomRightRadius","getCanvasContent","getAudionContextContent","getWebGlImageContent","getWebGlMetadata","toggleWebGlModal","webGParamsTable","setFontsState","Content","_Layout","GeolocationManager","changeGeolocationParam","_this$props$t","GeolocationTab","setMode","getWebgeolocation","TimezoneTab","updateTimezone","changeFillTimezone","getTimezoneContent","WebRTCTab","getWebIcon","ContainerContent","ColumnsContainer","LeftColumnContainer","RightColumnContainer","PageTitle","ButtonDiv","ProfileSummaryContainer","ProfileSummaryContent","ContentBrowserName","ContentTabs","GreenText","updatedFields","oldName","UpdateProfilePageClass","showFingerPrint","buttonProxy","GetProxyAnswer","disabledSaveButton","loadingSaveButton","isGeolocationScreen","defaultLanguages","templatesCtx","defaultWebGL","defaultWebGLMetadata","defaultCanvas","defaultFonts","defaultNavigator","defaultMediaDevices","defaultPlugins","defaultTimezone","defaultWebglParams","defaultClientRects","browserVersionCurrent","requestFingerprint","fprintOS","devicePixelRatio","UpdateProfile","pathname","_storage$indexedDb","getProfileIdFromLocation","browserType","names","customize","isBookmarksSynced","enableFlash","_this$props$profileIn","proxyDataForValidation","deduplicationKey","uuidv4","analytics","sendAnalytics","_newProfileData2","_newProfileData2$prox","_resProxy","_newProfileData3","_newProfileData3$prox","resProxy","_newProfileData","_newProfileData$proxy","getProxyRequest","newProxyList","initialState","componentWillUnmount","ContainerDashboard","Header","BodyContainer","defaultActiveKey","onTabClick","ShowButtonFingerprint","CloseButtonFingerprint","OverviewTab","updateFingerprint","ProxyTab","showButton","changeButton","bind","isSaveButtonPressed","setIsGeolocationScreen","saveProfile","isCreateProfile","ExtensionsTab","BookmarksTab","whiteSpace","getWebRtcMode","Helmet","mapDispatchToProps","UpdateProfilePageClassComponent","withRouter","connect","QuickPricing","firstPlanSelected","userPlan","updateUser","planId","workspacePlanId","preloadedPricingData","usePricingData","isQuickPricingVisibleAtom","useIsQuickPricingVisible","onQuickPricingCancel","closeQuickPricing","postSelectedTrialPlan","_error$body","userData","updatePricingData","closeIcon","IconCloseV2","PricingPage","isPopup","DraggedProfilesContainer","overlayElement","node","replaceWith","DragOverlay","dropAnimation","ALL_PROFILES_FOLDER","ContainerPreTable","ContainerTableName","SpinnerContainer","profilesCountWithShares","foldersListFromCtx","setProfilesCount","setTableHeaderQuery","profilesUAChecking","setProfilesUAChecking","currentOrbitaMajorV","setCurrentOrbitaMajorV","currentBrowserV","setCurrentBrowserV","userOrbitaV","setUserOrbitaV","tableSettingsLoaded","setTableSettingsLoaded","setFoldersList","isFoldersManagerVisible","setIsFoldersManagerVisible","profilesToGetFolders","setProfilesToGetFolders","newTagActionSubscription","prevTag","setTags","addNewTagToList","updateBrowserUpdater","browserUpdaterContext","selectedProfileIdsFromCtx","dropFileStep","setDropFileStep","setSelectedProfileIds","setSelectedProfileIdsFromCTX","errorImportMessage","setErrorImportMessage","isLoaded","workspaceIsLoaded","useQuery","routeUpdateObj","useRouteMatch","isUpdatePage","isExact","searchQuery","useSearchQuery","setProfilesFnWithRef","initPage","profilesProxy","checkProxyList","_ipcRenderer","updateExtensionsOnClose","extensionsIds","_ipcRenderer2","removeListener","loadWorkspaceProfileTableSettings","tableSettings","getWorkspaceProfileTableSettings","fetchProfilesTableSummaryInfo","profileTableSettings","requestedTags","getProfilesTableSummaryInfo","rawCachedFolders","cachedFolders","newOrderedFolders","processReceivedFolders","normalizedTags","_profiles$find","profileToGetFolders","profileFoldersSelected","profileSharedViaLinkJson","setSelectedFolderId","profilesToUpdate","profileExistingIndex","addProfileToList","profilesDeleted","profilesDeletedJson","getProfileDeletedFromSessionStorage","profilesUpdated","profileObject","profileIndex","profileDeletedIds","saveProfilesDeletedToSessionStorage","profilesPrev","manageProfilesInWorkspaceFolder","manageProfilesInFolder","newFoldersSelected","localFolders","sharedFolders","folderObj","orderedFolders","nonSharedFoldersLength","_localFolderObj$order","localFolderObj","sort","getProfilesParams","selector","currentSelectedTag","hasLocalId","isTemporaryTag","getProfiles","checkProfilesUA","receivedProfiles","browserV","orbitaMajorV","currentUserOrbitaV","currentUserOrbitaMajorV","browserMajorV","profileObj","_profileObj$navigator","profileUA","updateUALastChosenBrowserV","profileUAMatch","matchRes","profileUAMajorV","intBrowserMajorV","intProfileUAMajorV","intCurrentUserOrbitaMajorV","intOrbitaMajorV","findProxyInListSpan","responseStatesSpan","total","allProfilesCount","isFolderDeleted","receivedIsMoreProfilesAvailable","setIsMoreProfilesAvailable","newFoldersList","checkUaSpan","setProfilesSpan","setProfilesMark","updateType","resultProfilesArray","setLoadProfilesTags","profilesNew","handleShareViaLinkFromStorage","profilesNormalized","initRunStatusesSpan","removeLoadingSpan","profilesBackup","newSelectedTagBackup","tagsBackup","currentTag","doUpdateTagRequest","_ref16","newTag","_ref17","isNewAdded","lastTempId","preparedTitle","tempTag","getTime","tagInList","shouldRemoveCustomStatuses","profilesToChange","removeCustomStatusesFromProfiles","tagChange","addTagToProfiles","requestParams","addTagResponse","apiTagId","isTagCreated","tagColor","tagField","tagFromSub","_ref18","isInSuggest","skipUpdateProfilesList","findProfilesWithTag","fetchTags","userTagsResponse","initialized","showOrbitaDialog","UpdateProfilePage","onSearch","queryString","TitleTag","ProfilesTableQuick","countToScroll","FoldersManager","RemoveProfileModal","MultiShareModal","DraggingProfilesOverlay","fillRule","clipRule"],"sourceRoot":""}