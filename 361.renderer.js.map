{"version":3,"file":"361.renderer.js","mappings":"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","sources":["webpack://GoLogin/./src/app/features/personalArea/token/api.ts","webpack://GoLogin/./node_modules/@material-ui/icons/esm/Delete.js","webpack://GoLogin/./src/app/features/personalArea/token/styles.tsx","webpack://GoLogin/./node_modules/@material-ui/icons/esm/FileCopyOutlined.js","webpack://GoLogin/./src/app/features/personalArea/token/token-row.tsx","webpack://GoLogin/./src/app/features/personalArea/token/index.tsx"],"sourcesContent":["import { API_BASE_URL } from '../../../../common/constants/constants';\r\nimport { http } from '../../../services';\r\n\r\nexport interface IToken {\r\n  id: string;\r\n  name: string;\r\n  type: 'dev' | 'admin';\r\n  token: string;\r\n  readonly: boolean;\r\n  createdAt: string;\r\n}\r\n\r\nexport const requestTokens = (): Promise<IToken[]> =>\r\n  http(`${API_BASE_URL}/user/token`)\r\n    .then((res: any) => res.body);\r\n\r\nexport const removeToken = async (id: string) => {\r\n  try {\r\n    await http(`${API_BASE_URL}/user/token/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const patchToken = async (id: string, name: string) => {\r\n  const params = JSON.stringify({\r\n    name,\r\n  });\r\n\r\n  try {\r\n    await http(`${API_BASE_URL}/user/token/${id}`, {\r\n      method: 'PATCH',\r\n      body: params,\r\n    });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const createDevToken = async (name: string = 'GoLess') => {\r\n  const params = JSON.stringify({\r\n    name\r\n  });\r\n\r\n  try {\r\n    await http(`${API_BASE_URL}/user/dev`, {\r\n      method: 'POST',\r\n      body: params,\r\n    });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import styled from '@emotion/styled/macro';\r\nimport { Button } from 'antd';\r\nimport { Delete } from '@material-ui/icons';\r\n\r\nexport const Subtitle = styled('div')`\r\n  font-family: Roboto;\r\n  font-size: 20px;\r\n  line-height: 19px;\r\n  color: var(--000000-personal-area-api-documentation);\r\n  opacity: 0.8;\r\n  padding-top: 40px;\r\n  padding-bottom: 35px;\r\n`;\r\n\r\nexport const CreateButtonContainer = styled('div')`\r\n  margin-top: 20px;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const ButtonNewToken = styled(Button)`\r\n  padding: 4px 12px;\r\n  height: 30px;\r\n  border-radius: 3px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const ButtonNewTokenText = styled('span')`\r\n  font-family: 'Roboto';\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const ColumnName = styled('span')`\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const ContainerColumn = styled('div')`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ContainerTable = styled('div')`\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nexport const DocumentationTxt = styled('div')`\r\n  font-family: Roboto;\r\n  font-size: 14px;\r\n  color: var(--7F7F7F-personal-area-api-documentation);\r\n  margin-top: 20px;\r\n  width: 550px;\r\n`;\r\n\r\nexport const DeleteIcon = styled(Delete)`\r\n  opacity: 0.6;\r\n`;\r\n\r\nexport const InputName = styled('div')`\r\n  margin-left: 53px;\r\n  align-items: center;\r\n  font-family: Roboto;\r\n  font-size: 14px;\r\n  line-height: 14px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  color: var(--000000-personal-area-api-documentation);\r\n  padding: 5px;\r\n  border: 1px solid transparent;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  :focus {\r\n    outline: none !important;\r\n    border: 1px solid var(--CDCDCD-personal-area-api-documentation);\r\n    color: var(--000000-personal-area-api-documentation);\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ContainerRevealToken = styled('div')`\r\n  position: absolute;\r\n  visibility: hidden;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const ButtonToken = styled(Button)`\r\n  width: 100px;\r\n  height: 24px;\r\n  background: var(--FDFEFE-personal-area-api-documentation);\r\n  border: 1px solid var(--D2D6DD-personal-area-api-documentation);\r\n  box-sizing: border-box;\r\n  border-radius: 3px;\r\n  bottom: 4px;\r\n  margin-left: 90px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const ButtonText = styled('span')`\r\n  font-family: Roboto;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  text-align: center;\r\n  text-transform: capitalize;\r\n  color: var(--454545-personal-area-api-documentation);\r\n`;\r\n\r\nexport const InputToken = styled('div')<{ isVisibleToken: boolean }>`\r\n  width: 280px;\r\n  filter: ${props => !props.isVisibleToken && 'blur(3px)'};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  user-select: none;\r\n  transition: .2s;\r\n`;\r\n\r\nexport const ContainerTokenValue = styled('div')`\r\n  margin-left: 186px;\r\n  \r\n  &:hover {\r\n    ${ContainerRevealToken} {\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Row = styled('div')`\r\n  position: relative;\r\n  display: flex;\r\n  margin-bottom: 12px;\r\n  height: 46px;\r\n  align-items: center;\r\n  background-color: var(--FAFAFA-personal-area-api-documentation);\r\n  max-width: 650px;\r\n    \r\n  @media screen and (max-width: 450px) {  \r\n    margin-left: 8px;  \r\n    margin-top: 20px;  \r\n  }\r\n`;\r\n\r\nexport const BlockIcon = styled('div')`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const IconMargin = styled('div')`\r\n  position: absolute;\r\n  margin-left: 620px;\r\n`;\r\n\r\nexport const ContainerTokenName = styled('div')`\r\n  width: 200px;\r\n  position: absolute;\r\n  display: flex;\r\n`;\r\n\r\nexport const CreatedDateText = styled('span')`\r\n  margin-left: 46px;\r\n`;\r\n\r\nexport const IndexText = styled('span')`\r\n  margin-left: 16px;\r\n`;\r\n\r\nexport const TokenName = styled('div')`\r\n  align-items: center;\r\n  font-family: Roboto;\r\n  font-size: 14px;\r\n  line-height: 14px;\r\n  color: var(--000000-personal-area-api-documentation);\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border: 1px dashed transparent;\r\n  margin-left: 53px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n\r\n  :hover {\r\n    border: 1px dashed var(--CDCDCD-personal-area-api-documentation);\r\n  }\r\n`;\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4H8c-1.1 0-1.99.9-1.99 2L6 21c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V11l-6-6zM8 21V7h6v5h5v9H8z\"\n}), 'FileCopyOutlined');","import { FileCopyOutlined } from '@material-ui/icons';\r\nimport { Icon, message } from 'antd';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport CopyToClipBoard from 'react-copy-to-clipboard';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IToken, patchToken, removeToken } from './api';\r\nimport {\r\n  BlockIcon,\r\n  ButtonText,\r\n  ButtonToken,\r\n  ContainerRevealToken,\r\n  ContainerTokenName,\r\n  ContainerTokenValue,\r\n  CreatedDateText,\r\n  DeleteIcon,\r\n  IconMargin, IndexText,\r\n  InputName, InputToken,\r\n  Row,\r\n  TokenName,\r\n} from './styles';\r\nimport { randomWords } from '../../common/randomizer';\r\n\r\ninterface ITokenRow extends IToken {\r\n  value: string;\r\n  requestTokens: () => void;\r\n  index: number;\r\n  createdToken: string;\r\n}\r\n\r\nconst TokenRow: FC<ITokenRow> = (props) => {\r\n  const { name: passedName, id, value, readonly: isReadonly, requestTokens, index, createdToken } = props;\r\n\r\n  const [nameInput, setNameInput] = useState(false);\r\n  const [name, setName] = useState(passedName);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isTokenVisible, setIsTokenVisible] = useState(false);\r\n\r\n  const tokenNameRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n  const createdTokenDate = new Date(createdToken).toLocaleString('en-EN', { month: 'short', day: 'numeric', year: 'numeric' });\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (tokenNameRef.current) {\r\n      const refCurrent = tokenNameRef.current;\r\n      const range = document.createRange();\r\n      const sel = window.getSelection();\r\n      range.setStart(refCurrent.childNodes[0], 0);\r\n      range.setEnd(refCurrent.childNodes[0], refCurrent.innerText.length);\r\n      (sel as any).removeAllRanges();\r\n      (sel as any).addRange(range);\r\n    }\r\n  }, [nameInput]);\r\n\r\n  const deleteToken = (): void => {\r\n    setIsDeleting(true);\r\n    removeToken(id)\r\n      .finally(requestTokens);\r\n  };\r\n\r\n  const updateTokenName = (tokenName: string): void => {\r\n    const newNameToken = tokenName || randomWords();\r\n    const hasRepeatedWhitespaces = /\\s{2,}/g.test(newNameToken);\r\n    if (hasRepeatedWhitespaces) {\r\n      message.error(translation('notifications.error.whitespacesInNameToken'));\r\n\r\n      return;\r\n    }\r\n\r\n    setName(newNameToken);\r\n    patchToken(id, newNameToken);\r\n  };\r\n\r\n  const onNameBlur = (tokenName: string): void => {\r\n    setNameInput(false);\r\n    updateTokenName(tokenName);\r\n  };\r\n\r\n  const onNameClick = (): void => {\r\n    if (isReadonly) {\r\n      return;\r\n    }\r\n\r\n    setNameInput(true);\r\n  };\r\n\r\n  const renderDelete = (): JSX.Element|null => {\r\n    if (isReadonly) {\r\n      return null;\r\n    }\r\n\r\n    if (isDeleting) {\r\n      return (\r\n        <IconMargin>\r\n          <Icon type='loading' />\r\n        </IconMargin>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <IconMargin>\r\n        <BlockIcon onClick={deleteToken}>\r\n          <DeleteIcon />\r\n        </BlockIcon>\r\n      </IconMargin>\r\n    );\r\n  };\r\n\r\n  const showCopySuccess = (): void => {\r\n    message.success(translation('base.copiedText'));\r\n  };\r\n\r\n  const renderRevealToken = (): JSX.Element|null => {\r\n    if (isTokenVisible) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ContainerRevealToken>\r\n        <CopyToClipBoard\r\n          text={value}\r\n          onCopy={showCopySuccess}\r\n        >\r\n          <ButtonToken\r\n            onClick={(): void => setIsTokenVisible(true)}\r\n          >\r\n            <ButtonText>\r\n              {translation('personalArea.api.tokenBtnText')}\r\n            </ButtonText>\r\n          </ButtonToken>\r\n        </CopyToClipBoard>\r\n      </ContainerRevealToken>\r\n    );\r\n  };\r\n\r\n  const renderTokenName = () => {\r\n    let TOKEN_NAME = name;\r\n\r\n    const setPasteProfileName = (event: any) => {\r\n      event.preventDefault();\r\n      const text = (event.originalEvent || event).clipboardData.getData('text/plain');\r\n      document.execCommand(\"insertHTML\", false, text);\r\n    };\r\n\r\n    return (\r\n      <ContainerTokenName>\r\n        {nameInput\r\n          ? (\r\n              <InputName\r\n                suppressContentEditableWarning={true}\r\n                contentEditable={true}\r\n                onInput={(event: any) => {\r\n                  TOKEN_NAME = event.nativeEvent.target.innerText;\r\n                }}\r\n                ref={tokenNameRef}\r\n                onKeyDown={(event) => {\r\n                  if (event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    onNameBlur(TOKEN_NAME);\r\n                  }\r\n                }}\r\n                onBlur={() => {\r\n                  onNameBlur(TOKEN_NAME);\r\n                }}\r\n                onPaste={(event) => {\r\n                  setPasteProfileName(event);\r\n                }}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                {TOKEN_NAME}\r\n              </InputName>\r\n          )\r\n          : (\r\n              <TokenName onClick={onNameClick}>\r\n                {TOKEN_NAME}\r\n              </TokenName>\r\n          )\r\n        }\r\n      </ContainerTokenName>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <IndexText>\r\n          {index + 1}\r\n        </IndexText>\r\n        {renderTokenName()}\r\n        <CopyToClipBoard\r\n          text={value}\r\n          onCopy={showCopySuccess}\r\n        >\r\n          <ContainerTokenValue>\r\n            {renderRevealToken()}\r\n            <InputToken isVisibleToken={isTokenVisible}>\r\n              {value}\r\n            </InputToken>\r\n          </ContainerTokenValue>\r\n        </CopyToClipBoard>\r\n        <IconMargin style={{ marginLeft: 500 }}>\r\n          <CopyToClipBoard text={value} onCopy={showCopySuccess}>\r\n            <BlockIcon>\r\n              <FileCopyOutlined fontSize='small' style={{ opacity: 0.6 }} />\r\n            </BlockIcon>\r\n          </CopyToClipBoard>\r\n        </IconMargin>\r\n        <CreatedDateText>\r\n          {createdTokenDate}\r\n        </CreatedDateText>\r\n        {renderDelete()}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TokenRow;\r\n","import { Button } from 'antd';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { createDevToken, IToken, requestTokens } from './api';\r\nimport {\r\n  ButtonNewToken,\r\n  ButtonNewTokenText,\r\n  ColumnName,\r\n  ContainerColumn,\r\n  ContainerTable,\r\n  CreateButtonContainer,\r\n  DocumentationTxt,\r\n  Subtitle,\r\n} from './styles';\r\nimport Token from './token-row';\r\nimport LoadingPage from '../../common/loading-page';\r\nimport { randomWords } from '../../common/randomizer';\r\nimport { TabWrapper } from '../menu/tab-wrapper';\r\nimport { PageTitle } from '../styles';\r\n\r\nconst isElectron = !!window.require;\r\n\r\nconst URL_POSTMAN = 'https://documenter.getpostman.com/view/21126834/Uz5GnvaL';\r\nconst URL_GITHUB = 'https://github.com/gologinapp/gologin';\r\n\r\nconst TokensPage: FC = () => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [tokens, setTokens] = useState<IToken[]>([]);\r\n  const [isCreateBtnLoading, setIsCreateBtnLoading] = useState<boolean>(false);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const refreshTokens = async (): Promise<void> => {\r\n    setIsLoading(true);\r\n    const userTokens = await requestTokens()\r\n      .finally(() => setIsLoading(false));\r\n\r\n    setTokens(userTokens);\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshTokens();\r\n  }, []);\r\n\r\n  const createNewToken = async (): Promise<void> => {\r\n    setIsCreateBtnLoading(true);\r\n    try {\r\n      const name = randomWords();\r\n      await createDevToken(name);\r\n      await refreshTokens();\r\n    } finally {\r\n      setIsCreateBtnLoading(false);\r\n    }\r\n  };\r\n\r\n  const getHandlerForOpenExternal = (url: string) => () => {\r\n    if (isElectron) {\r\n      window.require('electron').shell.openExternal(url);\r\n    }\r\n  };\r\n\r\n  const renderTokensTable = (): JSX.Element => {\r\n    if (isLoading) {\r\n      return <LoadingPage />;\r\n    }\r\n\r\n    return (\r\n      <ContainerTable>\r\n        <ContainerColumn>\r\n          <ColumnName style={{ marginLeft: 16 }}>\r\n            #\r\n          </ColumnName>\r\n          <ColumnName style={{ marginLeft: 33 }}>\r\n            {translation('personalArea.token.name')}\r\n          </ColumnName>\r\n          <ColumnName style={{ marginLeft: 113 }}>\r\n            {translation('personalArea.token.token')}\r\n          </ColumnName>\r\n          <ColumnName style={{ marginLeft: 290 }}>\r\n            {translation('personalArea.token.created')}\r\n          </ColumnName>\r\n        </ContainerColumn>\r\n        {tokens.map((token, index) => (\r\n          <Token\r\n            {...token}\r\n            requestTokens={refreshTokens}\r\n            key={token.id}\r\n            value={token.token}\r\n            index={index}\r\n            createdToken={token.createdAt}\r\n          />\r\n        ))}\r\n        <ButtonNewToken\r\n          type='primary'\r\n          onClick={createNewToken}\r\n          loading={isCreateBtnLoading}\r\n        >\r\n          <ButtonNewTokenText>\r\n            {translation('personalArea.token.new')}\r\n          </ButtonNewTokenText>\r\n        </ButtonNewToken>\r\n      </ContainerTable>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TabWrapper tabKey='token-api'>\r\n      <PageTitle>\r\n        {translation('personalArea.api.title')}\r\n      </PageTitle>\r\n      <DocumentationTxt>\r\n        {translation('personalArea.api.description')}\r\n      </DocumentationTxt>\r\n      <CreateButtonContainer>\r\n        <Button\r\n          href={!isElectron ? URL_POSTMAN : ''}\r\n          onClick={getHandlerForOpenExternal(URL_POSTMAN)}\r\n          target='_blank'\r\n          type='default'\r\n        >\r\n          Postman\r\n        </Button>\r\n        <Button\r\n          href={!isElectron ? URL_GITHUB : ''}\r\n          onClick={getHandlerForOpenExternal(URL_GITHUB)}\r\n          target='_blank'\r\n          type='default'\r\n          style={{ marginLeft: 24 }}\r\n        >\r\n          {translation('personalArea.api.apiBtnText')}\r\n        </Button>\r\n      </CreateButtonContainer>\r\n      <Subtitle>\r\n        {translation('personalArea.api.titleTable')}\r\n      </Subtitle>\r\n      {renderTokensTable()}\r\n    </TabWrapper>\r\n  );\r\n};\r\n\r\nexport default TokensPage;\r\n"],"names":["removeToken","_ref","_asyncToGenerator","id","http","concat","API_BASE_URL","method","error","_x","apply","arguments","patchToken","_ref2","name","params","JSON","stringify","body","_x2","_x3","createDevToken","_ref3","length","undefined","createSvgIcon","d","Subtitle","_styled","target","label","styles","CreateButtonContainer","ButtonNewToken","_Button","ButtonNewTokenText","ColumnName","ContainerColumn","ContainerTable","DocumentationTxt","DeleteIcon","Delete","InputName","ContainerRevealToken","ButtonToken","ButtonText","InputToken","props","isVisibleToken","ContainerTokenValue","Row","BlockIcon","IconMargin","ContainerTokenName","CreatedDateText","IndexText","TokenName","passedName","value","readonly","isReadonly","requestTokens","index","createdToken","nameInput","setNameInput","useState","setName","isDeleting","setIsDeleting","isTokenVisible","setIsTokenVisible","tokenNameRef","useRef","createdTokenDate","Date","toLocaleString","month","day","year","t","translation","useTranslation","useEffect","current","refCurrent","range","document","createRange","sel","window","getSelection","setStart","childNodes","setEnd","innerText","removeAllRanges","addRange","TOKEN_NAME","deleteToken","finally","onNameBlur","tokenName","newNameToken","randomWords","test","_message","updateTokenName","onNameClick","showCopySuccess","React","suppressContentEditableWarning","contentEditable","onInput","event","nativeEvent","ref","onKeyDown","key","preventDefault","onBlur","onPaste","text","originalEvent","clipboardData","getData","execCommand","setPasteProfileName","onClick","e","stopPropagation","CopyToClipBoard","onCopy","style","marginLeft","FileCopyOutlined","fontSize","opacity","_Icon","type","isElectron","require","URL_POSTMAN","URL_GITHUB","isLoading","setIsLoading","tokens","setTokens","isCreateBtnLoading","setIsCreateBtnLoading","refreshTokens","userTokens","then","res","createNewToken","getHandlerForOpenExternal","url","shell","openExternal","TabWrapper","tabKey","PageTitle","href","LoadingPage","map","token","Token","_extends","createdAt","loading"],"sourceRoot":""}