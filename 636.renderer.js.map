{"version":3,"file":"636.renderer.js","mappings":"qwBAEaA,GAAaC,EAAAA,EAAAA,GAAO,OAAPA,CAAcC,IAAAA,EAAAC,IAAA,6H,4CCyBxC,QAjBwC,SAAHC,GAAA,IAAI,MAAEC,GAAOD,EAAA,OAChDE,EAAAA,cAACC,EAAAA,GAAS,KACRD,EAAAA,cAACE,EAAAA,EAAU,MACXF,EAAAA,cAAAG,EAAAA,QAAA,CACEC,MACEJ,EAAAA,cAACK,EAAAA,GAAY,KACVN,IAILC,EAAAA,cAACM,EAAAA,GAAW,KACTP,IAGK,E,uBCtBDQ,GAAmBZ,EAAAA,EAAAA,GAAO,MAAPA,CAAaC,IAAAA,EAAAC,IAAA,+BAIhCW,GAAwBb,EAAAA,EAAAA,GAAO,MAAPA,CAAac,IAAAA,EAAAZ,IAAA,wIAQrCa,GAAoBf,EAAAA,EAAAA,GAAO,MAAPA,CAAagB,IAAAA,EAAAd,IAAA,2JASjCe,GAAkBjB,EAAAA,EAAAA,GAAO,OAAPA,CAAckB,IAAAA,EAAAhB,IAAA,yKCyB7C,QA/B4C,SAACiB,GAC3C,IAAM,eAAEC,EAAc,gBAAEC,GAAoBF,GAEpCG,EAAGC,IAAgBC,EAAAA,EAAAA,MAE3B,OAAKH,EAKHhB,EAAAA,cAAAG,EAAAA,QAAA,CACEC,MACEJ,EAAAA,cAACO,EAAgB,KACfP,EAAAA,cAACQ,EAAqB,KACnBU,EAAY,yDAAyD,IAErEH,GAEHf,EAAAA,cAACU,EAAiB,MACfU,EAAAA,EAAAA,GAAWJ,MAKlBhB,EAAAA,cAACY,EAAe,KACbG,GAAkB,KAnBhB,IAuBX,E,oCCrBA,QAZgC,SAC9BM,EACAC,EACAC,GAEA,OAAKD,EAdsB,SAACC,GAA+B,OAC3DA,EAAQC,QAAa,SAACC,EAAMC,GAC1B,OAAKD,GAAQA,IAASC,EAAOD,KAItB,SAHkB,UAAhBC,EAAOD,KAAmB,QAAUC,EAAOD,IAItD,GAAGF,EAAQI,OAASJ,EAAQ,GAAGE,KAAO,WAAW,CAW1CG,CAAqBL,GAHnBF,CAIX,E,sCCpBQQ,QAAOA,GAAEC,EAAAA,EAqBjB,QAnB0B,SAAC/B,EAAegC,EAAuBb,GAC/DW,EAAQ,CACNzB,MAAOc,EAAY,2CACnBc,QAASjC,EACTkC,OAAQf,EAAY,eACpBgB,WAAYhB,EAAY,4CACxBiB,cAAe,CAAEC,KAAM,WACvBC,kBAAmB,CAAED,KAAM,WAC3BE,UAAW,sBACXC,MAAO,CACLC,OAAQ,QACRC,cAAe,GAEjBC,SAAUX,EACVY,UAAU,EACVC,cAAc,GAElB,E,MChBaC,GAAWlD,EAAAA,EAAAA,GAAO,OAAPA,CAAcC,IAAAA,EAAAC,IAAA,qHAmCtC,QAvBoD,SAACiB,GACnD,IAAM,cAAEQ,EAAa,QAAEC,GAAYT,GAE3BG,EAAGC,IAAgBC,EAAAA,EAAAA,MAE3B,IAAMG,IAAiBC,EAAQI,OAC7B,OAAO,KAGT,IAAImB,EAAc5B,EAAY,0CAK9B,OAJIK,EAAQI,OAAS,IACnBmB,EAAc5B,EAAY,0CAA2C,CAAE6B,aAAcxB,EAAQI,UAI7F3B,EAAAA,cAAA,OAAKuC,MAAO,CAAES,WAAY,IACxBhD,EAAAA,cAAC6C,EAAQ,KACNC,GAIT,E,2lBC+GA,QA/HoD,SAAChC,GAAU,IAAAmC,GACrDC,GAAIC,EAAQ,MAAEpD,EAAK,KAAE0B,EAAI,cAAEH,EAAa,QAAEC,EAAU,GAAE,YAAE6B,GAAgBtC,GAEzEuC,EAAsBC,IAA2BC,EAAAA,EAAAA,UAAkBjC,IACnEkC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAwB9B,IACvDiC,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAiCjC,EAAgBC,EAAU,KAChGqC,EAAUC,IAAeN,EAAAA,EAAAA,UAA2B,OACpDO,EAAyBC,IAA8BR,EAAAA,EAAAA,UAAiB,IACxES,EAAyBC,IAA8BV,EAAAA,EAAAA,UAAiB,GAEzEW,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,KAErBnD,EAAGC,IAAgBC,EAAAA,EAAAA,OAE3BkD,EAAAA,EAAAA,YAAU,WACRC,EAAoBhD,EAAeG,EAAMH,EAAgBC,EAAU,GACrE,GAAG,CAACD,EAAeG,EAAMF,KAEzBgD,EAAAA,EAAAA,kBAAgB,WACd,GAAMX,GAAYE,EAAlB,CAIA,IAAMU,EAAkBC,SAASC,KAAKC,aAAef,EAASgB,wBAAwBC,IAChFC,EAASlB,EAASe,aAAe,EACnCI,EAAcjB,EAA0BgB,EAExCN,EAAkBV,EADI,KAExBiB,GAAeD,GAGjBb,EAA2Bc,EAV3B,CAWF,GAAG,CAACnB,EAAUP,EAAsBS,IAEpC,IAIMkB,EAAU,WACdnB,EAAY,MACZ,IAAOoB,GAAoBR,SAASS,qBAAqB,QACrDD,EAAiBE,aAAa,UAChCF,EAAiBG,gBAAgB,SAGnC,IAAMC,EAA0B/D,IAAkB+B,EAC5CiC,EAAiB7D,IAAS+B,EAC1B+B,EAAwB7B,EAAe/B,SAAWJ,EAAQI,OAC1D6D,EAAuB9B,EAAe+B,MAAK,SAAAC,GAC/C,IAAMC,EAAYpE,EAAQqE,MAAK,SAAAlE,GAAM,OAAIgE,EAAcG,OAASnE,EAAOmE,IAAI,IAE3E,OAAOH,EAAcjE,QAASkE,aAAS,EAATA,EAAWlE,KAC3C,KAG6B4D,GAA2BC,GAD7BjC,IAAyBkC,GAAyBC,KC/D5C,SACnCtB,EACAf,EACA2C,GAEA,IAAM,cAAExE,EAAa,KAAEG,EAAI,QAAEF,GAAYuE,EAEzC5B,EAAU6B,gBAAgB,CACxBC,QAAS9B,EAAU8B,QAAQC,KAAI,SAAAC,GAAM,OAAIA,EAAOhD,KAAOC,EAAQgD,EAAAA,EAAA,GAC1DD,GAAM,IACTzE,OACAH,gBACAC,YACE2E,CAAM,OAGLE,EAAAA,EAAAA,IAAwB,CAC7BC,YAAanC,EAAUhB,GACvBC,WACA7B,gBACAG,OACAF,WAEJ,CD2CM+E,CAAsBpC,EAAWf,EAAU,CACzC7B,cAAe+B,EACf5B,KAAM+B,EACNjC,QAASmC,GAGf,EAEM6C,EAAUpD,KAAyB,QAAjBF,EAAKiB,EAAUsC,UAAE,IAAAvD,OAAA,EAAZA,EAAcC,IACrCuD,EAAqBpD,GAAwBa,EAAU3C,QAAQkE,MAAK,SAAA/D,GAAM,OAAIA,EAAO0B,YAAYsD,YAAY,IAC7GC,GAAwBJ,IAAYnD,EAAYwD,2BAA6BH,GAO7EnC,EAAsB,SAC1BuC,EACAC,EACAC,GAEAzD,EAAwBuD,GACxBpD,EAAeqD,GACfnD,EAAkBoD,EACpB,EAQMC,EAAmBC,EAAwBzD,EAAaH,EAAsBK,GAEpF,OACE1D,EAAAA,cAACkH,EAAAA,GAAoB,CACnB5F,iBAAkB+B,IAAwBK,EAAe/B,QACzDwF,UAAWR,EACXS,QAZsB,SAACC,IACpBzD,GAAY+C,GACf9C,EAAYwD,EAAEC,cAElB,GAUItH,EAAAA,cAACuH,EAAAA,EAAY,CACXC,UAAUC,EAAAA,EAAAA,GAAoBT,EAAkB9F,GAChDwG,UAAWf,EACXgB,MAAM,QACNnF,OAAO,SAETxC,EAAAA,cAAC4H,EAAe,CAACtG,cAAe+B,EAAsB9B,QAASmC,IAC/D1D,EAAAA,cAAC6H,EAAAA,GAAyB,CACxBC,OAAQlE,EACRA,SAAUA,EACVoB,QAASA,EACT+C,mBA3EoB,SAACC,GACzBjE,EAA2BiE,EAAQrD,aACrC,EA0EMsD,gBAAiB,CAAEC,SAAUlE,EAAyBmE,WAAY,KAElEnI,EAAAA,cAACoI,EAAAA,EAAiB,CAChB9G,cAAe+B,EACf5B,KAAsB,UAAhB+B,EAA0B,QAAUA,EAC1CjC,QAASmC,QAAAA,EAAkB,GAC3B2E,SAAU/D,EACVgE,2BAA4BlF,EAAYwD,0BACxC2B,iBAAkBnF,EAAYoF,WAC9BC,eAlDgB,WACtBzD,IACA0D,EAAkB3I,GAAO,kBCvDD,SAACmE,EAA0Bf,EAAkBjC,GAA0C,IAAAyH,EAC3GC,GAA4E,QAAxDD,EAAAzE,EAAU8B,QAAQJ,MAAK,SAAAM,GAAM,OAAIA,EAAOhD,KAAOC,CAAQ,WAAC,IAAAwF,OAAA,EAAxDA,EAA0D5I,QAAS,GAgB7F,OAdAmE,EAAU6B,gBAAgB,CACxBC,QAAS9B,EAAU8B,QAAQ6C,QAAO,SAAA3C,GAAM,OAAIA,EAAOhD,KAAOC,CAAQ,MAGpE2F,EAAAA,EAAAA,QACE9I,EAAAA,cAAA,OAAKuC,MAAO,CAAEwG,QAAS,iBACrB/I,EAAAA,cAAA,QAAMuC,MAAO,CAAEyG,WAAY,IAAKC,WAAY,WACzCL,GAEF,IACA1H,EAAY,gDAIVsH,EAAAA,EAAAA,IAAWtE,EAAUhB,GAAIC,EAClC,CDqCmC+F,CAAahF,EAAWf,EAAUjC,EAAY,GAAEA,EACjF,EAgDQiI,+BAAgC/F,EAAYgG,kCAKtD,EEvIA,IAAMC,EAAkC,SAACvI,GACvC,IAAM,MAAEf,EAAK,aAAEuJ,EAAY,UAAEC,EAAS,eAAExI,GAAmBD,EAU3D,OARAuD,EAAAA,EAAAA,YAAU,WACR,IAAMmF,EAAmB,SAACnC,GAAM,OAAWA,EAAEoC,gBAAgB,EAI7D,OAFAC,OAAOC,iBAAiB,SAAUH,GAE3B,kBAAME,OAAOE,oBAAoB,SAAUJ,EAAiB,CACrE,GAAG,IAGDxJ,EAAAA,cAAC6J,EAAAA,GAAc,KACb7J,EAAAA,cAAC8J,EAAAA,EAAS,CAACvH,MAAO,CAAEwH,YAAa,EAAGpC,MAAO,UACzC3H,EAAAA,cAACgK,EAAS,CAACjK,MAAOA,KAEpBC,EAAAA,cAACiK,EAAoBnJ,GACrBd,EAAAA,cAAC8J,EAAAA,EAAS,CAACvH,MAAO,CAAEoF,MAAO,UACzB3H,EAAAA,cAACkK,EAAAA,GAAY,MACV9I,EAAAA,EAAAA,GAAWkI,KAGhBtJ,EAAAA,cAAC8J,EAAAA,EAAS,CACRvH,MAAO,CAAEoF,MAAO,QAASwC,SAAU,SAAUC,aAAc,aAE3DpK,EAAAA,cAACqK,EAAW,CACVrJ,gBAAiBuI,EACjBxI,eAAgBA,KAK1B,EAEA,QAAef,EAAAA,KAAWqJ,G,yDC5CbiB,IAAa3K,EAAAA,EAAAA,GAAO4K,GAAAA,EAAP5K,CAAYC,KAAAA,GAAAC,IAAA,sRAczB2K,IAAqB7K,EAAAA,EAAAA,GAAO8K,GAAAA,EAAP9K,CAAgBc,KAAAA,GAAAZ,IAAA,gL,wBCD5C6K,GAA0C,CAAExC,SAAU,EAAGC,WAAY,GAOrEwC,GAA8C,SAAC7J,GACnD,IAAM,gBAAE8J,EAAe,wBAAEC,GAA4B/J,GAE9C8C,EAAUC,IAAeN,EAAAA,EAAAA,UAA2B,OAEnDtC,EAAGC,IAAgBC,EAAAA,EAAAA,OAErB,KAAE2J,EAAI,GAAEC,EAAE,UAAExB,GAAcqB,EAE1B5F,EAAU,WACdnB,EAAY,KACd,EAOA,OACE7D,EAAAA,cAAC6J,EAAAA,GAAc,KACb7J,EAAAA,cAAC8J,EAAAA,EAAS,CAACvH,MAAO,CAAEwH,YAAa,EAAGpC,MAAO,UACzC3H,EAAAA,cAACgK,EAAS,CAACjK,MAAOgL,EAAGhL,SAEvBC,EAAAA,cAAC8J,EAAAA,EAAS,KACR9J,EAAAA,cAACuH,EAAAA,EAAY,CACXC,UAAUC,EAAAA,EAAAA,GAAoB,kBAAmBvG,GACjDkG,QAAS,SAAC4D,GAAK,OAAWnH,EAAYmH,EAAM1D,cAAc,EAC1DK,MAAM,QACNnF,OAAO,SAETxC,EAAAA,cAACsK,GAAU,CACTxC,OAAQlE,EACRA,SAAUA,EACVoB,QAASA,EACT+C,mBAAoB,KACpBkD,aAAc,CAAE/C,SAAU,SAAUC,WAAY,QAChDF,gBAAiByC,IAEjB1K,EAAAA,cAACwK,GAAkB,CAACpD,QAzBJ,WACtBpC,IACA0D,EAAkBqC,EAAGhL,OAAO,kBAAM8K,GAAyB,GAAE3J,EAC/D,GAuBUlB,EAAAA,cAAA,WACEA,EAAAA,cAACkL,GAAAA,EAAS,CAACzJ,KAAK,WAChBzB,EAAAA,cAACmL,GAAAA,EAAe,CAAC/I,KAAK,SAASX,KAAK,wBAK5CzB,EAAAA,cAAC8J,EAAAA,EAAS,CAACvH,MAAO,CAAEoF,MAAO,WAC3B3H,EAAAA,cAAC8J,EAAAA,EAAS,CACRvH,MAAO,CAAEoF,MAAO,QAASwC,SAAU,SAAUC,aAAc,aAE3DpK,EAAAA,cAACqK,EAAW,CACVtJ,eAAgB+J,EAAK/K,MACrBiB,gBAAiBoK,KAAO7B,GAAW8B,YAK7C,EAEA,SAAerL,EAAAA,KAAW2K,ICZ1B,SApD8C,SAAC7J,GAC7C,IAAM,MAAEV,EAAK,QAAE4F,EAAO,iBAAEsF,EAAmB,GAAE,wBAAET,GAA4B/J,GAEnEG,EAAGC,IAAgBC,EAAAA,EAAAA,MAU3B,OACEnB,EAAAA,cAAA,OAAKuC,MAAO,CAAEgJ,OAAQ,EAAG5D,MAAO,UAC9B3H,EAAAA,cAACN,EAAU,KACRU,GAEHJ,EAAAA,cAACwL,EAAAA,EAAK,CAACjJ,MAAO,CAAEoF,MAAO,OAAQ8D,aAAc,GAAIzI,UAAW,KAC1DhD,EAAAA,cAAC0L,EAAAA,EAAS,KACR1L,EAAAA,cAAC2L,EAAAA,EAAQ,KACP3L,EAAAA,cAAC4L,EAAAA,GAAe,CAACrJ,MAAO,CAAEoF,MAAO,QAASoC,YAAa,IACpD7I,EAAY,uDAEflB,EAAAA,cAAC4L,EAAAA,GAAe,CAACrJ,MAAO,CAAEoF,MAAO,UAC9BzG,EAAY,2DAEflB,EAAAA,cAAC4L,EAAAA,GAAe,CAACrJ,MAAO,CAAEoF,MAAO,UAC9BzG,EAAY,2DAEflB,EAAAA,cAAC4L,EAAAA,GAAe,CAACrJ,MAAO,CAAEoF,MAAO,UAC9BzG,EAAY,4DAInBlB,EAAAA,cAAC6L,EAAAA,EAAS,KACP7F,EAAQC,KAAI,SAAAC,GAAM,OACjBlG,EAAAA,cAACqJ,EAASyC,IAAA,CAACC,IAAK7F,EAAOhD,IAAQgD,GAAU,IAE1CoF,EAAiBrF,KAAI,SAAA2E,GAAe,OACnC5K,EAAAA,cAAC2K,GAAkB,CACjBoB,IAAKnB,EAAgB1H,GACrB0H,gBAAiBA,EACjBC,wBAAuBmB,KAAE,mBAtCN9I,EAsCuD0H,EAAgB1H,QArC/F2H,GAILA,EAAwB3H,IALI,IAACA,CAsC0E,KAC7F,MAMd,E,gBClEA,UAAe,E,SAAA,GAA4B,gBAAoB,OAAQ,CACrE+I,EAAG,wJACD,Q,4BCCSC,IAA6BvM,EAAAA,EAAAA,GAAO,MAAPA,CAAaC,KAAAA,GAAAC,IAAA,+BAI1CsM,IAAoBxM,EAAAA,EAAAA,GAAO,OAAPA,CAAcc,KAAAA,GAAAZ,IAAA,4KAUlCuM,IAAsBzM,EAAAA,EAAAA,GAAO0M,EAAAA,GAAP1M,CAAuBgB,KAAAA,GAAAd,IAAA,uKAS7CyM,IAAkB3M,EAAAA,EAAAA,GAAO,QAAPA,CAAekB,KAAAA,GAAAhB,IAAA,kdAyBjC0M,IAAsB5M,EAAAA,EAAAA,GAAO,MAAPA,CAAa6M,KAAAA,GAAA3M,IAAA,8DAI5C,SAAAiB,GAAK,OAAIA,EAAM2L,iBAAmB,mBAAqB,EAAE,IAGhDC,IAAW/M,EAAAA,EAAAA,GAAOgN,GAAPhN,CAAYiN,KAAAA,GAAA/M,IAAA,mHAIxB,SAAAiB,GAAK,OAAIA,EAAM+L,OAAS,6BAA+B,8BAA8B,IACnF,SAAA/L,GAAK,OAAIA,EAAM+L,OAAS,6BAA+B,8BAA8B,IAItFC,IAAgBnN,EAAAA,EAAAA,GAAO,OAAPA,CAAcoN,KAAAA,GAAAlN,IAAA,yIAQ9BmN,IAAoBrN,EAAAA,EAAAA,GAAO,MAAPA,CAAasN,KAAAA,GAAApN,IAAA,8EClEjCqN,GAA0C,SAAApM,GACrD,IAAM,cAAEqM,EAAa,cAAEC,EAAa,aAAEC,GAAiBvM,GAEhDwM,EAAWC,IAAgBhK,EAAAA,EAAAA,WAAkB,IAC7CiK,EAAaC,IAAkBlK,EAAAA,EAAAA,UAAiB6J,IAChDM,EAAWC,IAAgBpK,EAAAA,EAAAA,WAAkB,IAE5CtC,EAAGC,IAAgBC,EAAAA,EAAAA,OAE3BkD,EAAAA,EAAAA,YAAU,WACHiJ,GACHG,EAAeL,EAEnB,GAAG,CAACA,EAAeE,IAEnB,IAAMM,EAAkB,WACtB,IAAMC,EAAUL,EAAYM,OAAOC,QAAQ,QAAS,KAEhDF,EACFR,EAAaQ,GAEbJ,EAAeL,GAGjBG,GAAa,GACbI,GAAa,EACf,EAQA,OAAKL,EAiBHtN,EAAAA,cAACsM,GAAe,CACdpJ,GAAG,qBACH8K,WAAW,EACXC,UAAW,SAACjD,GACQ,UAAdA,EAAMe,MACRf,EAAMvB,iBACNmE,IAEJ,EACAvF,SAAU,SAAC2C,GAAK,OAAWyC,EAAezC,EAAM1D,cAAc4G,MAAM,EACpEC,OAAQ,WACNP,GACF,EACAQ,aAAcZ,EACdU,MAAOV,EACPa,YAAanN,EAAY,4DAA8D,KA9BvFlB,EAAAA,cAACuM,GAAmB,CAClBnF,QATsB,WACtB+F,GACFI,GAAa,EAEjB,EAMMe,aAAc,kBAAYX,GAAa,EAAK,EAC5CY,aAAc,kBAAYZ,GAAa,EAAM,EAC7ClB,iBAAkBU,GAElBnN,EAAAA,cAACmM,GAAiB,KACfqB,GAEFL,EAAgBnN,EAAAA,cAAC0M,GAAQ,CAACG,OAAQa,IAAgB,KAwB3D,E,qkBCFA,SArEmC,WACjC,IAAOc,EAAoBC,IAAyBlL,EAAAA,EAAAA,WAAkB,GAEhEW,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,KAErBnD,EAAGC,IAAgBC,EAAAA,EAAAA,MA0BvBuN,EAAiB,KAAOxK,EAAUyK,gBAAkB,GAAGC,WAK3D,OAJI1K,EAAU2K,kBACZH,EAAiB,IAIjB1O,EAAAA,cAACkM,GAA0B,CAAC4C,aAAa,GACvC9O,EAAAA,cAACkN,GAAa,CACZC,cAAejJ,EAAUd,YAAY2L,cACrC3B,cAAelJ,EAAU2B,KACzBwH,aA9BwB,SAACQ,IAC7BA,GAAWA,GAAW,IAAIC,OAAOC,QAAQ,QAAS,QAClC7J,EAAU2B,OAI1B3B,EAAU6B,gBAAgB,CACxBF,KAAMgI,IAGR3J,EAAU8K,0BAA0B9K,EAAU+K,oBAAoBhJ,KAChE,SAAAiJ,GAAkB,OAAIA,EAAmBhM,KAAOgB,EAAUhB,GAAEiD,GAAAA,GAAA,GACrD+I,GAAkB,IAAErJ,KAAMgI,IAC/BqB,CAAkB,MAGtBC,EAAAA,EAAAA,IAAgBjL,EAAUhB,GAAI2K,GAChC,IAeK3J,EAAUd,YAAYgM,cACrBpP,EAAAA,cAACgN,GAAiB,KAChBhN,EAAAA,cAAC8M,GAAa,KACX5I,EAAU8B,QAAQrE,OAClB+M,EACA,IACAxN,EAAY,+CAGflB,EAAAA,cAAC8M,GAAa,KACX5L,EAAY,gDACZ,IACDlB,EAAAA,cAACoM,GAAmB,CAAChF,QAhDV,WACnBqH,GAAsB,EACxB,GA+CavN,EAAY,mDAIjB,KACJlB,EAAAA,cAACqP,GAAAA,EAAkB,CACjBC,QAASd,EACTxJ,QAAS,kBAAYyJ,GAAsB,EAAM,IAIzD,E,2BCjEA,SARiC,eAAA3O,EAAAkM,KAAG,UAAOuD,GACzC,IAAMC,QAAiBC,EAAAA,GAAAA,MAEvBF,EAAQG,WAAW,CACjBC,kBAAkBH,aAAQ,EAARA,EAAUG,mBAAoB,IAEpD,IAAC,gBANgCC,GAAA,OAAA9P,EAAA+P,MAAA,KAAAC,UAAA,K,0DCEpBC,IAAkBpQ,EAAAA,EAAAA,GAAO,IAAPA,CAAWC,KAAAA,GAAAC,IAAA,wBAI7BmQ,IAAuBrQ,EAAAA,EAAAA,GAAO,MAAPA,CAAac,KAAAA,GAAAZ,IAAA,kOAcpCoQ,IAA0BtQ,EAAAA,EAAAA,GAAO,MAAPA,CAAagB,KAAAA,GAAAd,IAAA,gGAiBvCqQ,KAVuBvQ,EAAAA,EAAAA,GAAOwQ,GAAAA,EAAPxQ,CAAmBkB,KAAAA,GAAAhB,IAAA,4GAUzBF,EAAAA,EAAAA,GAAO,MAAPA,CAAa6M,KAAAA,GAAA3M,IAAA,iKAS9BuQ,IAAiBzQ,EAAAA,EAAAA,GAAM0Q,GAAAA,EAAN1Q,CAAaiN,KAAAA,GAAA/M,IAAA,qE,YCA3C,SAnC0C,SAAHC,GAMpB,IANwB,YACzCwQ,EAAW,UACXvO,EAAS,SACTW,EAAQ,kBACR6N,EAAiB,YACjBC,GACD1Q,GACSmB,EAAGC,IAAgBC,EAAAA,EAAAA,MAkB3B,OACEnB,EAAAA,cAAA,OAAKuC,MAAO,CAAEwG,QAAS,OAAQ0H,eAAgB,WAAYzN,UAAW,KAhBlEwN,EAEAxQ,EAAAA,cAAC0Q,GAAAA,EAAe,CAACtJ,QAASrF,EAAW2F,SAAU6I,EAAmBhO,MAAO,CAAES,UAAW,EAAG2N,YAAa,IACnGL,GAMLtQ,EAAAA,cAAC4Q,GAAAA,EAAY,CAACxJ,QAASrF,EAAW2F,SAAU6I,EAAmBhO,MAAO,CAAES,UAAW,EAAG2N,YAAa,IAChGL,GAQHtQ,EAAAA,cAAC6Q,GAAAA,EAAiB,CAACzJ,QAAS1E,GACzBxB,EAAY,gBAIrB,E,qBC5Ca4P,IAAcnR,EAAAA,EAAAA,GAAOoR,GAAAA,EAAPpR,CAAaC,KAAAA,GAAAC,IAAA,yGAO3BmR,IAAerR,EAAAA,EAAAA,GAAO,MAAPA,CAAac,KAAAA,GAAAZ,IAAA,qGAI9B,SAAAiB,GAAK,OAAIA,EAAM6G,KAAK,ICW/B,SAfgD,SAAC7G,GAC/C,IAAM,UAAEmQ,EAAS,QAAEjM,EAAO,SAAEkM,EAAQ,MAAEvJ,EAAQ,QAAW7G,EAEzD,OACEd,EAAAA,cAAC8Q,GAAW,CACVhJ,KAAMmJ,EACNjM,QAASA,GAEThF,EAAAA,cAACgR,GAAY,CAACrJ,MAAOA,GAClBuJ,GAIT,ECuEA,SA/E8D,SAACpQ,GAC7D,IAAM,UAAEmQ,EAAS,aAAEE,EAAY,gBAAEC,GAAoBtQ,GAE9CuQ,EAA2BC,IAAgC/N,EAAAA,EAAAA,UAAS,KAErE,eAAEgO,GAAiB,EAAI,SAAEC,EAAQ,OAAEC,EAAM,cAAEC,EAAa,cAAEC,EAAe9L,KAAMuH,IAAkBjJ,EAAAA,EAAAA,YAAWC,EAAAA,IAE5GwN,GAAYC,EAAAA,EAAAA,cAAY,kBAAMV,GAAa,EAAM,GAAE,CAACA,KAElDlQ,EAAGC,IAAgBC,EAAAA,EAAAA,MAGrB2Q,EADsBN,GAAYC,IAAWM,GAAAA,IACFR,GAEjDlN,EAAAA,EAAAA,YAAU,WACH4M,GACHK,EAA6B,GAEjC,GAAG,CAACL,IAEJ,IASMe,EAAWF,EACf,8DACA,4DAEF,OACE9R,EAAAA,cAACiS,GAAa,CACZhB,UAAWA,EACXjM,QAAS4M,EACTjK,MAAM,SAEN3H,EAAAA,cAACkQ,GAAc,KACblQ,EAAAA,cAACkS,EAAAA,GAAK,CAACC,QAASH,EAAUI,OAAQ,CAAEvM,KAAMuH,MAE5CpN,EAAAA,cAACgQ,GAAoB,KACnBhQ,EAAAA,cAACiQ,GAAuB,KACpB6B,EAIE,KAHF9R,EAAAA,cAAA,WACEA,EAAAA,cAACkS,EAAAA,GAAK,CAACC,QAAQ,4DAA4DC,OAAQ,CAAEvM,KApBrD,IAAIwM,KAAKX,GAClDY,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,MAAO,UAAWC,IAAK,gBAsBjEzS,EAAAA,cAAA,WACEA,EAAAA,cAACkS,EAAAA,GAAK,CAACC,QAAQ,iEAAiEO,MAAOf,MAG3F3R,EAAAA,cAAC+P,GAAe,CAACxN,MAAO,CAAES,UAAW,KAClC9B,EAAY,0CACZ,IACDlB,EAAAA,cAAA,YAAM,YAGL,IACAkB,EAAY,gCAGjBlB,EAAAA,cAACoQ,GAAc,CACb/B,YAAanN,EAAY,gDAAkD,GAC3EgN,MAAOmD,EACPhJ,SAAU,SAAC2C,GAAK,IAAA2H,EAAA,OAAWrB,EAAyC,QAAbqB,EAAC3H,EAAM4H,cAAM,IAAAD,OAAA,EAAZA,EAAczE,MAAM,IAE9ElO,EAAAA,cAAC6S,GAAa,CACZvC,YAAapP,EAAY,sCACzBqP,kBAAiD,WAA9Bc,EACnBtP,UAnDgB,WACc,WAA9BsP,GACFD,GAEJ,EAgDM1O,SAAUkP,EACVpB,aAAa,IAIrB,EC/CA,SA/B4D,SAAC1P,GAC3D,IAAM,cAAEsM,EAAa,UAAE6D,EAAS,aAAEE,EAAY,QAAE2B,GAAYhS,EAEtD8Q,GAAYC,EAAAA,EAAAA,cAAY,kBAAMV,GAAa,EAAM,GAAE,CAACA,KAElDlQ,EAAGC,IAAgBC,EAAAA,EAAAA,MAE3B,OACEnB,EAAAA,cAACiS,GAAa,CACZhB,UAAWA,EACXjM,QAAS4M,EACTjK,MAAM,SAEN3H,EAAAA,cAACkQ,GAAc,KACblQ,EAAAA,cAACkS,EAAAA,GAAK,CAACC,QAAQ,4BAA4BC,OAAQ,CAAEhF,oBAEvDpN,EAAAA,cAACgQ,GAAoB,KACnBhQ,EAAAA,cAAC+P,GAAe,CAACxN,MAAO,CAAES,UAAW,KAClC9B,EAAY,qCAGjBlB,EAAAA,cAAC6S,GAAa,CACZvC,YAAapP,EAAY,oCACzBa,UAAW+Q,EACXpQ,SAAUkP,EACVpB,aAAa,IAIrB,EC2CA,SAvEsD,WACpD,IAAOuC,EAA+BC,IAAoCzP,EAAAA,EAAAA,WAAkB,IACrF0P,EAA8BC,IAAmC3P,EAAAA,EAAAA,WAAkB,GAEpFgM,GAAUpL,EAAAA,EAAAA,YAAWgP,EAAAA,IACrBC,GAAejP,EAAAA,EAAAA,YAAWC,EAAAA,KACxBlB,GAAImD,EAAW,OACrBgN,EAAM,GACN7M,EACA8M,MAAOC,EACP1N,KAAMuH,EAAa,oBACnB6B,EAAmB,0BACnBD,GACEoE,GAEInS,EAAGC,IAAgBC,EAAAA,EAAAA,MAErBqS,EAAc,eAAA1T,EAAAkM,KAAG,YACrBgH,GAAiC,GACjCE,GAAgC,GAEhC,IAAMO,EAAmBxE,EAAoBpG,QAAO,SAAA3E,GAAS,OAAIA,EAAUhB,KAAOmD,CAAW,IAE7F2I,EAA0ByE,GAE1BC,GAA4BnE,SACtBoE,EAAAA,GAAAA,GAAgBF,EAAiB,GAAGvQ,GAAIkQ,EAAc7D,EAC9D,IAAC,kBAVmB,OAAAzP,EAAA+P,MAAA,KAAAC,UAAA,KAyBd8D,EAAmBP,IAAWE,EAEpC,OACEvT,EAAAA,cAAAA,EAAAA,SAAA,KACI4T,EAIE,KAHF5T,EAAAA,cAAC0Q,GAAAA,EAAe,CAACtJ,QAbO,WAAH,OAAe8L,GAAgC,EAAK,GActEhS,EAAY,kDAGhB0S,EACC5T,EAAAA,cAAC0Q,GAAAA,EAAe,CAACtJ,QAZQ,WAAH,OAAe4L,GAAiC,EAAK,GAaxE9R,EAAY,mDAEb,KACJlB,EAAAA,cAAC6T,GAAoB,CACnB5C,UAAW8B,EACX5B,aAAc6B,EACd5B,gBAvB2B,YAC/B0C,EAAAA,GAAAA,IAAgBzN,GAAa0N,MAAK,kBAAMP,GAAgB,GAC1D,IAuBIxT,EAAAA,cAACgU,GAAmB,CAClB5G,cAAeA,EACf6D,UAAWgC,EACX9B,aAAc+B,EACdJ,QApCmB,WAAH,OAAgCmB,QAAQC,IAAI,EAChE1L,EAAAA,EAAAA,IAAWnC,GAAaG,aAAE,EAAFA,EAAItD,KAAM,IAClCsQ,KACA,IAqCJ,E,mRCWA,SA1E8B,WAAM,IAAAvQ,EAAAkR,GAC3B7I,EAAkB8I,IAAuB7Q,EAAAA,EAAAA,UAA6B,IAEvEW,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,KAErBnD,EAAGC,IAAgBC,EAAAA,EAAAA,OAE3BkD,EAAAA,EAAAA,YAAU,YACRgQ,EAAAA,GAAAA,IAAoB,wBAEpB,IAAMtO,EAAe,eAAAjG,EAAAkM,KAAG,YACtB,IAAMsI,QAAsBC,EAAAA,GAAAA,IAAiBrQ,EAAUhB,IACvDgB,EAAU6B,gB,mWAAeI,CAAC,CAAC,EAAImO,GACjC,IAAC,kBAHoB,OAAAxU,EAAA+P,MAAA,KAAAC,UAAA,KAKf0E,EAAoB,eAAAC,EAAAzI,KAAG,YAC3B,IAAM0I,QAAuBC,EAAAA,GAAAA,MAC7BP,EAAoBM,EACtB,IAAC,kBAHyB,OAAAD,EAAA5E,MAAA,KAAAC,UAAA,KAK1B0E,IACAzO,GACF,GAAG,IAEH,IAAM,eAAE6O,EAAc,cAAEC,IAAkBC,EAAAA,EAAAA,UAAQ,kBAAM5Q,EAAU8B,QAC/DxE,QAAiC,SAACuT,EAAQ7O,GAOzC,OANIA,EAAO5E,cACTyT,EAAOH,eAAeI,KAAK9O,GAE3B6O,EAAOF,cAAcG,KAAK9O,GAGrB6O,CACT,GAAG,CAAEH,eAAgB,GAAIC,cAAe,IAAK,GAAE,CAAC3Q,EAAU8B,UAEtDiP,GAAsBL,EAAejT,QAAwC,IAA7BuC,EAAU8B,QAAQrE,SAAiBuC,EAAUd,YAAYgM,cACzG8F,GAAsC,QAAZjS,EAAAiB,EAAUsC,UAAE,IAAAvD,OAAA,EAAZA,EAAc3B,gBAAiB2T,EAEzDpK,EAAuB,eAAAsK,EAAAnJ,KAAG,UAAOoJ,SAC/BC,EAAAA,GAAAA,IAAoBD,GAC1BhB,EAAoB,IAAI9I,EAAiBzC,QAAO,SAAAyM,GAAa,OAAIA,EAAcpS,KAAOkS,CAAc,KACtG,IAAC,gBAH4BxF,GAAA,OAAAuF,EAAAtF,MAAA,KAAAC,UAAA,KAK7B,OAAK5L,EAAUqR,SAKbvV,EAAAA,cAACwV,GAAAA,EAAU,CAACC,OAAO,UAAUC,YAAW,qBAAAC,OAAuBjM,OAAOkM,mBAAqB,KACzF5V,EAAAA,cAAC6V,GAAgB,OAChBhB,EAAclT,QAAuB,QAAbwS,EAACjQ,EAAUsC,UAAE,IAAA2N,GAAZA,EAAc7S,cAOpC,KANFtB,EAAAA,cAAC8V,GAAY,CACX1V,MAAOc,EAAY,oDACnB8E,QAAS6O,EACTvJ,iBAAkBA,EAClBT,wBAAyBA,IAG3BoK,EAKE,KAJFjV,EAAAA,cAAC8V,GAAY,CACX1V,MAAOc,EAAY,kDACnB8E,QAAS4O,IAGZM,EACClV,EAAAA,cAAC8M,EAAAA,GAAa,KACX5L,EAAY,uDAEb,KACJlB,EAAAA,cAAC+V,GAAgB,OAzBZ/V,EAAAA,cAACgW,GAAAA,EAAW,KA4BvB,C,kDCzEA,QAboD,SAAClV,GAAK,OACxDd,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAK2H,MAAO7G,EAAM6G,OAAS,KAAMnF,OAAQ1B,EAAM0B,QAAU,KAAMyT,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACnGnW,EAAAA,cAAA,UAAQoW,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAAMC,OAAO,8BACvCvW,EAAAA,cAAA,UAAQoW,GAAG,KAAKC,GAAG,IAAIC,EAAE,MAAMC,OAAO,8BACtCvW,EAAAA,cAAA,QAAMkD,GAAG,6BAA6BgT,KAAK,6BACzClW,EAAAA,cAAA,QAAMwW,SAAS,UAAUC,SAAS,UAAUxK,EAAE,6LAEhDjM,EAAAA,cAAA,QAAMiM,EAAE,2nBAA2nBiK,KAAK,4BAA4BQ,KAAK,sCAEvqB,C","sources":["webpack://GoLogin/./src/app/features/members/members-page/page-styles.tsx","webpack://GoLogin/./src/app/features/members/member-row/email/index.tsx","webpack://GoLogin/./src/app/features/members/member-row/invited/styles.tsx","webpack://GoLogin/./src/app/features/members/member-row/invited/index.tsx","webpack://GoLogin/./src/app/features/members/role-select/row-role-title.ts","webpack://GoLogin/./src/app/features/members/member-row/permissions/delete-member-confirm.ts","webpack://GoLogin/./src/app/features/members/member-row/permissions/folders-grey-text.tsx","webpack://GoLogin/./src/app/features/members/member-row/permissions/index.tsx","webpack://GoLogin/./src/app/features/members/member-row/permissions/member-actions.tsx","webpack://GoLogin/./src/app/features/members/member-row/index.tsx","webpack://GoLogin/./src/app/features/members/my-shared-account-row/styles.tsx","webpack://GoLogin/./src/app/features/members/my-shared-account-row/index.tsx","webpack://GoLogin/./src/app/features/members/members-page/members-table.tsx","webpack://GoLogin/./node_modules/@material-ui/icons/esm/Edit.js","webpack://GoLogin/./src/app/features/members/members-page/title/styles.tsx","webpack://GoLogin/./src/app/features/members/members-page/title/workspace-name.tsx","webpack://GoLogin/./src/app/features/members/members-page/title/index.tsx","webpack://GoLogin/./src/app/features/common/check-and-set-default-workspace.tsx","webpack://GoLogin/./src/app/features/members/members-page/workspaces-actions/styles.tsx","webpack://GoLogin/./src/app/ui/action-buttons/index.tsx","webpack://GoLogin/./src/app/ui/material-modal/styles.tsx","webpack://GoLogin/./src/app/ui/material-modal/index.tsx","webpack://GoLogin/./src/app/features/members/members-page/workspaces-actions/delete-workspace-modal.tsx","webpack://GoLogin/./src/app/features/members/members-page/workspaces-actions/leave-workspace-modal.tsx","webpack://GoLogin/./src/app/features/members/members-page/workspaces-actions/index.tsx","webpack://GoLogin/./src/app/features/members/members-page/index.tsx","webpack://GoLogin/./src/app/ui/icons/IconPerson.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const TableTitle = styled('span')`\r\n  font: 400 16px 'Roboto';\r\n  color: var(--000000-members-page);\r\n  line-height: 20px;\r\n  letter-spacing: 0.15px;\r\n`;\r\n","import { Tooltip } from 'antd';\r\nimport React from 'react';\r\n\r\nimport IconPerson from '../../../../ui/icons/IconPerson';\r\nimport { EmailCell, EmailColumn, EmailTooltip } from '../../../../ui/styles';\r\n\r\ninterface ICellEmail {\r\n  email: string;\r\n}\r\n\r\nconst CellEmail: React.FC<ICellEmail> = ({ email }) => (\r\n  <EmailCell>\r\n    <IconPerson />\r\n    <Tooltip\r\n      title={(\r\n        <EmailTooltip>\r\n          {email}\r\n        </EmailTooltip>\r\n      )}\r\n    >\r\n      <EmailColumn>\r\n        {email}\r\n      </EmailColumn>\r\n    </Tooltip>\r\n  </EmailCell>\r\n);\r\n\r\nexport default CellEmail;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const InvitedContainer = styled('div')`\r\n  margin: 10px 8px;\r\n`;\r\n\r\nexport const InvitedByEmailWrapper = styled('div')`\r\n  font-family: \"Roboto\";\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  color: var(--222222-members-row);\r\n  margin-left: 1px;\r\n`;\r\n\r\nexport const InviteDateWrapper = styled('div')`\r\n  opacity: 0.5;\r\n  font-family: 'Roboto';\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  color: var(--22222280-members-row);\r\n  margin-left: 1px;\r\n`;\r\n\r\nexport const InvitedByColumn = styled('span')`\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n  letter-spacing: normal;\r\n  color: var(--000000DE-members-row);\r\n`;\r\n","import { Tooltip } from 'antd';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport dateToText from '../../../../utils/date-to-text';\r\nimport {\r\n  InviteDateWrapper,\r\n  InvitedByColumn,\r\n  InvitedByEmailWrapper,\r\n  InvitedContainer,\r\n} from './styles';\r\n\r\ninterface ICellInvited {\r\n  invitedByEmail?: string;\r\n  inviteCreatedAt?: Date;\r\n}\r\n\r\nconst CellInvited: React.FC<ICellInvited> = (props) => {\r\n  const { invitedByEmail, inviteCreatedAt } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  if (!inviteCreatedAt) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Tooltip\r\n      title={(\r\n        <InvitedContainer>\r\n          <InvitedByEmailWrapper>\r\n            {translation('personalArea.workspaceSettings.membersTable.invitedBy')}\r\n            &nbsp;\r\n            {invitedByEmail}\r\n          </InvitedByEmailWrapper>\r\n          <InviteDateWrapper>\r\n            {dateToText(inviteCreatedAt)}\r\n          </InviteDateWrapper>\r\n        </InvitedContainer>\r\n      )}\r\n    >\r\n      <InvitedByColumn>\r\n        {invitedByEmail || ''}\r\n      </InvitedByColumn>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default CellInvited;\r\n","import { IWorkspaceFolderRole, WorkspaceRole } from '../../../interfaces/workspaces';\r\n\r\ntype ROLE = 'owner' | 'admin' | 'editor' | 'guest' | 'varies' | 'noAccess';\r\n\r\nconst rawFromLimitedAccess = (folders: IWorkspaceFolderRole[]): ROLE =>\r\n  folders.reduce<ROLE>((role, folder) => {\r\n    if (!role || role === folder.role) {\r\n      return folder.role === 'owner' ? 'admin' : folder.role;\r\n    }\r\n\r\n    return 'varies';\r\n  }, folders.length ? folders[0].role : 'noAccess');\r\n\r\nconst getPermissionsRoleTitle = (\r\n  workspaceRole: WorkspaceRole,\r\n  limitedAccess: boolean,\r\n  folders: IWorkspaceFolderRole[],\r\n): ROLE => {\r\n  if (!limitedAccess) {\r\n    return workspaceRole;\r\n  }\r\n\r\n  return rawFromLimitedAccess(folders);\r\n};\r\n\r\nexport default getPermissionsRoleTitle;\r\n","import { Modal } from 'antd';\r\nimport { TFunction } from 'i18next';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst showDeleteConfirm = (email: string, onConfirm: () => void, translation: TFunction): void => {\r\n  confirm({\r\n    title: translation('permissionSelectMenu.removeMember.title'),\r\n    content: email,\r\n    okText: translation('base.cancel'),\r\n    cancelText: translation('permissionSelectMenu.removeMember.remove'),\r\n    okButtonProps: { type: 'primary' },\r\n    cancelButtonProps: { type: 'default' },\r\n    className: 'deleteMemberConfirm',\r\n    style: {\r\n      height: '152px',\r\n      paddingBottom: 0,\r\n    },\r\n    onCancel: onConfirm,\r\n    keyboard: false,\r\n    maskClosable: false,\r\n  });\r\n};\r\n\r\nexport default showDeleteConfirm;\r\n","import styled from '@emotion/styled';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IWorkspaceFolderRole } from '../../../../interfaces/workspaces';\r\n\r\nexport const GreyText = styled('span')`\r\n  color: var(--00000080-members-row);\r\n  letter-spacing: 0.4px;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n`;\r\n\r\ninterface IFoldersGreyText {\r\n  limitedAccess: boolean;\r\n  folders: IWorkspaceFolderRole[];\r\n}\r\n\r\nconst FoldersGreyText: React.FC<IFoldersGreyText> = (props) => {\r\n  const { limitedAccess, folders } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  if (!(limitedAccess && folders.length)) {\r\n    return null;\r\n  }\r\n\r\n  let foldersText = translation('personalArea.workspaceSetting.inFolder');\r\n  if (folders.length > 1) {\r\n    foldersText = translation('personalArea.workspaceSetting.inFolders', { foldersCount: folders.length });\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: -2 }}>\r\n      <GreyText>\r\n        {foldersText}\r\n      </GreyText>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoldersGreyText;\r\n","import React, { useContext, useEffect, useLayoutEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { IForMemberPermissions, IWorkspaceFolderRole, IWorkspaceMember, WorkspaceRole } from '../../../../interfaces/workspaces';\r\nimport { workspaceContext } from '../../../../state';\r\nimport { getInviteActionText } from '../../../../utils/roles-texts';\r\nimport PermissionsSelect from '../../permissions-select';\r\nimport getPermissionsRoleTitle from '../../role-select/row-role-title';\r\nimport { SelectButton } from '../../role-select/select-button';\r\nimport { FoldersPermissionsPopover, PermissionsTableCell } from '../row-styles';\r\nimport showDeleteConfirm from './delete-member-confirm';\r\nimport FoldersGreyText from './folders-grey-text';\r\nimport { deleteMember, editMemberPermissions } from './member-actions';\r\n\r\ninterface ICellPermissions extends Partial<IWorkspaceMember> {\r\n  id: string;\r\n  email: string;\r\n  role: WorkspaceRole;\r\n  limitedAccess: boolean;\r\n  folders?: IWorkspaceFolderRole[];\r\n  permissions: IForMemberPermissions;\r\n}\r\n\r\nconst CellPermissions: React.FC<ICellPermissions> = (props) => {\r\n  const { id: memberId, email, role, limitedAccess, folders = [], permissions } = props;\r\n\r\n  const [currentLimitedAccess, setCurrentLimitedAccess] = useState<boolean>(limitedAccess);\r\n  const [currentRole, setCurrentRole] = useState<WorkspaceRole>(role);\r\n  const [currentFolders, setCurrentFolders] = useState<IWorkspaceFolderRole[]>(limitedAccess ? folders : []);\r\n  const [anchorEl, setAnchorEl] = useState<HTMLElement|null>(null);\r\n  const [permissionPopoverHeight, setPermissionPopoverHeight] = useState<number>(0);\r\n  const [popoverPositionVertical, setPopoverPositionVertical] = useState<number>(0);\r\n\r\n  const workspace = useContext(workspaceContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    onPermissionsChange(limitedAccess, role, limitedAccess ? folders : []);\r\n  }, [limitedAccess, role, folders]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!(anchorEl && permissionPopoverHeight)) {\r\n      return;\r\n    }\r\n\r\n    const availableHeight = document.body.clientHeight - anchorEl.getBoundingClientRect().top;\r\n    const offset = anchorEl.clientHeight / 2;\r\n    let heightToSet = permissionPopoverHeight + offset;\r\n    const minimalHeightDiff = 20;\r\n    if (availableHeight - permissionPopoverHeight > minimalHeightDiff) {\r\n      heightToSet = -offset;\r\n    }\r\n\r\n    setPopoverPositionVertical(heightToSet);\r\n  }, [anchorEl, currentLimitedAccess, permissionPopoverHeight]);\r\n\r\n  const fixFoldersPopover = (element: Element): void => {\r\n    setPermissionPopoverHeight(element.clientHeight);\r\n  };\r\n\r\n  const onClose = (): void => {\r\n    setAnchorEl(null);\r\n    const [bodyChildElement] = document.getElementsByTagName('body');\r\n    if (bodyChildElement.hasAttribute('style')) {\r\n      bodyChildElement.removeAttribute('style');\r\n    }\r\n\r\n    const hasLimitedAccessChanged = limitedAccess !== currentLimitedAccess;\r\n    const hasRoleChanged = role !== currentRole;\r\n    const hasFoldersSizeChanged = currentFolders.length !== folders.length;\r\n    const hasFolderRoleChanged = currentFolders.some(currentFolder => {\r\n      const oldFolder = folders.find(folder => currentFolder.name === folder.name);\r\n\r\n      return currentFolder.role !== oldFolder?.role;\r\n    });\r\n\r\n    const haveFoldersChanged = currentLimitedAccess && (hasFoldersSizeChanged || hasFolderRoleChanged);\r\n    const hasPermissionUpdates = hasLimitedAccessChanged || hasRoleChanged || haveFoldersChanged;\r\n    if (hasPermissionUpdates) {\r\n      editMemberPermissions(workspace, memberId, {\r\n        limitedAccess: currentLimitedAccess,\r\n        role: currentRole,\r\n        folders: currentFolders,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isMyRow = memberId === workspace.me?.id;\r\n  const canManageInFolders = currentLimitedAccess && workspace.folders.some(folder => folder.permissions.manageMember);\r\n  const canManagePermissions = !isMyRow && (permissions.manageWorkspaceWideAccess || canManageInFolders);\r\n\r\n  const onDeletePressed = (): void => {\r\n    onClose();\r\n    showDeleteConfirm(email, () => deleteMember(workspace, memberId, translation), translation);\r\n  };\r\n\r\n  const onPermissionsChange = (\r\n    newLimitedAccess: boolean,\r\n    newRole: WorkspaceRole,\r\n    newFolders: IWorkspaceFolderRole[],\r\n  ): void => {\r\n    setCurrentLimitedAccess(newLimitedAccess);\r\n    setCurrentRole(newRole);\r\n    setCurrentFolders(newFolders);\r\n  };\r\n\r\n  const onPermissionsOpen = (e: React.MouseEvent<HTMLElement>): void => {\r\n    if (!anchorEl && canManagePermissions) {\r\n      setAnchorEl(e.currentTarget);\r\n    }\r\n  };\r\n\r\n  const currentRoleTitle = getPermissionsRoleTitle(currentRole, currentLimitedAccess, currentFolders);\r\n\r\n  return (\r\n    <PermissionsTableCell\r\n      limitedAccess={!!(currentLimitedAccess && currentFolders.length)}\r\n      hoverable={canManagePermissions}\r\n      onClick={onPermissionsOpen}\r\n    >\r\n      <SelectButton\r\n        roleText={getInviteActionText(currentRoleTitle, translation)}\r\n        disabled={!canManagePermissions}\r\n        width='264px'\r\n        height='20px'\r\n      />\r\n      <FoldersGreyText limitedAccess={currentLimitedAccess} folders={currentFolders} />\r\n      <FoldersPermissionsPopover\r\n        open={!!anchorEl}\r\n        anchorEl={anchorEl}\r\n        onClose={onClose}\r\n        getContentAnchorEl={fixFoldersPopover as (e: Element) => Element}\r\n        transformOrigin={{ vertical: popoverPositionVertical, horizontal: 24 }}\r\n      >\r\n        <PermissionsSelect\r\n          limitedAccess={currentLimitedAccess}\r\n          role={currentRole === 'owner' ? 'admin' : currentRole}\r\n          folders={currentFolders ?? []}\r\n          onChange={onPermissionsChange}\r\n          isCurrentMemberGlobalAdmin={permissions.manageWorkspaceWideAccess}\r\n          showRemoveMember={permissions.kickMember}\r\n          onRemoveMember={onDeletePressed}\r\n          blockWorkspaceWideAdminSelect={!permissions.manageWorkspaceWideAdminAccess}\r\n        />\r\n      </FoldersPermissionsPopover>\r\n    </PermissionsTableCell>\r\n  );\r\n};\r\n\r\nexport default CellPermissions;\r\n","import { message } from 'antd';\r\nimport React from 'react';\r\nimport { TFunction } from 'i18next';\r\n\r\nimport { IWorkspaceFolderRole, WorkspaceRole } from '../../../../interfaces/workspaces';\r\nimport { IWorkspaceCtx } from '../../../../state';\r\nimport { kickMember, updateMemberPermissions } from '../../api';\r\n\r\ninterface IMemberProto {\r\n  limitedAccess: boolean;\r\n  role: WorkspaceRole;\r\n  folders: IWorkspaceFolderRole[];\r\n}\r\n\r\nexport const editMemberPermissions = (\r\n  workspace: IWorkspaceCtx,\r\n  memberId: string,\r\n  newState: IMemberProto,\r\n): Promise<void> => {\r\n  const { limitedAccess, role, folders } = newState;\r\n\r\n  workspace.updateWorkspace({\r\n    members: workspace.members.map(member => member.id === memberId ? {\r\n      ...member,\r\n      role,\r\n      limitedAccess,\r\n      folders,\r\n    } : member),\r\n  });\r\n\r\n  return updateMemberPermissions({\r\n    workspaceId: workspace.id,\r\n    memberId,\r\n    limitedAccess,\r\n    role,\r\n    folders,\r\n  });\r\n};\r\n\r\nexport const deleteMember = (workspace: IWorkspaceCtx, memberId: string, translation: TFunction): Promise<void> => {\r\n  const kickedMemberEmail = workspace.members.find(member => member.id === memberId)?.email || '';\r\n\r\n  workspace.updateWorkspace({\r\n    members: workspace.members.filter(member => member.id !== memberId),\r\n  });\r\n\r\n  message.success(\r\n    <div style={{ display: 'inline-block' }}>\r\n      <span style={{ fontWeight: 700, fontFamily: 'Roboto' }}>\r\n        {kickedMemberEmail}\r\n      </span>\r\n      {' '}\r\n      {translation('permissionSelectMenu.removeMember.removed')}\r\n    </div>,\r\n  );\r\n\r\n  return kickMember(workspace.id, memberId);\r\n};\r\n","import { TableCell } from '@material-ui/core';\r\nimport React, { FC, useEffect } from 'react';\r\n\r\nimport CellEmail from './email';\r\nimport CellInvited from './invited';\r\nimport CellPermissions from './permissions';\r\nimport {\r\n  LastActivity,\r\n} from './row-styles';\r\nimport { IWorkspaceMember } from '../../../interfaces/workspaces';\r\nimport { CustomTableRow } from '../../../ui/styles';\r\nimport dateToText from '../../../utils/date-to-text';\r\n\r\nconst MemberRow: FC<IWorkspaceMember> = (props) => {\r\n  const { email, lastActiveAt, createdAt, invitedByEmail } = props;\r\n\r\n  useEffect(() => {\r\n    const preventScrolling = (e: any): void => e.preventDefault();\r\n\r\n    window.addEventListener('scroll', preventScrolling);\r\n\r\n    return () => window.removeEventListener('scroll', preventScrolling);\r\n  }, []);\r\n\r\n  return (\r\n    <CustomTableRow>\r\n      <TableCell style={{ paddingLeft: 0, width: '220px' }}>\r\n        <CellEmail email={email} />\r\n      </TableCell>\r\n      <CellPermissions {...props} />\r\n      <TableCell style={{ width: '160px' }}>\r\n        <LastActivity>\r\n          {dateToText(lastActiveAt)}\r\n        </LastActivity>\r\n      </TableCell>\r\n      <TableCell\r\n        style={{ width: '220px', overflow: 'hidden', textOverflow: 'ellipsis' }}\r\n      >\r\n        <CellInvited\r\n          inviteCreatedAt={createdAt}\r\n          invitedByEmail={invitedByEmail}\r\n        />\r\n      </TableCell>\r\n    </CustomTableRow>\r\n  );\r\n};\r\n\r\nexport default React.memo(MemberRow);\r\n","import styled from '@emotion/styled';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nexport const CustomMenu = styled(Menu)`\r\n  .MuiPopover-paper {\r\n    border-radius: 8px;\r\n    width: 302px;\r\n    margin-top: 12px;\r\n    margin-right: 8px;\r\n  };\r\n\r\n  .MuiPaper-root {\r\n    color: var(--000000DE-members-permissions-select);\r\n    background-color: var(--FFFFFF-members-permissions-select);\r\n  }\r\n`;\r\n\r\nexport const SelectRoleMenuItem = styled(MenuItem)`\r\n  &.MuiMenuItem-root {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n    letter-spacing: normal;\r\n  }\r\n\r\n  &.MuiListItem-gutters {\r\n    padding-left: 12px;\r\n  }\r\n`;\r\n","import { PopoverOrigin, TableCell } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport React, { FC, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { CustomMenu, SelectRoleMenuItem } from './styles';\r\nimport { IMySharedAccount } from '../../../interfaces';\r\nimport { CustomTableRow } from '../../../ui/styles';\r\nimport { getInviteActionText } from '../../../utils/roles-texts';\r\nimport CellEmail from '../member-row/email';\r\nimport CellInvited from '../member-row/invited';\r\nimport showDeleteConfirm from '../member-row/permissions/delete-member-confirm';\r\nimport RoleDescription from '../role-select/role-description';\r\nimport RoleTitle from '../role-select/role-title';\r\nimport { SelectButton } from '../role-select/select-button';\r\n\r\nconst INITIAL_TRANSFORM_ORIGIN: PopoverOrigin = { vertical: 0, horizontal: 8 };\r\n\r\ninterface IMySharedAccountRow {\r\n  mySharedAccount: IMySharedAccount;\r\n  onRemoveMySharedAccount: () => Promise<void>;\r\n}\r\n\r\nconst MySharedAccountRow: FC<IMySharedAccountRow> = (props) => {\r\n  const { mySharedAccount, onRemoveMySharedAccount } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = useState<HTMLElement|null>(null);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const { from, to, createdAt } = mySharedAccount;\r\n\r\n  const onClose = (): void => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onDeletePressed = (): void => {\r\n    onClose();\r\n    showDeleteConfirm(to.email, () => onRemoveMySharedAccount(), translation);\r\n  };\r\n\r\n  return (\r\n    <CustomTableRow>\r\n      <TableCell style={{ paddingLeft: 0, width: '220px' }}>\r\n        <CellEmail email={to.email} />\r\n      </TableCell>\r\n      <TableCell>\r\n        <SelectButton\r\n          roleText={getInviteActionText('mySharedAccount', translation)}\r\n          onClick={(event): void => setAnchorEl(event.currentTarget)}\r\n          width='264px'\r\n          height='20px'\r\n        />\r\n        <CustomMenu\r\n          open={!!anchorEl}\r\n          anchorEl={anchorEl}\r\n          onClose={onClose}\r\n          getContentAnchorEl={null}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n          transformOrigin={INITIAL_TRANSFORM_ORIGIN}\r\n        >\r\n          <SelectRoleMenuItem onClick={onDeletePressed}>\r\n            <div>\r\n              <RoleTitle role='remove' />\r\n              <RoleDescription type='invite' role='mySharedAccount' />\r\n            </div>\r\n          </SelectRoleMenuItem>\r\n        </CustomMenu>\r\n      </TableCell>\r\n      <TableCell style={{ width: '160px' }} />\r\n      <TableCell\r\n        style={{ width: '220px', overflow: 'hidden', textOverflow: 'ellipsis' }}\r\n      >\r\n        <CellInvited\r\n          invitedByEmail={from.email}\r\n          inviteCreatedAt={moment(createdAt).toDate()}\r\n        />\r\n      </TableCell>\r\n    </CustomTableRow>\r\n  );\r\n};\r\n\r\nexport default React.memo(MySharedAccountRow);\r\n","import { Table, TableBody, TableHead, TableRow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { TableTitle } from './page-styles';\r\nimport { IMySharedAccount } from '../../../interfaces';\r\nimport { IWorkspaceMember } from '../../../interfaces/workspaces';\r\nimport { TableHeaderCell } from '../../../ui/styles';\r\nimport MemberRow from '../member-row';\r\nimport MySharedAccountRow from '../my-shared-account-row';\r\n\r\ninterface IMembersTable {\r\n  title: string;\r\n  members: IWorkspaceMember[];\r\n  mySharedAccounts?: IMySharedAccount[];\r\n  onRemoveMySharedAccount?: (id: string) => Promise<void>;\r\n}\r\n\r\nconst MembersTable: React.FC<IMembersTable> = (props) => {\r\n  const { title, members, mySharedAccounts = [], onRemoveMySharedAccount } = props;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const removeMySharedAccount = (id: string): void => {\r\n    if (!onRemoveMySharedAccount) {\r\n      return;\r\n    }\r\n\r\n    onRemoveMySharedAccount(id);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: 0, width: '800px' }}>\r\n      <TableTitle>\r\n        {title}\r\n      </TableTitle>\r\n      <Table style={{ width: '100%', marginBottom: 28, marginTop: 16 }}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableHeaderCell style={{ width: '220px', paddingLeft: 0 }}>\r\n              {translation('personalArea.workspaceSettings.membersTable.member')}\r\n            </TableHeaderCell>\r\n            <TableHeaderCell style={{ width: '200px' }}>\r\n              {translation('personalArea.workspaceSettings.membersTable.permission')}\r\n            </TableHeaderCell>\r\n            <TableHeaderCell style={{ width: '160px' }}>\r\n              {translation('personalArea.workspaceSettings.membersTable.lastActive')}\r\n            </TableHeaderCell>\r\n            <TableHeaderCell style={{ width: '220px' }}>\r\n              {translation('personalArea.workspaceSettings.membersTable.invitedBy')}\r\n            </TableHeaderCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {members.map(member => (\r\n            <MemberRow key={member.id} {...member} />\r\n          ))}\r\n          {mySharedAccounts.map(mySharedAccount => (\r\n            <MySharedAccountRow\r\n              key={mySharedAccount.id}\r\n              mySharedAccount={mySharedAccount}\r\n              onRemoveMySharedAccount={async (): Promise<void> => removeMySharedAccount(mySharedAccount.id)}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MembersTable;\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import styled from '@emotion/styled';\r\nimport { Edit } from '@material-ui/icons';\r\n\r\nimport { NotStyledButton } from '../../member-row/row-styles';\r\n\r\nexport const WrapperHeaderNameWorkspace = styled('div')<{ hasEditable?: boolean }>`\r\n  margin: 0 0 28px;\r\n`;\r\n\r\nexport const WorkspaceNameText = styled('span')`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 732px;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  letter-spacing: 0.15px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nexport const InviteMembersButton = styled(NotStyledButton)`\r\n  display: inline;\r\n  color: var(--00B86D-members-page);\r\n  text-decoration: underline;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.4px;\r\n`;\r\n\r\nexport const AreaProfileName = styled('input')`\r\n  width: 400px;\r\n  height: 32px;\r\n  color: var(--222222-members-page);\r\n  padding: 3px;\r\n  box-shadow: none;\r\n  resize: none;\r\n  outline: none;\r\n  font: 400 20px Roboto;\r\n  line-height: 24px;\r\n  letter-spacing: 0.15px;\r\n\r\n  margin-top: -4px;\r\n  margin-left: -4px;\r\n\r\n  :focus {\r\n    outline: none !important;\r\n    border: 1px dashed var(--CDCDCD-members-page);\r\n    box-shadow: none;\r\n    padding: 3px;\r\n    margin-top: -4px;\r\n    margin-left: -4px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceNameHeader = styled('div')<{ hasCursorPointer: boolean }>`\r\n  width: fit-content;\r\n  display: flex;\r\n  \r\n  ${props => props.hasCursorPointer ? 'cursor: pointer;' : ''}\r\n`;\r\n\r\nexport const EditIcon = styled(Edit)<{ active: boolean }>`\r\n  &.MuiSvgIcon-root {\r\n    margin: 4px 2px 0;\r\n    height: 15px;\r\n    fill: ${props => props.active ? 'var(--00B86D-members-page)' : 'var(--0000004D-members-page)'};\r\n    stroke: ${props => props.active ? 'var(--00B86D-members-page)' : 'var(--0000004D-members-page)'};\r\n  }\r\n`;\r\n\r\nexport const SmallGreyText = styled('span')`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: var(--767676-members-page);\r\n  font-weight: 400;\r\n  letter-spacing: 0.4px;\r\n`;\r\n\r\nexport const SubtitleWorkspace = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: start;\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { AreaProfileName, EditIcon, WorkspaceNameHeader, WorkspaceNameText } from './styles';\r\n\r\ninterface IWorkspaceName {\r\n  canChangeName: boolean;\r\n  workspaceName: string;\r\n  onNameChange: (newName: string) => void;\r\n}\r\n\r\nexport const WorkspaceName: React.FC<IWorkspaceName> = props => {\r\n  const { canChangeName, workspaceName, onNameChange } = props;\r\n\r\n  const [isEditing, setIsEditing] = useState<boolean>(false);\r\n  const [currentName, setCurrentName] = useState<string>(workspaceName);\r\n  const [isHovered, setIsHovered] = useState<boolean>(false);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!isEditing) {\r\n      setCurrentName(workspaceName);\r\n    }\r\n  }, [workspaceName, isEditing]);\r\n\r\n  const onFinishEditing = (): void => {\r\n    const newName = currentName.trim().replace(/\\s+/ig, ' ');\r\n\r\n    if (newName) {\r\n      onNameChange(newName);\r\n    } else {\r\n      setCurrentName(workspaceName);\r\n    }\r\n\r\n    setIsEditing(false);\r\n    setIsHovered(false);\r\n  };\r\n\r\n  const onEditingStartClick = (): void => {\r\n    if (canChangeName) {\r\n      setIsEditing(true);\r\n    }\r\n  };\r\n\r\n  if (!isEditing) {\r\n    return (\r\n      <WorkspaceNameHeader\r\n        onClick={onEditingStartClick}\r\n        onMouseEnter={(): void => setIsHovered(true)}\r\n        onMouseLeave={(): void => setIsHovered(false)}\r\n        hasCursorPointer={canChangeName}\r\n      >\r\n        <WorkspaceNameText>\r\n          {currentName}\r\n        </WorkspaceNameText>\r\n        {canChangeName ? <EditIcon active={isHovered} /> : null}\r\n      </WorkspaceNameHeader>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AreaProfileName\r\n      id='workspaceNameInput'\r\n      autoFocus={true}\r\n      onKeyDown={(event): void => {\r\n        if (event.key === 'Enter') {\r\n          event.preventDefault();\r\n          onFinishEditing();\r\n        }\r\n      }}\r\n      onChange={(event): void => setCurrentName(event.currentTarget.value)}\r\n      onBlur={(): void => {\r\n        onFinishEditing();\r\n      }}\r\n      defaultValue={currentName}\r\n      value={currentName}\r\n      placeholder={translation('personalArea.workspaceSettings.workspaceNamePlaceholder') || ''}\r\n    />\r\n  );\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { workspaceContext } from '../../../../state';\r\nimport InviteMembersModal from '../../../modalsComponents/components/invite-members';\r\nimport { renameWorkspace } from '../../api';\r\nimport { InviteMembersButton, SmallGreyText, SubtitleWorkspace, WrapperHeaderNameWorkspace } from './styles';\r\nimport { WorkspaceName } from './workspace-name';\r\n\r\nconst MembersPageTitle: React.FC = () => {\r\n  const [inviteModalVisible, setInviteModalVisible] = useState<boolean>(false);\r\n\r\n  const workspace = useContext(workspaceContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const onOpenInvite = (): void => {\r\n    setInviteModalVisible(true);\r\n  };\r\n\r\n  const onWorkspaceNameChange = (newName: string): void => {\r\n    newName = (newName || '').trim().replace(/\\s+/ig, ' ');\r\n    if (newName === workspace.name) {\r\n      return;\r\n    }\r\n\r\n    workspace.updateWorkspace({\r\n      name: newName,\r\n    });\r\n\r\n    workspace.updateAvailableWorkspaces(workspace.availableWorkspaces.map(\r\n      availableWorkspace => availableWorkspace.id === workspace.id ?\r\n        { ...availableWorkspace, name: newName } :\r\n        availableWorkspace,\r\n    ));\r\n\r\n    renameWorkspace(workspace.id, newName);\r\n  };\r\n\r\n  // desired behavior to replace 0 members to 1\r\n  let maxMembersText = '/' + (workspace.planMembersMax || 1).toString();\r\n  if (workspace.isPlanUnlimited) {\r\n    maxMembersText = '';\r\n  }\r\n\r\n  return (\r\n    <WrapperHeaderNameWorkspace hasEditable={true}>\r\n      <WorkspaceName\r\n        canChangeName={workspace.permissions.editWorkspace}\r\n        workspaceName={workspace.name}\r\n        onNameChange={onWorkspaceNameChange}\r\n      />\r\n      {workspace.permissions.inviteMembers ? (\r\n        <SubtitleWorkspace>\r\n          <SmallGreyText>\r\n            {workspace.members.length}\r\n            {maxMembersText}\r\n            {' '}\r\n            {translation('personalArea.workspaceSettings.usersJoined')}\r\n          </SmallGreyText>\r\n\r\n          <SmallGreyText>\r\n            {translation('personalArea.workspaceSettings.manageMembers')}\r\n            {' '}\r\n            <InviteMembersButton onClick={onOpenInvite}>\r\n              {translation('personalArea.workspaceSettings.inviteMembers')}\r\n            </InviteMembersButton>\r\n          </SmallGreyText>\r\n        </SubtitleWorkspace>\r\n      ) : null}\r\n      <InviteMembersModal\r\n        visible={inviteModalVisible}\r\n        onClose={(): void => setInviteModalVisible(false)}\r\n      />\r\n    </WrapperHeaderNameWorkspace>\r\n  );\r\n};\r\n\r\nexport default MembersPageTitle;\r\n","import { requestUser } from './api';\r\nimport { IUserCtx } from '../../state';\r\n\r\nconst checkAndSetDefaultWorkspace = async (userCtx: IUserCtx) => {\r\n  const userInfo = await requestUser();\r\n\r\n  userCtx.updateUser({\r\n    defaultWorkspace: userInfo?.defaultWorkspace || '',\r\n  });\r\n};\r\n\r\nexport default checkAndSetDefaultWorkspace;\r\n","import styled from '@emotion/styled';\r\nimport { Input } from 'antd';\r\n\r\nimport { ModernModal } from '../../../../ui/modern-modal';\r\n\r\nexport const DescriptionText = styled('p')`\r\n  margin: 0;\r\n`;\r\n\r\nexport const DescriptionContainer = styled('div')`\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  letter-spacing: 0;\r\n  color: var(--767676-members-page);\r\n  \r\n  strong {\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nexport const SubDescriptionContainer = styled('div')`\r\n  row-gap: 4px;\r\n  flex-direction: column;\r\n  display: flex;\r\n  margin: 12px 0 16px;\r\n`;\r\n\r\nexport const ActionWorkspaceModal = styled(ModernModal)`\r\n  .ant-modal-title {\r\n    width: 300px;\r\n\r\n    b, strong {\r\n      font-weight: 500;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled('div')`\r\n  color: var(--222222-members-page);\r\n  font-family: Roboto;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n`;\r\n\r\nexport const InputContainer = styled(Input)`\r\n  margin-top: 8px;\r\n  letter-spacing: 0;\r\n  padding: 8px;\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { GreenSubmitButton } from '../modern-modal';\r\nimport { ActionButton, RedActionButton } from './styles';\r\n\r\ninterface IActionButtons {\r\n  confirmText: string;\r\n  onConfirm: () => void;\r\n  onCancel: () => void;\r\n  isDisabledConfirm?: boolean;\r\n  isDangerous?: boolean;\r\n}\r\n\r\nconst ActionButtons: FC<IActionButtons> = ({\r\n  confirmText,\r\n  onConfirm,\r\n  onCancel,\r\n  isDisabledConfirm,\r\n  isDangerous,\r\n}): JSX.Element => {\r\n  const { t: translation } = useTranslation();\r\n\r\n  const renderActionButton = (): JSX.Element => {\r\n    if (isDangerous) {\r\n      return (\r\n        <RedActionButton onClick={onConfirm} disabled={isDisabledConfirm} style={{ marginTop: 0, marginRight: 8 }}>\r\n          {confirmText}\r\n        </RedActionButton>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ActionButton onClick={onConfirm} disabled={isDisabledConfirm} style={{ marginTop: 0, marginRight: 8 }}>\r\n        {confirmText}\r\n      </ActionButton>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 32 }}>\r\n      {renderActionButton()}\r\n      <GreenSubmitButton onClick={onCancel}>\r\n        {translation('base.cancel')}\r\n      </GreenSubmitButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionButtons;\r\n","import styled from '@emotion/styled';\r\nimport { Modal } from '@material-ui/core';\r\n\r\nexport const CustomModal = styled(Modal)`\r\n  display: flex;\r\n  align-items: start;\r\n  justify-content: center;\r\n  top: 100px !important;\r\n`;\r\n\r\nexport const ModalContent = styled('div')<{ width: string }>`\r\n  background: var(--FFFFFF);\r\n  border-radius: 8px;\r\n  padding: 20px 28px;\r\n  width: ${props => props.width};\r\n`;\r\n","import React from 'react';\r\n\r\nimport { ModalContent, CustomModal } from './styles';\r\n\r\ninterface IMaterialModal {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  width?: string;\r\n}\r\n\r\nconst MaterialModal: React.FC<IMaterialModal> = (props) => {\r\n  const { isVisible, onClose, children, width = 'auto' } = props;\r\n\r\n  return (\r\n    <CustomModal\r\n      open={isVisible}\r\n      onClose={onClose}\r\n    >\r\n      <ModalContent width={width}>\r\n        {children}\r\n      </ModalContent>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default MaterialModal;\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\n\r\nimport { DescriptionContainer, DescriptionText, InputContainer, SubDescriptionContainer, TitleContainer } from './styles';\r\nimport { FREE_PLAN_ID } from '../../../../../common/constants/constants';\r\nimport { workspaceContext } from '../../../../state';\r\nimport ActionButtons from '../../../../ui/action-buttons';\r\nimport MaterialModal from '../../../../ui/material-modal';\r\n\r\ninterface IDeleteWorkspaceModal {\r\n  isVisible: boolean;\r\n  setIsVisible: (isVisible: boolean) => void;\r\n  onDeleteConfirm: () => void;\r\n}\r\n\r\nconst DeleteWorkspaceModal: React.FC<IDeleteWorkspaceModal> = (props) => {\r\n  const { isVisible, setIsVisible, onDeleteConfirm } = props;\r\n\r\n  const [deleteWorkspaceInputValue, setDeleteWorkspaceInputValue] = useState('');\r\n\r\n  const { paymentIsTrial = true, isUnpaid, planId, planExpiresAt, profilesCount, name: workspaceName } = useContext(workspaceContext);\r\n\r\n  const hideModal = useCallback(() => setIsVisible(false), [setIsVisible]);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const isFreePlanWorkspace = isUnpaid || planId === FREE_PLAN_ID;\r\n  const isTrialOrFreePlan = isFreePlanWorkspace || paymentIsTrial;\r\n\r\n  useEffect(() => {\r\n    if (!isVisible) {\r\n      setDeleteWorkspaceInputValue('');\r\n    }\r\n  }, [isVisible]);\r\n\r\n  const onDeleteClick = (): void => {\r\n    if (deleteWorkspaceInputValue === 'Delete') {\r\n      onDeleteConfirm();\r\n    }\r\n  };\r\n\r\n  const renderExpiresPaidDate = (): string => new Date(planExpiresAt)\r\n    .toLocaleDateString('en-EN', { year: 'numeric', month: '2-digit', day: '2-digit' });\r\n\r\n  const titleKey = isTrialOrFreePlan ?\r\n    'workspaceSettingsMembers.deleteWorkspaceModal.unpaidWsTitle' :\r\n    'workspaceSettingsMembers.deleteWorkspaceModal.paidWsTitle';\r\n\r\n  return (\r\n    <MaterialModal\r\n      isVisible={isVisible}\r\n      onClose={hideModal}\r\n      width='416px'\r\n    >\r\n      <TitleContainer>\r\n        <Trans i18nKey={titleKey} values={{ name: workspaceName }} />\r\n      </TitleContainer>\r\n      <DescriptionContainer>\r\n        <SubDescriptionContainer>\r\n          {!isTrialOrFreePlan ? (\r\n            <div>\r\n              <Trans i18nKey='workspaceSettingsMembers.deleteWorkspaceModal.paymentInfo' values={{ name: renderExpiresPaidDate() }} />\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            <Trans i18nKey='workspaceSettingsMembers.deleteWorkspaceModal.numberOfProfiles' count={profilesCount} />\r\n          </div>\r\n        </SubDescriptionContainer>\r\n        <DescriptionText style={{ marginTop: 12 }}>\r\n          {translation('deleteWorkspaceModal.secondDescription')}\r\n          {' '}\r\n          <span>\r\n            “Delete”\r\n          </span>\r\n          {' '}\r\n          {translation('deleteWorkspaceModal.below')}\r\n        </DescriptionText>\r\n      </DescriptionContainer>\r\n      <InputContainer\r\n        placeholder={translation('deleteWorkspaceModal.deleteInputPlaceholder') || ''}\r\n        value={deleteWorkspaceInputValue}\r\n        onChange={(event): void => setDeleteWorkspaceInputValue(event.target?.value)}\r\n      />\r\n      <ActionButtons\r\n        confirmText={translation('deleteWorkspaceModal.confirmDelete')}\r\n        isDisabledConfirm={deleteWorkspaceInputValue !== 'Delete'}\r\n        onConfirm={onDeleteClick}\r\n        onCancel={hideModal}\r\n        isDangerous={true}\r\n      />\r\n    </MaterialModal>\r\n  );\r\n};\r\n\r\nexport default DeleteWorkspaceModal;\r\n","import React, { useCallback } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\n\r\nimport { DescriptionContainer, DescriptionText, TitleContainer } from './styles';\r\nimport ActionButtons from '../../../../ui/action-buttons';\r\nimport MaterialModal from '../../../../ui/material-modal';\r\n\r\ninterface ILeaveWorkspaceModal {\r\n  workspaceName: string;\r\n  isVisible: boolean;\r\n  setIsVisible: (isVisible: boolean) => void;\r\n  onLeave: () => void;\r\n}\r\n\r\nconst LeaveWorkspaceModal: React.FC<ILeaveWorkspaceModal> = (props) => {\r\n  const { workspaceName, isVisible, setIsVisible, onLeave } = props;\r\n\r\n  const hideModal = useCallback(() => setIsVisible(false), [setIsVisible]);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  return (\r\n    <MaterialModal\r\n      isVisible={isVisible}\r\n      onClose={hideModal}\r\n      width='420px'\r\n    >\r\n      <TitleContainer>\r\n        <Trans i18nKey='leaveWorkspaceModal.title' values={{ workspaceName }} />\r\n      </TitleContainer>\r\n      <DescriptionContainer>\r\n        <DescriptionText style={{ marginTop: 20 }}>\r\n          {translation('leaveWorkspaceModal.description')}\r\n        </DescriptionText>\r\n      </DescriptionContainer>\r\n      <ActionButtons\r\n        confirmText={translation('leaveWorkspaceModal.confirmLeave')}\r\n        onConfirm={onLeave}\r\n        onCancel={hideModal}\r\n        isDangerous={true}\r\n      />\r\n    </MaterialModal>\r\n  );\r\n};\r\n\r\nexport default LeaveWorkspaceModal;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { userContext, workspaceContext } from '../../../../state';\r\nimport { RedActionButton } from '../../../../ui/action-buttons/styles';\r\nimport { deleteWorkspace } from '../../../common/api';\r\nimport checkAndSetDefaultWorkspace from '../../../common/check-and-set-default-workspace';\r\nimport switchWorkspace from '../../../common/switch-workspace';\r\nimport { kickMember } from '../../api';\r\nimport DeleteWorkspaceModal from './delete-workspace-modal';\r\nimport LeaveWorkspaceModal from './leave-workspace-modal';\r\nimport { logout } from '../../../../utils/logout';\r\n\r\ninterface IWorkspaceActions {}\r\n\r\nconst WorkspaceActions: React.FC<IWorkspaceActions> = () => {\r\n  const [isDeleteWorkspaceModalVisible, setIsDeleteWorkspaceModalVisible] = useState<boolean>(false);\r\n  const [isLeaveWorkspaceModalVisible, setIsLeaveWorkspaceModalVisible] = useState<boolean>(false);\r\n\r\n  const userCtx = useContext(userContext);\r\n  const workspaceCtx = useContext(workspaceContext);\r\n  const { id: workspaceId,\r\n    userId,\r\n    me,\r\n    owner: workspaceOwner,\r\n    name: workspaceName,\r\n    availableWorkspaces,\r\n    updateAvailableWorkspaces,\r\n  } = workspaceCtx;\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const leaveWorkspace = async (): Promise<void> => {\r\n    setIsDeleteWorkspaceModalVisible(false);\r\n    setIsLeaveWorkspaceModalVisible(false);\r\n\r\n    const newWorkspaceList = availableWorkspaces.filter(workspace => workspace.id !== workspaceId);\r\n\r\n    updateAvailableWorkspaces(newWorkspaceList);\r\n\r\n    checkAndSetDefaultWorkspace(userCtx);\r\n    await switchWorkspace(newWorkspaceList[0].id, workspaceCtx, userCtx);\r\n  };\r\n\r\n  const onLeaveWorkspace = (): Promise<[void, void]> => Promise.all([\r\n    kickMember(workspaceId, me?.id || ''),\r\n    leaveWorkspace(),\r\n  ]);\r\n\r\n  const onClickLeaveWorkspace = (): void => setIsLeaveWorkspaceModalVisible(true);\r\n\r\n  const onWorkspaceDeleteConfirm = (): void => {\r\n    deleteWorkspace(workspaceId).then(() => leaveWorkspace());\r\n  };\r\n\r\n  const onClickDeleteWorkspace = (): void => setIsDeleteWorkspaceModalVisible(true);\r\n\r\n  const isWorkspaceOwner = userId === workspaceOwner;\r\n\r\n  return (\r\n    <>\r\n      {!isWorkspaceOwner ? (\r\n        <RedActionButton onClick={onClickLeaveWorkspace}>\r\n          {translation('personalArea.workspaceSettings.leaveWorkspace')}\r\n        </RedActionButton>\r\n      ) : null}\r\n      {isWorkspaceOwner ? (\r\n        <RedActionButton onClick={onClickDeleteWorkspace}>\r\n          {translation('personalArea.workspaceSettings.deleteWorkspace')}\r\n        </RedActionButton>\r\n      ) : null}\r\n      <DeleteWorkspaceModal\r\n        isVisible={isDeleteWorkspaceModalVisible}\r\n        setIsVisible={setIsDeleteWorkspaceModalVisible}\r\n        onDeleteConfirm={onWorkspaceDeleteConfirm}\r\n      />\r\n      <LeaveWorkspaceModal\r\n        workspaceName={workspaceName}\r\n        isVisible={isLeaveWorkspaceModalVisible}\r\n        setIsVisible={setIsLeaveWorkspaceModalVisible}\r\n        onLeave={onLeaveWorkspace}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkspaceActions;\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport MembersTable from './members-table';\r\nimport MembersPageTitle from './title';\r\nimport WorkspaceActions from './workspaces-actions';\r\nimport { IMySharedAccount } from '../../../interfaces';\r\nimport { IWorkspaceMember } from '../../../interfaces/workspaces';\r\nimport { workspaceContext } from '../../../state';\r\nimport { SmallGreyText } from '../../../ui/styles';\r\nimport { requestWorkspace, sendActionAnalytics } from '../../common/api';\r\nimport LoadingPage from '../../common/loading-page';\r\nimport { requestGetMySharedAccounts } from '../../modalsComponents/components/share-account-modal/api';\r\nimport { TabWrapper } from '../../personalArea/menu/tab-wrapper';\r\nimport { removeProfileInvite } from '../../quickProfiles/api';\r\n\r\ninterface ILimitedAndGlobalMembers {\r\n  limitedMembers: IWorkspaceMember[];\r\n  globalMembers: IWorkspaceMember[];\r\n}\r\n\r\nconst MembersPage: React.FC = () => {\r\n  const [mySharedAccounts, setMySharedAccounts] = useState<IMySharedAccount[]>([]);\r\n\r\n  const workspace = useContext(workspaceContext);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    sendActionAnalytics('visited members page');\r\n\r\n    const updateWorkspace = async (): Promise<void> => {\r\n      const workspaceData = await requestWorkspace(workspace.id);\r\n      workspace.updateWorkspace({ ...workspaceData });\r\n    };\r\n\r\n    const requestAccountShares = async (): Promise<void> => {\r\n      const sharedAccounts = await requestGetMySharedAccounts();\r\n      setMySharedAccounts(sharedAccounts);\r\n    };\r\n\r\n    requestAccountShares();\r\n    updateWorkspace();\r\n  }, []);\r\n\r\n  const { limitedMembers, globalMembers } = useMemo(() => workspace.members\r\n    .reduce<ILimitedAndGlobalMembers>((result, member) => {\r\n      if (member.limitedAccess) {\r\n        result.limitedMembers.push(member);\r\n      } else {\r\n        result.globalMembers.push(member);\r\n      }\r\n\r\n      return result;\r\n    }, { limitedMembers: [], globalMembers: [] }), [workspace.members]);\r\n\r\n  const hideLimitedMembers = !limitedMembers.length || (workspace.members.length === 1 && !workspace.permissions.inviteMembers);\r\n  const shouldShowNoMembersText = workspace.me?.limitedAccess && hideLimitedMembers;\r\n\r\n  const onRemoveMySharedAccount = async (shareAccountId: string): Promise<void> => {\r\n    await removeProfileInvite(shareAccountId);\r\n    setMySharedAccounts([...mySharedAccounts.filter(accountShared => accountShared.id !== shareAccountId)]);\r\n  };\r\n\r\n  if (!workspace.isLoaded) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <TabWrapper tabKey='members' HelmetTitle={`Members - GoLogin ${window.gologinAppVersion || ''}`}>\r\n      <MembersPageTitle />\r\n      {globalMembers.length && !workspace.me?.limitedAccess ? (\r\n        <MembersTable\r\n          title={translation('personalArea.workspaceSettings.accessToWorkspace')}\r\n          members={globalMembers}\r\n          mySharedAccounts={mySharedAccounts}\r\n          onRemoveMySharedAccount={onRemoveMySharedAccount}\r\n        />\r\n      ) : null}\r\n      {!hideLimitedMembers ? (\r\n        <MembersTable\r\n          title={translation('personalArea.workspaceSettings.accessToFolders')}\r\n          members={limitedMembers}\r\n        />\r\n      ) : null}\r\n      {shouldShowNoMembersText ? (\r\n        <SmallGreyText>\r\n          {translation('personalArea.workspaceSettings.limitedAccessNotice')}\r\n        </SmallGreyText>\r\n      ) : null}\r\n      <WorkspaceActions />\r\n    </TabWrapper>\r\n  );\r\n};\r\n\r\nexport default MembersPage;\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nexport interface IIconProfile {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst IconPerson: FunctionComponent<IIconProfile> = (props) => (\r\n  <div>\r\n    <svg width={props.width || '20'} height={props.height || '20'} viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <circle cx=\"10\" cy=\"10\" r=\"7.5\" stroke=\"var(--767676-icon-person)\"/>\r\n      <circle cx=\"10\" cy=\"9\" r=\"2.5\" stroke=\"var(--767676-icon-person)\"/>\r\n      <mask id=\"path-3-inside-1_4627_22403\" fill=\"var(--FFFFFF-icon-person)\">\r\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.798 15.5085C14.3404 17.0431 12.2803 18 9.99667 18C7.71306 18 5.65294 17.0431 4.19531 15.5085C5.21491 14.1448 7.42924 13.2 9.99667 13.2C12.5641 13.2 14.7784 14.1448 15.798 15.5085Z\"/>\r\n      </mask>\r\n      <path d=\"M15.798 15.5085L16.5231 16.1972L17.1041 15.5855L16.5989 14.9097L15.798 15.5085ZM4.19531 15.5085L3.39441 14.9097L2.88919 15.5855L3.47026 16.1972L4.19531 15.5085ZM15.073 14.8199C13.7963 16.164 11.9949 17 9.99667 17V19C12.5656 19 14.8845 17.9223 16.5231 16.1972L15.073 14.8199ZM9.99667 17C7.99841 17 6.19705 16.164 4.92037 14.8199L3.47026 16.1972C5.10882 17.9223 7.42772 19 9.99667 19V17ZM4.99621 16.1073C5.76223 15.0828 7.61785 14.2 9.99667 14.2V12.2C7.24063 12.2 4.66758 13.2069 3.39441 14.9097L4.99621 16.1073ZM9.99667 14.2C12.3755 14.2 14.2311 15.0828 14.9971 16.1073L16.5989 14.9097C15.3257 13.2069 12.7527 12.2 9.99667 12.2V14.2Z\" fill=\"var(--767676-icon-person)\" mask=\"url(#path-3-inside-1_4627_22403)\"/>\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nexport default IconPerson;\r\n"],"names":["TableTitle","styled","_templateObject","_taggedTemplateLiteral","_ref","email","React","EmailCell","IconPerson","_Tooltip","title","EmailTooltip","EmailColumn","InvitedContainer","InvitedByEmailWrapper","_templateObject2","InviteDateWrapper","_templateObject3","InvitedByColumn","_templateObject4","props","invitedByEmail","inviteCreatedAt","t","translation","useTranslation","dateToText","workspaceRole","limitedAccess","folders","reduce","role","folder","length","rawFromLimitedAccess","confirm","_Modal","onConfirm","content","okText","cancelText","okButtonProps","type","cancelButtonProps","className","style","height","paddingBottom","onCancel","keyboard","maskClosable","GreyText","foldersText","foldersCount","marginTop","_workspace$me","id","memberId","permissions","currentLimitedAccess","setCurrentLimitedAccess","useState","currentRole","setCurrentRole","currentFolders","setCurrentFolders","anchorEl","setAnchorEl","permissionPopoverHeight","setPermissionPopoverHeight","popoverPositionVertical","setPopoverPositionVertical","workspace","useContext","workspaceContext","useEffect","onPermissionsChange","useLayoutEffect","availableHeight","document","body","clientHeight","getBoundingClientRect","top","offset","heightToSet","onClose","bodyChildElement","getElementsByTagName","hasAttribute","removeAttribute","hasLimitedAccessChanged","hasRoleChanged","hasFoldersSizeChanged","hasFolderRoleChanged","some","currentFolder","oldFolder","find","name","newState","updateWorkspace","members","map","member","_objectSpread","updateMemberPermissions","workspaceId","editMemberPermissions","isMyRow","me","canManageInFolders","manageMember","canManagePermissions","manageWorkspaceWideAccess","newLimitedAccess","newRole","newFolders","currentRoleTitle","getPermissionsRoleTitle","PermissionsTableCell","hoverable","onClick","e","currentTarget","SelectButton","roleText","getInviteActionText","disabled","width","FoldersGreyText","FoldersPermissionsPopover","open","getContentAnchorEl","element","transformOrigin","vertical","horizontal","PermissionsSelect","onChange","isCurrentMemberGlobalAdmin","showRemoveMember","kickMember","onRemoveMember","showDeleteConfirm","_workspace$members$fi","kickedMemberEmail","filter","_message","display","fontWeight","fontFamily","deleteMember","blockWorkspaceWideAdminSelect","manageWorkspaceWideAdminAccess","MemberRow","lastActiveAt","createdAt","preventScrolling","preventDefault","window","addEventListener","removeEventListener","CustomTableRow","TableCell","paddingLeft","CellEmail","CellPermissions","LastActivity","overflow","textOverflow","CellInvited","CustomMenu","Menu","SelectRoleMenuItem","MenuItem","INITIAL_TRANSFORM_ORIGIN","MySharedAccountRow","mySharedAccount","onRemoveMySharedAccount","from","to","event","anchorOrigin","RoleTitle","RoleDescription","moment","toDate","mySharedAccounts","margin","Table","marginBottom","TableHead","TableRow","TableHeaderCell","TableBody","_extends","key","_asyncToGenerator","d","WrapperHeaderNameWorkspace","WorkspaceNameText","InviteMembersButton","NotStyledButton","AreaProfileName","WorkspaceNameHeader","_templateObject5","hasCursorPointer","EditIcon","Edit","_templateObject6","active","SmallGreyText","_templateObject7","SubtitleWorkspace","_templateObject8","WorkspaceName","canChangeName","workspaceName","onNameChange","isEditing","setIsEditing","currentName","setCurrentName","isHovered","setIsHovered","onFinishEditing","newName","trim","replace","autoFocus","onKeyDown","value","onBlur","defaultValue","placeholder","onMouseEnter","onMouseLeave","inviteModalVisible","setInviteModalVisible","maxMembersText","planMembersMax","toString","isPlanUnlimited","hasEditable","editWorkspace","updateAvailableWorkspaces","availableWorkspaces","availableWorkspace","renameWorkspace","inviteMembers","InviteMembersModal","visible","userCtx","userInfo","requestUser","updateUser","defaultWorkspace","_x","apply","arguments","DescriptionText","DescriptionContainer","SubDescriptionContainer","TitleContainer","ModernModal","InputContainer","_Input","confirmText","isDisabledConfirm","isDangerous","justifyContent","RedActionButton","marginRight","ActionButton","GreenSubmitButton","CustomModal","Modal","ModalContent","isVisible","children","setIsVisible","onDeleteConfirm","deleteWorkspaceInputValue","setDeleteWorkspaceInputValue","paymentIsTrial","isUnpaid","planId","planExpiresAt","profilesCount","hideModal","useCallback","isTrialOrFreePlan","FREE_PLAN_ID","titleKey","MaterialModal","Trans","i18nKey","values","Date","toLocaleDateString","year","month","day","count","_event$target","target","ActionButtons","onLeave","isDeleteWorkspaceModalVisible","setIsDeleteWorkspaceModalVisible","isLeaveWorkspaceModalVisible","setIsLeaveWorkspaceModalVisible","userContext","workspaceCtx","userId","owner","workspaceOwner","leaveWorkspace","newWorkspaceList","checkAndSetDefaultWorkspace","switchWorkspace","isWorkspaceOwner","DeleteWorkspaceModal","deleteWorkspace","then","LeaveWorkspaceModal","Promise","all","_workspace$me2","setMySharedAccounts","sendActionAnalytics","workspaceData","requestWorkspace","requestAccountShares","_ref2","sharedAccounts","requestGetMySharedAccounts","limitedMembers","globalMembers","useMemo","result","push","hideLimitedMembers","shouldShowNoMembersText","_ref3","shareAccountId","removeProfileInvite","accountShared","isLoaded","TabWrapper","tabKey","HelmetTitle","concat","gologinAppVersion","MembersPageTitle","MembersTable","WorkspaceActions","LoadingPage","viewBox","fill","xmlns","cx","cy","r","stroke","fillRule","clipRule","mask"],"sourceRoot":""}