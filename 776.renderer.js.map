{"version":3,"file":"776.renderer.js","mappings":"uqBAyBA,QAjB0B,WACxB,IAAM,YAAEA,EAAc,GAAE,YAAEC,EAAc,KAAuDC,EAAAA,EAAAA,MAa/F,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoB,uCACpBC,EAAAA,EAAAA,GAA2BL,EAAaC,GACxCK,eAAeC,QAAQC,EAAAA,EAAgB,GAAFC,OAAKT,EAAW,KAAAS,OAAIR,GAC3D,GAAG,IAEIS,EAAAA,cAACC,EAAAA,EAAqB,CAACC,WAAW,EAAOC,YAXH,SAACC,GAC5CA,EAAMC,kBACNV,EAAAA,EAAAA,GAA2BL,EAAaC,EAC1C,GASF,C,wECnBaI,EAA6B,SAACL,EAAqBC,GAC9D,GAAMD,GAAeC,EAArB,CAIA,IAAMe,EAAQC,aAAaC,QAAQC,EAAAA,KAAiB,ICPZ,WAAqD,IAAlCC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIL,EAAKK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC5EG,EAAO,SAAHf,OAD4CY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACxB,KAAAZ,OAAIW,GACnC,GAAIJ,EAAO,CACT,IAAMS,EAAe,IAAIC,gBACzBD,EAAaE,OAAO,eAAgBX,GACpCQ,GAAQ,IAAJf,OAAQgB,EAAaG,WAC3B,CAEAX,aAAaV,QAAQ,iBAAkB,KACvCsB,EAAAA,EAAAA,GAAmBL,EACrB,CDFEM,CAA2B9B,EAAaC,EAAae,GAChDA,GACHe,EAAAA,GAAAA,KAAa,SALf,CAOF,C","sources":["webpack://GoLogin/./src/app/features/share-links/share-link-page/index.tsx","webpack://GoLogin/./src/app/features/share-links/share-link-page/utils/handle-redirect-via-share-link.ts","webpack://GoLogin/./src/app/features/share-links/share-link-page/utils/redirect-to-desktop.ts"],"sourcesContent":["import React, { FC, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { handleRedirectViaShareLink } from './utils';\r\nimport { sendActionAnalytics } from '../../common/api';\r\nimport { RedirectToDesktopPage } from '../../common/components/redirect-to-desktop-page';\r\nimport { SHARE_LINK_KEY } from '../constants';\r\n\r\nconst ShareLinkPage: FC = () => {\r\n  const { profileName = '', linkShortId = '' }: { profileName?: string; linkShortId?: string } = useParams();\r\n\r\n  const handleClick: React.MouseEventHandler = (event) => {\r\n    event.preventDefault();\r\n    handleRedirectViaShareLink(profileName, linkShortId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendActionAnalytics('visited app via share profile link');\r\n    handleRedirectViaShareLink(profileName, linkShortId);\r\n    sessionStorage.setItem(SHARE_LINK_KEY, `${profileName}/${linkShortId}`);\r\n  }, []);\r\n\r\n  return <RedirectToDesktopPage isLoading={false} handleClick={handleClick} />;\r\n};\r\n\r\nexport default ShareLinkPage;\r\n","import { redirectToDesktopWithShare } from './redirect-to-desktop';\r\nimport { history } from '../../../../services';\r\nimport { ACCESS_TOKEN } from '../../../../services/http/config';\r\n\r\nexport const handleRedirectViaShareLink = (profileName: string, linkShortId: string): void => {\r\n  if (!(profileName && linkShortId)) {\r\n    return;\r\n  }\r\n\r\n  const token = localStorage.getItem(ACCESS_TOKEN) || '';\r\n  redirectToDesktopWithShare(profileName, linkShortId, token);\r\n  if (!token) {\r\n    history.push('/share');\r\n  }\r\n};\r\n","import { redirectToElectron } from '../../../common/components/redirect-to-desktop-page/utils';\r\n\r\nexport const redirectToDesktopWithShare = (profileName = '', linkId = '', token = ''): void => {\r\n  let path = `share/${profileName}/${linkId}`;\r\n  if (token) {\r\n    const searchParams = new URLSearchParams();\r\n    searchParams.append('access-token', token);\r\n    path += `?${searchParams.toString()}`;\r\n  }\r\n\r\n  localStorage.setItem('SelectedFolder', '');\r\n  redirectToElectron(path);\r\n};\r\n"],"names":["profileName","linkShortId","useParams","useEffect","sendActionAnalytics","handleRedirectViaShareLink","sessionStorage","setItem","SHARE_LINK_KEY","concat","React","RedirectToDesktopPage","isLoading","handleClick","event","preventDefault","token","localStorage","getItem","ACCESS_TOKEN","linkId","arguments","length","undefined","path","searchParams","URLSearchParams","append","toString","redirectToElectron","redirectToDesktopWithShare","history"],"sourceRoot":""}