{"version":3,"file":"455.renderer.js","mappings":"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","sources":["webpack://GoLogin/./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","webpack://GoLogin/./src/app/features/authentification/Registration/api.ts","webpack://GoLogin/./src/app/features/authentification/Registration/components/sign-up-wrapper.tsx","webpack://GoLogin/./src/app/features/authentification/StyledComponents/AuthFormContainer.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/AuthTextField.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/Form.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/NavigationContainer.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/NavigationDividerContainer.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/NavigationLink.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/PageWrapper.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/SubmitButton.tsx","webpack://GoLogin/./src/app/features/authentification/StyledComponents/Subtitle.ts","webpack://GoLogin/./src/app/features/authentification/StyledComponents/Title.ts","webpack://GoLogin/./src/app/features/share-links/share-link-page/utils/handle-redirect-via-share-link.ts","webpack://GoLogin/./src/app/features/share-links/share-link-page/utils/redirect-to-desktop.ts"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import { AFFILIATE_COOKIE_NAME, API_BASE_URL, E_APP_TYPE } from '../../../../common/constants/constants';\r\nimport { getGoogleClientId } from '../../../initGA';\r\nimport { http } from '../../../services';\r\nimport { saveToken } from '../../../services/http/storage';\r\nimport { getCanvasAndFontsHash, getCanvasHash } from '../../../utils/canvas-hash';\r\nimport { retriveCookie } from '../../../utils/document-cookie';\r\nimport { jsFonts } from '../../../utils/fonts-hash';\r\nimport { getGologinMetaHeader, getUserOS } from '../../../utils/user-os';\r\nimport { SHARE_LINK_KEY } from '../../share-links/constants';\r\nimport { getDomainWithPath } from '../helpers/utils';\r\n\r\nconst isElectron = !!window.require;\r\n\r\ninterface IUpdateCommonEvents {\r\n  isAdvertising: boolean;\r\n  fontsHash: any;\r\n\r\n  googleClientId?: string;\r\n  utm?: string;\r\n}\r\nexport const updateCommonEvents = async (events: IUpdateCommonEvents): Promise<void> => {\r\n  const requestBody = JSON.stringify({\r\n    visitedRegisterPage: true,\r\n    googleClientId: events.googleClientId || '',\r\n    isAdvertising: events.isAdvertising,\r\n    utm: events.utm,\r\n    fontsHash: events.fontsHash,\r\n  });\r\n\r\n  await fetch(`${API_BASE_URL}/user-stats/update-common-events`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: requestBody,\r\n  }).catch(() => null);\r\n};\r\n\r\nexport interface ICreateUser {\r\n  email: string;\r\n  password: string;\r\n  passwordConfirm: string;\r\n  captchaToken: string;\r\n  localGoogleClientId?: string | null;\r\n}\r\n\r\nexport async function createUser(userData: ICreateUser): Promise<any> {\r\n  const affiliateCookie = retriveCookie(AFFILIATE_COOKIE_NAME);\r\n\r\n  const googleClientId = await getGoogleClientId();\r\n\r\n  const fontsHash = jsFonts();\r\n  const canvasHash = getCanvasHash();\r\n  const canvasAndFontsHash = getCanvasAndFontsHash();\r\n  const userOsParams = await getUserOS();\r\n\r\n  const requestObject: any = {\r\n    ...userData,\r\n    googleClientId,\r\n    fromApp: isElectron,\r\n    fromAppTrue: isElectron,\r\n    canvasAndFontsHash,\r\n    affiliate: affiliateCookie || '',\r\n    fontsHash,\r\n    userOs: userOsParams.name,\r\n    osSpec: userOsParams.spec,\r\n    registrationLead: {\r\n      url: isElectron ? E_APP_TYPE.desktop : getDomainWithPath(),\r\n    },\r\n  };\r\n\r\n  if (canvasHash) {\r\n    requestObject.canvasHash = canvasHash;\r\n  }\r\n\r\n  const shareLink = sessionStorage.getItem(SHARE_LINK_KEY);\r\n  if (shareLink) {\r\n    requestObject.shareLink = shareLink;\r\n  }\r\n\r\n  const requestBody: string = JSON.stringify(requestObject);\r\n\r\n  const registeredAccount = await http(`${API_BASE_URL}/user?free-plan=true&registerAs=workspaces`, {\r\n    method: 'POST',\r\n    body: requestBody,\r\n    headers: {\r\n      'GoLogin-Meta-Header': await getGologinMetaHeader(),\r\n    },\r\n  });\r\n\r\n  saveToken(registeredAccount.body.token, 'createUser');\r\n\r\n  return registeredAccount;\r\n}\r\n","import React, { FC, memo, useEffect, useState } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { LOCAL_GOOGLE_CLIENT_ID_KEY_NAME } from '../../../../../common/constants/constants';\r\nimport { history } from '../../../../services';\r\nimport { REGISTER_CONFIG } from '../../../../services/http/config';\r\nimport { switchTheme } from '../../../../state/theme.atom';\r\nimport { SHARE_LINK_KEY } from '../../../share-links/constants';\r\nimport { handleRedirectViaShareLink } from '../../../share-links/share-link-page/utils';\r\nimport { PageWrapper } from '../../StyledComponents';\r\nimport { ICreateUser, createUser } from '../api';\r\n\r\nconst isElectron = !!window.require;\r\n\r\ninterface IMessageRegisterSubmit {\r\n  type: 'submit-register';\r\n  message: {\r\n    email: string;\r\n    password: string;\r\n    passwordConfirm: string;\r\n    captchaToken: string;\r\n  };\r\n}\r\n\r\ninterface IMessageOAuth {\r\n  type: 'open-oauth';\r\n  message: {\r\n    url: string;\r\n  };\r\n}\r\n\r\ntype IMessage = IMessageRegisterSubmit|{type: 'switch-to-login'}|IMessageOAuth;\r\n\r\nconst SignUpWrapper: FC = () => {\r\n  const [isFrameHidden, setIsFrameHidden] = useState(true);\r\n\r\n  const { t: translation } = useTranslation();\r\n\r\n  const locale = localStorage.getItem('@gologin:selected_language') || 'en';\r\n  const shareLink = sessionStorage.getItem(SHARE_LINK_KEY);\r\n\r\n  const handleRegister = async (message: IMessageRegisterSubmit['message']): Promise<void> => {\r\n    let localGoogleClientId;\r\n    if (isElectron) {\r\n      localGoogleClientId = localStorage.getItem(LOCAL_GOOGLE_CLIENT_ID_KEY_NAME);\r\n    }\r\n\r\n    const userCreateParams: ICreateUser = { ...message, localGoogleClientId };\r\n    const response = await createUser(userCreateParams);\r\n\r\n    if ((window as any).dataLayer && Array.isArray((window as any).dataLayer)) {\r\n      (window as any).dataLayer.push({ event: 'CompleteRegistration' });\r\n    }\r\n\r\n    if (window.ga) {\r\n      window.ga('set', '&uid', response.body?._id);\r\n      window.ga('set', '&cd2', response.body?._id);\r\n      window.ga('send', 'CompleteRegistration-ga');\r\n    }\r\n\r\n    switchTheme('light');\r\n    history.replace('/quiz');\r\n  };\r\n\r\n  const handleMessage = async (ev: { data: IMessage }) => {\r\n    if (ev.data.type === 'switch-to-login') {\r\n      history.push('/sign_in');\r\n\r\n      return;\r\n    }\r\n\r\n    const { type, message } = ev.data;\r\n    if (type === 'open-oauth') {\r\n      window.require('electron').shell.openExternal(message.url);\r\n\r\n      return;\r\n    }\r\n\r\n    if (type !== 'submit-register') {\r\n      return;\r\n    }\r\n\r\n    await handleRegister(message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isElectron && shareLink) {\r\n      handleRedirectViaShareLink(shareLink);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('message', handleMessage);\r\n\r\n    return (): void => window.removeEventListener('message', handleMessage);\r\n  }, [handleMessage]);\r\n\r\n  let { frameUrl } = REGISTER_CONFIG;\r\n  if (!isElectron) {\r\n    frameUrl = `${REGISTER_CONFIG.websiteFrameUrl}?locale=${locale}&isElectron=${isElectron}`;\r\n    if (shareLink) {\r\n      frameUrl += `&share-link=${shareLink}`;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <iframe\r\n        src={frameUrl}\r\n        style={{ height: '100%', width: '100%', border: 0, flex: 1, background: 'transparent', visibility: isFrameHidden ? 'hidden': 'visible' }}\r\n        onLoad={() => setIsFrameHidden(false)}\r\n        onError={console.error}\r\n      />\r\n      <Helmet>\r\n        <title>\r\n          {translation('auth.registration.windowTitle')}\r\n          {' - GoLogin'}\r\n        </title>\r\n      </Helmet>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(SignUpWrapper);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const AuthContentContainer = styled.div`\r\n  width: 404px;\r\n  color: var(--FFFFFF-auth-pages-form);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\ninterface IAuthTextField {\r\n  status?: 'error'|'default';\r\n}\r\n\r\nexport const AuthTextField = styled.input<IAuthTextField>`\r\n  height: 50px;\r\n  padding: 13px 14px;\r\n  border: 1px solid var(--E0E0E0-auth-pages-text);\r\n  border-radius: 4px;\r\n\r\n  font-family: Calibre, Roboto;\r\n  font-weight: 400;\r\n  line-height: 21px;\r\n  color: var(--808080-auth-pages-text);\r\n  outline: none;\r\n  background: var(--FCFCFC-auth-pages-text);\r\n\r\n  & + * {\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  // Handling \"status\" props\r\n  ${(props) => {\r\n    if (props.status === 'error') {\r\n      return 'border: 2px solid var(--F5222D-auth-pages-text);';\r\n    }\r\n  }}\r\n  \r\n  mix-blend-mode: normal;\r\n  \r\n  &::placeholder {\r\n    color: var(--808080-auth-pages-text);\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 20px;\r\n  background: var(--00A987-auth-pages);\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const NavigationContainer = styled.span`\r\n  margin-top: 32px;\r\n  width: max-content;\r\n  text-align: center;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const NavigationDividerContainer = styled.span`\r\n  margin: 0 5px;\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const NavigationLink = styled(Link)`;\r\n  color: var(--FFFFFF-auth-pages-navigation-link);\r\n  font: 300 18px/21.6px 'Graphik LC', Roboto;\r\n  transition: opacity linear .2s;\r\n  \r\n  :hover {\r\n    color: var(--FFFFFF-auth-pages-navigation-link);\r\n    opacity: .5;\r\n  }\r\n`;\r\n\r\nexport const NavigationSpan = styled('span')`;\r\n  color: var(--FFFFFF-auth-pages-navigation-link);\r\n  font: 300 18px/21.6px 'Graphik LC', Roboto;\r\n  transition: opacity linear .2s;\r\n  cursor: pointer;\r\n  \r\n  :hover {\r\n    color: var(--FFFFFF-auth-pages-navigation-link);\r\n    opacity: .5;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const PageWrapper = styled.div`\r\n  background: var(--00A987-auth-pages);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  height: auto;\r\n  min-height: 100%;\r\n  flex: 1;\r\n  flex-direction: column;\r\n`;\r\n","import React, { FC, memo } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface IStyledButton {\r\n  loading?: boolean;\r\n  width?: number;\r\n}\r\n\r\nexport const StyledButton = styled.button<IStyledButton>`\r\n  height: 56px;\r\n  padding: 17px 30px;\r\n  margin: 32px auto 0 auto;\r\n  border-radius: 60px;\r\n  border: none;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-family: 'Graphik LC', Roboto;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 21.6px;\r\n  color: var(--000000-auth-pages-button);\r\n\r\n  background: var(--FFE164-auth-pages-button);\r\n  outline: none;\r\n  cursor: pointer;\r\n  transition: all linear .3s;\r\n  \r\n  width: ${props => `${props.width}px` || 'auto'};\r\n\r\n  ${(props) => {\r\n    if (!props.loading) {\r\n      return `\r\n        :hover {\r\n          color: var(--FFE164-auth-pages-button);\r\n          background: var(--000000-auth-pages-button);\r\n        }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n\r\ninterface ISubmitButton extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  loading?: boolean;\r\n  width?: number;\r\n}\r\nconst SButton: FC<ISubmitButton> = (props) => {\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <StyledButton {...props}>\r\n        <CircularProgress value={99} disableShrink={true} size={14} color='inherit' />\r\n      </StyledButton>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledButton {...props}>{props.children}</StyledButton>\r\n  );\r\n}\r\n\r\nexport const SubmitButton = memo(SButton);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Subtitle = styled.h2`\r\n  font: 300 18px/21.6px 'Graphik LC', Roboto;\r\n  text-align: center;\r\n  color: var(--FFFFFF-auth-pages-text);\r\n  margin-top: 19px;\r\n  margin-bottom: 0;\r\n  width: 336px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h1`\r\n  margin: 0;\r\n\r\n  font-family: 'Graphik LC', Roboto;\r\n  font-size: 38px;\r\n  font-weight: 700;\r\n  line-height: 45.6px;\r\n  text-align: center;\r\n  color: var(--FFFFFF-auth-pages-text);\r\n`;\r\n","import { redirectToDesktopWithShare } from './redirect-to-desktop';\r\nimport { history } from '../../../../services';\r\nimport { ACCESS_TOKEN } from '../../../../services/http/config';\r\n\r\nexport const handleRedirectViaShareLink = (profileName: string, linkShortId: string): void => {\r\n  if (!(profileName && linkShortId)) {\r\n    return;\r\n  }\r\n\r\n  const token = localStorage.getItem(ACCESS_TOKEN) || '';\r\n  redirectToDesktopWithShare(profileName, linkShortId, token);\r\n  if (!token) {\r\n    history.push('/share');\r\n  }\r\n};\r\n","import { redirectToElectron } from '../../../common/components/redirect-to-desktop-page/utils';\r\n\r\nexport const redirectToDesktopWithShare = (profileName = '', linkId = '', token = ''): void => {\r\n  let path = `share/${profileName}/${linkId}`;\r\n  if (token) {\r\n    const searchParams = new URLSearchParams();\r\n    searchParams.append('access-token', token);\r\n    path += `?${searchParams.toString()}`;\r\n  }\r\n\r\n  localStorage.setItem('SelectedFolder', '');\r\n  redirectToElectron(path);\r\n};\r\n"],"names":["SIZE","CircularProgress","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","root","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","isElectron","window","require","updateCommonEvents","_ref","_asyncToGenerator","events","requestBody","JSON","stringify","visitedRegisterPage","googleClientId","isAdvertising","utm","fontsHash","fetch","API_BASE_URL","method","headers","body","catch","_x","apply","arguments","createUser","_x2","_createUser","userData","affiliateCookie","retriveCookie","AFFILIATE_COOKIE_NAME","getGoogleClientId","jsFonts","canvasHash","getCanvasHash","canvasAndFontsHash","getCanvasAndFontsHash","userOsParams","getUserOS","requestObject","_objectSpread","fromApp","fromAppTrue","affiliate","userOs","osSpec","spec","registrationLead","url","E_APP_TYPE","getDomainWithPath","shareLink","sessionStorage","getItem","SHARE_LINK_KEY","registeredAccount","http","getGologinMetaHeader","saveToken","token","SignUpWrapper","isFrameHidden","setIsFrameHidden","useState","t","useTranslation","locale","localStorage","handleRegister","message","localGoogleClientId","LOCAL_GOOGLE_CLIENT_ID_KEY_NAME","_response$body","_response$body2","userCreateParams","response","dataLayer","Array","isArray","push","event","ga","_id","switchTheme","history","handleMessage","_ref2","ev","data","type","shell","openExternal","useEffect","handleRedirectViaShareLink","addEventListener","removeEventListener","frameUrl","REGISTER_CONFIG","React","PageWrapper","src","border","flex","background","visibility","onLoad","onError","console","error","Helmet","translation","memo","AuthContentContainer","styled","_templateObject","_taggedTemplateLiteral","AuthTextField","status","Form","NavigationContainer","NavigationDividerContainer","NavigationLink","Link","NavigationSpan","_templateObject2","StyledButton","loading","SButton","children","SubmitButton","Subtitle","Title","profileName","linkShortId","ACCESS_TOKEN","linkId","length","undefined","path","searchParams","URLSearchParams","append","toString","setItem","redirectToElectron","redirectToDesktopWithShare"],"sourceRoot":""}